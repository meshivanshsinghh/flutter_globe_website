(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const r of document.querySelectorAll('link[rel="modulepreload"]')) i(r);
  new MutationObserver((r) => {
    for (const s of r)
      if (s.type === "childList")
        for (const u of s.addedNodes)
          u.tagName === "LINK" && u.rel === "modulepreload" && i(u);
  }).observe(document, { childList: !0, subtree: !0 });
  function t(r) {
    const s = {};
    return (
      r.integrity && (s.integrity = r.integrity),
      r.referrerPolicy && (s.referrerPolicy = r.referrerPolicy),
      r.crossOrigin === "use-credentials"
        ? (s.credentials = "include")
        : r.crossOrigin === "anonymous"
        ? (s.credentials = "omit")
        : (s.credentials = "same-origin"),
      s
    );
  }
  function i(r) {
    if (r.ep) return;
    r.ep = !0;
    const s = t(r);
    fetch(r.href, s);
  }
})();
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ const ac = "156",
  Qs = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
  $s = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
  r3 = 0,
  Lf = 1,
  s3 = 2,
  Jp = 1,
  o3 = 2,
  Or = 3,
  us = 0,
  ci = 1,
  gi = 2,
  os = 0,
  as = 1,
  Df = 2,
  If = 3,
  Of = 4,
  a3 = 5,
  _o = 100,
  A3 = 101,
  l3 = 102,
  Uf = 103,
  qf = 104,
  u3 = 200,
  c3 = 201,
  f3 = 202,
  h3 = 203,
  e1 = 204,
  t1 = 205,
  d3 = 206,
  p3 = 207,
  m3 = 208,
  g3 = 209,
  _3 = 210,
  v3 = 0,
  x3 = 1,
  y3 = 2,
  du = 3,
  b3 = 4,
  M3 = 5,
  S3 = 6,
  E3 = 7,
  Vl = 0,
  w3 = 1,
  T3 = 2,
  As = 0,
  C3 = 1,
  R3 = 2,
  P3 = 3,
  L3 = 4,
  D3 = 5,
  n1 = 300,
  Lo = 301,
  Do = 302,
  pu = 303,
  mu = 304,
  Wl = 306,
  gu = 1e3,
  tr = 1001,
  _u = 1002,
  ai = 1003,
  Bf = 1004,
  b0 = 1005,
  ki = 1006,
  I3 = 1007,
  Sa = 1008,
  ls = 1009,
  O3 = 1010,
  U3 = 1011,
  Ac = 1012,
  i1 = 1013,
  rs = 1014,
  ss = 1015,
  Ea = 1016,
  r1 = 1017,
  s1 = 1018,
  Ls = 1020,
  q3 = 1021,
  nr = 1023,
  B3 = 1024,
  N3 = 1025,
  Ds = 1026,
  Io = 1027,
  F3 = 1028,
  o1 = 1029,
  k3 = 1030,
  a1 = 1031,
  A1 = 1033,
  M0 = 33776,
  S0 = 33777,
  E0 = 33778,
  w0 = 33779,
  Nf = 35840,
  Ff = 35841,
  kf = 35842,
  zf = 35843,
  z3 = 36196,
  Gf = 37492,
  Hf = 37496,
  Vf = 37808,
  Wf = 37809,
  jf = 37810,
  Xf = 37811,
  Qf = 37812,
  $f = 37813,
  Yf = 37814,
  Zf = 37815,
  Kf = 37816,
  Jf = 37817,
  eh = 37818,
  th = 37819,
  nh = 37820,
  ih = 37821,
  T0 = 36492,
  rh = 36494,
  sh = 36495,
  G3 = 36283,
  oh = 36284,
  ah = 36285,
  Ah = 36286,
  H3 = 0,
  V3 = 1,
  lh = 2,
  l1 = 3e3,
  Is = 3001,
  W3 = 3200,
  j3 = 3201,
  lc = 0,
  X3 = 1,
  Os = "",
  fn = "srgb",
  xr = "srgb-linear",
  jl = "display-p3",
  C0 = 7680,
  Q3 = 519,
  $3 = 512,
  Y3 = 513,
  Z3 = 514,
  K3 = 515,
  J3 = 516,
  e_ = 517,
  t_ = 518,
  n_ = 519,
  vu = 35044,
  uh = "300 es",
  xu = 1035,
  Br = 2e3,
  sl = 2001;
class zs {
  addEventListener(e, t) {
    this._listeners === void 0 && (this._listeners = {});
    const i = this._listeners;
    i[e] === void 0 && (i[e] = []), i[e].indexOf(t) === -1 && i[e].push(t);
  }
  hasEventListener(e, t) {
    if (this._listeners === void 0) return !1;
    const i = this._listeners;
    return i[e] !== void 0 && i[e].indexOf(t) !== -1;
  }
  removeEventListener(e, t) {
    if (this._listeners === void 0) return;
    const r = this._listeners[e];
    if (r !== void 0) {
      const s = r.indexOf(t);
      s !== -1 && r.splice(s, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return;
    const i = this._listeners[e.type];
    if (i !== void 0) {
      e.target = this;
      const r = i.slice(0);
      for (let s = 0, u = r.length; s < u; s++) r[s].call(this, e);
      e.target = null;
    }
  }
}
const jn = [
  "00",
  "01",
  "02",
  "03",
  "04",
  "05",
  "06",
  "07",
  "08",
  "09",
  "0a",
  "0b",
  "0c",
  "0d",
  "0e",
  "0f",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "1a",
  "1b",
  "1c",
  "1d",
  "1e",
  "1f",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "2a",
  "2b",
  "2c",
  "2d",
  "2e",
  "2f",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "3a",
  "3b",
  "3c",
  "3d",
  "3e",
  "3f",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47",
  "48",
  "49",
  "4a",
  "4b",
  "4c",
  "4d",
  "4e",
  "4f",
  "50",
  "51",
  "52",
  "53",
  "54",
  "55",
  "56",
  "57",
  "58",
  "59",
  "5a",
  "5b",
  "5c",
  "5d",
  "5e",
  "5f",
  "60",
  "61",
  "62",
  "63",
  "64",
  "65",
  "66",
  "67",
  "68",
  "69",
  "6a",
  "6b",
  "6c",
  "6d",
  "6e",
  "6f",
  "70",
  "71",
  "72",
  "73",
  "74",
  "75",
  "76",
  "77",
  "78",
  "79",
  "7a",
  "7b",
  "7c",
  "7d",
  "7e",
  "7f",
  "80",
  "81",
  "82",
  "83",
  "84",
  "85",
  "86",
  "87",
  "88",
  "89",
  "8a",
  "8b",
  "8c",
  "8d",
  "8e",
  "8f",
  "90",
  "91",
  "92",
  "93",
  "94",
  "95",
  "96",
  "97",
  "98",
  "99",
  "9a",
  "9b",
  "9c",
  "9d",
  "9e",
  "9f",
  "a0",
  "a1",
  "a2",
  "a3",
  "a4",
  "a5",
  "a6",
  "a7",
  "a8",
  "a9",
  "aa",
  "ab",
  "ac",
  "ad",
  "ae",
  "af",
  "b0",
  "b1",
  "b2",
  "b3",
  "b4",
  "b5",
  "b6",
  "b7",
  "b8",
  "b9",
  "ba",
  "bb",
  "bc",
  "bd",
  "be",
  "bf",
  "c0",
  "c1",
  "c2",
  "c3",
  "c4",
  "c5",
  "c6",
  "c7",
  "c8",
  "c9",
  "ca",
  "cb",
  "cc",
  "cd",
  "ce",
  "cf",
  "d0",
  "d1",
  "d2",
  "d3",
  "d4",
  "d5",
  "d6",
  "d7",
  "d8",
  "d9",
  "da",
  "db",
  "dc",
  "dd",
  "de",
  "df",
  "e0",
  "e1",
  "e2",
  "e3",
  "e4",
  "e5",
  "e6",
  "e7",
  "e8",
  "e9",
  "ea",
  "eb",
  "ec",
  "ed",
  "ee",
  "ef",
  "f0",
  "f1",
  "f2",
  "f3",
  "f4",
  "f5",
  "f6",
  "f7",
  "f8",
  "f9",
  "fa",
  "fb",
  "fc",
  "fd",
  "fe",
  "ff",
];
let ch = 1234567;
const ga = Math.PI / 180,
  wa = 180 / Math.PI;
function mr() {
  const n = (Math.random() * 4294967295) | 0,
    e = (Math.random() * 4294967295) | 0,
    t = (Math.random() * 4294967295) | 0,
    i = (Math.random() * 4294967295) | 0;
  return (
    jn[n & 255] +
    jn[(n >> 8) & 255] +
    jn[(n >> 16) & 255] +
    jn[(n >> 24) & 255] +
    "-" +
    jn[e & 255] +
    jn[(e >> 8) & 255] +
    "-" +
    jn[((e >> 16) & 15) | 64] +
    jn[(e >> 24) & 255] +
    "-" +
    jn[(t & 63) | 128] +
    jn[(t >> 8) & 255] +
    "-" +
    jn[(t >> 16) & 255] +
    jn[(t >> 24) & 255] +
    jn[i & 255] +
    jn[(i >> 8) & 255] +
    jn[(i >> 16) & 255] +
    jn[(i >> 24) & 255]
  ).toLowerCase();
}
function Pn(n, e, t) {
  return Math.max(e, Math.min(t, n));
}
function uc(n, e) {
  return ((n % e) + e) % e;
}
function i_(n, e, t, i, r) {
  return i + ((n - e) * (r - i)) / (t - e);
}
function r_(n, e, t) {
  return n !== e ? (t - n) / (e - n) : 0;
}
function _a(n, e, t) {
  return (1 - t) * n + t * e;
}
function s_(n, e, t, i) {
  return _a(n, e, 1 - Math.exp(-t * i));
}
function o_(n, e = 1) {
  return e - Math.abs(uc(n, e * 2) - e);
}
function a_(n, e, t) {
  return n <= e
    ? 0
    : n >= t
    ? 1
    : ((n = (n - e) / (t - e)), n * n * (3 - 2 * n));
}
function A_(n, e, t) {
  return n <= e
    ? 0
    : n >= t
    ? 1
    : ((n = (n - e) / (t - e)), n * n * n * (n * (n * 6 - 15) + 10));
}
function l_(n, e) {
  return n + Math.floor(Math.random() * (e - n + 1));
}
function u_(n, e) {
  return n + Math.random() * (e - n);
}
function c_(n) {
  return n * (0.5 - Math.random());
}
function f_(n) {
  n !== void 0 && (ch = n);
  let e = (ch += 1831565813);
  return (
    (e = Math.imul(e ^ (e >>> 15), e | 1)),
    (e ^= e + Math.imul(e ^ (e >>> 7), e | 61)),
    ((e ^ (e >>> 14)) >>> 0) / 4294967296
  );
}
function h_(n) {
  return n * ga;
}
function d_(n) {
  return n * wa;
}
function yu(n) {
  return (n & (n - 1)) === 0 && n !== 0;
}
function p_(n) {
  return Math.pow(2, Math.ceil(Math.log(n) / Math.LN2));
}
function ol(n) {
  return Math.pow(2, Math.floor(Math.log(n) / Math.LN2));
}
function m_(n, e, t, i, r) {
  const s = Math.cos,
    u = Math.sin,
    c = s(t / 2),
    d = u(t / 2),
    p = s((e + i) / 2),
    g = u((e + i) / 2),
    _ = s((e - i) / 2),
    x = u((e - i) / 2),
    M = s((i - e) / 2),
    E = u((i - e) / 2);
  switch (r) {
    case "XYX":
      n.set(c * g, d * _, d * x, c * p);
      break;
    case "YZY":
      n.set(d * x, c * g, d * _, c * p);
      break;
    case "ZXZ":
      n.set(d * _, d * x, c * g, c * p);
      break;
    case "XZX":
      n.set(c * g, d * E, d * M, c * p);
      break;
    case "YXY":
      n.set(d * M, c * g, d * E, c * p);
      break;
    case "ZYZ":
      n.set(d * E, d * M, c * g, c * p);
      break;
    default:
      console.warn(
        "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
          r
      );
  }
}
function pr(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return n / 4294967295;
    case Uint16Array:
      return n / 65535;
    case Uint8Array:
      return n / 255;
    case Int32Array:
      return Math.max(n / 2147483647, -1);
    case Int16Array:
      return Math.max(n / 32767, -1);
    case Int8Array:
      return Math.max(n / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function on(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return Math.round(n * 4294967295);
    case Uint16Array:
      return Math.round(n * 65535);
    case Uint8Array:
      return Math.round(n * 255);
    case Int32Array:
      return Math.round(n * 2147483647);
    case Int16Array:
      return Math.round(n * 32767);
    case Int8Array:
      return Math.round(n * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
const u1 = {
  DEG2RAD: ga,
  RAD2DEG: wa,
  generateUUID: mr,
  clamp: Pn,
  euclideanModulo: uc,
  mapLinear: i_,
  inverseLerp: r_,
  lerp: _a,
  damp: s_,
  pingpong: o_,
  smoothstep: a_,
  smootherstep: A_,
  randInt: l_,
  randFloat: u_,
  randFloatSpread: c_,
  seededRandom: f_,
  degToRad: h_,
  radToDeg: d_,
  isPowerOfTwo: yu,
  ceilPowerOfTwo: p_,
  floorPowerOfTwo: ol,
  setQuaternionFromProperEuler: m_,
  normalize: on,
  denormalize: pr,
};
class ke {
  constructor(e = 0, t = 0) {
    (ke.prototype.isVector2 = !0), (this.x = e), (this.y = t);
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, t) {
    return (this.x = e), (this.y = t), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), this;
  }
  addVectors(e, t) {
    return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
  }
  addScaledVector(e, t) {
    return (this.x += e.x * t), (this.y += e.y * t), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), this;
  }
  subVectors(e, t) {
    return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), this;
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const t = this.x,
      i = this.y,
      r = e.elements;
    return (
      (this.x = r[0] * t + r[3] * i + r[6]),
      (this.y = r[1] * t + r[4] * i + r[7]),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)), (this.y = Math.min(this.y, e.y)), this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)), (this.y = Math.max(this.y, e.y)), this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this;
  }
  ceil() {
    return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this;
  }
  round() {
    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this;
  }
  roundToZero() {
    return (this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this;
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0) return Math.PI / 2;
    const i = this.dot(e) / t;
    return Math.acos(Pn(i, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x,
      i = this.y - e.y;
    return t * t + i * i;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this;
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i), (this.y = e.y + (t.y - e.y) * i), this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, t = 0) {
    return (this.x = e[t]), (this.y = e[t + 1]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.x), (e[t + 1] = this.y), e;
  }
  fromBufferAttribute(e, t) {
    return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
  }
  rotateAround(e, t) {
    const i = Math.cos(t),
      r = Math.sin(t),
      s = this.x - e.x,
      u = this.y - e.y;
    return (this.x = s * i - u * r + e.x), (this.y = s * r + u * i + e.y), this;
  }
  random() {
    return (this.x = Math.random()), (this.y = Math.random()), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class Gt {
  constructor(e, t, i, r, s, u, c, d, p) {
    (Gt.prototype.isMatrix3 = !0),
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, t, i, r, s, u, c, d, p);
  }
  set(e, t, i, r, s, u, c, d, p) {
    const g = this.elements;
    return (
      (g[0] = e),
      (g[1] = r),
      (g[2] = c),
      (g[3] = t),
      (g[4] = s),
      (g[5] = d),
      (g[6] = i),
      (g[7] = u),
      (g[8] = p),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }
  copy(e) {
    const t = this.elements,
      i = e.elements;
    return (
      (t[0] = i[0]),
      (t[1] = i[1]),
      (t[2] = i[2]),
      (t[3] = i[3]),
      (t[4] = i[4]),
      (t[5] = i[5]),
      (t[6] = i[6]),
      (t[7] = i[7]),
      (t[8] = i[8]),
      this
    );
  }
  extractBasis(e, t, i) {
    return (
      e.setFromMatrix3Column(this, 0),
      t.setFromMatrix3Column(this, 1),
      i.setFromMatrix3Column(this, 2),
      this
    );
  }
  setFromMatrix4(e) {
    const t = e.elements;
    return (
      this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const i = e.elements,
      r = t.elements,
      s = this.elements,
      u = i[0],
      c = i[3],
      d = i[6],
      p = i[1],
      g = i[4],
      _ = i[7],
      x = i[2],
      M = i[5],
      E = i[8],
      C = r[0],
      S = r[3],
      b = r[6],
      L = r[1],
      T = r[4],
      R = r[7],
      U = r[2],
      q = r[5],
      I = r[8];
    return (
      (s[0] = u * C + c * L + d * U),
      (s[3] = u * S + c * T + d * q),
      (s[6] = u * b + c * R + d * I),
      (s[1] = p * C + g * L + _ * U),
      (s[4] = p * S + g * T + _ * q),
      (s[7] = p * b + g * R + _ * I),
      (s[2] = x * C + M * L + E * U),
      (s[5] = x * S + M * T + E * q),
      (s[8] = x * b + M * R + E * I),
      this
    );
  }
  multiplyScalar(e) {
    const t = this.elements;
    return (
      (t[0] *= e),
      (t[3] *= e),
      (t[6] *= e),
      (t[1] *= e),
      (t[4] *= e),
      (t[7] *= e),
      (t[2] *= e),
      (t[5] *= e),
      (t[8] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      d = e[6],
      p = e[7],
      g = e[8];
    return (
      t * u * g - t * c * p - i * s * g + i * c * d + r * s * p - r * u * d
    );
  }
  invert() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      d = e[6],
      p = e[7],
      g = e[8],
      _ = g * u - c * p,
      x = c * d - g * s,
      M = p * s - u * d,
      E = t * _ + i * x + r * M;
    if (E === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const C = 1 / E;
    return (
      (e[0] = _ * C),
      (e[1] = (r * p - g * i) * C),
      (e[2] = (c * i - r * u) * C),
      (e[3] = x * C),
      (e[4] = (g * t - r * d) * C),
      (e[5] = (r * s - c * t) * C),
      (e[6] = M * C),
      (e[7] = (i * d - p * t) * C),
      (e[8] = (u * t - i * s) * C),
      this
    );
  }
  transpose() {
    let e;
    const t = this.elements;
    return (
      (e = t[1]),
      (t[1] = t[3]),
      (t[3] = e),
      (e = t[2]),
      (t[2] = t[6]),
      (t[6] = e),
      (e = t[5]),
      (t[5] = t[7]),
      (t[7] = e),
      this
    );
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const t = this.elements;
    return (
      (e[0] = t[0]),
      (e[1] = t[3]),
      (e[2] = t[6]),
      (e[3] = t[1]),
      (e[4] = t[4]),
      (e[5] = t[7]),
      (e[6] = t[2]),
      (e[7] = t[5]),
      (e[8] = t[8]),
      this
    );
  }
  setUvTransform(e, t, i, r, s, u, c) {
    const d = Math.cos(s),
      p = Math.sin(s);
    return (
      this.set(
        i * d,
        i * p,
        -i * (d * u + p * c) + u + e,
        -r * p,
        r * d,
        -r * (-p * u + d * c) + c + t,
        0,
        0,
        1
      ),
      this
    );
  }
  scale(e, t) {
    return this.premultiply(R0.makeScale(e, t)), this;
  }
  rotate(e) {
    return this.premultiply(R0.makeRotation(-e)), this;
  }
  translate(e, t) {
    return this.premultiply(R0.makeTranslation(e, t)), this;
  }
  makeTranslation(e, t) {
    return (
      e.isVector2
        ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
        : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
      this
    );
  }
  makeRotation(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, -i, 0, i, t, 0, 0, 0, 1), this;
  }
  makeScale(e, t) {
    return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
  }
  equals(e) {
    const t = this.elements,
      i = e.elements;
    for (let r = 0; r < 9; r++) if (t[r] !== i[r]) return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let i = 0; i < 9; i++) this.elements[i] = e[i + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const i = this.elements;
    return (
      (e[t] = i[0]),
      (e[t + 1] = i[1]),
      (e[t + 2] = i[2]),
      (e[t + 3] = i[3]),
      (e[t + 4] = i[4]),
      (e[t + 5] = i[5]),
      (e[t + 6] = i[6]),
      (e[t + 7] = i[7]),
      (e[t + 8] = i[8]),
      e
    );
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const R0 = new Gt();
function c1(n) {
  for (let e = n.length - 1; e >= 0; --e) if (n[e] >= 65535) return !0;
  return !1;
}
function Ta(n) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", n);
}
function g_() {
  const n = Ta("canvas");
  return (n.style.display = "block"), n;
}
const fh = {};
function va(n) {
  n in fh || ((fh[n] = !0), console.warn(n));
}
function To(n) {
  return n < 0.04045
    ? n * 0.0773993808
    : Math.pow(n * 0.9478672986 + 0.0521327014, 2.4);
}
function P0(n) {
  return n < 0.0031308 ? n * 12.92 : 1.055 * Math.pow(n, 0.41666) - 0.055;
}
const __ = new Gt().fromArray([
    0.8224621, 0.0331941, 0.0170827, 0.177538, 0.9668058, 0.0723974, -1e-7,
    1e-7, 0.9105199,
  ]),
  v_ = new Gt().fromArray([
    1.2249401, -0.0420569, -0.0196376, -0.2249404, 1.0420571, -0.0786361, 1e-7,
    0, 1.0982735,
  ]);
function x_(n) {
  return n.convertSRGBToLinear().applyMatrix3(v_);
}
function y_(n) {
  return n.applyMatrix3(__).convertLinearToSRGB();
}
const b_ = { [xr]: (n) => n, [fn]: (n) => n.convertSRGBToLinear(), [jl]: x_ },
  M_ = { [xr]: (n) => n, [fn]: (n) => n.convertLinearToSRGB(), [jl]: y_ },
  Qi = {
    enabled: !0,
    get legacyMode() {
      return (
        console.warn(
          "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
        ),
        !this.enabled
      );
    },
    set legacyMode(n) {
      console.warn(
        "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
      ),
        (this.enabled = !n);
    },
    get workingColorSpace() {
      return xr;
    },
    set workingColorSpace(n) {
      console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
    },
    convert: function (n, e, t) {
      if (this.enabled === !1 || e === t || !e || !t) return n;
      const i = b_[e],
        r = M_[t];
      if (i === void 0 || r === void 0)
        throw new Error(
          `Unsupported color space conversion, "${e}" to "${t}".`
        );
      return r(i(n));
    },
    fromWorkingColorSpace: function (n, e) {
      return this.convert(n, this.workingColorSpace, e);
    },
    toWorkingColorSpace: function (n, e) {
      return this.convert(n, e, this.workingColorSpace);
    },
  };
let Ys;
class f1 {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
    let t;
    if (e instanceof HTMLCanvasElement) t = e;
    else {
      Ys === void 0 && (Ys = Ta("canvas")),
        (Ys.width = e.width),
        (Ys.height = e.height);
      const i = Ys.getContext("2d");
      e instanceof ImageData
        ? i.putImageData(e, 0, 0)
        : i.drawImage(e, 0, 0, e.width, e.height),
        (t = Ys);
    }
    return t.width > 2048 || t.height > 2048
      ? (console.warn(
          "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
          e
        ),
        t.toDataURL("image/jpeg", 0.6))
      : t.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (
      (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement) ||
      (typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement) ||
      (typeof ImageBitmap < "u" && e instanceof ImageBitmap)
    ) {
      const t = Ta("canvas");
      (t.width = e.width), (t.height = e.height);
      const i = t.getContext("2d");
      i.drawImage(e, 0, 0, e.width, e.height);
      const r = i.getImageData(0, 0, e.width, e.height),
        s = r.data;
      for (let u = 0; u < s.length; u++) s[u] = To(s[u] / 255) * 255;
      return i.putImageData(r, 0, 0), t;
    } else if (e.data) {
      const t = e.data.slice(0);
      for (let i = 0; i < t.length; i++)
        t instanceof Uint8Array || t instanceof Uint8ClampedArray
          ? (t[i] = Math.floor(To(t[i] / 255) * 255))
          : (t[i] = To(t[i]));
      return { data: t, width: e.width, height: e.height };
    } else
      return (
        console.warn(
          "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
        ),
        e
      );
  }
}
let S_ = 0;
class h1 {
  constructor(e = null) {
    (this.isSource = !0),
      Object.defineProperty(this, "id", { value: S_++ }),
      (this.uuid = mr()),
      (this.data = e),
      (this.version = 0);
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.images[this.uuid] !== void 0) return e.images[this.uuid];
    const i = { uuid: this.uuid, url: "" },
      r = this.data;
    if (r !== null) {
      let s;
      if (Array.isArray(r)) {
        s = [];
        for (let u = 0, c = r.length; u < c; u++)
          r[u].isDataTexture ? s.push(L0(r[u].image)) : s.push(L0(r[u]));
      } else s = L0(r);
      i.url = s;
    }
    return t || (e.images[this.uuid] = i), i;
  }
}
function L0(n) {
  return (typeof HTMLImageElement < "u" && n instanceof HTMLImageElement) ||
    (typeof HTMLCanvasElement < "u" && n instanceof HTMLCanvasElement) ||
    (typeof ImageBitmap < "u" && n instanceof ImageBitmap)
    ? f1.getDataURL(n)
    : n.data
    ? {
        data: Array.from(n.data),
        width: n.width,
        height: n.height,
        type: n.data.constructor.name,
      }
    : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let E_ = 0;
class xi extends zs {
  constructor(
    e = xi.DEFAULT_IMAGE,
    t = xi.DEFAULT_MAPPING,
    i = tr,
    r = tr,
    s = ki,
    u = Sa,
    c = nr,
    d = ls,
    p = xi.DEFAULT_ANISOTROPY,
    g = Os
  ) {
    super(),
      (this.isTexture = !0),
      Object.defineProperty(this, "id", { value: E_++ }),
      (this.uuid = mr()),
      (this.name = ""),
      (this.source = new h1(e)),
      (this.mipmaps = []),
      (this.mapping = t),
      (this.channel = 0),
      (this.wrapS = i),
      (this.wrapT = r),
      (this.magFilter = s),
      (this.minFilter = u),
      (this.anisotropy = p),
      (this.format = c),
      (this.internalFormat = null),
      (this.type = d),
      (this.offset = new ke(0, 0)),
      (this.repeat = new ke(1, 1)),
      (this.center = new ke(0, 0)),
      (this.rotation = 0),
      (this.matrixAutoUpdate = !0),
      (this.matrix = new Gt()),
      (this.generateMipmaps = !0),
      (this.premultiplyAlpha = !1),
      (this.flipY = !0),
      (this.unpackAlignment = 4),
      typeof g == "string"
        ? (this.colorSpace = g)
        : (va(
            "THREE.Texture: Property .encoding has been replaced by .colorSpace."
          ),
          (this.colorSpace = g === Is ? fn : Os)),
      (this.userData = {}),
      (this.version = 0),
      (this.onUpdate = null),
      (this.isRenderTargetTexture = !1),
      (this.needsPMREMUpdate = !1);
  }
  get image() {
    return this.source.data;
  }
  set image(e = null) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(
      this.offset.x,
      this.offset.y,
      this.repeat.x,
      this.repeat.y,
      this.rotation,
      this.center.x,
      this.center.y
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.source = e.source),
      (this.mipmaps = e.mipmaps.slice(0)),
      (this.mapping = e.mapping),
      (this.channel = e.channel),
      (this.wrapS = e.wrapS),
      (this.wrapT = e.wrapT),
      (this.magFilter = e.magFilter),
      (this.minFilter = e.minFilter),
      (this.anisotropy = e.anisotropy),
      (this.format = e.format),
      (this.internalFormat = e.internalFormat),
      (this.type = e.type),
      this.offset.copy(e.offset),
      this.repeat.copy(e.repeat),
      this.center.copy(e.center),
      (this.rotation = e.rotation),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this.matrix.copy(e.matrix),
      (this.generateMipmaps = e.generateMipmaps),
      (this.premultiplyAlpha = e.premultiplyAlpha),
      (this.flipY = e.flipY),
      (this.unpackAlignment = e.unpackAlignment),
      (this.colorSpace = e.colorSpace),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      (this.needsUpdate = !0),
      this
    );
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
    const i = {
      metadata: { version: 4.6, type: "Texture", generator: "Texture.toJSON" },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(e).uuid,
      mapping: this.mapping,
      channel: this.channel,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      colorSpace: this.colorSpace,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment,
    };
    return (
      Object.keys(this.userData).length > 0 && (i.userData = this.userData),
      t || (e.textures[this.uuid] = i),
      i
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== n1) return e;
    if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
      switch (this.wrapS) {
        case gu:
          e.x = e.x - Math.floor(e.x);
          break;
        case tr:
          e.x = e.x < 0 ? 0 : 1;
          break;
        case _u:
          Math.abs(Math.floor(e.x) % 2) === 1
            ? (e.x = Math.ceil(e.x) - e.x)
            : (e.x = e.x - Math.floor(e.x));
          break;
      }
    if (e.y < 0 || e.y > 1)
      switch (this.wrapT) {
        case gu:
          e.y = e.y - Math.floor(e.y);
          break;
        case tr:
          e.y = e.y < 0 ? 0 : 1;
          break;
        case _u:
          Math.abs(Math.floor(e.y) % 2) === 1
            ? (e.y = Math.ceil(e.y) - e.y)
            : (e.y = e.y - Math.floor(e.y));
          break;
      }
    return this.flipY && (e.y = 1 - e.y), e;
  }
  set needsUpdate(e) {
    e === !0 && (this.version++, (this.source.needsUpdate = !0));
  }
  get encoding() {
    return (
      va("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      this.colorSpace === fn ? Is : l1
    );
  }
  set encoding(e) {
    va("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      (this.colorSpace = e === Is ? fn : Os);
  }
}
xi.DEFAULT_IMAGE = null;
xi.DEFAULT_MAPPING = n1;
xi.DEFAULT_ANISOTROPY = 1;
class Ln {
  constructor(e = 0, t = 0, i = 0, r = 1) {
    (Ln.prototype.isVector4 = !0),
      (this.x = e),
      (this.y = t),
      (this.z = i),
      (this.w = r);
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, t, i, r) {
    return (this.x = e), (this.y = t), (this.z = i), (this.w = r), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setW(e) {
    return (this.w = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      case 3:
        this.w = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return (
      (this.x = e.x),
      (this.y = e.y),
      (this.z = e.z),
      (this.w = e.w !== void 0 ? e.w : 1),
      this
    );
  }
  add(e) {
    return (
      (this.x += e.x), (this.y += e.y), (this.z += e.z), (this.w += e.w), this
    );
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), (this.w += e), this;
  }
  addVectors(e, t) {
    return (
      (this.x = e.x + t.x),
      (this.y = e.y + t.y),
      (this.z = e.z + t.z),
      (this.w = e.w + t.w),
      this
    );
  }
  addScaledVector(e, t) {
    return (
      (this.x += e.x * t),
      (this.y += e.y * t),
      (this.z += e.z * t),
      (this.w += e.w * t),
      this
    );
  }
  sub(e) {
    return (
      (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), (this.w -= e.w), this
    );
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this;
  }
  subVectors(e, t) {
    return (
      (this.x = e.x - t.x),
      (this.y = e.y - t.y),
      (this.z = e.z - t.z),
      (this.w = e.w - t.w),
      this
    );
  }
  multiply(e) {
    return (
      (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), (this.w *= e.w), this
    );
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this;
  }
  applyMatrix4(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = this.w,
      u = e.elements;
    return (
      (this.x = u[0] * t + u[4] * i + u[8] * r + u[12] * s),
      (this.y = u[1] * t + u[5] * i + u[9] * r + u[13] * s),
      (this.z = u[2] * t + u[6] * i + u[10] * r + u[14] * s),
      (this.w = u[3] * t + u[7] * i + u[11] * r + u[15] * s),
      this
    );
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const t = Math.sqrt(1 - e.w * e.w);
    return (
      t < 1e-4
        ? ((this.x = 1), (this.y = 0), (this.z = 0))
        : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
      this
    );
  }
  setAxisAngleFromRotationMatrix(e) {
    let t, i, r, s;
    const d = e.elements,
      p = d[0],
      g = d[4],
      _ = d[8],
      x = d[1],
      M = d[5],
      E = d[9],
      C = d[2],
      S = d[6],
      b = d[10];
    if (
      Math.abs(g - x) < 0.01 &&
      Math.abs(_ - C) < 0.01 &&
      Math.abs(E - S) < 0.01
    ) {
      if (
        Math.abs(g + x) < 0.1 &&
        Math.abs(_ + C) < 0.1 &&
        Math.abs(E + S) < 0.1 &&
        Math.abs(p + M + b - 3) < 0.1
      )
        return this.set(1, 0, 0, 0), this;
      t = Math.PI;
      const T = (p + 1) / 2,
        R = (M + 1) / 2,
        U = (b + 1) / 2,
        q = (g + x) / 4,
        I = (_ + C) / 4,
        N = (E + S) / 4;
      return (
        T > R && T > U
          ? T < 0.01
            ? ((i = 0), (r = 0.707106781), (s = 0.707106781))
            : ((i = Math.sqrt(T)), (r = q / i), (s = I / i))
          : R > U
          ? R < 0.01
            ? ((i = 0.707106781), (r = 0), (s = 0.707106781))
            : ((r = Math.sqrt(R)), (i = q / r), (s = N / r))
          : U < 0.01
          ? ((i = 0.707106781), (r = 0.707106781), (s = 0))
          : ((s = Math.sqrt(U)), (i = I / s), (r = N / s)),
        this.set(i, r, s, t),
        this
      );
    }
    let L = Math.sqrt(
      (S - E) * (S - E) + (_ - C) * (_ - C) + (x - g) * (x - g)
    );
    return (
      Math.abs(L) < 0.001 && (L = 1),
      (this.x = (S - E) / L),
      (this.y = (_ - C) / L),
      (this.z = (x - g) / L),
      (this.w = Math.acos((p + M + b - 1) / 2)),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      (this.w = Math.min(this.w, e.w)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      (this.w = Math.max(this.w, e.w)),
      this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      (this.z = Math.max(e.z, Math.min(t.z, this.z))),
      (this.w = Math.max(e.w, Math.min(t.w, this.w))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      (this.z = Math.max(e, Math.min(t, this.z))),
      (this.w = Math.max(e, Math.min(t, this.w))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      (this.w = Math.floor(this.w)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      (this.w = Math.ceil(this.w)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      (this.w = Math.round(this.w)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      (this.w = Math.trunc(this.w)),
      this
    );
  }
  negate() {
    return (
      (this.x = -this.x),
      (this.y = -this.y),
      (this.z = -this.z),
      (this.w = -this.w),
      this
    );
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return (
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  length() {
    return Math.sqrt(
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  manhattanLength() {
    return (
      Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    );
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (
      (this.x += (e.x - this.x) * t),
      (this.y += (e.y - this.y) * t),
      (this.z += (e.z - this.z) * t),
      (this.w += (e.w - this.w) * t),
      this
    );
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i),
      (this.y = e.y + (t.y - e.y) * i),
      (this.z = e.z + (t.z - e.z) * i),
      (this.w = e.w + (t.w - e.w) * i),
      this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, t = 0) {
    return (
      (this.x = e[t]),
      (this.y = e[t + 1]),
      (this.z = e[t + 2]),
      (this.w = e[t + 3]),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this.x),
      (e[t + 1] = this.y),
      (e[t + 2] = this.z),
      (e[t + 3] = this.w),
      e
    );
  }
  fromBufferAttribute(e, t) {
    return (
      (this.x = e.getX(t)),
      (this.y = e.getY(t)),
      (this.z = e.getZ(t)),
      (this.w = e.getW(t)),
      this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      (this.w = Math.random()),
      this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class w_ extends zs {
  constructor(e = 1, t = 1, i = {}) {
    super(),
      (this.isRenderTarget = !0),
      (this.width = e),
      (this.height = t),
      (this.depth = 1),
      (this.scissor = new Ln(0, 0, e, t)),
      (this.scissorTest = !1),
      (this.viewport = new Ln(0, 0, e, t));
    const r = { width: e, height: t, depth: 1 };
    i.encoding !== void 0 &&
      (va(
        "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (i.colorSpace = i.encoding === Is ? fn : Os)),
      (this.texture = new xi(
        r,
        i.mapping,
        i.wrapS,
        i.wrapT,
        i.magFilter,
        i.minFilter,
        i.format,
        i.type,
        i.anisotropy,
        i.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.flipY = !1),
      (this.texture.generateMipmaps =
        i.generateMipmaps !== void 0 ? i.generateMipmaps : !1),
      (this.texture.internalFormat =
        i.internalFormat !== void 0 ? i.internalFormat : null),
      (this.texture.minFilter = i.minFilter !== void 0 ? i.minFilter : ki),
      (this.depthBuffer = i.depthBuffer !== void 0 ? i.depthBuffer : !0),
      (this.stencilBuffer = i.stencilBuffer !== void 0 ? i.stencilBuffer : !1),
      (this.depthTexture = i.depthTexture !== void 0 ? i.depthTexture : null),
      (this.samples = i.samples !== void 0 ? i.samples : 0);
  }
  setSize(e, t, i = 1) {
    (this.width !== e || this.height !== t || this.depth !== i) &&
      ((this.width = e),
      (this.height = t),
      (this.depth = i),
      (this.texture.image.width = e),
      (this.texture.image.height = t),
      (this.texture.image.depth = i),
      this.dispose()),
      this.viewport.set(0, 0, e, t),
      this.scissor.set(0, 0, e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.width = e.width),
      (this.height = e.height),
      (this.depth = e.depth),
      this.scissor.copy(e.scissor),
      (this.scissorTest = e.scissorTest),
      this.viewport.copy(e.viewport),
      (this.texture = e.texture.clone()),
      (this.texture.isRenderTargetTexture = !0);
    const t = Object.assign({}, e.texture.image);
    return (
      (this.texture.source = new h1(t)),
      (this.depthBuffer = e.depthBuffer),
      (this.stencilBuffer = e.stencilBuffer),
      e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()),
      (this.samples = e.samples),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class qs extends w_ {
  constructor(e = 1, t = 1, i = {}) {
    super(e, t, i), (this.isWebGLRenderTarget = !0);
  }
}
class d1 extends xi {
  constructor(e = null, t = 1, i = 1, r = 1) {
    super(null),
      (this.isDataArrayTexture = !0),
      (this.image = { data: e, width: t, height: i, depth: r }),
      (this.magFilter = ai),
      (this.minFilter = ai),
      (this.wrapR = tr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class T_ extends xi {
  constructor(e = null, t = 1, i = 1, r = 1) {
    super(null),
      (this.isData3DTexture = !0),
      (this.image = { data: e, width: t, height: i, depth: r }),
      (this.magFilter = ai),
      (this.minFilter = ai),
      (this.wrapR = tr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class Bs {
  constructor(e = 0, t = 0, i = 0, r = 1) {
    (this.isQuaternion = !0),
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._w = r);
  }
  static slerpFlat(e, t, i, r, s, u, c) {
    let d = i[r + 0],
      p = i[r + 1],
      g = i[r + 2],
      _ = i[r + 3];
    const x = s[u + 0],
      M = s[u + 1],
      E = s[u + 2],
      C = s[u + 3];
    if (c === 0) {
      (e[t + 0] = d), (e[t + 1] = p), (e[t + 2] = g), (e[t + 3] = _);
      return;
    }
    if (c === 1) {
      (e[t + 0] = x), (e[t + 1] = M), (e[t + 2] = E), (e[t + 3] = C);
      return;
    }
    if (_ !== C || d !== x || p !== M || g !== E) {
      let S = 1 - c;
      const b = d * x + p * M + g * E + _ * C,
        L = b >= 0 ? 1 : -1,
        T = 1 - b * b;
      if (T > Number.EPSILON) {
        const U = Math.sqrt(T),
          q = Math.atan2(U, b * L);
        (S = Math.sin(S * q) / U), (c = Math.sin(c * q) / U);
      }
      const R = c * L;
      if (
        ((d = d * S + x * R),
        (p = p * S + M * R),
        (g = g * S + E * R),
        (_ = _ * S + C * R),
        S === 1 - c)
      ) {
        const U = 1 / Math.sqrt(d * d + p * p + g * g + _ * _);
        (d *= U), (p *= U), (g *= U), (_ *= U);
      }
    }
    (e[t] = d), (e[t + 1] = p), (e[t + 2] = g), (e[t + 3] = _);
  }
  static multiplyQuaternionsFlat(e, t, i, r, s, u) {
    const c = i[r],
      d = i[r + 1],
      p = i[r + 2],
      g = i[r + 3],
      _ = s[u],
      x = s[u + 1],
      M = s[u + 2],
      E = s[u + 3];
    return (
      (e[t] = c * E + g * _ + d * M - p * x),
      (e[t + 1] = d * E + g * x + p * _ - c * M),
      (e[t + 2] = p * E + g * M + c * x - d * _),
      (e[t + 3] = g * E - c * _ - d * x - p * M),
      e
    );
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(e) {
    (this._w = e), this._onChangeCallback();
  }
  set(e, t, i, r) {
    return (
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._w = r),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return (
      (this._x = e.x),
      (this._y = e.y),
      (this._z = e.z),
      (this._w = e.w),
      this._onChangeCallback(),
      this
    );
  }
  setFromEuler(e, t) {
    const i = e._x,
      r = e._y,
      s = e._z,
      u = e._order,
      c = Math.cos,
      d = Math.sin,
      p = c(i / 2),
      g = c(r / 2),
      _ = c(s / 2),
      x = d(i / 2),
      M = d(r / 2),
      E = d(s / 2);
    switch (u) {
      case "XYZ":
        (this._x = x * g * _ + p * M * E),
          (this._y = p * M * _ - x * g * E),
          (this._z = p * g * E + x * M * _),
          (this._w = p * g * _ - x * M * E);
        break;
      case "YXZ":
        (this._x = x * g * _ + p * M * E),
          (this._y = p * M * _ - x * g * E),
          (this._z = p * g * E - x * M * _),
          (this._w = p * g * _ + x * M * E);
        break;
      case "ZXY":
        (this._x = x * g * _ - p * M * E),
          (this._y = p * M * _ + x * g * E),
          (this._z = p * g * E + x * M * _),
          (this._w = p * g * _ - x * M * E);
        break;
      case "ZYX":
        (this._x = x * g * _ - p * M * E),
          (this._y = p * M * _ + x * g * E),
          (this._z = p * g * E - x * M * _),
          (this._w = p * g * _ + x * M * E);
        break;
      case "YZX":
        (this._x = x * g * _ + p * M * E),
          (this._y = p * M * _ + x * g * E),
          (this._z = p * g * E - x * M * _),
          (this._w = p * g * _ - x * M * E);
        break;
      case "XZY":
        (this._x = x * g * _ - p * M * E),
          (this._y = p * M * _ - x * g * E),
          (this._z = p * g * E + x * M * _),
          (this._w = p * g * _ + x * M * E);
        break;
      default:
        console.warn(
          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " + u
        );
    }
    return t !== !1 && this._onChangeCallback(), this;
  }
  setFromAxisAngle(e, t) {
    const i = t / 2,
      r = Math.sin(i);
    return (
      (this._x = e.x * r),
      (this._y = e.y * r),
      (this._z = e.z * r),
      (this._w = Math.cos(i)),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e) {
    const t = e.elements,
      i = t[0],
      r = t[4],
      s = t[8],
      u = t[1],
      c = t[5],
      d = t[9],
      p = t[2],
      g = t[6],
      _ = t[10],
      x = i + c + _;
    if (x > 0) {
      const M = 0.5 / Math.sqrt(x + 1);
      (this._w = 0.25 / M),
        (this._x = (g - d) * M),
        (this._y = (s - p) * M),
        (this._z = (u - r) * M);
    } else if (i > c && i > _) {
      const M = 2 * Math.sqrt(1 + i - c - _);
      (this._w = (g - d) / M),
        (this._x = 0.25 * M),
        (this._y = (r + u) / M),
        (this._z = (s + p) / M);
    } else if (c > _) {
      const M = 2 * Math.sqrt(1 + c - i - _);
      (this._w = (s - p) / M),
        (this._x = (r + u) / M),
        (this._y = 0.25 * M),
        (this._z = (d + g) / M);
    } else {
      const M = 2 * Math.sqrt(1 + _ - i - c);
      (this._w = (u - r) / M),
        (this._x = (s + p) / M),
        (this._y = (d + g) / M),
        (this._z = 0.25 * M);
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(e, t) {
    let i = e.dot(t) + 1;
    return (
      i < Number.EPSILON
        ? ((i = 0),
          Math.abs(e.x) > Math.abs(e.z)
            ? ((this._x = -e.y), (this._y = e.x), (this._z = 0), (this._w = i))
            : ((this._x = 0), (this._y = -e.z), (this._z = e.y), (this._w = i)))
        : ((this._x = e.y * t.z - e.z * t.y),
          (this._y = e.z * t.x - e.x * t.z),
          (this._z = e.x * t.y - e.y * t.x),
          (this._w = i)),
      this.normalize()
    );
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(Pn(this.dot(e), -1, 1)));
  }
  rotateTowards(e, t) {
    const i = this.angleTo(e);
    if (i === 0) return this;
    const r = Math.min(1, t / i);
    return this.slerp(e, r), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return (
      (this._x *= -1),
      (this._y *= -1),
      (this._z *= -1),
      this._onChangeCallback(),
      this
    );
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return (
      this._x * this._x +
      this._y * this._y +
      this._z * this._z +
      this._w * this._w
    );
  }
  length() {
    return Math.sqrt(
      this._x * this._x +
        this._y * this._y +
        this._z * this._z +
        this._w * this._w
    );
  }
  normalize() {
    let e = this.length();
    return (
      e === 0
        ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
        : ((e = 1 / e),
          (this._x = this._x * e),
          (this._y = this._y * e),
          (this._z = this._z * e),
          (this._w = this._w * e)),
      this._onChangeCallback(),
      this
    );
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, t) {
    const i = e._x,
      r = e._y,
      s = e._z,
      u = e._w,
      c = t._x,
      d = t._y,
      p = t._z,
      g = t._w;
    return (
      (this._x = i * g + u * c + r * p - s * d),
      (this._y = r * g + u * d + s * c - i * p),
      (this._z = s * g + u * p + i * d - r * c),
      (this._w = u * g - i * c - r * d - s * p),
      this._onChangeCallback(),
      this
    );
  }
  slerp(e, t) {
    if (t === 0) return this;
    if (t === 1) return this.copy(e);
    const i = this._x,
      r = this._y,
      s = this._z,
      u = this._w;
    let c = u * e._w + i * e._x + r * e._y + s * e._z;
    if (
      (c < 0
        ? ((this._w = -e._w),
          (this._x = -e._x),
          (this._y = -e._y),
          (this._z = -e._z),
          (c = -c))
        : this.copy(e),
      c >= 1)
    )
      return (this._w = u), (this._x = i), (this._y = r), (this._z = s), this;
    const d = 1 - c * c;
    if (d <= Number.EPSILON) {
      const M = 1 - t;
      return (
        (this._w = M * u + t * this._w),
        (this._x = M * i + t * this._x),
        (this._y = M * r + t * this._y),
        (this._z = M * s + t * this._z),
        this.normalize(),
        this._onChangeCallback(),
        this
      );
    }
    const p = Math.sqrt(d),
      g = Math.atan2(p, c),
      _ = Math.sin((1 - t) * g) / p,
      x = Math.sin(t * g) / p;
    return (
      (this._w = u * _ + this._w * x),
      (this._x = i * _ + this._x * x),
      (this._y = r * _ + this._y * x),
      (this._z = s * _ + this._z * x),
      this._onChangeCallback(),
      this
    );
  }
  slerpQuaternions(e, t, i) {
    return this.copy(e).slerp(t, i);
  }
  random() {
    const e = Math.random(),
      t = Math.sqrt(1 - e),
      i = Math.sqrt(e),
      r = 2 * Math.PI * Math.random(),
      s = 2 * Math.PI * Math.random();
    return this.set(
      t * Math.cos(r),
      i * Math.sin(s),
      i * Math.cos(s),
      t * Math.sin(r)
    );
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._w === this._w
    );
  }
  fromArray(e, t = 0) {
    return (
      (this._x = e[t]),
      (this._y = e[t + 1]),
      (this._z = e[t + 2]),
      (this._w = e[t + 3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this._x),
      (e[t + 1] = this._y),
      (e[t + 2] = this._z),
      (e[t + 3] = this._w),
      e
    );
  }
  fromBufferAttribute(e, t) {
    return (
      (this._x = e.getX(t)),
      (this._y = e.getY(t)),
      (this._z = e.getZ(t)),
      (this._w = e.getW(t)),
      this
    );
  }
  toJSON() {
    return this.toArray();
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class J {
  constructor(e = 0, t = 0, i = 0) {
    (J.prototype.isVector3 = !0), (this.x = e), (this.y = t), (this.z = i);
  }
  set(e, t, i) {
    return (
      i === void 0 && (i = this.z),
      (this.x = e),
      (this.y = t),
      (this.z = i),
      this
    );
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), (this.z += e.z), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), this;
  }
  addVectors(e, t) {
    return (
      (this.x = e.x + t.x), (this.y = e.y + t.y), (this.z = e.z + t.z), this
    );
  }
  addScaledVector(e, t) {
    return (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), this;
  }
  subVectors(e, t) {
    return (
      (this.x = e.x - t.x), (this.y = e.y - t.y), (this.z = e.z - t.z), this
    );
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), this;
  }
  multiplyVectors(e, t) {
    return (
      (this.x = e.x * t.x), (this.y = e.y * t.y), (this.z = e.z * t.z), this
    );
  }
  applyEuler(e) {
    return this.applyQuaternion(hh.setFromEuler(e));
  }
  applyAxisAngle(e, t) {
    return this.applyQuaternion(hh.setFromAxisAngle(e, t));
  }
  applyMatrix3(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements;
    return (
      (this.x = s[0] * t + s[3] * i + s[6] * r),
      (this.y = s[1] * t + s[4] * i + s[7] * r),
      (this.z = s[2] * t + s[5] * i + s[8] * r),
      this
    );
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements,
      u = 1 / (s[3] * t + s[7] * i + s[11] * r + s[15]);
    return (
      (this.x = (s[0] * t + s[4] * i + s[8] * r + s[12]) * u),
      (this.y = (s[1] * t + s[5] * i + s[9] * r + s[13]) * u),
      (this.z = (s[2] * t + s[6] * i + s[10] * r + s[14]) * u),
      this
    );
  }
  applyQuaternion(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.x,
      u = e.y,
      c = e.z,
      d = e.w,
      p = d * t + u * r - c * i,
      g = d * i + c * t - s * r,
      _ = d * r + s * i - u * t,
      x = -s * t - u * i - c * r;
    return (
      (this.x = p * d + x * -s + g * -c - _ * -u),
      (this.y = g * d + x * -u + _ * -s - p * -c),
      (this.z = _ * d + x * -c + p * -u - g * -s),
      this
    );
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
      e.projectionMatrix
    );
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
      e.matrixWorld
    );
  }
  transformDirection(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements;
    return (
      (this.x = s[0] * t + s[4] * i + s[8] * r),
      (this.y = s[1] * t + s[5] * i + s[9] * r),
      (this.z = s[2] * t + s[6] * i + s[10] * r),
      this.normalize()
    );
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      (this.z = Math.max(e.z, Math.min(t.z, this.z))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      (this.z = Math.max(e, Math.min(t, this.z))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      this
    );
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (
      (this.x += (e.x - this.x) * t),
      (this.y += (e.y - this.y) * t),
      (this.z += (e.z - this.z) * t),
      this
    );
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i),
      (this.y = e.y + (t.y - e.y) * i),
      (this.z = e.z + (t.z - e.z) * i),
      this
    );
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, t) {
    const i = e.x,
      r = e.y,
      s = e.z,
      u = t.x,
      c = t.y,
      d = t.z;
    return (
      (this.x = r * d - s * c),
      (this.y = s * u - i * d),
      (this.z = i * c - r * u),
      this
    );
  }
  projectOnVector(e) {
    const t = e.lengthSq();
    if (t === 0) return this.set(0, 0, 0);
    const i = e.dot(this) / t;
    return this.copy(e).multiplyScalar(i);
  }
  projectOnPlane(e) {
    return D0.copy(this).projectOnVector(e), this.sub(D0);
  }
  reflect(e) {
    return this.sub(D0.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0) return Math.PI / 2;
    const i = this.dot(e) / t;
    return Math.acos(Pn(i, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x,
      i = this.y - e.y,
      r = this.z - e.z;
    return t * t + i * i + r * r;
  }
  manhattanDistanceTo(e) {
    return (
      Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    );
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, t, i) {
    const r = Math.sin(t) * e;
    return (
      (this.x = r * Math.sin(i)),
      (this.y = Math.cos(t) * e),
      (this.z = r * Math.cos(i)),
      this
    );
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, t, i) {
    return (
      (this.x = e * Math.sin(t)), (this.y = i), (this.z = e * Math.cos(t)), this
    );
  }
  setFromMatrixPosition(e) {
    const t = e.elements;
    return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
  }
  setFromMatrixScale(e) {
    const t = this.setFromMatrixColumn(e, 0).length(),
      i = this.setFromMatrixColumn(e, 1).length(),
      r = this.setFromMatrixColumn(e, 2).length();
    return (this.x = t), (this.y = i), (this.z = r), this;
  }
  setFromMatrixColumn(e, t) {
    return this.fromArray(e.elements, t * 4);
  }
  setFromMatrix3Column(e, t) {
    return this.fromArray(e.elements, t * 3);
  }
  setFromEuler(e) {
    return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
  }
  setFromColor(e) {
    return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, t = 0) {
    return (this.x = e[t]), (this.y = e[t + 1]), (this.z = e[t + 2]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e;
  }
  fromBufferAttribute(e, t) {
    return (
      (this.x = e.getX(t)), (this.y = e.getY(t)), (this.z = e.getZ(t)), this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      this
    );
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2,
      t = Math.random() * Math.PI * 2,
      i = Math.sqrt(1 - e ** 2);
    return (
      (this.x = i * Math.cos(t)), (this.y = i * Math.sin(t)), (this.z = e), this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const D0 = new J(),
  hh = new Bs();
class Gs {
  constructor(
    e = new J(1 / 0, 1 / 0, 1 / 0),
    t = new J(-1 / 0, -1 / 0, -1 / 0)
  ) {
    (this.isBox3 = !0), (this.min = e), (this.max = t);
  }
  set(e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }
  setFromArray(e) {
    this.makeEmpty();
    for (let t = 0, i = e.length; t < i; t += 3)
      this.expandByPoint(wr.fromArray(e, t));
    return this;
  }
  setFromBufferAttribute(e) {
    this.makeEmpty();
    for (let t = 0, i = e.count; t < i; t++)
      this.expandByPoint(wr.fromBufferAttribute(e, t));
    return this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let t = 0, i = e.length; t < i; t++) this.expandByPoint(e[t]);
    return this;
  }
  setFromCenterAndSize(e, t) {
    const i = wr.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(i), this.max.copy(e).add(i), this;
  }
  setFromObject(e, t = !1) {
    return this.makeEmpty(), this.expandByObject(e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return (
      (this.min.x = this.min.y = this.min.z = 1 / 0),
      (this.max.x = this.max.y = this.max.z = -1 / 0),
      this
    );
  }
  isEmpty() {
    return (
      this.max.x < this.min.x ||
      this.max.y < this.min.y ||
      this.max.z < this.min.z
    );
  }
  getCenter(e) {
    return this.isEmpty()
      ? e.set(0, 0, 0)
      : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  expandByObject(e, t = !1) {
    if ((e.updateWorldMatrix(!1, !1), e.boundingBox !== void 0))
      e.boundingBox === null && e.computeBoundingBox(),
        Zs.copy(e.boundingBox),
        Zs.applyMatrix4(e.matrixWorld),
        this.union(Zs);
    else {
      const r = e.geometry;
      if (r !== void 0)
        if (t && r.attributes !== void 0 && r.attributes.position !== void 0) {
          const s = r.attributes.position;
          for (let u = 0, c = s.count; u < c; u++)
            wr.fromBufferAttribute(s, u).applyMatrix4(e.matrixWorld),
              this.expandByPoint(wr);
        } else
          r.boundingBox === null && r.computeBoundingBox(),
            Zs.copy(r.boundingBox),
            Zs.applyMatrix4(e.matrixWorld),
            this.union(Zs);
    }
    const i = e.children;
    for (let r = 0, s = i.length; r < s; r++) this.expandByObject(i[r], t);
    return this;
  }
  containsPoint(e) {
    return !(
      e.x < this.min.x ||
      e.x > this.max.x ||
      e.y < this.min.y ||
      e.y > this.max.y ||
      e.z < this.min.z ||
      e.z > this.max.z
    );
  }
  containsBox(e) {
    return (
      this.min.x <= e.min.x &&
      e.max.x <= this.max.x &&
      this.min.y <= e.min.y &&
      e.max.y <= this.max.y &&
      this.min.z <= e.min.z &&
      e.max.z <= this.max.z
    );
  }
  getParameter(e, t) {
    return t.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y),
      (e.z - this.min.z) / (this.max.z - this.min.z)
    );
  }
  intersectsBox(e) {
    return !(
      e.max.x < this.min.x ||
      e.min.x > this.max.x ||
      e.max.y < this.min.y ||
      e.min.y > this.max.y ||
      e.max.z < this.min.z ||
      e.min.z > this.max.z
    );
  }
  intersectsSphere(e) {
    return (
      this.clampPoint(e.center, wr),
      wr.distanceToSquared(e.center) <= e.radius * e.radius
    );
  }
  intersectsPlane(e) {
    let t, i;
    return (
      e.normal.x > 0
        ? ((t = e.normal.x * this.min.x), (i = e.normal.x * this.max.x))
        : ((t = e.normal.x * this.max.x), (i = e.normal.x * this.min.x)),
      e.normal.y > 0
        ? ((t += e.normal.y * this.min.y), (i += e.normal.y * this.max.y))
        : ((t += e.normal.y * this.max.y), (i += e.normal.y * this.min.y)),
      e.normal.z > 0
        ? ((t += e.normal.z * this.min.z), (i += e.normal.z * this.max.z))
        : ((t += e.normal.z * this.max.z), (i += e.normal.z * this.min.z)),
      t <= -e.constant && i >= -e.constant
    );
  }
  intersectsTriangle(e) {
    if (this.isEmpty()) return !1;
    this.getCenter(na),
      oA.subVectors(this.max, na),
      Ks.subVectors(e.a, na),
      Js.subVectors(e.b, na),
      eo.subVectors(e.c, na),
      $r.subVectors(Js, Ks),
      Yr.subVectors(eo, Js),
      bs.subVectors(Ks, eo);
    let t = [
      0,
      -$r.z,
      $r.y,
      0,
      -Yr.z,
      Yr.y,
      0,
      -bs.z,
      bs.y,
      $r.z,
      0,
      -$r.x,
      Yr.z,
      0,
      -Yr.x,
      bs.z,
      0,
      -bs.x,
      -$r.y,
      $r.x,
      0,
      -Yr.y,
      Yr.x,
      0,
      -bs.y,
      bs.x,
      0,
    ];
    return !I0(t, Ks, Js, eo, oA) ||
      ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !I0(t, Ks, Js, eo, oA))
      ? !1
      : (aA.crossVectors($r, Yr),
        (t = [aA.x, aA.y, aA.z]),
        I0(t, Ks, Js, eo, oA));
  }
  clampPoint(e, t) {
    return t.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, wr).distanceTo(e);
  }
  getBoundingSphere(e) {
    return (
      this.isEmpty()
        ? e.makeEmpty()
        : (this.getCenter(e.center),
          (e.radius = this.getSize(wr).length() * 0.5)),
      e
    );
  }
  intersect(e) {
    return (
      this.min.max(e.min),
      this.max.min(e.max),
      this.isEmpty() && this.makeEmpty(),
      this
    );
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  applyMatrix4(e) {
    return this.isEmpty()
      ? this
      : (Er[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
        Er[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
        Er[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
        Er[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
        Er[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
        Er[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
        Er[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
        Er[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
        this.setFromPoints(Er),
        this);
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const Er = [
    new J(),
    new J(),
    new J(),
    new J(),
    new J(),
    new J(),
    new J(),
    new J(),
  ],
  wr = new J(),
  Zs = new Gs(),
  Ks = new J(),
  Js = new J(),
  eo = new J(),
  $r = new J(),
  Yr = new J(),
  bs = new J(),
  na = new J(),
  oA = new J(),
  aA = new J(),
  Ms = new J();
function I0(n, e, t, i, r) {
  for (let s = 0, u = n.length - 3; s <= u; s += 3) {
    Ms.fromArray(n, s);
    const c =
        r.x * Math.abs(Ms.x) + r.y * Math.abs(Ms.y) + r.z * Math.abs(Ms.z),
      d = e.dot(Ms),
      p = t.dot(Ms),
      g = i.dot(Ms);
    if (Math.max(-Math.max(d, p, g), Math.min(d, p, g)) > c) return !1;
  }
  return !0;
}
const C_ = new Gs(),
  ia = new J(),
  O0 = new J();
class Go {
  constructor(e = new J(), t = -1) {
    (this.center = e), (this.radius = t);
  }
  set(e, t) {
    return this.center.copy(e), (this.radius = t), this;
  }
  setFromPoints(e, t) {
    const i = this.center;
    t !== void 0 ? i.copy(t) : C_.setFromPoints(e).getCenter(i);
    let r = 0;
    for (let s = 0, u = e.length; s < u; s++)
      r = Math.max(r, i.distanceToSquared(e[s]));
    return (this.radius = Math.sqrt(r)), this;
  }
  copy(e) {
    return this.center.copy(e.center), (this.radius = e.radius), this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), (this.radius = -1), this;
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const t = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= t * t;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, t) {
    const i = this.center.distanceToSquared(e);
    return (
      t.copy(e),
      i > this.radius * this.radius &&
        (t.sub(this.center).normalize(),
        t.multiplyScalar(this.radius).add(this.center)),
      t
    );
  }
  getBoundingBox(e) {
    return this.isEmpty()
      ? (e.makeEmpty(), e)
      : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return (
      this.center.applyMatrix4(e),
      (this.radius = this.radius * e.getMaxScaleOnAxis()),
      this
    );
  }
  translate(e) {
    return this.center.add(e), this;
  }
  expandByPoint(e) {
    if (this.isEmpty()) return this.center.copy(e), (this.radius = 0), this;
    ia.subVectors(e, this.center);
    const t = ia.lengthSq();
    if (t > this.radius * this.radius) {
      const i = Math.sqrt(t),
        r = (i - this.radius) * 0.5;
      this.center.addScaledVector(ia, r / i), (this.radius += r);
    }
    return this;
  }
  union(e) {
    return e.isEmpty()
      ? this
      : this.isEmpty()
      ? (this.copy(e), this)
      : (this.center.equals(e.center) === !0
          ? (this.radius = Math.max(this.radius, e.radius))
          : (O0.subVectors(e.center, this.center).setLength(e.radius),
            this.expandByPoint(ia.copy(e.center).add(O0)),
            this.expandByPoint(ia.copy(e.center).sub(O0))),
        this);
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Tr = new J(),
  U0 = new J(),
  AA = new J(),
  Zr = new J(),
  q0 = new J(),
  lA = new J(),
  B0 = new J();
class cc {
  constructor(e = new J(), t = new J(0, 0, -1)) {
    (this.origin = e), (this.direction = t);
  }
  set(e, t) {
    return this.origin.copy(e), this.direction.copy(t), this;
  }
  copy(e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }
  at(e, t) {
    return t.copy(this.origin).addScaledVector(this.direction, e);
  }
  lookAt(e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }
  recast(e) {
    return this.origin.copy(this.at(e, Tr)), this;
  }
  closestPointToPoint(e, t) {
    t.subVectors(e, this.origin);
    const i = t.dot(this.direction);
    return i < 0
      ? t.copy(this.origin)
      : t.copy(this.origin).addScaledVector(this.direction, i);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const t = Tr.subVectors(e, this.origin).dot(this.direction);
    return t < 0
      ? this.origin.distanceToSquared(e)
      : (Tr.copy(this.origin).addScaledVector(this.direction, t),
        Tr.distanceToSquared(e));
  }
  distanceSqToSegment(e, t, i, r) {
    U0.copy(e).add(t).multiplyScalar(0.5),
      AA.copy(t).sub(e).normalize(),
      Zr.copy(this.origin).sub(U0);
    const s = e.distanceTo(t) * 0.5,
      u = -this.direction.dot(AA),
      c = Zr.dot(this.direction),
      d = -Zr.dot(AA),
      p = Zr.lengthSq(),
      g = Math.abs(1 - u * u);
    let _, x, M, E;
    if (g > 0)
      if (((_ = u * d - c), (x = u * c - d), (E = s * g), _ >= 0))
        if (x >= -E)
          if (x <= E) {
            const C = 1 / g;
            (_ *= C),
              (x *= C),
              (M = _ * (_ + u * x + 2 * c) + x * (u * _ + x + 2 * d) + p);
          } else
            (x = s),
              (_ = Math.max(0, -(u * x + c))),
              (M = -_ * _ + x * (x + 2 * d) + p);
        else
          (x = -s),
            (_ = Math.max(0, -(u * x + c))),
            (M = -_ * _ + x * (x + 2 * d) + p);
      else
        x <= -E
          ? ((_ = Math.max(0, -(-u * s + c))),
            (x = _ > 0 ? -s : Math.min(Math.max(-s, -d), s)),
            (M = -_ * _ + x * (x + 2 * d) + p))
          : x <= E
          ? ((_ = 0),
            (x = Math.min(Math.max(-s, -d), s)),
            (M = x * (x + 2 * d) + p))
          : ((_ = Math.max(0, -(u * s + c))),
            (x = _ > 0 ? s : Math.min(Math.max(-s, -d), s)),
            (M = -_ * _ + x * (x + 2 * d) + p));
    else
      (x = u > 0 ? -s : s),
        (_ = Math.max(0, -(u * x + c))),
        (M = -_ * _ + x * (x + 2 * d) + p);
    return (
      i && i.copy(this.origin).addScaledVector(this.direction, _),
      r && r.copy(U0).addScaledVector(AA, x),
      M
    );
  }
  intersectSphere(e, t) {
    Tr.subVectors(e.center, this.origin);
    const i = Tr.dot(this.direction),
      r = Tr.dot(Tr) - i * i,
      s = e.radius * e.radius;
    if (r > s) return null;
    const u = Math.sqrt(s - r),
      c = i - u,
      d = i + u;
    return d < 0 ? null : c < 0 ? this.at(d, t) : this.at(c, t);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const t = e.normal.dot(this.direction);
    if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const i = -(this.origin.dot(e.normal) + e.constant) / t;
    return i >= 0 ? i : null;
  }
  intersectPlane(e, t) {
    const i = this.distanceToPlane(e);
    return i === null ? null : this.at(i, t);
  }
  intersectsPlane(e) {
    const t = e.distanceToPoint(this.origin);
    return t === 0 || e.normal.dot(this.direction) * t < 0;
  }
  intersectBox(e, t) {
    let i, r, s, u, c, d;
    const p = 1 / this.direction.x,
      g = 1 / this.direction.y,
      _ = 1 / this.direction.z,
      x = this.origin;
    return (
      p >= 0
        ? ((i = (e.min.x - x.x) * p), (r = (e.max.x - x.x) * p))
        : ((i = (e.max.x - x.x) * p), (r = (e.min.x - x.x) * p)),
      g >= 0
        ? ((s = (e.min.y - x.y) * g), (u = (e.max.y - x.y) * g))
        : ((s = (e.max.y - x.y) * g), (u = (e.min.y - x.y) * g)),
      i > u ||
      s > r ||
      ((s > i || isNaN(i)) && (i = s),
      (u < r || isNaN(r)) && (r = u),
      _ >= 0
        ? ((c = (e.min.z - x.z) * _), (d = (e.max.z - x.z) * _))
        : ((c = (e.max.z - x.z) * _), (d = (e.min.z - x.z) * _)),
      i > d || c > r) ||
      ((c > i || i !== i) && (i = c), (d < r || r !== r) && (r = d), r < 0)
        ? null
        : this.at(i >= 0 ? i : r, t)
    );
  }
  intersectsBox(e) {
    return this.intersectBox(e, Tr) !== null;
  }
  intersectTriangle(e, t, i, r, s) {
    q0.subVectors(t, e), lA.subVectors(i, e), B0.crossVectors(q0, lA);
    let u = this.direction.dot(B0),
      c;
    if (u > 0) {
      if (r) return null;
      c = 1;
    } else if (u < 0) (c = -1), (u = -u);
    else return null;
    Zr.subVectors(this.origin, e);
    const d = c * this.direction.dot(lA.crossVectors(Zr, lA));
    if (d < 0) return null;
    const p = c * this.direction.dot(q0.cross(Zr));
    if (p < 0 || d + p > u) return null;
    const g = -c * Zr.dot(B0);
    return g < 0 ? null : this.at(g / u, s);
  }
  applyMatrix4(e) {
    return (
      this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
    );
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class dn {
  constructor(e, t, i, r, s, u, c, d, p, g, _, x, M, E, C, S) {
    (dn.prototype.isMatrix4 = !0),
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, t, i, r, s, u, c, d, p, g, _, x, M, E, C, S);
  }
  set(e, t, i, r, s, u, c, d, p, g, _, x, M, E, C, S) {
    const b = this.elements;
    return (
      (b[0] = e),
      (b[4] = t),
      (b[8] = i),
      (b[12] = r),
      (b[1] = s),
      (b[5] = u),
      (b[9] = c),
      (b[13] = d),
      (b[2] = p),
      (b[6] = g),
      (b[10] = _),
      (b[14] = x),
      (b[3] = M),
      (b[7] = E),
      (b[11] = C),
      (b[15] = S),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new dn().fromArray(this.elements);
  }
  copy(e) {
    const t = this.elements,
      i = e.elements;
    return (
      (t[0] = i[0]),
      (t[1] = i[1]),
      (t[2] = i[2]),
      (t[3] = i[3]),
      (t[4] = i[4]),
      (t[5] = i[5]),
      (t[6] = i[6]),
      (t[7] = i[7]),
      (t[8] = i[8]),
      (t[9] = i[9]),
      (t[10] = i[10]),
      (t[11] = i[11]),
      (t[12] = i[12]),
      (t[13] = i[13]),
      (t[14] = i[14]),
      (t[15] = i[15]),
      this
    );
  }
  copyPosition(e) {
    const t = this.elements,
      i = e.elements;
    return (t[12] = i[12]), (t[13] = i[13]), (t[14] = i[14]), this;
  }
  setFromMatrix3(e) {
    const t = e.elements;
    return (
      this.set(
        t[0],
        t[3],
        t[6],
        0,
        t[1],
        t[4],
        t[7],
        0,
        t[2],
        t[5],
        t[8],
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractBasis(e, t, i) {
    return (
      e.setFromMatrixColumn(this, 0),
      t.setFromMatrixColumn(this, 1),
      i.setFromMatrixColumn(this, 2),
      this
    );
  }
  makeBasis(e, t, i) {
    return (
      this.set(
        e.x,
        t.x,
        i.x,
        0,
        e.y,
        t.y,
        i.y,
        0,
        e.z,
        t.z,
        i.z,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractRotation(e) {
    const t = this.elements,
      i = e.elements,
      r = 1 / to.setFromMatrixColumn(e, 0).length(),
      s = 1 / to.setFromMatrixColumn(e, 1).length(),
      u = 1 / to.setFromMatrixColumn(e, 2).length();
    return (
      (t[0] = i[0] * r),
      (t[1] = i[1] * r),
      (t[2] = i[2] * r),
      (t[3] = 0),
      (t[4] = i[4] * s),
      (t[5] = i[5] * s),
      (t[6] = i[6] * s),
      (t[7] = 0),
      (t[8] = i[8] * u),
      (t[9] = i[9] * u),
      (t[10] = i[10] * u),
      (t[11] = 0),
      (t[12] = 0),
      (t[13] = 0),
      (t[14] = 0),
      (t[15] = 1),
      this
    );
  }
  makeRotationFromEuler(e) {
    const t = this.elements,
      i = e.x,
      r = e.y,
      s = e.z,
      u = Math.cos(i),
      c = Math.sin(i),
      d = Math.cos(r),
      p = Math.sin(r),
      g = Math.cos(s),
      _ = Math.sin(s);
    if (e.order === "XYZ") {
      const x = u * g,
        M = u * _,
        E = c * g,
        C = c * _;
      (t[0] = d * g),
        (t[4] = -d * _),
        (t[8] = p),
        (t[1] = M + E * p),
        (t[5] = x - C * p),
        (t[9] = -c * d),
        (t[2] = C - x * p),
        (t[6] = E + M * p),
        (t[10] = u * d);
    } else if (e.order === "YXZ") {
      const x = d * g,
        M = d * _,
        E = p * g,
        C = p * _;
      (t[0] = x + C * c),
        (t[4] = E * c - M),
        (t[8] = u * p),
        (t[1] = u * _),
        (t[5] = u * g),
        (t[9] = -c),
        (t[2] = M * c - E),
        (t[6] = C + x * c),
        (t[10] = u * d);
    } else if (e.order === "ZXY") {
      const x = d * g,
        M = d * _,
        E = p * g,
        C = p * _;
      (t[0] = x - C * c),
        (t[4] = -u * _),
        (t[8] = E + M * c),
        (t[1] = M + E * c),
        (t[5] = u * g),
        (t[9] = C - x * c),
        (t[2] = -u * p),
        (t[6] = c),
        (t[10] = u * d);
    } else if (e.order === "ZYX") {
      const x = u * g,
        M = u * _,
        E = c * g,
        C = c * _;
      (t[0] = d * g),
        (t[4] = E * p - M),
        (t[8] = x * p + C),
        (t[1] = d * _),
        (t[5] = C * p + x),
        (t[9] = M * p - E),
        (t[2] = -p),
        (t[6] = c * d),
        (t[10] = u * d);
    } else if (e.order === "YZX") {
      const x = u * d,
        M = u * p,
        E = c * d,
        C = c * p;
      (t[0] = d * g),
        (t[4] = C - x * _),
        (t[8] = E * _ + M),
        (t[1] = _),
        (t[5] = u * g),
        (t[9] = -c * g),
        (t[2] = -p * g),
        (t[6] = M * _ + E),
        (t[10] = x - C * _);
    } else if (e.order === "XZY") {
      const x = u * d,
        M = u * p,
        E = c * d,
        C = c * p;
      (t[0] = d * g),
        (t[4] = -_),
        (t[8] = p * g),
        (t[1] = x * _ + C),
        (t[5] = u * g),
        (t[9] = M * _ - E),
        (t[2] = E * _ - M),
        (t[6] = c * g),
        (t[10] = C * _ + x);
    }
    return (
      (t[3] = 0),
      (t[7] = 0),
      (t[11] = 0),
      (t[12] = 0),
      (t[13] = 0),
      (t[14] = 0),
      (t[15] = 1),
      this
    );
  }
  makeRotationFromQuaternion(e) {
    return this.compose(R_, e, P_);
  }
  lookAt(e, t, i) {
    const r = this.elements;
    return (
      Ei.subVectors(e, t),
      Ei.lengthSq() === 0 && (Ei.z = 1),
      Ei.normalize(),
      Kr.crossVectors(i, Ei),
      Kr.lengthSq() === 0 &&
        (Math.abs(i.z) === 1 ? (Ei.x += 1e-4) : (Ei.z += 1e-4),
        Ei.normalize(),
        Kr.crossVectors(i, Ei)),
      Kr.normalize(),
      uA.crossVectors(Ei, Kr),
      (r[0] = Kr.x),
      (r[4] = uA.x),
      (r[8] = Ei.x),
      (r[1] = Kr.y),
      (r[5] = uA.y),
      (r[9] = Ei.y),
      (r[2] = Kr.z),
      (r[6] = uA.z),
      (r[10] = Ei.z),
      this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const i = e.elements,
      r = t.elements,
      s = this.elements,
      u = i[0],
      c = i[4],
      d = i[8],
      p = i[12],
      g = i[1],
      _ = i[5],
      x = i[9],
      M = i[13],
      E = i[2],
      C = i[6],
      S = i[10],
      b = i[14],
      L = i[3],
      T = i[7],
      R = i[11],
      U = i[15],
      q = r[0],
      I = r[4],
      N = r[8],
      D = r[12],
      O = r[1],
      F = r[5],
      $ = r[9],
      V = r[13],
      Q = r[2],
      k = r[6],
      te = r[10],
      ee = r[14],
      se = r[3],
      pe = r[7],
      de = r[11],
      oe = r[15];
    return (
      (s[0] = u * q + c * O + d * Q + p * se),
      (s[4] = u * I + c * F + d * k + p * pe),
      (s[8] = u * N + c * $ + d * te + p * de),
      (s[12] = u * D + c * V + d * ee + p * oe),
      (s[1] = g * q + _ * O + x * Q + M * se),
      (s[5] = g * I + _ * F + x * k + M * pe),
      (s[9] = g * N + _ * $ + x * te + M * de),
      (s[13] = g * D + _ * V + x * ee + M * oe),
      (s[2] = E * q + C * O + S * Q + b * se),
      (s[6] = E * I + C * F + S * k + b * pe),
      (s[10] = E * N + C * $ + S * te + b * de),
      (s[14] = E * D + C * V + S * ee + b * oe),
      (s[3] = L * q + T * O + R * Q + U * se),
      (s[7] = L * I + T * F + R * k + U * pe),
      (s[11] = L * N + T * $ + R * te + U * de),
      (s[15] = L * D + T * V + R * ee + U * oe),
      this
    );
  }
  multiplyScalar(e) {
    const t = this.elements;
    return (
      (t[0] *= e),
      (t[4] *= e),
      (t[8] *= e),
      (t[12] *= e),
      (t[1] *= e),
      (t[5] *= e),
      (t[9] *= e),
      (t[13] *= e),
      (t[2] *= e),
      (t[6] *= e),
      (t[10] *= e),
      (t[14] *= e),
      (t[3] *= e),
      (t[7] *= e),
      (t[11] *= e),
      (t[15] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      t = e[0],
      i = e[4],
      r = e[8],
      s = e[12],
      u = e[1],
      c = e[5],
      d = e[9],
      p = e[13],
      g = e[2],
      _ = e[6],
      x = e[10],
      M = e[14],
      E = e[3],
      C = e[7],
      S = e[11],
      b = e[15];
    return (
      E *
        (+s * d * _ -
          r * p * _ -
          s * c * x +
          i * p * x +
          r * c * M -
          i * d * M) +
      C *
        (+t * d * M -
          t * p * x +
          s * u * x -
          r * u * M +
          r * p * g -
          s * d * g) +
      S *
        (+t * p * _ -
          t * c * M -
          s * u * _ +
          i * u * M +
          s * c * g -
          i * p * g) +
      b *
        (-r * c * g - t * d * _ + t * c * x + r * u * _ - i * u * x + i * d * g)
    );
  }
  transpose() {
    const e = this.elements;
    let t;
    return (
      (t = e[1]),
      (e[1] = e[4]),
      (e[4] = t),
      (t = e[2]),
      (e[2] = e[8]),
      (e[8] = t),
      (t = e[6]),
      (e[6] = e[9]),
      (e[9] = t),
      (t = e[3]),
      (e[3] = e[12]),
      (e[12] = t),
      (t = e[7]),
      (e[7] = e[13]),
      (e[13] = t),
      (t = e[11]),
      (e[11] = e[14]),
      (e[14] = t),
      this
    );
  }
  setPosition(e, t, i) {
    const r = this.elements;
    return (
      e.isVector3
        ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
        : ((r[12] = e), (r[13] = t), (r[14] = i)),
      this
    );
  }
  invert() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      d = e[6],
      p = e[7],
      g = e[8],
      _ = e[9],
      x = e[10],
      M = e[11],
      E = e[12],
      C = e[13],
      S = e[14],
      b = e[15],
      L = _ * S * p - C * x * p + C * d * M - c * S * M - _ * d * b + c * x * b,
      T = E * x * p - g * S * p - E * d * M + u * S * M + g * d * b - u * x * b,
      R = g * C * p - E * _ * p + E * c * M - u * C * M - g * c * b + u * _ * b,
      U = E * _ * d - g * C * d - E * c * x + u * C * x + g * c * S - u * _ * S,
      q = t * L + i * T + r * R + s * U;
    if (q === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const I = 1 / q;
    return (
      (e[0] = L * I),
      (e[1] =
        (C * x * s -
          _ * S * s -
          C * r * M +
          i * S * M +
          _ * r * b -
          i * x * b) *
        I),
      (e[2] =
        (c * S * s -
          C * d * s +
          C * r * p -
          i * S * p -
          c * r * b +
          i * d * b) *
        I),
      (e[3] =
        (_ * d * s -
          c * x * s -
          _ * r * p +
          i * x * p +
          c * r * M -
          i * d * M) *
        I),
      (e[4] = T * I),
      (e[5] =
        (g * S * s -
          E * x * s +
          E * r * M -
          t * S * M -
          g * r * b +
          t * x * b) *
        I),
      (e[6] =
        (E * d * s -
          u * S * s -
          E * r * p +
          t * S * p +
          u * r * b -
          t * d * b) *
        I),
      (e[7] =
        (u * x * s -
          g * d * s +
          g * r * p -
          t * x * p -
          u * r * M +
          t * d * M) *
        I),
      (e[8] = R * I),
      (e[9] =
        (E * _ * s -
          g * C * s -
          E * i * M +
          t * C * M +
          g * i * b -
          t * _ * b) *
        I),
      (e[10] =
        (u * C * s -
          E * c * s +
          E * i * p -
          t * C * p -
          u * i * b +
          t * c * b) *
        I),
      (e[11] =
        (g * c * s -
          u * _ * s -
          g * i * p +
          t * _ * p +
          u * i * M -
          t * c * M) *
        I),
      (e[12] = U * I),
      (e[13] =
        (g * C * r -
          E * _ * r +
          E * i * x -
          t * C * x -
          g * i * S +
          t * _ * S) *
        I),
      (e[14] =
        (E * c * r -
          u * C * r -
          E * i * d +
          t * C * d +
          u * i * S -
          t * c * S) *
        I),
      (e[15] =
        (u * _ * r -
          g * c * r +
          g * i * d -
          t * _ * d -
          u * i * x +
          t * c * x) *
        I),
      this
    );
  }
  scale(e) {
    const t = this.elements,
      i = e.x,
      r = e.y,
      s = e.z;
    return (
      (t[0] *= i),
      (t[4] *= r),
      (t[8] *= s),
      (t[1] *= i),
      (t[5] *= r),
      (t[9] *= s),
      (t[2] *= i),
      (t[6] *= r),
      (t[10] *= s),
      (t[3] *= i),
      (t[7] *= r),
      (t[11] *= s),
      this
    );
  }
  getMaxScaleOnAxis() {
    const e = this.elements,
      t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
      i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
      r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(t, i, r));
  }
  makeTranslation(e, t, i) {
    return (
      e.isVector3
        ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
        : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, i, 0, 0, 0, 1),
      this
    );
  }
  makeRotationX(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, t, -i, 0, 0, i, t, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, 0, i, 0, 0, 1, 0, 0, -i, 0, t, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, -i, 0, 0, i, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(e, t) {
    const i = Math.cos(t),
      r = Math.sin(t),
      s = 1 - i,
      u = e.x,
      c = e.y,
      d = e.z,
      p = s * u,
      g = s * c;
    return (
      this.set(
        p * u + i,
        p * c - r * d,
        p * d + r * c,
        0,
        p * c + r * d,
        g * c + i,
        g * d - r * u,
        0,
        p * d - r * c,
        g * d + r * u,
        s * d * d + i,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  makeScale(e, t, i) {
    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this;
  }
  makeShear(e, t, i, r, s, u) {
    return this.set(1, i, s, 0, e, 1, u, 0, t, r, 1, 0, 0, 0, 0, 1), this;
  }
  compose(e, t, i) {
    const r = this.elements,
      s = t._x,
      u = t._y,
      c = t._z,
      d = t._w,
      p = s + s,
      g = u + u,
      _ = c + c,
      x = s * p,
      M = s * g,
      E = s * _,
      C = u * g,
      S = u * _,
      b = c * _,
      L = d * p,
      T = d * g,
      R = d * _,
      U = i.x,
      q = i.y,
      I = i.z;
    return (
      (r[0] = (1 - (C + b)) * U),
      (r[1] = (M + R) * U),
      (r[2] = (E - T) * U),
      (r[3] = 0),
      (r[4] = (M - R) * q),
      (r[5] = (1 - (x + b)) * q),
      (r[6] = (S + L) * q),
      (r[7] = 0),
      (r[8] = (E + T) * I),
      (r[9] = (S - L) * I),
      (r[10] = (1 - (x + C)) * I),
      (r[11] = 0),
      (r[12] = e.x),
      (r[13] = e.y),
      (r[14] = e.z),
      (r[15] = 1),
      this
    );
  }
  decompose(e, t, i) {
    const r = this.elements;
    let s = to.set(r[0], r[1], r[2]).length();
    const u = to.set(r[4], r[5], r[6]).length(),
      c = to.set(r[8], r[9], r[10]).length();
    this.determinant() < 0 && (s = -s),
      (e.x = r[12]),
      (e.y = r[13]),
      (e.z = r[14]),
      $i.copy(this);
    const p = 1 / s,
      g = 1 / u,
      _ = 1 / c;
    return (
      ($i.elements[0] *= p),
      ($i.elements[1] *= p),
      ($i.elements[2] *= p),
      ($i.elements[4] *= g),
      ($i.elements[5] *= g),
      ($i.elements[6] *= g),
      ($i.elements[8] *= _),
      ($i.elements[9] *= _),
      ($i.elements[10] *= _),
      t.setFromRotationMatrix($i),
      (i.x = s),
      (i.y = u),
      (i.z = c),
      this
    );
  }
  makePerspective(e, t, i, r, s, u, c = Br) {
    const d = this.elements,
      p = (2 * s) / (t - e),
      g = (2 * s) / (i - r),
      _ = (t + e) / (t - e),
      x = (i + r) / (i - r);
    let M, E;
    if (c === Br) (M = -(u + s) / (u - s)), (E = (-2 * u * s) / (u - s));
    else if (c === sl) (M = -u / (u - s)), (E = (-u * s) / (u - s));
    else
      throw new Error(
        "THREE.Matrix4.makePerspective(): Invalid coordinate system: " + c
      );
    return (
      (d[0] = p),
      (d[4] = 0),
      (d[8] = _),
      (d[12] = 0),
      (d[1] = 0),
      (d[5] = g),
      (d[9] = x),
      (d[13] = 0),
      (d[2] = 0),
      (d[6] = 0),
      (d[10] = M),
      (d[14] = E),
      (d[3] = 0),
      (d[7] = 0),
      (d[11] = -1),
      (d[15] = 0),
      this
    );
  }
  makeOrthographic(e, t, i, r, s, u, c = Br) {
    const d = this.elements,
      p = 1 / (t - e),
      g = 1 / (i - r),
      _ = 1 / (u - s),
      x = (t + e) * p,
      M = (i + r) * g;
    let E, C;
    if (c === Br) (E = (u + s) * _), (C = -2 * _);
    else if (c === sl) (E = s * _), (C = -1 * _);
    else
      throw new Error(
        "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + c
      );
    return (
      (d[0] = 2 * p),
      (d[4] = 0),
      (d[8] = 0),
      (d[12] = -x),
      (d[1] = 0),
      (d[5] = 2 * g),
      (d[9] = 0),
      (d[13] = -M),
      (d[2] = 0),
      (d[6] = 0),
      (d[10] = C),
      (d[14] = -E),
      (d[3] = 0),
      (d[7] = 0),
      (d[11] = 0),
      (d[15] = 1),
      this
    );
  }
  equals(e) {
    const t = this.elements,
      i = e.elements;
    for (let r = 0; r < 16; r++) if (t[r] !== i[r]) return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let i = 0; i < 16; i++) this.elements[i] = e[i + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const i = this.elements;
    return (
      (e[t] = i[0]),
      (e[t + 1] = i[1]),
      (e[t + 2] = i[2]),
      (e[t + 3] = i[3]),
      (e[t + 4] = i[4]),
      (e[t + 5] = i[5]),
      (e[t + 6] = i[6]),
      (e[t + 7] = i[7]),
      (e[t + 8] = i[8]),
      (e[t + 9] = i[9]),
      (e[t + 10] = i[10]),
      (e[t + 11] = i[11]),
      (e[t + 12] = i[12]),
      (e[t + 13] = i[13]),
      (e[t + 14] = i[14]),
      (e[t + 15] = i[15]),
      e
    );
  }
}
const to = new J(),
  $i = new dn(),
  R_ = new J(0, 0, 0),
  P_ = new J(1, 1, 1),
  Kr = new J(),
  uA = new J(),
  Ei = new J(),
  dh = new dn(),
  ph = new Bs();
class cs {
  constructor(e = 0, t = 0, i = 0, r = cs.DEFAULT_ORDER) {
    (this.isEuler = !0),
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._order = r);
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(e) {
    (this._order = e), this._onChangeCallback();
  }
  set(e, t, i, r = this._order) {
    return (
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._order = r),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return (
      (this._x = e._x),
      (this._y = e._y),
      (this._z = e._z),
      (this._order = e._order),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e, t = this._order, i = !0) {
    const r = e.elements,
      s = r[0],
      u = r[4],
      c = r[8],
      d = r[1],
      p = r[5],
      g = r[9],
      _ = r[2],
      x = r[6],
      M = r[10];
    switch (t) {
      case "XYZ":
        (this._y = Math.asin(Pn(c, -1, 1))),
          Math.abs(c) < 0.9999999
            ? ((this._x = Math.atan2(-g, M)), (this._z = Math.atan2(-u, s)))
            : ((this._x = Math.atan2(x, p)), (this._z = 0));
        break;
      case "YXZ":
        (this._x = Math.asin(-Pn(g, -1, 1))),
          Math.abs(g) < 0.9999999
            ? ((this._y = Math.atan2(c, M)), (this._z = Math.atan2(d, p)))
            : ((this._y = Math.atan2(-_, s)), (this._z = 0));
        break;
      case "ZXY":
        (this._x = Math.asin(Pn(x, -1, 1))),
          Math.abs(x) < 0.9999999
            ? ((this._y = Math.atan2(-_, M)), (this._z = Math.atan2(-u, p)))
            : ((this._y = 0), (this._z = Math.atan2(d, s)));
        break;
      case "ZYX":
        (this._y = Math.asin(-Pn(_, -1, 1))),
          Math.abs(_) < 0.9999999
            ? ((this._x = Math.atan2(x, M)), (this._z = Math.atan2(d, s)))
            : ((this._x = 0), (this._z = Math.atan2(-u, p)));
        break;
      case "YZX":
        (this._z = Math.asin(Pn(d, -1, 1))),
          Math.abs(d) < 0.9999999
            ? ((this._x = Math.atan2(-g, p)), (this._y = Math.atan2(-_, s)))
            : ((this._x = 0), (this._y = Math.atan2(c, M)));
        break;
      case "XZY":
        (this._z = Math.asin(-Pn(u, -1, 1))),
          Math.abs(u) < 0.9999999
            ? ((this._x = Math.atan2(x, p)), (this._y = Math.atan2(c, s)))
            : ((this._x = Math.atan2(-g, M)), (this._y = 0));
        break;
      default:
        console.warn(
          "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
            t
        );
    }
    return (this._order = t), i === !0 && this._onChangeCallback(), this;
  }
  setFromQuaternion(e, t, i) {
    return (
      dh.makeRotationFromQuaternion(e), this.setFromRotationMatrix(dh, t, i)
    );
  }
  setFromVector3(e, t = this._order) {
    return this.set(e.x, e.y, e.z, t);
  }
  reorder(e) {
    return ph.setFromEuler(this), this.setFromQuaternion(ph, e);
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._order === this._order
    );
  }
  fromArray(e) {
    return (
      (this._x = e[0]),
      (this._y = e[1]),
      (this._z = e[2]),
      e[3] !== void 0 && (this._order = e[3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this._x),
      (e[t + 1] = this._y),
      (e[t + 2] = this._z),
      (e[t + 3] = this._order),
      e
    );
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
}
cs.DEFAULT_ORDER = "XYZ";
class p1 {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = ((1 << e) | 0) >>> 0;
  }
  enable(e) {
    this.mask |= (1 << e) | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= (1 << e) | 0;
  }
  disable(e) {
    this.mask &= ~((1 << e) | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & ((1 << e) | 0)) !== 0;
  }
}
let L_ = 0;
const mh = new J(),
  no = new Bs(),
  Cr = new dn(),
  cA = new J(),
  ra = new J(),
  D_ = new J(),
  I_ = new Bs(),
  gh = new J(1, 0, 0),
  _h = new J(0, 1, 0),
  vh = new J(0, 0, 1),
  O_ = { type: "added" },
  U_ = { type: "removed" };
class Cn extends zs {
  constructor() {
    super(),
      (this.isObject3D = !0),
      Object.defineProperty(this, "id", { value: L_++ }),
      (this.uuid = mr()),
      (this.name = ""),
      (this.type = "Object3D"),
      (this.parent = null),
      (this.children = []),
      (this.up = Cn.DEFAULT_UP.clone());
    const e = new J(),
      t = new cs(),
      i = new Bs(),
      r = new J(1, 1, 1);
    function s() {
      i.setFromEuler(t, !1);
    }
    function u() {
      t.setFromQuaternion(i, void 0, !1);
    }
    t._onChange(s),
      i._onChange(u),
      Object.defineProperties(this, {
        position: { configurable: !0, enumerable: !0, value: e },
        rotation: { configurable: !0, enumerable: !0, value: t },
        quaternion: { configurable: !0, enumerable: !0, value: i },
        scale: { configurable: !0, enumerable: !0, value: r },
        modelViewMatrix: { value: new dn() },
        normalMatrix: { value: new Gt() },
      }),
      (this.matrix = new dn()),
      (this.matrixWorld = new dn()),
      (this.matrixAutoUpdate = Cn.DEFAULT_MATRIX_AUTO_UPDATE),
      (this.matrixWorldNeedsUpdate = !1),
      (this.matrixWorldAutoUpdate = Cn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
      (this.layers = new p1()),
      (this.visible = !0),
      (this.castShadow = !1),
      (this.receiveShadow = !1),
      (this.frustumCulled = !0),
      (this.renderOrder = 0),
      (this.animations = []),
      (this.userData = {});
  }
  onBeforeRender() {}
  onAfterRender() {}
  applyMatrix4(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      this.matrix.premultiply(e),
      this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(e) {
    return this.quaternion.premultiply(e), this;
  }
  setRotationFromAxisAngle(e, t) {
    this.quaternion.setFromAxisAngle(e, t);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, !0);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, t) {
    return no.setFromAxisAngle(e, t), this.quaternion.multiply(no), this;
  }
  rotateOnWorldAxis(e, t) {
    return no.setFromAxisAngle(e, t), this.quaternion.premultiply(no), this;
  }
  rotateX(e) {
    return this.rotateOnAxis(gh, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(_h, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(vh, e);
  }
  translateOnAxis(e, t) {
    return (
      mh.copy(e).applyQuaternion(this.quaternion),
      this.position.add(mh.multiplyScalar(t)),
      this
    );
  }
  translateX(e) {
    return this.translateOnAxis(gh, e);
  }
  translateY(e) {
    return this.translateOnAxis(_h, e);
  }
  translateZ(e) {
    return this.translateOnAxis(vh, e);
  }
  localToWorld(e) {
    return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      e.applyMatrix4(Cr.copy(this.matrixWorld).invert())
    );
  }
  lookAt(e, t, i) {
    e.isVector3 ? cA.copy(e) : cA.set(e, t, i);
    const r = this.parent;
    this.updateWorldMatrix(!0, !1),
      ra.setFromMatrixPosition(this.matrixWorld),
      this.isCamera || this.isLight
        ? Cr.lookAt(ra, cA, this.up)
        : Cr.lookAt(cA, ra, this.up),
      this.quaternion.setFromRotationMatrix(Cr),
      r &&
        (Cr.extractRotation(r.matrixWorld),
        no.setFromRotationMatrix(Cr),
        this.quaternion.premultiply(no.invert()));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let t = 0; t < arguments.length; t++) this.add(arguments[t]);
      return this;
    }
    return e === this
      ? (console.error(
          "THREE.Object3D.add: object can't be added as a child of itself.",
          e
        ),
        this)
      : (e && e.isObject3D
          ? (e.parent !== null && e.parent.remove(e),
            (e.parent = this),
            this.children.push(e),
            e.dispatchEvent(O_))
          : console.error(
              "THREE.Object3D.add: object not an instance of THREE.Object3D.",
              e
            ),
        this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let i = 0; i < arguments.length; i++) this.remove(arguments[i]);
      return this;
    }
    const t = this.children.indexOf(e);
    return (
      t !== -1 &&
        ((e.parent = null), this.children.splice(t, 1), e.dispatchEvent(U_)),
      this
    );
  }
  removeFromParent() {
    const e = this.parent;
    return e !== null && e.remove(this), this;
  }
  clear() {
    return this.remove(...this.children);
  }
  attach(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      Cr.copy(this.matrixWorld).invert(),
      e.parent !== null &&
        (e.parent.updateWorldMatrix(!0, !1), Cr.multiply(e.parent.matrixWorld)),
      e.applyMatrix4(Cr),
      this.add(e),
      e.updateWorldMatrix(!1, !0),
      this
    );
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, t) {
    if (this[e] === t) return this;
    for (let i = 0, r = this.children.length; i < r; i++) {
      const u = this.children[i].getObjectByProperty(e, t);
      if (u !== void 0) return u;
    }
  }
  getObjectsByProperty(e, t) {
    let i = [];
    this[e] === t && i.push(this);
    for (let r = 0, s = this.children.length; r < s; r++) {
      const u = this.children[r].getObjectsByProperty(e, t);
      u.length > 0 && (i = i.concat(u));
    }
    return i;
  }
  getWorldPosition(e) {
    return (
      this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld)
    );
  }
  getWorldQuaternion(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(ra, e, D_), e
    );
  }
  getWorldScale(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(ra, I_, e), e
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(t[8], t[9], t[10]).normalize();
  }
  raycast() {}
  traverse(e) {
    e(this);
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) t[i].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === !1) return;
    e(this);
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) t[i].traverseVisible(e);
  }
  traverseAncestors(e) {
    const t = this.parent;
    t !== null && (e(t), t.traverseAncestors(e));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale),
      (this.matrixWorldNeedsUpdate = !0);
  }
  updateMatrixWorld(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      (this.matrixWorldNeedsUpdate || e) &&
        (this.parent === null
          ? this.matrixWorld.copy(this.matrix)
          : this.matrixWorld.multiplyMatrices(
              this.parent.matrixWorld,
              this.matrix
            ),
        (this.matrixWorldNeedsUpdate = !1),
        (e = !0));
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) {
      const s = t[i];
      (s.matrixWorldAutoUpdate === !0 || e === !0) && s.updateMatrixWorld(e);
    }
  }
  updateWorldMatrix(e, t) {
    const i = this.parent;
    if (
      (e === !0 &&
        i !== null &&
        i.matrixWorldAutoUpdate === !0 &&
        i.updateWorldMatrix(!0, !1),
      this.matrixAutoUpdate && this.updateMatrix(),
      this.parent === null
        ? this.matrixWorld.copy(this.matrix)
        : this.matrixWorld.multiplyMatrices(
            this.parent.matrixWorld,
            this.matrix
          ),
      t === !0)
    ) {
      const r = this.children;
      for (let s = 0, u = r.length; s < u; s++) {
        const c = r[s];
        c.matrixWorldAutoUpdate === !0 && c.updateWorldMatrix(!1, !0);
      }
    }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string",
      i = {};
    t &&
      ((e = {
        geometries: {},
        materials: {},
        textures: {},
        images: {},
        shapes: {},
        skeletons: {},
        animations: {},
        nodes: {},
      }),
      (i.metadata = {
        version: 4.6,
        type: "Object",
        generator: "Object3D.toJSON",
      }));
    const r = {};
    (r.uuid = this.uuid),
      (r.type = this.type),
      this.name !== "" && (r.name = this.name),
      this.castShadow === !0 && (r.castShadow = !0),
      this.receiveShadow === !0 && (r.receiveShadow = !0),
      this.visible === !1 && (r.visible = !1),
      this.frustumCulled === !1 && (r.frustumCulled = !1),
      this.renderOrder !== 0 && (r.renderOrder = this.renderOrder),
      Object.keys(this.userData).length > 0 && (r.userData = this.userData),
      (r.layers = this.layers.mask),
      (r.matrix = this.matrix.toArray()),
      (r.up = this.up.toArray()),
      this.matrixAutoUpdate === !1 && (r.matrixAutoUpdate = !1),
      this.isInstancedMesh &&
        ((r.type = "InstancedMesh"),
        (r.count = this.count),
        (r.instanceMatrix = this.instanceMatrix.toJSON()),
        this.instanceColor !== null &&
          (r.instanceColor = this.instanceColor.toJSON()));
    function s(c, d) {
      return c[d.uuid] === void 0 && (c[d.uuid] = d.toJSON(e)), d.uuid;
    }
    if (this.isScene)
      this.background &&
        (this.background.isColor
          ? (r.background = this.background.toJSON())
          : this.background.isTexture &&
            (r.background = this.background.toJSON(e).uuid)),
        this.environment &&
          this.environment.isTexture &&
          this.environment.isRenderTargetTexture !== !0 &&
          (r.environment = this.environment.toJSON(e).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      r.geometry = s(e.geometries, this.geometry);
      const c = this.geometry.parameters;
      if (c !== void 0 && c.shapes !== void 0) {
        const d = c.shapes;
        if (Array.isArray(d))
          for (let p = 0, g = d.length; p < g; p++) {
            const _ = d[p];
            s(e.shapes, _);
          }
        else s(e.shapes, d);
      }
    }
    if (
      (this.isSkinnedMesh &&
        ((r.bindMode = this.bindMode),
        (r.bindMatrix = this.bindMatrix.toArray()),
        this.skeleton !== void 0 &&
          (s(e.skeletons, this.skeleton), (r.skeleton = this.skeleton.uuid))),
      this.material !== void 0)
    )
      if (Array.isArray(this.material)) {
        const c = [];
        for (let d = 0, p = this.material.length; d < p; d++)
          c.push(s(e.materials, this.material[d]));
        r.material = c;
      } else r.material = s(e.materials, this.material);
    if (this.children.length > 0) {
      r.children = [];
      for (let c = 0; c < this.children.length; c++)
        r.children.push(this.children[c].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      r.animations = [];
      for (let c = 0; c < this.animations.length; c++) {
        const d = this.animations[c];
        r.animations.push(s(e.animations, d));
      }
    }
    if (t) {
      const c = u(e.geometries),
        d = u(e.materials),
        p = u(e.textures),
        g = u(e.images),
        _ = u(e.shapes),
        x = u(e.skeletons),
        M = u(e.animations),
        E = u(e.nodes);
      c.length > 0 && (i.geometries = c),
        d.length > 0 && (i.materials = d),
        p.length > 0 && (i.textures = p),
        g.length > 0 && (i.images = g),
        _.length > 0 && (i.shapes = _),
        x.length > 0 && (i.skeletons = x),
        M.length > 0 && (i.animations = M),
        E.length > 0 && (i.nodes = E);
    }
    return (i.object = r), i;
    function u(c) {
      const d = [];
      for (const p in c) {
        const g = c[p];
        delete g.metadata, d.push(g);
      }
      return d;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, t = !0) {
    if (
      ((this.name = e.name),
      this.up.copy(e.up),
      this.position.copy(e.position),
      (this.rotation.order = e.rotation.order),
      this.quaternion.copy(e.quaternion),
      this.scale.copy(e.scale),
      this.matrix.copy(e.matrix),
      this.matrixWorld.copy(e.matrixWorld),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
      (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
      (this.layers.mask = e.layers.mask),
      (this.visible = e.visible),
      (this.castShadow = e.castShadow),
      (this.receiveShadow = e.receiveShadow),
      (this.frustumCulled = e.frustumCulled),
      (this.renderOrder = e.renderOrder),
      (this.animations = e.animations.slice()),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      t === !0)
    )
      for (let i = 0; i < e.children.length; i++) {
        const r = e.children[i];
        this.add(r.clone());
      }
    return this;
  }
}
Cn.DEFAULT_UP = new J(0, 1, 0);
Cn.DEFAULT_MATRIX_AUTO_UPDATE = !0;
Cn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const Yi = new J(),
  Rr = new J(),
  N0 = new J(),
  Pr = new J(),
  io = new J(),
  ro = new J(),
  xh = new J(),
  F0 = new J(),
  k0 = new J(),
  z0 = new J();
let fA = !1;
class Ji {
  constructor(e = new J(), t = new J(), i = new J()) {
    (this.a = e), (this.b = t), (this.c = i);
  }
  static getNormal(e, t, i, r) {
    r.subVectors(i, t), Yi.subVectors(e, t), r.cross(Yi);
    const s = r.lengthSq();
    return s > 0 ? r.multiplyScalar(1 / Math.sqrt(s)) : r.set(0, 0, 0);
  }
  static getBarycoord(e, t, i, r, s) {
    Yi.subVectors(r, t), Rr.subVectors(i, t), N0.subVectors(e, t);
    const u = Yi.dot(Yi),
      c = Yi.dot(Rr),
      d = Yi.dot(N0),
      p = Rr.dot(Rr),
      g = Rr.dot(N0),
      _ = u * p - c * c;
    if (_ === 0) return s.set(-2, -1, -1);
    const x = 1 / _,
      M = (p * d - c * g) * x,
      E = (u * g - c * d) * x;
    return s.set(1 - M - E, E, M);
  }
  static containsPoint(e, t, i, r) {
    return (
      this.getBarycoord(e, t, i, r, Pr),
      Pr.x >= 0 && Pr.y >= 0 && Pr.x + Pr.y <= 1
    );
  }
  static getUV(e, t, i, r, s, u, c, d) {
    return (
      fA === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (fA = !0)),
      this.getInterpolation(e, t, i, r, s, u, c, d)
    );
  }
  static getInterpolation(e, t, i, r, s, u, c, d) {
    return (
      this.getBarycoord(e, t, i, r, Pr),
      d.setScalar(0),
      d.addScaledVector(s, Pr.x),
      d.addScaledVector(u, Pr.y),
      d.addScaledVector(c, Pr.z),
      d
    );
  }
  static isFrontFacing(e, t, i, r) {
    return Yi.subVectors(i, t), Rr.subVectors(e, t), Yi.cross(Rr).dot(r) < 0;
  }
  set(e, t, i) {
    return this.a.copy(e), this.b.copy(t), this.c.copy(i), this;
  }
  setFromPointsAndIndices(e, t, i, r) {
    return this.a.copy(e[t]), this.b.copy(e[i]), this.c.copy(e[r]), this;
  }
  setFromAttributeAndIndices(e, t, i, r) {
    return (
      this.a.fromBufferAttribute(e, t),
      this.b.fromBufferAttribute(e, i),
      this.c.fromBufferAttribute(e, r),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }
  getArea() {
    return (
      Yi.subVectors(this.c, this.b),
      Rr.subVectors(this.a, this.b),
      Yi.cross(Rr).length() * 0.5
    );
  }
  getMidpoint(e) {
    return e
      .addVectors(this.a, this.b)
      .add(this.c)
      .multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return Ji.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, t) {
    return Ji.getBarycoord(e, this.a, this.b, this.c, t);
  }
  getUV(e, t, i, r, s) {
    return (
      fA === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (fA = !0)),
      Ji.getInterpolation(e, this.a, this.b, this.c, t, i, r, s)
    );
  }
  getInterpolation(e, t, i, r, s) {
    return Ji.getInterpolation(e, this.a, this.b, this.c, t, i, r, s);
  }
  containsPoint(e) {
    return Ji.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return Ji.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, t) {
    const i = this.a,
      r = this.b,
      s = this.c;
    let u, c;
    io.subVectors(r, i), ro.subVectors(s, i), F0.subVectors(e, i);
    const d = io.dot(F0),
      p = ro.dot(F0);
    if (d <= 0 && p <= 0) return t.copy(i);
    k0.subVectors(e, r);
    const g = io.dot(k0),
      _ = ro.dot(k0);
    if (g >= 0 && _ <= g) return t.copy(r);
    const x = d * _ - g * p;
    if (x <= 0 && d >= 0 && g <= 0)
      return (u = d / (d - g)), t.copy(i).addScaledVector(io, u);
    z0.subVectors(e, s);
    const M = io.dot(z0),
      E = ro.dot(z0);
    if (E >= 0 && M <= E) return t.copy(s);
    const C = M * p - d * E;
    if (C <= 0 && p >= 0 && E <= 0)
      return (c = p / (p - E)), t.copy(i).addScaledVector(ro, c);
    const S = g * E - M * _;
    if (S <= 0 && _ - g >= 0 && M - E >= 0)
      return (
        xh.subVectors(s, r),
        (c = (_ - g) / (_ - g + (M - E))),
        t.copy(r).addScaledVector(xh, c)
      );
    const b = 1 / (S + C + x);
    return (
      (u = C * b),
      (c = x * b),
      t.copy(i).addScaledVector(io, u).addScaledVector(ro, c)
    );
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
let q_ = 0;
class Hs extends zs {
  constructor() {
    super(),
      (this.isMaterial = !0),
      Object.defineProperty(this, "id", { value: q_++ }),
      (this.uuid = mr()),
      (this.name = ""),
      (this.type = "Material"),
      (this.blending = as),
      (this.side = us),
      (this.vertexColors = !1),
      (this.opacity = 1),
      (this.transparent = !1),
      (this.alphaHash = !1),
      (this.blendSrc = e1),
      (this.blendDst = t1),
      (this.blendEquation = _o),
      (this.blendSrcAlpha = null),
      (this.blendDstAlpha = null),
      (this.blendEquationAlpha = null),
      (this.depthFunc = du),
      (this.depthTest = !0),
      (this.depthWrite = !0),
      (this.stencilWriteMask = 255),
      (this.stencilFunc = Q3),
      (this.stencilRef = 0),
      (this.stencilFuncMask = 255),
      (this.stencilFail = C0),
      (this.stencilZFail = C0),
      (this.stencilZPass = C0),
      (this.stencilWrite = !1),
      (this.clippingPlanes = null),
      (this.clipIntersection = !1),
      (this.clipShadows = !1),
      (this.shadowSide = null),
      (this.colorWrite = !0),
      (this.precision = null),
      (this.polygonOffset = !1),
      (this.polygonOffsetFactor = 0),
      (this.polygonOffsetUnits = 0),
      (this.dithering = !1),
      (this.alphaToCoverage = !1),
      (this.premultipliedAlpha = !1),
      (this.forceSinglePass = !1),
      (this.visible = !0),
      (this.toneMapped = !0),
      (this.userData = {}),
      (this.version = 0),
      (this._alphaTest = 0);
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
  }
  onBuild() {}
  onBeforeRender() {}
  onBeforeCompile() {}
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0)
      for (const t in e) {
        const i = e[t];
        if (i === void 0) {
          console.warn(
            `THREE.Material: parameter '${t}' has value of undefined.`
          );
          continue;
        }
        const r = this[t];
        if (r === void 0) {
          console.warn(
            `THREE.Material: '${t}' is not a property of THREE.${this.type}.`
          );
          continue;
        }
        r && r.isColor
          ? r.set(i)
          : r && r.isVector3 && i && i.isVector3
          ? r.copy(i)
          : (this[t] = i);
      }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    t && (e = { textures: {}, images: {} });
    const i = {
      metadata: {
        version: 4.6,
        type: "Material",
        generator: "Material.toJSON",
      },
    };
    (i.uuid = this.uuid),
      (i.type = this.type),
      this.name !== "" && (i.name = this.name),
      this.color && this.color.isColor && (i.color = this.color.getHex()),
      this.roughness !== void 0 && (i.roughness = this.roughness),
      this.metalness !== void 0 && (i.metalness = this.metalness),
      this.sheen !== void 0 && (i.sheen = this.sheen),
      this.sheenColor &&
        this.sheenColor.isColor &&
        (i.sheenColor = this.sheenColor.getHex()),
      this.sheenRoughness !== void 0 &&
        (i.sheenRoughness = this.sheenRoughness),
      this.emissive &&
        this.emissive.isColor &&
        (i.emissive = this.emissive.getHex()),
      this.emissiveIntensity &&
        this.emissiveIntensity !== 1 &&
        (i.emissiveIntensity = this.emissiveIntensity),
      this.specular &&
        this.specular.isColor &&
        (i.specular = this.specular.getHex()),
      this.specularIntensity !== void 0 &&
        (i.specularIntensity = this.specularIntensity),
      this.specularColor &&
        this.specularColor.isColor &&
        (i.specularColor = this.specularColor.getHex()),
      this.shininess !== void 0 && (i.shininess = this.shininess),
      this.clearcoat !== void 0 && (i.clearcoat = this.clearcoat),
      this.clearcoatRoughness !== void 0 &&
        (i.clearcoatRoughness = this.clearcoatRoughness),
      this.clearcoatMap &&
        this.clearcoatMap.isTexture &&
        (i.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
      this.clearcoatRoughnessMap &&
        this.clearcoatRoughnessMap.isTexture &&
        (i.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
      this.clearcoatNormalMap &&
        this.clearcoatNormalMap.isTexture &&
        ((i.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
        (i.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
      this.iridescence !== void 0 && (i.iridescence = this.iridescence),
      this.iridescenceIOR !== void 0 &&
        (i.iridescenceIOR = this.iridescenceIOR),
      this.iridescenceThicknessRange !== void 0 &&
        (i.iridescenceThicknessRange = this.iridescenceThicknessRange),
      this.iridescenceMap &&
        this.iridescenceMap.isTexture &&
        (i.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
      this.iridescenceThicknessMap &&
        this.iridescenceThicknessMap.isTexture &&
        (i.iridescenceThicknessMap =
          this.iridescenceThicknessMap.toJSON(e).uuid),
      this.anisotropy !== void 0 && (i.anisotropy = this.anisotropy),
      this.anisotropyRotation !== void 0 &&
        (i.anisotropyRotation = this.anisotropyRotation),
      this.anisotropyMap &&
        this.anisotropyMap.isTexture &&
        (i.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
      this.map && this.map.isTexture && (i.map = this.map.toJSON(e).uuid),
      this.matcap &&
        this.matcap.isTexture &&
        (i.matcap = this.matcap.toJSON(e).uuid),
      this.alphaMap &&
        this.alphaMap.isTexture &&
        (i.alphaMap = this.alphaMap.toJSON(e).uuid),
      this.lightMap &&
        this.lightMap.isTexture &&
        ((i.lightMap = this.lightMap.toJSON(e).uuid),
        (i.lightMapIntensity = this.lightMapIntensity)),
      this.aoMap &&
        this.aoMap.isTexture &&
        ((i.aoMap = this.aoMap.toJSON(e).uuid),
        (i.aoMapIntensity = this.aoMapIntensity)),
      this.bumpMap &&
        this.bumpMap.isTexture &&
        ((i.bumpMap = this.bumpMap.toJSON(e).uuid),
        (i.bumpScale = this.bumpScale)),
      this.normalMap &&
        this.normalMap.isTexture &&
        ((i.normalMap = this.normalMap.toJSON(e).uuid),
        (i.normalMapType = this.normalMapType),
        (i.normalScale = this.normalScale.toArray())),
      this.displacementMap &&
        this.displacementMap.isTexture &&
        ((i.displacementMap = this.displacementMap.toJSON(e).uuid),
        (i.displacementScale = this.displacementScale),
        (i.displacementBias = this.displacementBias)),
      this.roughnessMap &&
        this.roughnessMap.isTexture &&
        (i.roughnessMap = this.roughnessMap.toJSON(e).uuid),
      this.metalnessMap &&
        this.metalnessMap.isTexture &&
        (i.metalnessMap = this.metalnessMap.toJSON(e).uuid),
      this.emissiveMap &&
        this.emissiveMap.isTexture &&
        (i.emissiveMap = this.emissiveMap.toJSON(e).uuid),
      this.specularMap &&
        this.specularMap.isTexture &&
        (i.specularMap = this.specularMap.toJSON(e).uuid),
      this.specularIntensityMap &&
        this.specularIntensityMap.isTexture &&
        (i.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid),
      this.specularColorMap &&
        this.specularColorMap.isTexture &&
        (i.specularColorMap = this.specularColorMap.toJSON(e).uuid),
      this.envMap &&
        this.envMap.isTexture &&
        ((i.envMap = this.envMap.toJSON(e).uuid),
        this.combine !== void 0 && (i.combine = this.combine)),
      this.envMapIntensity !== void 0 &&
        (i.envMapIntensity = this.envMapIntensity),
      this.reflectivity !== void 0 && (i.reflectivity = this.reflectivity),
      this.refractionRatio !== void 0 &&
        (i.refractionRatio = this.refractionRatio),
      this.gradientMap &&
        this.gradientMap.isTexture &&
        (i.gradientMap = this.gradientMap.toJSON(e).uuid),
      this.transmission !== void 0 && (i.transmission = this.transmission),
      this.transmissionMap &&
        this.transmissionMap.isTexture &&
        (i.transmissionMap = this.transmissionMap.toJSON(e).uuid),
      this.thickness !== void 0 && (i.thickness = this.thickness),
      this.thicknessMap &&
        this.thicknessMap.isTexture &&
        (i.thicknessMap = this.thicknessMap.toJSON(e).uuid),
      this.attenuationDistance !== void 0 &&
        this.attenuationDistance !== 1 / 0 &&
        (i.attenuationDistance = this.attenuationDistance),
      this.attenuationColor !== void 0 &&
        (i.attenuationColor = this.attenuationColor.getHex()),
      this.size !== void 0 && (i.size = this.size),
      this.shadowSide !== null && (i.shadowSide = this.shadowSide),
      this.sizeAttenuation !== void 0 &&
        (i.sizeAttenuation = this.sizeAttenuation),
      this.blending !== as && (i.blending = this.blending),
      this.side !== us && (i.side = this.side),
      this.vertexColors && (i.vertexColors = !0),
      this.opacity < 1 && (i.opacity = this.opacity),
      this.transparent === !0 && (i.transparent = this.transparent),
      (i.depthFunc = this.depthFunc),
      (i.depthTest = this.depthTest),
      (i.depthWrite = this.depthWrite),
      (i.colorWrite = this.colorWrite),
      (i.stencilWrite = this.stencilWrite),
      (i.stencilWriteMask = this.stencilWriteMask),
      (i.stencilFunc = this.stencilFunc),
      (i.stencilRef = this.stencilRef),
      (i.stencilFuncMask = this.stencilFuncMask),
      (i.stencilFail = this.stencilFail),
      (i.stencilZFail = this.stencilZFail),
      (i.stencilZPass = this.stencilZPass),
      this.rotation !== void 0 &&
        this.rotation !== 0 &&
        (i.rotation = this.rotation),
      this.polygonOffset === !0 && (i.polygonOffset = !0),
      this.polygonOffsetFactor !== 0 &&
        (i.polygonOffsetFactor = this.polygonOffsetFactor),
      this.polygonOffsetUnits !== 0 &&
        (i.polygonOffsetUnits = this.polygonOffsetUnits),
      this.linewidth !== void 0 &&
        this.linewidth !== 1 &&
        (i.linewidth = this.linewidth),
      this.dashSize !== void 0 && (i.dashSize = this.dashSize),
      this.gapSize !== void 0 && (i.gapSize = this.gapSize),
      this.scale !== void 0 && (i.scale = this.scale),
      this.dithering === !0 && (i.dithering = !0),
      this.alphaTest > 0 && (i.alphaTest = this.alphaTest),
      this.alphaHash === !0 && (i.alphaHash = this.alphaHash),
      this.alphaToCoverage === !0 && (i.alphaToCoverage = this.alphaToCoverage),
      this.premultipliedAlpha === !0 &&
        (i.premultipliedAlpha = this.premultipliedAlpha),
      this.forceSinglePass === !0 && (i.forceSinglePass = this.forceSinglePass),
      this.wireframe === !0 && (i.wireframe = this.wireframe),
      this.wireframeLinewidth > 1 &&
        (i.wireframeLinewidth = this.wireframeLinewidth),
      this.wireframeLinecap !== "round" &&
        (i.wireframeLinecap = this.wireframeLinecap),
      this.wireframeLinejoin !== "round" &&
        (i.wireframeLinejoin = this.wireframeLinejoin),
      this.flatShading === !0 && (i.flatShading = this.flatShading),
      this.visible === !1 && (i.visible = !1),
      this.toneMapped === !1 && (i.toneMapped = !1),
      this.fog === !1 && (i.fog = !1),
      Object.keys(this.userData).length > 0 && (i.userData = this.userData);
    function r(s) {
      const u = [];
      for (const c in s) {
        const d = s[c];
        delete d.metadata, u.push(d);
      }
      return u;
    }
    if (t) {
      const s = r(e.textures),
        u = r(e.images);
      s.length > 0 && (i.textures = s), u.length > 0 && (i.images = u);
    }
    return i;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.name = e.name),
      (this.blending = e.blending),
      (this.side = e.side),
      (this.vertexColors = e.vertexColors),
      (this.opacity = e.opacity),
      (this.transparent = e.transparent),
      (this.blendSrc = e.blendSrc),
      (this.blendDst = e.blendDst),
      (this.blendEquation = e.blendEquation),
      (this.blendSrcAlpha = e.blendSrcAlpha),
      (this.blendDstAlpha = e.blendDstAlpha),
      (this.blendEquationAlpha = e.blendEquationAlpha),
      (this.depthFunc = e.depthFunc),
      (this.depthTest = e.depthTest),
      (this.depthWrite = e.depthWrite),
      (this.stencilWriteMask = e.stencilWriteMask),
      (this.stencilFunc = e.stencilFunc),
      (this.stencilRef = e.stencilRef),
      (this.stencilFuncMask = e.stencilFuncMask),
      (this.stencilFail = e.stencilFail),
      (this.stencilZFail = e.stencilZFail),
      (this.stencilZPass = e.stencilZPass),
      (this.stencilWrite = e.stencilWrite);
    const t = e.clippingPlanes;
    let i = null;
    if (t !== null) {
      const r = t.length;
      i = new Array(r);
      for (let s = 0; s !== r; ++s) i[s] = t[s].clone();
    }
    return (
      (this.clippingPlanes = i),
      (this.clipIntersection = e.clipIntersection),
      (this.clipShadows = e.clipShadows),
      (this.shadowSide = e.shadowSide),
      (this.colorWrite = e.colorWrite),
      (this.precision = e.precision),
      (this.polygonOffset = e.polygonOffset),
      (this.polygonOffsetFactor = e.polygonOffsetFactor),
      (this.polygonOffsetUnits = e.polygonOffsetUnits),
      (this.dithering = e.dithering),
      (this.alphaTest = e.alphaTest),
      (this.alphaHash = e.alphaHash),
      (this.alphaToCoverage = e.alphaToCoverage),
      (this.premultipliedAlpha = e.premultipliedAlpha),
      (this.forceSinglePass = e.forceSinglePass),
      (this.visible = e.visible),
      (this.toneMapped = e.toneMapped),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
}
const m1 = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  },
  Zi = { h: 0, s: 0, l: 0 },
  hA = { h: 0, s: 0, l: 0 };
function G0(n, e, t) {
  return (
    t < 0 && (t += 1),
    t > 1 && (t -= 1),
    t < 1 / 6
      ? n + (e - n) * 6 * t
      : t < 1 / 2
      ? e
      : t < 2 / 3
      ? n + (e - n) * 6 * (2 / 3 - t)
      : n
  );
}
let Nt = class {
  constructor(e, t, i) {
    return (
      (this.isColor = !0),
      (this.r = 1),
      (this.g = 1),
      (this.b = 1),
      this.set(e, t, i)
    );
  }
  set(e, t, i) {
    if (t === void 0 && i === void 0) {
      const r = e;
      r && r.isColor
        ? this.copy(r)
        : typeof r == "number"
        ? this.setHex(r)
        : typeof r == "string" && this.setStyle(r);
    } else this.setRGB(e, t, i);
    return this;
  }
  setScalar(e) {
    return (this.r = e), (this.g = e), (this.b = e), this;
  }
  setHex(e, t = fn) {
    return (
      (e = Math.floor(e)),
      (this.r = ((e >> 16) & 255) / 255),
      (this.g = ((e >> 8) & 255) / 255),
      (this.b = (e & 255) / 255),
      Qi.toWorkingColorSpace(this, t),
      this
    );
  }
  setRGB(e, t, i, r = Qi.workingColorSpace) {
    return (
      (this.r = e),
      (this.g = t),
      (this.b = i),
      Qi.toWorkingColorSpace(this, r),
      this
    );
  }
  setHSL(e, t, i, r = Qi.workingColorSpace) {
    if (((e = uc(e, 1)), (t = Pn(t, 0, 1)), (i = Pn(i, 0, 1)), t === 0))
      this.r = this.g = this.b = i;
    else {
      const s = i <= 0.5 ? i * (1 + t) : i + t - i * t,
        u = 2 * i - s;
      (this.r = G0(u, s, e + 1 / 3)),
        (this.g = G0(u, s, e)),
        (this.b = G0(u, s, e - 1 / 3));
    }
    return Qi.toWorkingColorSpace(this, r), this;
  }
  setStyle(e, t = fn) {
    function i(s) {
      s !== void 0 &&
        parseFloat(s) < 1 &&
        console.warn(
          "THREE.Color: Alpha component of " + e + " will be ignored."
        );
    }
    let r;
    if ((r = /^(\w+)\(([^\)]*)\)/.exec(e))) {
      let s;
      const u = r[1],
        c = r[2];
      switch (u) {
        case "rgb":
        case "rgba":
          if (
            (s =
              /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setRGB(
                Math.min(255, parseInt(s[1], 10)) / 255,
                Math.min(255, parseInt(s[2], 10)) / 255,
                Math.min(255, parseInt(s[3], 10)) / 255,
                t
              )
            );
          if (
            (s =
              /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setRGB(
                Math.min(100, parseInt(s[1], 10)) / 100,
                Math.min(100, parseInt(s[2], 10)) / 100,
                Math.min(100, parseInt(s[3], 10)) / 100,
                t
              )
            );
          break;
        case "hsl":
        case "hsla":
          if (
            (s =
              /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setHSL(
                parseFloat(s[1]) / 360,
                parseFloat(s[2]) / 100,
                parseFloat(s[3]) / 100,
                t
              )
            );
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + e);
      }
    } else if ((r = /^\#([A-Fa-f\d]+)$/.exec(e))) {
      const s = r[1],
        u = s.length;
      if (u === 3)
        return this.setRGB(
          parseInt(s.charAt(0), 16) / 15,
          parseInt(s.charAt(1), 16) / 15,
          parseInt(s.charAt(2), 16) / 15,
          t
        );
      if (u === 6) return this.setHex(parseInt(s, 16), t);
      console.warn("THREE.Color: Invalid hex color " + e);
    } else if (e && e.length > 0) return this.setColorName(e, t);
    return this;
  }
  setColorName(e, t = fn) {
    const i = m1[e.toLowerCase()];
    return (
      i !== void 0
        ? this.setHex(i, t)
        : console.warn("THREE.Color: Unknown color " + e),
      this
    );
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
  }
  copySRGBToLinear(e) {
    return (this.r = To(e.r)), (this.g = To(e.g)), (this.b = To(e.b)), this;
  }
  copyLinearToSRGB(e) {
    return (this.r = P0(e.r)), (this.g = P0(e.g)), (this.b = P0(e.b)), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(e = fn) {
    return (
      Qi.fromWorkingColorSpace(Xn.copy(this), e),
      Math.round(Pn(Xn.r * 255, 0, 255)) * 65536 +
        Math.round(Pn(Xn.g * 255, 0, 255)) * 256 +
        Math.round(Pn(Xn.b * 255, 0, 255))
    );
  }
  getHexString(e = fn) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, t = Qi.workingColorSpace) {
    Qi.fromWorkingColorSpace(Xn.copy(this), t);
    const i = Xn.r,
      r = Xn.g,
      s = Xn.b,
      u = Math.max(i, r, s),
      c = Math.min(i, r, s);
    let d, p;
    const g = (c + u) / 2;
    if (c === u) (d = 0), (p = 0);
    else {
      const _ = u - c;
      switch (((p = g <= 0.5 ? _ / (u + c) : _ / (2 - u - c)), u)) {
        case i:
          d = (r - s) / _ + (r < s ? 6 : 0);
          break;
        case r:
          d = (s - i) / _ + 2;
          break;
        case s:
          d = (i - r) / _ + 4;
          break;
      }
      d /= 6;
    }
    return (e.h = d), (e.s = p), (e.l = g), e;
  }
  getRGB(e, t = Qi.workingColorSpace) {
    return (
      Qi.fromWorkingColorSpace(Xn.copy(this), t),
      (e.r = Xn.r),
      (e.g = Xn.g),
      (e.b = Xn.b),
      e
    );
  }
  getStyle(e = fn) {
    Qi.fromWorkingColorSpace(Xn.copy(this), e);
    const t = Xn.r,
      i = Xn.g,
      r = Xn.b;
    return e !== fn
      ? `color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`
      : `rgb(${Math.round(t * 255)},${Math.round(i * 255)},${Math.round(
          r * 255
        )})`;
  }
  offsetHSL(e, t, i) {
    return (
      this.getHSL(Zi),
      (Zi.h += e),
      (Zi.s += t),
      (Zi.l += i),
      this.setHSL(Zi.h, Zi.s, Zi.l),
      this
    );
  }
  add(e) {
    return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
  }
  addColors(e, t) {
    return (
      (this.r = e.r + t.r), (this.g = e.g + t.g), (this.b = e.b + t.b), this
    );
  }
  addScalar(e) {
    return (this.r += e), (this.g += e), (this.b += e), this;
  }
  sub(e) {
    return (
      (this.r = Math.max(0, this.r - e.r)),
      (this.g = Math.max(0, this.g - e.g)),
      (this.b = Math.max(0, this.b - e.b)),
      this
    );
  }
  multiply(e) {
    return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
  }
  multiplyScalar(e) {
    return (this.r *= e), (this.g *= e), (this.b *= e), this;
  }
  lerp(e, t) {
    return (
      (this.r += (e.r - this.r) * t),
      (this.g += (e.g - this.g) * t),
      (this.b += (e.b - this.b) * t),
      this
    );
  }
  lerpColors(e, t, i) {
    return (
      (this.r = e.r + (t.r - e.r) * i),
      (this.g = e.g + (t.g - e.g) * i),
      (this.b = e.b + (t.b - e.b) * i),
      this
    );
  }
  lerpHSL(e, t) {
    this.getHSL(Zi), e.getHSL(hA);
    const i = _a(Zi.h, hA.h, t),
      r = _a(Zi.s, hA.s, t),
      s = _a(Zi.l, hA.l, t);
    return this.setHSL(i, r, s), this;
  }
  setFromVector3(e) {
    return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
  }
  applyMatrix3(e) {
    const t = this.r,
      i = this.g,
      r = this.b,
      s = e.elements;
    return (
      (this.r = s[0] * t + s[3] * i + s[6] * r),
      (this.g = s[1] * t + s[4] * i + s[7] * r),
      (this.b = s[2] * t + s[5] * i + s[8] * r),
      this
    );
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, t = 0) {
    return (this.r = e[t]), (this.g = e[t + 1]), (this.b = e[t + 2]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e;
  }
  fromBufferAttribute(e, t) {
    return (
      (this.r = e.getX(t)), (this.g = e.getY(t)), (this.b = e.getZ(t)), this
    );
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
};
const Xn = new Nt();
Nt.NAMES = m1;
class Va extends Hs {
  constructor(e) {
    super(),
      (this.isMeshBasicMaterial = !0),
      (this.type = "MeshBasicMaterial"),
      (this.color = new Nt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Vl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const wn = new J(),
  dA = new ke();
class mn {
  constructor(e, t, i = !1) {
    if (Array.isArray(e))
      throw new TypeError(
        "THREE.BufferAttribute: array should be a Typed Array."
      );
    (this.isBufferAttribute = !0),
      (this.name = ""),
      (this.array = e),
      (this.itemSize = t),
      (this.count = e !== void 0 ? e.length / t : 0),
      (this.normalized = i),
      (this.usage = vu),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.gpuType = ss),
      (this.version = 0);
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.array = new e.array.constructor(e.array)),
      (this.itemSize = e.itemSize),
      (this.count = e.count),
      (this.normalized = e.normalized),
      (this.usage = e.usage),
      (this.gpuType = e.gpuType),
      this
    );
  }
  copyAt(e, t, i) {
    (e *= this.itemSize), (i *= t.itemSize);
    for (let r = 0, s = this.itemSize; r < s; r++)
      this.array[e + r] = t.array[i + r];
    return this;
  }
  copyArray(e) {
    return this.array.set(e), this;
  }
  applyMatrix3(e) {
    if (this.itemSize === 2)
      for (let t = 0, i = this.count; t < i; t++)
        dA.fromBufferAttribute(this, t),
          dA.applyMatrix3(e),
          this.setXY(t, dA.x, dA.y);
    else if (this.itemSize === 3)
      for (let t = 0, i = this.count; t < i; t++)
        wn.fromBufferAttribute(this, t),
          wn.applyMatrix3(e),
          this.setXYZ(t, wn.x, wn.y, wn.z);
    return this;
  }
  applyMatrix4(e) {
    for (let t = 0, i = this.count; t < i; t++)
      wn.fromBufferAttribute(this, t),
        wn.applyMatrix4(e),
        this.setXYZ(t, wn.x, wn.y, wn.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, i = this.count; t < i; t++)
      wn.fromBufferAttribute(this, t),
        wn.applyNormalMatrix(e),
        this.setXYZ(t, wn.x, wn.y, wn.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, i = this.count; t < i; t++)
      wn.fromBufferAttribute(this, t),
        wn.transformDirection(e),
        this.setXYZ(t, wn.x, wn.y, wn.z);
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  getComponent(e, t) {
    let i = this.array[e * this.itemSize + t];
    return this.normalized && (i = pr(i, this.array)), i;
  }
  setComponent(e, t, i) {
    return (
      this.normalized && (i = on(i, this.array)),
      (this.array[e * this.itemSize + t] = i),
      this
    );
  }
  getX(e) {
    let t = this.array[e * this.itemSize];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  setX(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize] = t),
      this
    );
  }
  getY(e) {
    let t = this.array[e * this.itemSize + 1];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  setY(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 1] = t),
      this
    );
  }
  getZ(e) {
    let t = this.array[e * this.itemSize + 2];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  setZ(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 2] = t),
      this
    );
  }
  getW(e) {
    let t = this.array[e * this.itemSize + 3];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  setW(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 3] = t),
      this
    );
  }
  setXY(e, t, i) {
    return (
      (e *= this.itemSize),
      this.normalized && ((t = on(t, this.array)), (i = on(i, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      this
    );
  }
  setXYZ(e, t, i, r) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      (this.array[e + 2] = r),
      this
    );
  }
  setXYZW(e, t, i, r, s) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array)),
        (s = on(s, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      (this.array[e + 2] = r),
      (this.array[e + 3] = s),
      this
    );
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized,
    };
    return (
      this.name !== "" && (e.name = this.name),
      this.usage !== vu && (e.usage = this.usage),
      (this.updateRange.offset !== 0 || this.updateRange.count !== -1) &&
        (e.updateRange = this.updateRange),
      e
    );
  }
}
class g1 extends mn {
  constructor(e, t, i) {
    super(new Uint16Array(e), t, i);
  }
}
class _1 extends mn {
  constructor(e, t, i) {
    super(new Uint32Array(e), t, i);
  }
}
class Kt extends mn {
  constructor(e, t, i) {
    super(new Float32Array(e), t, i);
  }
}
let B_ = 0;
const Bi = new dn(),
  H0 = new Cn(),
  so = new J(),
  wi = new Gs(),
  sa = new Gs(),
  Bn = new J();
class cn extends zs {
  constructor() {
    super(),
      (this.isBufferGeometry = !0),
      Object.defineProperty(this, "id", { value: B_++ }),
      (this.uuid = mr()),
      (this.name = ""),
      (this.type = "BufferGeometry"),
      (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.morphTargetsRelative = !1),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null),
      (this.drawRange = { start: 0, count: 1 / 0 }),
      (this.userData = {});
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return (
      Array.isArray(e)
        ? (this.index = new (c1(e) ? _1 : g1)(e, 1))
        : (this.index = e),
      this
    );
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, t) {
    return (this.attributes[e] = t), this;
  }
  deleteAttribute(e) {
    return delete this.attributes[e], this;
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, t, i = 0) {
    this.groups.push({ start: e, count: t, materialIndex: i });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, t) {
    (this.drawRange.start = e), (this.drawRange.count = t);
  }
  applyMatrix4(e) {
    const t = this.attributes.position;
    t !== void 0 && (t.applyMatrix4(e), (t.needsUpdate = !0));
    const i = this.attributes.normal;
    if (i !== void 0) {
      const s = new Gt().getNormalMatrix(e);
      i.applyNormalMatrix(s), (i.needsUpdate = !0);
    }
    const r = this.attributes.tangent;
    return (
      r !== void 0 && (r.transformDirection(e), (r.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  applyQuaternion(e) {
    return Bi.makeRotationFromQuaternion(e), this.applyMatrix4(Bi), this;
  }
  rotateX(e) {
    return Bi.makeRotationX(e), this.applyMatrix4(Bi), this;
  }
  rotateY(e) {
    return Bi.makeRotationY(e), this.applyMatrix4(Bi), this;
  }
  rotateZ(e) {
    return Bi.makeRotationZ(e), this.applyMatrix4(Bi), this;
  }
  translate(e, t, i) {
    return Bi.makeTranslation(e, t, i), this.applyMatrix4(Bi), this;
  }
  scale(e, t, i) {
    return Bi.makeScale(e, t, i), this.applyMatrix4(Bi), this;
  }
  lookAt(e) {
    return H0.lookAt(e), H0.updateMatrix(), this.applyMatrix4(H0.matrix), this;
  }
  center() {
    return (
      this.computeBoundingBox(),
      this.boundingBox.getCenter(so).negate(),
      this.translate(so.x, so.y, so.z),
      this
    );
  }
  setFromPoints(e) {
    const t = [];
    for (let i = 0, r = e.length; i < r; i++) {
      const s = e[i];
      t.push(s.x, s.y, s.z || 0);
    }
    return this.setAttribute("position", new Kt(t, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new Gs());
    const e = this.attributes.position,
      t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingBox.set(
          new J(-1 / 0, -1 / 0, -1 / 0),
          new J(1 / 0, 1 / 0, 1 / 0)
        );
      return;
    }
    if (e !== void 0) {
      if ((this.boundingBox.setFromBufferAttribute(e), t))
        for (let i = 0, r = t.length; i < r; i++) {
          const s = t[i];
          wi.setFromBufferAttribute(s),
            this.morphTargetsRelative
              ? (Bn.addVectors(this.boundingBox.min, wi.min),
                this.boundingBox.expandByPoint(Bn),
                Bn.addVectors(this.boundingBox.max, wi.max),
                this.boundingBox.expandByPoint(Bn))
              : (this.boundingBox.expandByPoint(wi.min),
                this.boundingBox.expandByPoint(wi.max));
        }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) ||
      isNaN(this.boundingBox.min.y) ||
      isNaN(this.boundingBox.min.z)) &&
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
        this
      );
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new Go());
    const e = this.attributes.position,
      t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingSphere.set(new J(), 1 / 0);
      return;
    }
    if (e) {
      const i = this.boundingSphere.center;
      if ((wi.setFromBufferAttribute(e), t))
        for (let s = 0, u = t.length; s < u; s++) {
          const c = t[s];
          sa.setFromBufferAttribute(c),
            this.morphTargetsRelative
              ? (Bn.addVectors(wi.min, sa.min),
                wi.expandByPoint(Bn),
                Bn.addVectors(wi.max, sa.max),
                wi.expandByPoint(Bn))
              : (wi.expandByPoint(sa.min), wi.expandByPoint(sa.max));
        }
      wi.getCenter(i);
      let r = 0;
      for (let s = 0, u = e.count; s < u; s++)
        Bn.fromBufferAttribute(e, s),
          (r = Math.max(r, i.distanceToSquared(Bn)));
      if (t)
        for (let s = 0, u = t.length; s < u; s++) {
          const c = t[s],
            d = this.morphTargetsRelative;
          for (let p = 0, g = c.count; p < g; p++)
            Bn.fromBufferAttribute(c, p),
              d && (so.fromBufferAttribute(e, p), Bn.add(so)),
              (r = Math.max(r, i.distanceToSquared(Bn)));
        }
      (this.boundingSphere.radius = Math.sqrt(r)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
            this
          );
    }
  }
  computeTangents() {
    const e = this.index,
      t = this.attributes;
    if (
      e === null ||
      t.position === void 0 ||
      t.normal === void 0 ||
      t.uv === void 0
    ) {
      console.error(
        "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
      );
      return;
    }
    const i = e.array,
      r = t.position.array,
      s = t.normal.array,
      u = t.uv.array,
      c = r.length / 3;
    this.hasAttribute("tangent") === !1 &&
      this.setAttribute("tangent", new mn(new Float32Array(4 * c), 4));
    const d = this.getAttribute("tangent").array,
      p = [],
      g = [];
    for (let O = 0; O < c; O++) (p[O] = new J()), (g[O] = new J());
    const _ = new J(),
      x = new J(),
      M = new J(),
      E = new ke(),
      C = new ke(),
      S = new ke(),
      b = new J(),
      L = new J();
    function T(O, F, $) {
      _.fromArray(r, O * 3),
        x.fromArray(r, F * 3),
        M.fromArray(r, $ * 3),
        E.fromArray(u, O * 2),
        C.fromArray(u, F * 2),
        S.fromArray(u, $ * 2),
        x.sub(_),
        M.sub(_),
        C.sub(E),
        S.sub(E);
      const V = 1 / (C.x * S.y - S.x * C.y);
      isFinite(V) &&
        (b
          .copy(x)
          .multiplyScalar(S.y)
          .addScaledVector(M, -C.y)
          .multiplyScalar(V),
        L.copy(M)
          .multiplyScalar(C.x)
          .addScaledVector(x, -S.x)
          .multiplyScalar(V),
        p[O].add(b),
        p[F].add(b),
        p[$].add(b),
        g[O].add(L),
        g[F].add(L),
        g[$].add(L));
    }
    let R = this.groups;
    R.length === 0 && (R = [{ start: 0, count: i.length }]);
    for (let O = 0, F = R.length; O < F; ++O) {
      const $ = R[O],
        V = $.start,
        Q = $.count;
      for (let k = V, te = V + Q; k < te; k += 3)
        T(i[k + 0], i[k + 1], i[k + 2]);
    }
    const U = new J(),
      q = new J(),
      I = new J(),
      N = new J();
    function D(O) {
      I.fromArray(s, O * 3), N.copy(I);
      const F = p[O];
      U.copy(F),
        U.sub(I.multiplyScalar(I.dot(F))).normalize(),
        q.crossVectors(N, F);
      const V = q.dot(g[O]) < 0 ? -1 : 1;
      (d[O * 4] = U.x),
        (d[O * 4 + 1] = U.y),
        (d[O * 4 + 2] = U.z),
        (d[O * 4 + 3] = V);
    }
    for (let O = 0, F = R.length; O < F; ++O) {
      const $ = R[O],
        V = $.start,
        Q = $.count;
      for (let k = V, te = V + Q; k < te; k += 3)
        D(i[k + 0]), D(i[k + 1]), D(i[k + 2]);
    }
  }
  computeVertexNormals() {
    const e = this.index,
      t = this.getAttribute("position");
    if (t !== void 0) {
      let i = this.getAttribute("normal");
      if (i === void 0)
        (i = new mn(new Float32Array(t.count * 3), 3)),
          this.setAttribute("normal", i);
      else for (let x = 0, M = i.count; x < M; x++) i.setXYZ(x, 0, 0, 0);
      const r = new J(),
        s = new J(),
        u = new J(),
        c = new J(),
        d = new J(),
        p = new J(),
        g = new J(),
        _ = new J();
      if (e)
        for (let x = 0, M = e.count; x < M; x += 3) {
          const E = e.getX(x + 0),
            C = e.getX(x + 1),
            S = e.getX(x + 2);
          r.fromBufferAttribute(t, E),
            s.fromBufferAttribute(t, C),
            u.fromBufferAttribute(t, S),
            g.subVectors(u, s),
            _.subVectors(r, s),
            g.cross(_),
            c.fromBufferAttribute(i, E),
            d.fromBufferAttribute(i, C),
            p.fromBufferAttribute(i, S),
            c.add(g),
            d.add(g),
            p.add(g),
            i.setXYZ(E, c.x, c.y, c.z),
            i.setXYZ(C, d.x, d.y, d.z),
            i.setXYZ(S, p.x, p.y, p.z);
        }
      else
        for (let x = 0, M = t.count; x < M; x += 3)
          r.fromBufferAttribute(t, x + 0),
            s.fromBufferAttribute(t, x + 1),
            u.fromBufferAttribute(t, x + 2),
            g.subVectors(u, s),
            _.subVectors(r, s),
            g.cross(_),
            i.setXYZ(x + 0, g.x, g.y, g.z),
            i.setXYZ(x + 1, g.x, g.y, g.z),
            i.setXYZ(x + 2, g.x, g.y, g.z);
      this.normalizeNormals(), (i.needsUpdate = !0);
    }
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let t = 0, i = e.count; t < i; t++)
      Bn.fromBufferAttribute(e, t),
        Bn.normalize(),
        e.setXYZ(t, Bn.x, Bn.y, Bn.z);
  }
  toNonIndexed() {
    function e(c, d) {
      const p = c.array,
        g = c.itemSize,
        _ = c.normalized,
        x = new p.constructor(d.length * g);
      let M = 0,
        E = 0;
      for (let C = 0, S = d.length; C < S; C++) {
        c.isInterleavedBufferAttribute
          ? (M = d[C] * c.data.stride + c.offset)
          : (M = d[C] * g);
        for (let b = 0; b < g; b++) x[E++] = p[M++];
      }
      return new mn(x, g, _);
    }
    if (this.index === null)
      return (
        console.warn(
          "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
        ),
        this
      );
    const t = new cn(),
      i = this.index.array,
      r = this.attributes;
    for (const c in r) {
      const d = r[c],
        p = e(d, i);
      t.setAttribute(c, p);
    }
    const s = this.morphAttributes;
    for (const c in s) {
      const d = [],
        p = s[c];
      for (let g = 0, _ = p.length; g < _; g++) {
        const x = p[g],
          M = e(x, i);
        d.push(M);
      }
      t.morphAttributes[c] = d;
    }
    t.morphTargetsRelative = this.morphTargetsRelative;
    const u = this.groups;
    for (let c = 0, d = u.length; c < d; c++) {
      const p = u[c];
      t.addGroup(p.start, p.count, p.materialIndex);
    }
    return t;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON",
      },
    };
    if (
      ((e.uuid = this.uuid),
      (e.type = this.type),
      this.name !== "" && (e.name = this.name),
      Object.keys(this.userData).length > 0 && (e.userData = this.userData),
      this.parameters !== void 0)
    ) {
      const d = this.parameters;
      for (const p in d) d[p] !== void 0 && (e[p] = d[p]);
      return e;
    }
    e.data = { attributes: {} };
    const t = this.index;
    t !== null &&
      (e.data.index = {
        type: t.array.constructor.name,
        array: Array.prototype.slice.call(t.array),
      });
    const i = this.attributes;
    for (const d in i) {
      const p = i[d];
      e.data.attributes[d] = p.toJSON(e.data);
    }
    const r = {};
    let s = !1;
    for (const d in this.morphAttributes) {
      const p = this.morphAttributes[d],
        g = [];
      for (let _ = 0, x = p.length; _ < x; _++) {
        const M = p[_];
        g.push(M.toJSON(e.data));
      }
      g.length > 0 && ((r[d] = g), (s = !0));
    }
    s &&
      ((e.data.morphAttributes = r),
      (e.data.morphTargetsRelative = this.morphTargetsRelative));
    const u = this.groups;
    u.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(u)));
    const c = this.boundingSphere;
    return (
      c !== null &&
        (e.data.boundingSphere = {
          center: c.center.toArray(),
          radius: c.radius,
        }),
      e
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null);
    const t = {};
    this.name = e.name;
    const i = e.index;
    i !== null && this.setIndex(i.clone(t));
    const r = e.attributes;
    for (const p in r) {
      const g = r[p];
      this.setAttribute(p, g.clone(t));
    }
    const s = e.morphAttributes;
    for (const p in s) {
      const g = [],
        _ = s[p];
      for (let x = 0, M = _.length; x < M; x++) g.push(_[x].clone(t));
      this.morphAttributes[p] = g;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const u = e.groups;
    for (let p = 0, g = u.length; p < g; p++) {
      const _ = u[p];
      this.addGroup(_.start, _.count, _.materialIndex);
    }
    const c = e.boundingBox;
    c !== null && (this.boundingBox = c.clone());
    const d = e.boundingSphere;
    return (
      d !== null && (this.boundingSphere = d.clone()),
      (this.drawRange.start = e.drawRange.start),
      (this.drawRange.count = e.drawRange.count),
      (this.userData = e.userData),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const yh = new dn(),
  Ss = new cc(),
  pA = new Go(),
  bh = new J(),
  oo = new J(),
  ao = new J(),
  Ao = new J(),
  V0 = new J(),
  mA = new J(),
  gA = new ke(),
  _A = new ke(),
  vA = new ke(),
  Mh = new J(),
  Sh = new J(),
  Eh = new J(),
  xA = new J(),
  yA = new J();
class Dn extends Cn {
  constructor(e = new cn(), t = new Va()) {
    super(),
      (this.isMesh = !0),
      (this.type = "Mesh"),
      (this.geometry = e),
      (this.material = t),
      this.updateMorphTargets();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      e.morphTargetInfluences !== void 0 &&
        (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
      e.morphTargetDictionary !== void 0 &&
        (this.morphTargetDictionary = Object.assign(
          {},
          e.morphTargetDictionary
        )),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes,
      i = Object.keys(t);
    if (i.length > 0) {
      const r = t[i[0]];
      if (r !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let s = 0, u = r.length; s < u; s++) {
          const c = r[s].name || String(s);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[c] = s);
        }
      }
    }
  }
  getVertexPosition(e, t) {
    const i = this.geometry,
      r = i.attributes.position,
      s = i.morphAttributes.position,
      u = i.morphTargetsRelative;
    t.fromBufferAttribute(r, e);
    const c = this.morphTargetInfluences;
    if (s && c) {
      mA.set(0, 0, 0);
      for (let d = 0, p = s.length; d < p; d++) {
        const g = c[d],
          _ = s[d];
        g !== 0 &&
          (V0.fromBufferAttribute(_, e),
          u ? mA.addScaledVector(V0, g) : mA.addScaledVector(V0.sub(t), g));
      }
      t.add(mA);
    }
    return t;
  }
  raycast(e, t) {
    const i = this.geometry,
      r = this.material,
      s = this.matrixWorld;
    r !== void 0 &&
      (i.boundingSphere === null && i.computeBoundingSphere(),
      pA.copy(i.boundingSphere),
      pA.applyMatrix4(s),
      Ss.copy(e.ray).recast(e.near),
      !(
        pA.containsPoint(Ss.origin) === !1 &&
        (Ss.intersectSphere(pA, bh) === null ||
          Ss.origin.distanceToSquared(bh) > (e.far - e.near) ** 2)
      ) &&
        (yh.copy(s).invert(),
        Ss.copy(e.ray).applyMatrix4(yh),
        !(i.boundingBox !== null && Ss.intersectsBox(i.boundingBox) === !1) &&
          this._computeIntersections(e, t, Ss)));
  }
  _computeIntersections(e, t, i) {
    let r;
    const s = this.geometry,
      u = this.material,
      c = s.index,
      d = s.attributes.position,
      p = s.attributes.uv,
      g = s.attributes.uv1,
      _ = s.attributes.normal,
      x = s.groups,
      M = s.drawRange;
    if (c !== null)
      if (Array.isArray(u))
        for (let E = 0, C = x.length; E < C; E++) {
          const S = x[E],
            b = u[S.materialIndex],
            L = Math.max(S.start, M.start),
            T = Math.min(
              c.count,
              Math.min(S.start + S.count, M.start + M.count)
            );
          for (let R = L, U = T; R < U; R += 3) {
            const q = c.getX(R),
              I = c.getX(R + 1),
              N = c.getX(R + 2);
            (r = bA(this, b, e, i, p, g, _, q, I, N)),
              r &&
                ((r.faceIndex = Math.floor(R / 3)),
                (r.face.materialIndex = S.materialIndex),
                t.push(r));
          }
        }
      else {
        const E = Math.max(0, M.start),
          C = Math.min(c.count, M.start + M.count);
        for (let S = E, b = C; S < b; S += 3) {
          const L = c.getX(S),
            T = c.getX(S + 1),
            R = c.getX(S + 2);
          (r = bA(this, u, e, i, p, g, _, L, T, R)),
            r && ((r.faceIndex = Math.floor(S / 3)), t.push(r));
        }
      }
    else if (d !== void 0)
      if (Array.isArray(u))
        for (let E = 0, C = x.length; E < C; E++) {
          const S = x[E],
            b = u[S.materialIndex],
            L = Math.max(S.start, M.start),
            T = Math.min(
              d.count,
              Math.min(S.start + S.count, M.start + M.count)
            );
          for (let R = L, U = T; R < U; R += 3) {
            const q = R,
              I = R + 1,
              N = R + 2;
            (r = bA(this, b, e, i, p, g, _, q, I, N)),
              r &&
                ((r.faceIndex = Math.floor(R / 3)),
                (r.face.materialIndex = S.materialIndex),
                t.push(r));
          }
        }
      else {
        const E = Math.max(0, M.start),
          C = Math.min(d.count, M.start + M.count);
        for (let S = E, b = C; S < b; S += 3) {
          const L = S,
            T = S + 1,
            R = S + 2;
          (r = bA(this, u, e, i, p, g, _, L, T, R)),
            r && ((r.faceIndex = Math.floor(S / 3)), t.push(r));
        }
      }
  }
}
function N_(n, e, t, i, r, s, u, c) {
  let d;
  if (
    (e.side === ci
      ? (d = i.intersectTriangle(u, s, r, !0, c))
      : (d = i.intersectTriangle(r, s, u, e.side === us, c)),
    d === null)
  )
    return null;
  yA.copy(c), yA.applyMatrix4(n.matrixWorld);
  const p = t.ray.origin.distanceTo(yA);
  return p < t.near || p > t.far
    ? null
    : { distance: p, point: yA.clone(), object: n };
}
function bA(n, e, t, i, r, s, u, c, d, p) {
  n.getVertexPosition(c, oo),
    n.getVertexPosition(d, ao),
    n.getVertexPosition(p, Ao);
  const g = N_(n, e, t, i, oo, ao, Ao, xA);
  if (g) {
    r &&
      (gA.fromBufferAttribute(r, c),
      _A.fromBufferAttribute(r, d),
      vA.fromBufferAttribute(r, p),
      (g.uv = Ji.getInterpolation(xA, oo, ao, Ao, gA, _A, vA, new ke()))),
      s &&
        (gA.fromBufferAttribute(s, c),
        _A.fromBufferAttribute(s, d),
        vA.fromBufferAttribute(s, p),
        (g.uv1 = Ji.getInterpolation(xA, oo, ao, Ao, gA, _A, vA, new ke())),
        (g.uv2 = g.uv1)),
      u &&
        (Mh.fromBufferAttribute(u, c),
        Sh.fromBufferAttribute(u, d),
        Eh.fromBufferAttribute(u, p),
        (g.normal = Ji.getInterpolation(xA, oo, ao, Ao, Mh, Sh, Eh, new J())),
        g.normal.dot(i.direction) > 0 && g.normal.multiplyScalar(-1));
    const _ = { a: c, b: d, c: p, normal: new J(), materialIndex: 0 };
    Ji.getNormal(oo, ao, Ao, _.normal), (g.face = _);
  }
  return g;
}
class Wa extends cn {
  constructor(e = 1, t = 1, i = 1, r = 1, s = 1, u = 1) {
    super(),
      (this.type = "BoxGeometry"),
      (this.parameters = {
        width: e,
        height: t,
        depth: i,
        widthSegments: r,
        heightSegments: s,
        depthSegments: u,
      });
    const c = this;
    (r = Math.floor(r)), (s = Math.floor(s)), (u = Math.floor(u));
    const d = [],
      p = [],
      g = [],
      _ = [];
    let x = 0,
      M = 0;
    E("z", "y", "x", -1, -1, i, t, e, u, s, 0),
      E("z", "y", "x", 1, -1, i, t, -e, u, s, 1),
      E("x", "z", "y", 1, 1, e, i, t, r, u, 2),
      E("x", "z", "y", 1, -1, e, i, -t, r, u, 3),
      E("x", "y", "z", 1, -1, e, t, i, r, s, 4),
      E("x", "y", "z", -1, -1, e, t, -i, r, s, 5),
      this.setIndex(d),
      this.setAttribute("position", new Kt(p, 3)),
      this.setAttribute("normal", new Kt(g, 3)),
      this.setAttribute("uv", new Kt(_, 2));
    function E(C, S, b, L, T, R, U, q, I, N, D) {
      const O = R / I,
        F = U / N,
        $ = R / 2,
        V = U / 2,
        Q = q / 2,
        k = I + 1,
        te = N + 1;
      let ee = 0,
        se = 0;
      const pe = new J();
      for (let de = 0; de < te; de++) {
        const oe = de * F - V;
        for (let he = 0; he < k; he++) {
          const Te = he * O - $;
          (pe[C] = Te * L),
            (pe[S] = oe * T),
            (pe[b] = Q),
            p.push(pe.x, pe.y, pe.z),
            (pe[C] = 0),
            (pe[S] = 0),
            (pe[b] = q > 0 ? 1 : -1),
            g.push(pe.x, pe.y, pe.z),
            _.push(he / I),
            _.push(1 - de / N),
            (ee += 1);
        }
      }
      for (let de = 0; de < N; de++)
        for (let oe = 0; oe < I; oe++) {
          const he = x + oe + k * de,
            Te = x + oe + k * (de + 1),
            Pe = x + (oe + 1) + k * (de + 1),
            Oe = x + (oe + 1) + k * de;
          d.push(he, Te, Oe), d.push(Te, Pe, Oe), (se += 6);
        }
      c.addGroup(M, se, D), (M += se), (x += ee);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Wa(
      e.width,
      e.height,
      e.depth,
      e.widthSegments,
      e.heightSegments,
      e.depthSegments
    );
  }
}
function Oo(n) {
  const e = {};
  for (const t in n) {
    e[t] = {};
    for (const i in n[t]) {
      const r = n[t][i];
      r &&
      (r.isColor ||
        r.isMatrix3 ||
        r.isMatrix4 ||
        r.isVector2 ||
        r.isVector3 ||
        r.isVector4 ||
        r.isTexture ||
        r.isQuaternion)
        ? r.isRenderTargetTexture
          ? (console.warn(
              "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
            ),
            (e[t][i] = null))
          : (e[t][i] = r.clone())
        : Array.isArray(r)
        ? (e[t][i] = r.slice())
        : (e[t][i] = r);
    }
  }
  return e;
}
function ri(n) {
  const e = {};
  for (let t = 0; t < n.length; t++) {
    const i = Oo(n[t]);
    for (const r in i) e[r] = i[r];
  }
  return e;
}
function F_(n) {
  const e = [];
  for (let t = 0; t < n.length; t++) e.push(n[t].clone());
  return e;
}
function v1(n) {
  return n.getRenderTarget() === null ? n.outputColorSpace : xr;
}
const x1 = { clone: Oo, merge: ri };
var k_ = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,
  z_ = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class or extends Hs {
  constructor(e) {
    super(),
      (this.isShaderMaterial = !0),
      (this.type = "ShaderMaterial"),
      (this.defines = {}),
      (this.uniforms = {}),
      (this.uniformsGroups = []),
      (this.vertexShader = k_),
      (this.fragmentShader = z_),
      (this.linewidth = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.fog = !1),
      (this.lights = !1),
      (this.clipping = !1),
      (this.forceSinglePass = !0),
      (this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1,
      }),
      (this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv1: [0, 0],
      }),
      (this.index0AttributeName = void 0),
      (this.uniformsNeedUpdate = !1),
      (this.glslVersion = null),
      e !== void 0 && this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.fragmentShader = e.fragmentShader),
      (this.vertexShader = e.vertexShader),
      (this.uniforms = Oo(e.uniforms)),
      (this.uniformsGroups = F_(e.uniformsGroups)),
      (this.defines = Object.assign({}, e.defines)),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.fog = e.fog),
      (this.lights = e.lights),
      (this.clipping = e.clipping),
      (this.extensions = Object.assign({}, e.extensions)),
      (this.glslVersion = e.glslVersion),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    (t.glslVersion = this.glslVersion), (t.uniforms = {});
    for (const r in this.uniforms) {
      const u = this.uniforms[r].value;
      u && u.isTexture
        ? (t.uniforms[r] = { type: "t", value: u.toJSON(e).uuid })
        : u && u.isColor
        ? (t.uniforms[r] = { type: "c", value: u.getHex() })
        : u && u.isVector2
        ? (t.uniforms[r] = { type: "v2", value: u.toArray() })
        : u && u.isVector3
        ? (t.uniforms[r] = { type: "v3", value: u.toArray() })
        : u && u.isVector4
        ? (t.uniforms[r] = { type: "v4", value: u.toArray() })
        : u && u.isMatrix3
        ? (t.uniforms[r] = { type: "m3", value: u.toArray() })
        : u && u.isMatrix4
        ? (t.uniforms[r] = { type: "m4", value: u.toArray() })
        : (t.uniforms[r] = { value: u });
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines),
      (t.vertexShader = this.vertexShader),
      (t.fragmentShader = this.fragmentShader),
      (t.lights = this.lights),
      (t.clipping = this.clipping);
    const i = {};
    for (const r in this.extensions) this.extensions[r] === !0 && (i[r] = !0);
    return Object.keys(i).length > 0 && (t.extensions = i), t;
  }
}
class y1 extends Cn {
  constructor() {
    super(),
      (this.isCamera = !0),
      (this.type = "Camera"),
      (this.matrixWorldInverse = new dn()),
      (this.projectionMatrix = new dn()),
      (this.projectionMatrixInverse = new dn()),
      (this.coordinateSystem = Br);
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      this.matrixWorldInverse.copy(e.matrixWorldInverse),
      this.projectionMatrix.copy(e.projectionMatrix),
      this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
      (this.coordinateSystem = e.coordinateSystem),
      this
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(-t[8], -t[9], -t[10]).normalize();
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(e, t) {
    super.updateWorldMatrix(e, t),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class zi extends y1 {
  constructor(e = 50, t = 1, i = 0.1, r = 2e3) {
    super(),
      (this.isPerspectiveCamera = !0),
      (this.type = "PerspectiveCamera"),
      (this.fov = e),
      (this.zoom = 1),
      (this.near = i),
      (this.far = r),
      (this.focus = 10),
      (this.aspect = t),
      (this.view = null),
      (this.filmGauge = 35),
      (this.filmOffset = 0),
      this.updateProjectionMatrix();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.fov = e.fov),
      (this.zoom = e.zoom),
      (this.near = e.near),
      (this.far = e.far),
      (this.focus = e.focus),
      (this.aspect = e.aspect),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      (this.filmGauge = e.filmGauge),
      (this.filmOffset = e.filmOffset),
      this
    );
  }
  setFocalLength(e) {
    const t = (0.5 * this.getFilmHeight()) / e;
    (this.fov = wa * 2 * Math.atan(t)), this.updateProjectionMatrix();
  }
  getFocalLength() {
    const e = Math.tan(ga * 0.5 * this.fov);
    return (0.5 * this.getFilmHeight()) / e;
  }
  getEffectiveFOV() {
    return wa * 2 * Math.atan(Math.tan(ga * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(e, t, i, r, s, u) {
    (this.aspect = e / t),
      this.view === null &&
        (this.view = {
          enabled: !0,
          fullWidth: 1,
          fullHeight: 1,
          offsetX: 0,
          offsetY: 0,
          width: 1,
          height: 1,
        }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = t),
      (this.view.offsetX = i),
      (this.view.offsetY = r),
      (this.view.width = s),
      (this.view.height = u),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = this.near;
    let t = (e * Math.tan(ga * 0.5 * this.fov)) / this.zoom,
      i = 2 * t,
      r = this.aspect * i,
      s = -0.5 * r;
    const u = this.view;
    if (this.view !== null && this.view.enabled) {
      const d = u.fullWidth,
        p = u.fullHeight;
      (s += (u.offsetX * r) / d),
        (t -= (u.offsetY * i) / p),
        (r *= u.width / d),
        (i *= u.height / p);
    }
    const c = this.filmOffset;
    c !== 0 && (s += (e * c) / this.getFilmWidth()),
      this.projectionMatrix.makePerspective(
        s,
        s + r,
        t,
        t - i,
        e,
        this.far,
        this.coordinateSystem
      ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.fov = this.fov),
      (t.object.zoom = this.zoom),
      (t.object.near = this.near),
      (t.object.far = this.far),
      (t.object.focus = this.focus),
      (t.object.aspect = this.aspect),
      this.view !== null && (t.object.view = Object.assign({}, this.view)),
      (t.object.filmGauge = this.filmGauge),
      (t.object.filmOffset = this.filmOffset),
      t
    );
  }
}
const lo = -90,
  uo = 1;
class G_ extends Cn {
  constructor(e, t, i) {
    super(),
      (this.type = "CubeCamera"),
      (this.renderTarget = i),
      (this.coordinateSystem = null);
    const r = new zi(lo, uo, e, t);
    (r.layers = this.layers), this.add(r);
    const s = new zi(lo, uo, e, t);
    (s.layers = this.layers), this.add(s);
    const u = new zi(lo, uo, e, t);
    (u.layers = this.layers), this.add(u);
    const c = new zi(lo, uo, e, t);
    (c.layers = this.layers), this.add(c);
    const d = new zi(lo, uo, e, t);
    (d.layers = this.layers), this.add(d);
    const p = new zi(lo, uo, e, t);
    (p.layers = this.layers), this.add(p);
  }
  updateCoordinateSystem() {
    const e = this.coordinateSystem,
      t = this.children.concat(),
      [i, r, s, u, c, d] = t;
    for (const p of t) this.remove(p);
    if (e === Br)
      i.up.set(0, 1, 0),
        i.lookAt(1, 0, 0),
        r.up.set(0, 1, 0),
        r.lookAt(-1, 0, 0),
        s.up.set(0, 0, -1),
        s.lookAt(0, 1, 0),
        u.up.set(0, 0, 1),
        u.lookAt(0, -1, 0),
        c.up.set(0, 1, 0),
        c.lookAt(0, 0, 1),
        d.up.set(0, 1, 0),
        d.lookAt(0, 0, -1);
    else if (e === sl)
      i.up.set(0, -1, 0),
        i.lookAt(-1, 0, 0),
        r.up.set(0, -1, 0),
        r.lookAt(1, 0, 0),
        s.up.set(0, 0, 1),
        s.lookAt(0, 1, 0),
        u.up.set(0, 0, -1),
        u.lookAt(0, -1, 0),
        c.up.set(0, -1, 0),
        c.lookAt(0, 0, 1),
        d.up.set(0, -1, 0),
        d.lookAt(0, 0, -1);
    else
      throw new Error(
        "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
          e
      );
    for (const p of t) this.add(p), p.updateMatrixWorld();
  }
  update(e, t) {
    this.parent === null && this.updateMatrixWorld();
    const i = this.renderTarget;
    this.coordinateSystem !== e.coordinateSystem &&
      ((this.coordinateSystem = e.coordinateSystem),
      this.updateCoordinateSystem());
    const [r, s, u, c, d, p] = this.children,
      g = e.getRenderTarget(),
      _ = e.xr.enabled;
    e.xr.enabled = !1;
    const x = i.texture.generateMipmaps;
    (i.texture.generateMipmaps = !1),
      e.setRenderTarget(i, 0),
      e.render(t, r),
      e.setRenderTarget(i, 1),
      e.render(t, s),
      e.setRenderTarget(i, 2),
      e.render(t, u),
      e.setRenderTarget(i, 3),
      e.render(t, c),
      e.setRenderTarget(i, 4),
      e.render(t, d),
      (i.texture.generateMipmaps = x),
      e.setRenderTarget(i, 5),
      e.render(t, p),
      e.setRenderTarget(g),
      (e.xr.enabled = _),
      (i.texture.needsPMREMUpdate = !0);
  }
}
class b1 extends xi {
  constructor(e, t, i, r, s, u, c, d, p, g) {
    (e = e !== void 0 ? e : []),
      (t = t !== void 0 ? t : Lo),
      super(e, t, i, r, s, u, c, d, p, g),
      (this.isCubeTexture = !0),
      (this.flipY = !1);
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class H_ extends qs {
  constructor(e = 1, t = {}) {
    super(e, e, t), (this.isWebGLCubeRenderTarget = !0);
    const i = { width: e, height: e, depth: 1 },
      r = [i, i, i, i, i, i];
    t.encoding !== void 0 &&
      (va(
        "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (t.colorSpace = t.encoding === Is ? fn : Os)),
      (this.texture = new b1(
        r,
        t.mapping,
        t.wrapS,
        t.wrapT,
        t.magFilter,
        t.minFilter,
        t.format,
        t.type,
        t.anisotropy,
        t.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.generateMipmaps =
        t.generateMipmaps !== void 0 ? t.generateMipmaps : !1),
      (this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : ki);
  }
  fromEquirectangularTexture(e, t) {
    (this.texture.type = t.type),
      (this.texture.colorSpace = t.colorSpace),
      (this.texture.generateMipmaps = t.generateMipmaps),
      (this.texture.minFilter = t.minFilter),
      (this.texture.magFilter = t.magFilter);
    const i = {
        uniforms: { tEquirect: { value: null } },
        vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
        fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
      },
      r = new Wa(5, 5, 5),
      s = new or({
        name: "CubemapFromEquirect",
        uniforms: Oo(i.uniforms),
        vertexShader: i.vertexShader,
        fragmentShader: i.fragmentShader,
        side: ci,
        blending: os,
      });
    s.uniforms.tEquirect.value = t;
    const u = new Dn(r, s),
      c = t.minFilter;
    return (
      t.minFilter === Sa && (t.minFilter = ki),
      new G_(1, 10, this).update(e, u),
      (t.minFilter = c),
      u.geometry.dispose(),
      u.material.dispose(),
      this
    );
  }
  clear(e, t, i, r) {
    const s = e.getRenderTarget();
    for (let u = 0; u < 6; u++) e.setRenderTarget(this, u), e.clear(t, i, r);
    e.setRenderTarget(s);
  }
}
const W0 = new J(),
  V_ = new J(),
  W_ = new Gt();
class ns {
  constructor(e = new J(1, 0, 0), t = 0) {
    (this.isPlane = !0), (this.normal = e), (this.constant = t);
  }
  set(e, t) {
    return this.normal.copy(e), (this.constant = t), this;
  }
  setComponents(e, t, i, r) {
    return this.normal.set(e, t, i), (this.constant = r), this;
  }
  setFromNormalAndCoplanarPoint(e, t) {
    return this.normal.copy(e), (this.constant = -t.dot(this.normal)), this;
  }
  setFromCoplanarPoints(e, t, i) {
    const r = W0.subVectors(i, t).cross(V_.subVectors(e, t)).normalize();
    return this.setFromNormalAndCoplanarPoint(r, e), this;
  }
  copy(e) {
    return this.normal.copy(e.normal), (this.constant = e.constant), this;
  }
  normalize() {
    const e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), (this.constant *= e), this;
  }
  negate() {
    return (this.constant *= -1), this.normal.negate(), this;
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, t) {
    return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
  }
  intersectLine(e, t) {
    const i = e.delta(W0),
      r = this.normal.dot(i);
    if (r === 0)
      return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
    const s = -(e.start.dot(this.normal) + this.constant) / r;
    return s < 0 || s > 1 ? null : t.copy(e.start).addScaledVector(i, s);
  }
  intersectsLine(e) {
    const t = this.distanceToPoint(e.start),
      i = this.distanceToPoint(e.end);
    return (t < 0 && i > 0) || (i < 0 && t > 0);
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, t) {
    const i = t || W_.getNormalMatrix(e),
      r = this.coplanarPoint(W0).applyMatrix4(e),
      s = this.normal.applyMatrix3(i).normalize();
    return (this.constant = -r.dot(s)), this;
  }
  translate(e) {
    return (this.constant -= e.dot(this.normal)), this;
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Es = new Go(),
  MA = new J();
class fc {
  constructor(
    e = new ns(),
    t = new ns(),
    i = new ns(),
    r = new ns(),
    s = new ns(),
    u = new ns()
  ) {
    this.planes = [e, t, i, r, s, u];
  }
  set(e, t, i, r, s, u) {
    const c = this.planes;
    return (
      c[0].copy(e),
      c[1].copy(t),
      c[2].copy(i),
      c[3].copy(r),
      c[4].copy(s),
      c[5].copy(u),
      this
    );
  }
  copy(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) t[i].copy(e.planes[i]);
    return this;
  }
  setFromProjectionMatrix(e, t = Br) {
    const i = this.planes,
      r = e.elements,
      s = r[0],
      u = r[1],
      c = r[2],
      d = r[3],
      p = r[4],
      g = r[5],
      _ = r[6],
      x = r[7],
      M = r[8],
      E = r[9],
      C = r[10],
      S = r[11],
      b = r[12],
      L = r[13],
      T = r[14],
      R = r[15];
    if (
      (i[0].setComponents(d - s, x - p, S - M, R - b).normalize(),
      i[1].setComponents(d + s, x + p, S + M, R + b).normalize(),
      i[2].setComponents(d + u, x + g, S + E, R + L).normalize(),
      i[3].setComponents(d - u, x - g, S - E, R - L).normalize(),
      i[4].setComponents(d - c, x - _, S - C, R - T).normalize(),
      t === Br)
    )
      i[5].setComponents(d + c, x + _, S + C, R + T).normalize();
    else if (t === sl) i[5].setComponents(c, _, C, T).normalize();
    else
      throw new Error(
        "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
          t
      );
    return this;
  }
  intersectsObject(e) {
    if (e.boundingSphere !== void 0)
      e.boundingSphere === null && e.computeBoundingSphere(),
        Es.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
    else {
      const t = e.geometry;
      t.boundingSphere === null && t.computeBoundingSphere(),
        Es.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
    }
    return this.intersectsSphere(Es);
  }
  intersectsSprite(e) {
    return (
      Es.center.set(0, 0, 0),
      (Es.radius = 0.7071067811865476),
      Es.applyMatrix4(e.matrixWorld),
      this.intersectsSphere(Es)
    );
  }
  intersectsSphere(e) {
    const t = this.planes,
      i = e.center,
      r = -e.radius;
    for (let s = 0; s < 6; s++) if (t[s].distanceToPoint(i) < r) return !1;
    return !0;
  }
  intersectsBox(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) {
      const r = t[i];
      if (
        ((MA.x = r.normal.x > 0 ? e.max.x : e.min.x),
        (MA.y = r.normal.y > 0 ? e.max.y : e.min.y),
        (MA.z = r.normal.z > 0 ? e.max.z : e.min.z),
        r.distanceToPoint(MA) < 0)
      )
        return !1;
    }
    return !0;
  }
  containsPoint(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) if (t[i].distanceToPoint(e) < 0) return !1;
    return !0;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function M1() {
  let n = null,
    e = !1,
    t = null,
    i = null;
  function r(s, u) {
    t(s, u), (i = n.requestAnimationFrame(r));
  }
  return {
    start: function () {
      e !== !0 && t !== null && ((i = n.requestAnimationFrame(r)), (e = !0));
    },
    stop: function () {
      n.cancelAnimationFrame(i), (e = !1);
    },
    setAnimationLoop: function (s) {
      t = s;
    },
    setContext: function (s) {
      n = s;
    },
  };
}
function j_(n, e) {
  const t = e.isWebGL2,
    i = new WeakMap();
  function r(p, g) {
    const _ = p.array,
      x = p.usage,
      M = n.createBuffer();
    n.bindBuffer(g, M), n.bufferData(g, _, x), p.onUploadCallback();
    let E;
    if (_ instanceof Float32Array) E = n.FLOAT;
    else if (_ instanceof Uint16Array)
      if (p.isFloat16BufferAttribute)
        if (t) E = n.HALF_FLOAT;
        else
          throw new Error(
            "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
          );
      else E = n.UNSIGNED_SHORT;
    else if (_ instanceof Int16Array) E = n.SHORT;
    else if (_ instanceof Uint32Array) E = n.UNSIGNED_INT;
    else if (_ instanceof Int32Array) E = n.INT;
    else if (_ instanceof Int8Array) E = n.BYTE;
    else if (_ instanceof Uint8Array) E = n.UNSIGNED_BYTE;
    else if (_ instanceof Uint8ClampedArray) E = n.UNSIGNED_BYTE;
    else
      throw new Error(
        "THREE.WebGLAttributes: Unsupported buffer data format: " + _
      );
    return {
      buffer: M,
      type: E,
      bytesPerElement: _.BYTES_PER_ELEMENT,
      version: p.version,
    };
  }
  function s(p, g, _) {
    const x = g.array,
      M = g.updateRange;
    n.bindBuffer(_, p),
      M.count === -1
        ? n.bufferSubData(_, 0, x)
        : (t
            ? n.bufferSubData(
                _,
                M.offset * x.BYTES_PER_ELEMENT,
                x,
                M.offset,
                M.count
              )
            : n.bufferSubData(
                _,
                M.offset * x.BYTES_PER_ELEMENT,
                x.subarray(M.offset, M.offset + M.count)
              ),
          (M.count = -1)),
      g.onUploadCallback();
  }
  function u(p) {
    return p.isInterleavedBufferAttribute && (p = p.data), i.get(p);
  }
  function c(p) {
    p.isInterleavedBufferAttribute && (p = p.data);
    const g = i.get(p);
    g && (n.deleteBuffer(g.buffer), i.delete(p));
  }
  function d(p, g) {
    if (p.isGLBufferAttribute) {
      const x = i.get(p);
      (!x || x.version < p.version) &&
        i.set(p, {
          buffer: p.buffer,
          type: p.type,
          bytesPerElement: p.elementSize,
          version: p.version,
        });
      return;
    }
    p.isInterleavedBufferAttribute && (p = p.data);
    const _ = i.get(p);
    _ === void 0
      ? i.set(p, r(p, g))
      : _.version < p.version && (s(_.buffer, p, g), (_.version = p.version));
  }
  return { get: u, remove: c, update: d };
}
class hc extends cn {
  constructor(e = 1, t = 1, i = 1, r = 1) {
    super(),
      (this.type = "PlaneGeometry"),
      (this.parameters = {
        width: e,
        height: t,
        widthSegments: i,
        heightSegments: r,
      });
    const s = e / 2,
      u = t / 2,
      c = Math.floor(i),
      d = Math.floor(r),
      p = c + 1,
      g = d + 1,
      _ = e / c,
      x = t / d,
      M = [],
      E = [],
      C = [],
      S = [];
    for (let b = 0; b < g; b++) {
      const L = b * x - u;
      for (let T = 0; T < p; T++) {
        const R = T * _ - s;
        E.push(R, -L, 0), C.push(0, 0, 1), S.push(T / c), S.push(1 - b / d);
      }
    }
    for (let b = 0; b < d; b++)
      for (let L = 0; L < c; L++) {
        const T = L + p * b,
          R = L + p * (b + 1),
          U = L + 1 + p * (b + 1),
          q = L + 1 + p * b;
        M.push(T, R, q), M.push(R, U, q);
      }
    this.setIndex(M),
      this.setAttribute("position", new Kt(E, 3)),
      this.setAttribute("normal", new Kt(C, 3)),
      this.setAttribute("uv", new Kt(S, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new hc(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var X_ = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,
  Q_ = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,
  $_ = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,
  Y_ = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  Z_ = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,
  K_ = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
  J_ = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
  ev = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
  tv = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,
  nv = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
  iv = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,
  rv = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,
  sv = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
  ov = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,
  av = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
  Av = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
  lv = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
  uv = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
  cv = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
  fv = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,
  hv = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,
  dv = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,
  pv = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
  mv = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
  gv = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
  _v = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,
  vv = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
  xv = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
  yv = "gl_FragColor = linearToOutputTexel( gl_FragColor );",
  bv = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,
  Mv = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
  Sv = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,
  Ev = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
  wv = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
  Tv = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
  Cv = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
  Rv = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
  Pv = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
  Lv = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
  Dv = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,
  Iv = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,
  Ov = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
  Uv = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,
  qv = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,
  Bv = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
  Nv = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,
  Fv = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
  kv = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,
  zv = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
  Gv = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,
  Hv = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,
  Vv = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
  Wv = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
  jv = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
  Xv = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,
  Qv = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
  $v = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
  Yv = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,
  Zv = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,
  Kv = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,
  Jv = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
  e4 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
  t4 = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  n4 = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
  i4 = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
  r4 = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,
  s4 = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,
  o4 = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,
  a4 = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,
  A4 = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,
  l4 = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
  u4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  c4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  f4 = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
  h4 = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,
  d4 = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,
  p4 = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,
  m4 = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,
  g4 = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,
  _4 = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
  v4 = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,
  x4 = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
  y4 = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
  b4 = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
  M4 = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
  S4 = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
  E4 = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
  w4 = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,
  T4 = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
  C4 = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,
  R4 = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
  P4 = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
  L4 = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,
  D4 = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
  I4 = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
  O4 = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
  U4 = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
  q4 = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
  B4 = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
  N4 = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,
  F4 = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,
  k4 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  z4 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  G4 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,
  H4 = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const V4 = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
  W4 = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  j4 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  X4 = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  Q4 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  $4 = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  Y4 = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
  Z4 = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
  K4 = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
  J4 = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
  ex = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
  tx = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  nx = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  ix = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  rx = `#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
  sx = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  ox = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  ax = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Ax = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
  lx = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  ux = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
  cx = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,
  fx = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  hx = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  dx = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
  px = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  mx = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  gx = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  _x = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
  vx = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  xx = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  yx = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  bx = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  Mx = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  Ft = {
    alphahash_fragment: X_,
    alphahash_pars_fragment: Q_,
    alphamap_fragment: $_,
    alphamap_pars_fragment: Y_,
    alphatest_fragment: Z_,
    alphatest_pars_fragment: K_,
    aomap_fragment: J_,
    aomap_pars_fragment: ev,
    begin_vertex: tv,
    beginnormal_vertex: nv,
    bsdfs: iv,
    iridescence_fragment: rv,
    bumpmap_pars_fragment: sv,
    clipping_planes_fragment: ov,
    clipping_planes_pars_fragment: av,
    clipping_planes_pars_vertex: Av,
    clipping_planes_vertex: lv,
    color_fragment: uv,
    color_pars_fragment: cv,
    color_pars_vertex: fv,
    color_vertex: hv,
    common: dv,
    cube_uv_reflection_fragment: pv,
    defaultnormal_vertex: mv,
    displacementmap_pars_vertex: gv,
    displacementmap_vertex: _v,
    emissivemap_fragment: vv,
    emissivemap_pars_fragment: xv,
    colorspace_fragment: yv,
    colorspace_pars_fragment: bv,
    envmap_fragment: Mv,
    envmap_common_pars_fragment: Sv,
    envmap_pars_fragment: Ev,
    envmap_pars_vertex: wv,
    envmap_physical_pars_fragment: Nv,
    envmap_vertex: Tv,
    fog_vertex: Cv,
    fog_pars_vertex: Rv,
    fog_fragment: Pv,
    fog_pars_fragment: Lv,
    gradientmap_pars_fragment: Dv,
    lightmap_fragment: Iv,
    lightmap_pars_fragment: Ov,
    lights_lambert_fragment: Uv,
    lights_lambert_pars_fragment: qv,
    lights_pars_begin: Bv,
    lights_toon_fragment: Fv,
    lights_toon_pars_fragment: kv,
    lights_phong_fragment: zv,
    lights_phong_pars_fragment: Gv,
    lights_physical_fragment: Hv,
    lights_physical_pars_fragment: Vv,
    lights_fragment_begin: Wv,
    lights_fragment_maps: jv,
    lights_fragment_end: Xv,
    logdepthbuf_fragment: Qv,
    logdepthbuf_pars_fragment: $v,
    logdepthbuf_pars_vertex: Yv,
    logdepthbuf_vertex: Zv,
    map_fragment: Kv,
    map_pars_fragment: Jv,
    map_particle_fragment: e4,
    map_particle_pars_fragment: t4,
    metalnessmap_fragment: n4,
    metalnessmap_pars_fragment: i4,
    morphcolor_vertex: r4,
    morphnormal_vertex: s4,
    morphtarget_pars_vertex: o4,
    morphtarget_vertex: a4,
    normal_fragment_begin: A4,
    normal_fragment_maps: l4,
    normal_pars_fragment: u4,
    normal_pars_vertex: c4,
    normal_vertex: f4,
    normalmap_pars_fragment: h4,
    clearcoat_normal_fragment_begin: d4,
    clearcoat_normal_fragment_maps: p4,
    clearcoat_pars_fragment: m4,
    iridescence_pars_fragment: g4,
    opaque_fragment: _4,
    packing: v4,
    premultiplied_alpha_fragment: x4,
    project_vertex: y4,
    dithering_fragment: b4,
    dithering_pars_fragment: M4,
    roughnessmap_fragment: S4,
    roughnessmap_pars_fragment: E4,
    shadowmap_pars_fragment: w4,
    shadowmap_pars_vertex: T4,
    shadowmap_vertex: C4,
    shadowmask_pars_fragment: R4,
    skinbase_vertex: P4,
    skinning_pars_vertex: L4,
    skinning_vertex: D4,
    skinnormal_vertex: I4,
    specularmap_fragment: O4,
    specularmap_pars_fragment: U4,
    tonemapping_fragment: q4,
    tonemapping_pars_fragment: B4,
    transmission_fragment: N4,
    transmission_pars_fragment: F4,
    uv_pars_fragment: k4,
    uv_pars_vertex: z4,
    uv_vertex: G4,
    worldpos_vertex: H4,
    background_vert: V4,
    background_frag: W4,
    backgroundCube_vert: j4,
    backgroundCube_frag: X4,
    cube_vert: Q4,
    cube_frag: $4,
    depth_vert: Y4,
    depth_frag: Z4,
    distanceRGBA_vert: K4,
    distanceRGBA_frag: J4,
    equirect_vert: ex,
    equirect_frag: tx,
    linedashed_vert: nx,
    linedashed_frag: ix,
    meshbasic_vert: rx,
    meshbasic_frag: sx,
    meshlambert_vert: ox,
    meshlambert_frag: ax,
    meshmatcap_vert: Ax,
    meshmatcap_frag: lx,
    meshnormal_vert: ux,
    meshnormal_frag: cx,
    meshphong_vert: fx,
    meshphong_frag: hx,
    meshphysical_vert: dx,
    meshphysical_frag: px,
    meshtoon_vert: mx,
    meshtoon_frag: gx,
    points_vert: _x,
    points_frag: vx,
    shadow_vert: xx,
    shadow_frag: yx,
    sprite_vert: bx,
    sprite_frag: Mx,
  },
  Ke = {
    common: {
      diffuse: { value: new Nt(16777215) },
      opacity: { value: 1 },
      map: { value: null },
      mapTransform: { value: new Gt() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
    },
    specularmap: {
      specularMap: { value: null },
      specularMapTransform: { value: new Gt() },
    },
    envmap: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      reflectivity: { value: 1 },
      ior: { value: 1.5 },
      refractionRatio: { value: 0.98 },
    },
    aomap: {
      aoMap: { value: null },
      aoMapIntensity: { value: 1 },
      aoMapTransform: { value: new Gt() },
    },
    lightmap: {
      lightMap: { value: null },
      lightMapIntensity: { value: 1 },
      lightMapTransform: { value: new Gt() },
    },
    bumpmap: {
      bumpMap: { value: null },
      bumpMapTransform: { value: new Gt() },
      bumpScale: { value: 1 },
    },
    normalmap: {
      normalMap: { value: null },
      normalMapTransform: { value: new Gt() },
      normalScale: { value: new ke(1, 1) },
    },
    displacementmap: {
      displacementMap: { value: null },
      displacementMapTransform: { value: new Gt() },
      displacementScale: { value: 1 },
      displacementBias: { value: 0 },
    },
    emissivemap: {
      emissiveMap: { value: null },
      emissiveMapTransform: { value: new Gt() },
    },
    metalnessmap: {
      metalnessMap: { value: null },
      metalnessMapTransform: { value: new Gt() },
    },
    roughnessmap: {
      roughnessMap: { value: null },
      roughnessMapTransform: { value: new Gt() },
    },
    gradientmap: { gradientMap: { value: null } },
    fog: {
      fogDensity: { value: 25e-5 },
      fogNear: { value: 1 },
      fogFar: { value: 2e3 },
      fogColor: { value: new Nt(16777215) },
    },
    lights: {
      ambientLightColor: { value: [] },
      lightProbe: { value: [] },
      directionalLights: {
        value: [],
        properties: { direction: {}, color: {} },
      },
      directionalLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      directionalShadowMap: { value: [] },
      directionalShadowMatrix: { value: [] },
      spotLights: {
        value: [],
        properties: {
          color: {},
          position: {},
          direction: {},
          distance: {},
          coneCos: {},
          penumbraCos: {},
          decay: {},
        },
      },
      spotLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      spotLightMap: { value: [] },
      spotShadowMap: { value: [] },
      spotLightMatrix: { value: [] },
      pointLights: {
        value: [],
        properties: { color: {}, position: {}, decay: {}, distance: {} },
      },
      pointLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
          shadowCameraNear: {},
          shadowCameraFar: {},
        },
      },
      pointShadowMap: { value: [] },
      pointShadowMatrix: { value: [] },
      hemisphereLights: {
        value: [],
        properties: { direction: {}, skyColor: {}, groundColor: {} },
      },
      rectAreaLights: {
        value: [],
        properties: { color: {}, position: {}, width: {}, height: {} },
      },
      ltc_1: { value: null },
      ltc_2: { value: null },
    },
    points: {
      diffuse: { value: new Nt(16777215) },
      opacity: { value: 1 },
      size: { value: 1 },
      scale: { value: 1 },
      map: { value: null },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
      uvTransform: { value: new Gt() },
    },
    sprite: {
      diffuse: { value: new Nt(16777215) },
      opacity: { value: 1 },
      center: { value: new ke(0.5, 0.5) },
      rotation: { value: 0 },
      map: { value: null },
      mapTransform: { value: new Gt() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
    },
  },
  er = {
    basic: {
      uniforms: ri([
        Ke.common,
        Ke.specularmap,
        Ke.envmap,
        Ke.aomap,
        Ke.lightmap,
        Ke.fog,
      ]),
      vertexShader: Ft.meshbasic_vert,
      fragmentShader: Ft.meshbasic_frag,
    },
    lambert: {
      uniforms: ri([
        Ke.common,
        Ke.specularmap,
        Ke.envmap,
        Ke.aomap,
        Ke.lightmap,
        Ke.emissivemap,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        Ke.fog,
        Ke.lights,
        { emissive: { value: new Nt(0) } },
      ]),
      vertexShader: Ft.meshlambert_vert,
      fragmentShader: Ft.meshlambert_frag,
    },
    phong: {
      uniforms: ri([
        Ke.common,
        Ke.specularmap,
        Ke.envmap,
        Ke.aomap,
        Ke.lightmap,
        Ke.emissivemap,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        Ke.fog,
        Ke.lights,
        {
          emissive: { value: new Nt(0) },
          specular: { value: new Nt(1118481) },
          shininess: { value: 30 },
        },
      ]),
      vertexShader: Ft.meshphong_vert,
      fragmentShader: Ft.meshphong_frag,
    },
    standard: {
      uniforms: ri([
        Ke.common,
        Ke.envmap,
        Ke.aomap,
        Ke.lightmap,
        Ke.emissivemap,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        Ke.roughnessmap,
        Ke.metalnessmap,
        Ke.fog,
        Ke.lights,
        {
          emissive: { value: new Nt(0) },
          roughness: { value: 1 },
          metalness: { value: 0 },
          envMapIntensity: { value: 1 },
        },
      ]),
      vertexShader: Ft.meshphysical_vert,
      fragmentShader: Ft.meshphysical_frag,
    },
    toon: {
      uniforms: ri([
        Ke.common,
        Ke.aomap,
        Ke.lightmap,
        Ke.emissivemap,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        Ke.gradientmap,
        Ke.fog,
        Ke.lights,
        { emissive: { value: new Nt(0) } },
      ]),
      vertexShader: Ft.meshtoon_vert,
      fragmentShader: Ft.meshtoon_frag,
    },
    matcap: {
      uniforms: ri([
        Ke.common,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        Ke.fog,
        { matcap: { value: null } },
      ]),
      vertexShader: Ft.meshmatcap_vert,
      fragmentShader: Ft.meshmatcap_frag,
    },
    points: {
      uniforms: ri([Ke.points, Ke.fog]),
      vertexShader: Ft.points_vert,
      fragmentShader: Ft.points_frag,
    },
    dashed: {
      uniforms: ri([
        Ke.common,
        Ke.fog,
        {
          scale: { value: 1 },
          dashSize: { value: 1 },
          totalSize: { value: 2 },
        },
      ]),
      vertexShader: Ft.linedashed_vert,
      fragmentShader: Ft.linedashed_frag,
    },
    depth: {
      uniforms: ri([Ke.common, Ke.displacementmap]),
      vertexShader: Ft.depth_vert,
      fragmentShader: Ft.depth_frag,
    },
    normal: {
      uniforms: ri([
        Ke.common,
        Ke.bumpmap,
        Ke.normalmap,
        Ke.displacementmap,
        { opacity: { value: 1 } },
      ]),
      vertexShader: Ft.meshnormal_vert,
      fragmentShader: Ft.meshnormal_frag,
    },
    sprite: {
      uniforms: ri([Ke.sprite, Ke.fog]),
      vertexShader: Ft.sprite_vert,
      fragmentShader: Ft.sprite_frag,
    },
    background: {
      uniforms: {
        uvTransform: { value: new Gt() },
        t2D: { value: null },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Ft.background_vert,
      fragmentShader: Ft.background_frag,
    },
    backgroundCube: {
      uniforms: {
        envMap: { value: null },
        flipEnvMap: { value: -1 },
        backgroundBlurriness: { value: 0 },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Ft.backgroundCube_vert,
      fragmentShader: Ft.backgroundCube_frag,
    },
    cube: {
      uniforms: {
        tCube: { value: null },
        tFlip: { value: -1 },
        opacity: { value: 1 },
      },
      vertexShader: Ft.cube_vert,
      fragmentShader: Ft.cube_frag,
    },
    equirect: {
      uniforms: { tEquirect: { value: null } },
      vertexShader: Ft.equirect_vert,
      fragmentShader: Ft.equirect_frag,
    },
    distanceRGBA: {
      uniforms: ri([
        Ke.common,
        Ke.displacementmap,
        {
          referencePosition: { value: new J() },
          nearDistance: { value: 1 },
          farDistance: { value: 1e3 },
        },
      ]),
      vertexShader: Ft.distanceRGBA_vert,
      fragmentShader: Ft.distanceRGBA_frag,
    },
    shadow: {
      uniforms: ri([
        Ke.lights,
        Ke.fog,
        { color: { value: new Nt(0) }, opacity: { value: 1 } },
      ]),
      vertexShader: Ft.shadow_vert,
      fragmentShader: Ft.shadow_frag,
    },
  };
er.physical = {
  uniforms: ri([
    er.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatMapTransform: { value: new Gt() },
      clearcoatNormalMap: { value: null },
      clearcoatNormalMapTransform: { value: new Gt() },
      clearcoatNormalScale: { value: new ke(1, 1) },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatRoughnessMapTransform: { value: new Gt() },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceMapTransform: { value: new Gt() },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      iridescenceThicknessMapTransform: { value: new Gt() },
      sheen: { value: 0 },
      sheenColor: { value: new Nt(0) },
      sheenColorMap: { value: null },
      sheenColorMapTransform: { value: new Gt() },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      sheenRoughnessMapTransform: { value: new Gt() },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionMapTransform: { value: new Gt() },
      transmissionSamplerSize: { value: new ke() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      thicknessMapTransform: { value: new Gt() },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: new Nt(0) },
      specularColor: { value: new Nt(1, 1, 1) },
      specularColorMap: { value: null },
      specularColorMapTransform: { value: new Gt() },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularIntensityMapTransform: { value: new Gt() },
      anisotropyVector: { value: new ke() },
      anisotropyMap: { value: null },
      anisotropyMapTransform: { value: new Gt() },
    },
  ]),
  vertexShader: Ft.meshphysical_vert,
  fragmentShader: Ft.meshphysical_frag,
};
const SA = { r: 0, b: 0, g: 0 };
function Sx(n, e, t, i, r, s, u) {
  const c = new Nt(0);
  let d = s === !0 ? 0 : 1,
    p,
    g,
    _ = null,
    x = 0,
    M = null;
  function E(S, b) {
    let L = !1,
      T = b.isScene === !0 ? b.background : null;
    T && T.isTexture && (T = (b.backgroundBlurriness > 0 ? t : e).get(T)),
      T === null ? C(c, d) : T && T.isColor && (C(T, 1), (L = !0));
    const R = n.xr.getEnvironmentBlendMode();
    R === "additive"
      ? i.buffers.color.setClear(0, 0, 0, 1, u)
      : R === "alpha-blend" && i.buffers.color.setClear(0, 0, 0, 0, u),
      (n.autoClear || L) &&
        n.clear(n.autoClearColor, n.autoClearDepth, n.autoClearStencil),
      T && (T.isCubeTexture || T.mapping === Wl)
        ? (g === void 0 &&
            ((g = new Dn(
              new Wa(1, 1, 1),
              new or({
                name: "BackgroundCubeMaterial",
                uniforms: Oo(er.backgroundCube.uniforms),
                vertexShader: er.backgroundCube.vertexShader,
                fragmentShader: er.backgroundCube.fragmentShader,
                side: ci,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            g.geometry.deleteAttribute("normal"),
            g.geometry.deleteAttribute("uv"),
            (g.onBeforeRender = function (U, q, I) {
              this.matrixWorld.copyPosition(I.matrixWorld);
            }),
            Object.defineProperty(g.material, "envMap", {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            r.update(g)),
          (g.material.uniforms.envMap.value = T),
          (g.material.uniforms.flipEnvMap.value =
            T.isCubeTexture && T.isRenderTargetTexture === !1 ? -1 : 1),
          (g.material.uniforms.backgroundBlurriness.value =
            b.backgroundBlurriness),
          (g.material.uniforms.backgroundIntensity.value =
            b.backgroundIntensity),
          (g.material.toneMapped = T.colorSpace !== fn),
          (_ !== T || x !== T.version || M !== n.toneMapping) &&
            ((g.material.needsUpdate = !0),
            (_ = T),
            (x = T.version),
            (M = n.toneMapping)),
          g.layers.enableAll(),
          S.unshift(g, g.geometry, g.material, 0, 0, null))
        : T &&
          T.isTexture &&
          (p === void 0 &&
            ((p = new Dn(
              new hc(2, 2),
              new or({
                name: "BackgroundMaterial",
                uniforms: Oo(er.background.uniforms),
                vertexShader: er.background.vertexShader,
                fragmentShader: er.background.fragmentShader,
                side: us,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            p.geometry.deleteAttribute("normal"),
            Object.defineProperty(p.material, "map", {
              get: function () {
                return this.uniforms.t2D.value;
              },
            }),
            r.update(p)),
          (p.material.uniforms.t2D.value = T),
          (p.material.uniforms.backgroundIntensity.value =
            b.backgroundIntensity),
          (p.material.toneMapped = T.colorSpace !== fn),
          T.matrixAutoUpdate === !0 && T.updateMatrix(),
          p.material.uniforms.uvTransform.value.copy(T.matrix),
          (_ !== T || x !== T.version || M !== n.toneMapping) &&
            ((p.material.needsUpdate = !0),
            (_ = T),
            (x = T.version),
            (M = n.toneMapping)),
          p.layers.enableAll(),
          S.unshift(p, p.geometry, p.material, 0, 0, null));
  }
  function C(S, b) {
    S.getRGB(SA, v1(n)), i.buffers.color.setClear(SA.r, SA.g, SA.b, b, u);
  }
  return {
    getClearColor: function () {
      return c;
    },
    setClearColor: function (S, b = 1) {
      c.set(S), (d = b), C(c, d);
    },
    getClearAlpha: function () {
      return d;
    },
    setClearAlpha: function (S) {
      (d = S), C(c, d);
    },
    render: E,
  };
}
function Ex(n, e, t, i) {
  const r = n.getParameter(n.MAX_VERTEX_ATTRIBS),
    s = i.isWebGL2 ? null : e.get("OES_vertex_array_object"),
    u = i.isWebGL2 || s !== null,
    c = {},
    d = S(null);
  let p = d,
    g = !1;
  function _(Q, k, te, ee, se) {
    let pe = !1;
    if (u) {
      const de = C(ee, te, k);
      p !== de && ((p = de), M(p.object)),
        (pe = b(Q, ee, te, se)),
        pe && L(Q, ee, te, se);
    } else {
      const de = k.wireframe === !0;
      (p.geometry !== ee.id || p.program !== te.id || p.wireframe !== de) &&
        ((p.geometry = ee.id),
        (p.program = te.id),
        (p.wireframe = de),
        (pe = !0));
    }
    se !== null && t.update(se, n.ELEMENT_ARRAY_BUFFER),
      (pe || g) &&
        ((g = !1),
        N(Q, k, te, ee),
        se !== null && n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, t.get(se).buffer));
  }
  function x() {
    return i.isWebGL2 ? n.createVertexArray() : s.createVertexArrayOES();
  }
  function M(Q) {
    return i.isWebGL2 ? n.bindVertexArray(Q) : s.bindVertexArrayOES(Q);
  }
  function E(Q) {
    return i.isWebGL2 ? n.deleteVertexArray(Q) : s.deleteVertexArrayOES(Q);
  }
  function C(Q, k, te) {
    const ee = te.wireframe === !0;
    let se = c[Q.id];
    se === void 0 && ((se = {}), (c[Q.id] = se));
    let pe = se[k.id];
    pe === void 0 && ((pe = {}), (se[k.id] = pe));
    let de = pe[ee];
    return de === void 0 && ((de = S(x())), (pe[ee] = de)), de;
  }
  function S(Q) {
    const k = [],
      te = [],
      ee = [];
    for (let se = 0; se < r; se++) (k[se] = 0), (te[se] = 0), (ee[se] = 0);
    return {
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: k,
      enabledAttributes: te,
      attributeDivisors: ee,
      object: Q,
      attributes: {},
      index: null,
    };
  }
  function b(Q, k, te, ee) {
    const se = p.attributes,
      pe = k.attributes;
    let de = 0;
    const oe = te.getAttributes();
    for (const he in oe)
      if (oe[he].location >= 0) {
        const Pe = se[he];
        let Oe = pe[he];
        if (
          (Oe === void 0 &&
            (he === "instanceMatrix" &&
              Q.instanceMatrix &&
              (Oe = Q.instanceMatrix),
            he === "instanceColor" &&
              Q.instanceColor &&
              (Oe = Q.instanceColor)),
          Pe === void 0 || Pe.attribute !== Oe || (Oe && Pe.data !== Oe.data))
        )
          return !0;
        de++;
      }
    return p.attributesNum !== de || p.index !== ee;
  }
  function L(Q, k, te, ee) {
    const se = {},
      pe = k.attributes;
    let de = 0;
    const oe = te.getAttributes();
    for (const he in oe)
      if (oe[he].location >= 0) {
        let Pe = pe[he];
        Pe === void 0 &&
          (he === "instanceMatrix" &&
            Q.instanceMatrix &&
            (Pe = Q.instanceMatrix),
          he === "instanceColor" && Q.instanceColor && (Pe = Q.instanceColor));
        const Oe = {};
        (Oe.attribute = Pe),
          Pe && Pe.data && (Oe.data = Pe.data),
          (se[he] = Oe),
          de++;
      }
    (p.attributes = se), (p.attributesNum = de), (p.index = ee);
  }
  function T() {
    const Q = p.newAttributes;
    for (let k = 0, te = Q.length; k < te; k++) Q[k] = 0;
  }
  function R(Q) {
    U(Q, 0);
  }
  function U(Q, k) {
    const te = p.newAttributes,
      ee = p.enabledAttributes,
      se = p.attributeDivisors;
    (te[Q] = 1),
      ee[Q] === 0 && (n.enableVertexAttribArray(Q), (ee[Q] = 1)),
      se[Q] !== k &&
        ((i.isWebGL2 ? n : e.get("ANGLE_instanced_arrays"))[
          i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
        ](Q, k),
        (se[Q] = k));
  }
  function q() {
    const Q = p.newAttributes,
      k = p.enabledAttributes;
    for (let te = 0, ee = k.length; te < ee; te++)
      k[te] !== Q[te] && (n.disableVertexAttribArray(te), (k[te] = 0));
  }
  function I(Q, k, te, ee, se, pe, de) {
    de === !0
      ? n.vertexAttribIPointer(Q, k, te, se, pe)
      : n.vertexAttribPointer(Q, k, te, ee, se, pe);
  }
  function N(Q, k, te, ee) {
    if (
      i.isWebGL2 === !1 &&
      (Q.isInstancedMesh || ee.isInstancedBufferGeometry) &&
      e.get("ANGLE_instanced_arrays") === null
    )
      return;
    T();
    const se = ee.attributes,
      pe = te.getAttributes(),
      de = k.defaultAttributeValues;
    for (const oe in pe) {
      const he = pe[oe];
      if (he.location >= 0) {
        let Te = se[oe];
        if (
          (Te === void 0 &&
            (oe === "instanceMatrix" &&
              Q.instanceMatrix &&
              (Te = Q.instanceMatrix),
            oe === "instanceColor" &&
              Q.instanceColor &&
              (Te = Q.instanceColor)),
          Te !== void 0)
        ) {
          const Pe = Te.normalized,
            Oe = Te.itemSize,
            Je = t.get(Te);
          if (Je === void 0) continue;
          const rt = Je.buffer,
            ot = Je.type,
            Rt = Je.bytesPerElement,
            It =
              i.isWebGL2 === !0 &&
              (ot === n.INT || ot === n.UNSIGNED_INT || Te.gpuType === i1);
          if (Te.isInterleavedBufferAttribute) {
            const ft = Te.data,
              ne = ft.stride,
              ze = Te.offset;
            if (ft.isInstancedInterleavedBuffer) {
              for (let Ce = 0; Ce < he.locationSize; Ce++)
                U(he.location + Ce, ft.meshPerAttribute);
              Q.isInstancedMesh !== !0 &&
                ee._maxInstanceCount === void 0 &&
                (ee._maxInstanceCount = ft.meshPerAttribute * ft.count);
            } else
              for (let Ce = 0; Ce < he.locationSize; Ce++) R(he.location + Ce);
            n.bindBuffer(n.ARRAY_BUFFER, rt);
            for (let Ce = 0; Ce < he.locationSize; Ce++)
              I(
                he.location + Ce,
                Oe / he.locationSize,
                ot,
                Pe,
                ne * Rt,
                (ze + (Oe / he.locationSize) * Ce) * Rt,
                It
              );
          } else {
            if (Te.isInstancedBufferAttribute) {
              for (let ft = 0; ft < he.locationSize; ft++)
                U(he.location + ft, Te.meshPerAttribute);
              Q.isInstancedMesh !== !0 &&
                ee._maxInstanceCount === void 0 &&
                (ee._maxInstanceCount = Te.meshPerAttribute * Te.count);
            } else
              for (let ft = 0; ft < he.locationSize; ft++) R(he.location + ft);
            n.bindBuffer(n.ARRAY_BUFFER, rt);
            for (let ft = 0; ft < he.locationSize; ft++)
              I(
                he.location + ft,
                Oe / he.locationSize,
                ot,
                Pe,
                Oe * Rt,
                (Oe / he.locationSize) * ft * Rt,
                It
              );
          }
        } else if (de !== void 0) {
          const Pe = de[oe];
          if (Pe !== void 0)
            switch (Pe.length) {
              case 2:
                n.vertexAttrib2fv(he.location, Pe);
                break;
              case 3:
                n.vertexAttrib3fv(he.location, Pe);
                break;
              case 4:
                n.vertexAttrib4fv(he.location, Pe);
                break;
              default:
                n.vertexAttrib1fv(he.location, Pe);
            }
        }
      }
    }
    q();
  }
  function D() {
    $();
    for (const Q in c) {
      const k = c[Q];
      for (const te in k) {
        const ee = k[te];
        for (const se in ee) E(ee[se].object), delete ee[se];
        delete k[te];
      }
      delete c[Q];
    }
  }
  function O(Q) {
    if (c[Q.id] === void 0) return;
    const k = c[Q.id];
    for (const te in k) {
      const ee = k[te];
      for (const se in ee) E(ee[se].object), delete ee[se];
      delete k[te];
    }
    delete c[Q.id];
  }
  function F(Q) {
    for (const k in c) {
      const te = c[k];
      if (te[Q.id] === void 0) continue;
      const ee = te[Q.id];
      for (const se in ee) E(ee[se].object), delete ee[se];
      delete te[Q.id];
    }
  }
  function $() {
    V(), (g = !0), p !== d && ((p = d), M(p.object));
  }
  function V() {
    (d.geometry = null), (d.program = null), (d.wireframe = !1);
  }
  return {
    setup: _,
    reset: $,
    resetDefaultState: V,
    dispose: D,
    releaseStatesOfGeometry: O,
    releaseStatesOfProgram: F,
    initAttributes: T,
    enableAttribute: R,
    disableUnusedAttributes: q,
  };
}
function wx(n, e, t, i) {
  const r = i.isWebGL2;
  let s;
  function u(p) {
    s = p;
  }
  function c(p, g) {
    n.drawArrays(s, p, g), t.update(g, s, 1);
  }
  function d(p, g, _) {
    if (_ === 0) return;
    let x, M;
    if (r) (x = n), (M = "drawArraysInstanced");
    else if (
      ((x = e.get("ANGLE_instanced_arrays")),
      (M = "drawArraysInstancedANGLE"),
      x === null)
    ) {
      console.error(
        "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    x[M](s, p, g, _), t.update(g, s, _);
  }
  (this.setMode = u), (this.render = c), (this.renderInstances = d);
}
function Tx(n, e, t) {
  let i;
  function r() {
    if (i !== void 0) return i;
    if (e.has("EXT_texture_filter_anisotropic") === !0) {
      const I = e.get("EXT_texture_filter_anisotropic");
      i = n.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else i = 0;
    return i;
  }
  function s(I) {
    if (I === "highp") {
      if (
        n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT).precision >
          0 &&
        n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT).precision >
          0
      )
        return "highp";
      I = "mediump";
    }
    return I === "mediump" &&
      n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT).precision >
        0 &&
      n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT).precision >
        0
      ? "mediump"
      : "lowp";
  }
  const u =
    typeof WebGL2RenderingContext < "u" &&
    n.constructor.name === "WebGL2RenderingContext";
  let c = t.precision !== void 0 ? t.precision : "highp";
  const d = s(c);
  d !== c &&
    (console.warn(
      "THREE.WebGLRenderer:",
      c,
      "not supported, using",
      d,
      "instead."
    ),
    (c = d));
  const p = u || e.has("WEBGL_draw_buffers"),
    g = t.logarithmicDepthBuffer === !0,
    _ = n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),
    x = n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
    M = n.getParameter(n.MAX_TEXTURE_SIZE),
    E = n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),
    C = n.getParameter(n.MAX_VERTEX_ATTRIBS),
    S = n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),
    b = n.getParameter(n.MAX_VARYING_VECTORS),
    L = n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),
    T = x > 0,
    R = u || e.has("OES_texture_float"),
    U = T && R,
    q = u ? n.getParameter(n.MAX_SAMPLES) : 0;
  return {
    isWebGL2: u,
    drawBuffers: p,
    getMaxAnisotropy: r,
    getMaxPrecision: s,
    precision: c,
    logarithmicDepthBuffer: g,
    maxTextures: _,
    maxVertexTextures: x,
    maxTextureSize: M,
    maxCubemapSize: E,
    maxAttributes: C,
    maxVertexUniforms: S,
    maxVaryings: b,
    maxFragmentUniforms: L,
    vertexTextures: T,
    floatFragmentTextures: R,
    floatVertexTextures: U,
    maxSamples: q,
  };
}
function Cx(n) {
  const e = this;
  let t = null,
    i = 0,
    r = !1,
    s = !1;
  const u = new ns(),
    c = new Gt(),
    d = { value: null, needsUpdate: !1 };
  (this.uniform = d),
    (this.numPlanes = 0),
    (this.numIntersection = 0),
    (this.init = function (_, x) {
      const M = _.length !== 0 || x || i !== 0 || r;
      return (r = x), (i = _.length), M;
    }),
    (this.beginShadows = function () {
      (s = !0), g(null);
    }),
    (this.endShadows = function () {
      s = !1;
    }),
    (this.setGlobalState = function (_, x) {
      t = g(_, x, 0);
    }),
    (this.setState = function (_, x, M) {
      const E = _.clippingPlanes,
        C = _.clipIntersection,
        S = _.clipShadows,
        b = n.get(_);
      if (!r || E === null || E.length === 0 || (s && !S)) s ? g(null) : p();
      else {
        const L = s ? 0 : i,
          T = L * 4;
        let R = b.clippingState || null;
        (d.value = R), (R = g(E, x, T, M));
        for (let U = 0; U !== T; ++U) R[U] = t[U];
        (b.clippingState = R),
          (this.numIntersection = C ? this.numPlanes : 0),
          (this.numPlanes += L);
      }
    });
  function p() {
    d.value !== t && ((d.value = t), (d.needsUpdate = i > 0)),
      (e.numPlanes = i),
      (e.numIntersection = 0);
  }
  function g(_, x, M, E) {
    const C = _ !== null ? _.length : 0;
    let S = null;
    if (C !== 0) {
      if (((S = d.value), E !== !0 || S === null)) {
        const b = M + C * 4,
          L = x.matrixWorldInverse;
        c.getNormalMatrix(L),
          (S === null || S.length < b) && (S = new Float32Array(b));
        for (let T = 0, R = M; T !== C; ++T, R += 4)
          u.copy(_[T]).applyMatrix4(L, c),
            u.normal.toArray(S, R),
            (S[R + 3] = u.constant);
      }
      (d.value = S), (d.needsUpdate = !0);
    }
    return (e.numPlanes = C), (e.numIntersection = 0), S;
  }
}
function Rx(n) {
  let e = new WeakMap();
  function t(u, c) {
    return c === pu ? (u.mapping = Lo) : c === mu && (u.mapping = Do), u;
  }
  function i(u) {
    if (u && u.isTexture && u.isRenderTargetTexture === !1) {
      const c = u.mapping;
      if (c === pu || c === mu)
        if (e.has(u)) {
          const d = e.get(u).texture;
          return t(d, u.mapping);
        } else {
          const d = u.image;
          if (d && d.height > 0) {
            const p = new H_(d.height / 2);
            return (
              p.fromEquirectangularTexture(n, u),
              e.set(u, p),
              u.addEventListener("dispose", r),
              t(p.texture, u.mapping)
            );
          } else return null;
        }
    }
    return u;
  }
  function r(u) {
    const c = u.target;
    c.removeEventListener("dispose", r);
    const d = e.get(c);
    d !== void 0 && (e.delete(c), d.dispose());
  }
  function s() {
    e = new WeakMap();
  }
  return { get: i, dispose: s };
}
class S1 extends y1 {
  constructor(e = -1, t = 1, i = 1, r = -1, s = 0.1, u = 2e3) {
    super(),
      (this.isOrthographicCamera = !0),
      (this.type = "OrthographicCamera"),
      (this.zoom = 1),
      (this.view = null),
      (this.left = e),
      (this.right = t),
      (this.top = i),
      (this.bottom = r),
      (this.near = s),
      (this.far = u),
      this.updateProjectionMatrix();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.left = e.left),
      (this.right = e.right),
      (this.top = e.top),
      (this.bottom = e.bottom),
      (this.near = e.near),
      (this.far = e.far),
      (this.zoom = e.zoom),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      this
    );
  }
  setViewOffset(e, t, i, r, s, u) {
    this.view === null &&
      (this.view = {
        enabled: !0,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1,
      }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = t),
      (this.view.offsetX = i),
      (this.view.offsetY = r),
      (this.view.width = s),
      (this.view.height = u),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom),
      t = (this.top - this.bottom) / (2 * this.zoom),
      i = (this.right + this.left) / 2,
      r = (this.top + this.bottom) / 2;
    let s = i - e,
      u = i + e,
      c = r + t,
      d = r - t;
    if (this.view !== null && this.view.enabled) {
      const p = (this.right - this.left) / this.view.fullWidth / this.zoom,
        g = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      (s += p * this.view.offsetX),
        (u = s + p * this.view.width),
        (c -= g * this.view.offsetY),
        (d = c - g * this.view.height);
    }
    this.projectionMatrix.makeOrthographic(
      s,
      u,
      c,
      d,
      this.near,
      this.far,
      this.coordinateSystem
    ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.zoom = this.zoom),
      (t.object.left = this.left),
      (t.object.right = this.right),
      (t.object.top = this.top),
      (t.object.bottom = this.bottom),
      (t.object.near = this.near),
      (t.object.far = this.far),
      this.view !== null && (t.object.view = Object.assign({}, this.view)),
      t
    );
  }
}
const vo = 4,
  wh = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
  Cs = 20,
  j0 = new S1(),
  Th = new Nt();
let X0 = null;
const ws = (1 + Math.sqrt(5)) / 2,
  co = 1 / ws,
  Ch = [
    new J(1, 1, 1),
    new J(-1, 1, 1),
    new J(1, 1, -1),
    new J(-1, 1, -1),
    new J(0, ws, co),
    new J(0, ws, -co),
    new J(co, 0, ws),
    new J(-co, 0, ws),
    new J(ws, co, 0),
    new J(-ws, co, 0),
  ];
class Rh {
  constructor(e) {
    (this._renderer = e),
      (this._pingPongRenderTarget = null),
      (this._lodMax = 0),
      (this._cubeSize = 0),
      (this._lodPlanes = []),
      (this._sizeLods = []),
      (this._sigmas = []),
      (this._blurMaterial = null),
      (this._cubemapMaterial = null),
      (this._equirectMaterial = null),
      this._compileMaterial(this._blurMaterial);
  }
  fromScene(e, t = 0, i = 0.1, r = 100) {
    (X0 = this._renderer.getRenderTarget()), this._setSize(256);
    const s = this._allocateTargets();
    return (
      (s.depthBuffer = !0),
      this._sceneToCubeUV(e, i, r, s),
      t > 0 && this._blur(s, 0, 0, t),
      this._applyPMREM(s),
      this._cleanup(s),
      s
    );
  }
  fromEquirectangular(e, t = null) {
    return this._fromTexture(e, t);
  }
  fromCubemap(e, t = null) {
    return this._fromTexture(e, t);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null &&
      ((this._cubemapMaterial = Dh()),
      this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null &&
      ((this._equirectMaterial = Lh()),
      this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    this._dispose(),
      this._cubemapMaterial !== null && this._cubemapMaterial.dispose(),
      this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  _setSize(e) {
    (this._lodMax = Math.floor(Math.log2(e))),
      (this._cubeSize = Math.pow(2, this._lodMax));
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(),
      this._pingPongRenderTarget !== null &&
        this._pingPongRenderTarget.dispose();
    for (let e = 0; e < this._lodPlanes.length; e++)
      this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    this._renderer.setRenderTarget(X0),
      (e.scissorTest = !1),
      EA(e, 0, 0, e.width, e.height);
  }
  _fromTexture(e, t) {
    e.mapping === Lo || e.mapping === Do
      ? this._setSize(
          e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width
        )
      : this._setSize(e.image.width / 4),
      (X0 = this._renderer.getRenderTarget());
    const i = t || this._allocateTargets();
    return (
      this._textureToCubeUV(e, i), this._applyPMREM(i), this._cleanup(i), i
    );
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112),
      t = 4 * this._cubeSize,
      i = {
        magFilter: ki,
        minFilter: ki,
        generateMipmaps: !1,
        type: Ea,
        format: nr,
        colorSpace: xr,
        depthBuffer: !1,
      },
      r = Ph(e, t, i);
    if (
      this._pingPongRenderTarget === null ||
      this._pingPongRenderTarget.width !== e ||
      this._pingPongRenderTarget.height !== t
    ) {
      this._pingPongRenderTarget !== null && this._dispose(),
        (this._pingPongRenderTarget = Ph(e, t, i));
      const { _lodMax: s } = this;
      ({
        sizeLods: this._sizeLods,
        lodPlanes: this._lodPlanes,
        sigmas: this._sigmas,
      } = Px(s)),
        (this._blurMaterial = Lx(s, e, t));
    }
    return r;
  }
  _compileMaterial(e) {
    const t = new Dn(this._lodPlanes[0], e);
    this._renderer.compile(t, j0);
  }
  _sceneToCubeUV(e, t, i, r) {
    const c = new zi(90, 1, t, i),
      d = [1, -1, 1, 1, 1, 1],
      p = [1, 1, 1, -1, -1, -1],
      g = this._renderer,
      _ = g.autoClear,
      x = g.toneMapping;
    g.getClearColor(Th), (g.toneMapping = As), (g.autoClear = !1);
    const M = new Va({
        name: "PMREM.Background",
        side: ci,
        depthWrite: !1,
        depthTest: !1,
      }),
      E = new Dn(new Wa(), M);
    let C = !1;
    const S = e.background;
    S
      ? S.isColor && (M.color.copy(S), (e.background = null), (C = !0))
      : (M.color.copy(Th), (C = !0));
    for (let b = 0; b < 6; b++) {
      const L = b % 3;
      L === 0
        ? (c.up.set(0, d[b], 0), c.lookAt(p[b], 0, 0))
        : L === 1
        ? (c.up.set(0, 0, d[b]), c.lookAt(0, p[b], 0))
        : (c.up.set(0, d[b], 0), c.lookAt(0, 0, p[b]));
      const T = this._cubeSize;
      EA(r, L * T, b > 2 ? T : 0, T, T),
        g.setRenderTarget(r),
        C && g.render(E, c),
        g.render(e, c);
    }
    E.geometry.dispose(),
      E.material.dispose(),
      (g.toneMapping = x),
      (g.autoClear = _),
      (e.background = S);
  }
  _textureToCubeUV(e, t) {
    const i = this._renderer,
      r = e.mapping === Lo || e.mapping === Do;
    r
      ? (this._cubemapMaterial === null && (this._cubemapMaterial = Dh()),
        (this._cubemapMaterial.uniforms.flipEnvMap.value =
          e.isRenderTargetTexture === !1 ? -1 : 1))
      : this._equirectMaterial === null && (this._equirectMaterial = Lh());
    const s = r ? this._cubemapMaterial : this._equirectMaterial,
      u = new Dn(this._lodPlanes[0], s),
      c = s.uniforms;
    c.envMap.value = e;
    const d = this._cubeSize;
    EA(t, 0, 0, 3 * d, 2 * d), i.setRenderTarget(t), i.render(u, j0);
  }
  _applyPMREM(e) {
    const t = this._renderer,
      i = t.autoClear;
    t.autoClear = !1;
    for (let r = 1; r < this._lodPlanes.length; r++) {
      const s = Math.sqrt(
          this._sigmas[r] * this._sigmas[r] -
            this._sigmas[r - 1] * this._sigmas[r - 1]
        ),
        u = Ch[(r - 1) % Ch.length];
      this._blur(e, r - 1, r, s, u);
    }
    t.autoClear = i;
  }
  _blur(e, t, i, r, s) {
    const u = this._pingPongRenderTarget;
    this._halfBlur(e, u, t, i, r, "latitudinal", s),
      this._halfBlur(u, e, i, i, r, "longitudinal", s);
  }
  _halfBlur(e, t, i, r, s, u, c) {
    const d = this._renderer,
      p = this._blurMaterial;
    u !== "latitudinal" &&
      u !== "longitudinal" &&
      console.error(
        "blur direction must be either latitudinal or longitudinal!"
      );
    const g = 3,
      _ = new Dn(this._lodPlanes[r], p),
      x = p.uniforms,
      M = this._sizeLods[i] - 1,
      E = isFinite(s) ? Math.PI / (2 * M) : (2 * Math.PI) / (2 * Cs - 1),
      C = s / E,
      S = isFinite(s) ? 1 + Math.floor(g * C) : Cs;
    S > Cs &&
      console.warn(
        `sigmaRadians, ${s}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${Cs}`
      );
    const b = [];
    let L = 0;
    for (let I = 0; I < Cs; ++I) {
      const N = I / C,
        D = Math.exp((-N * N) / 2);
      b.push(D), I === 0 ? (L += D) : I < S && (L += 2 * D);
    }
    for (let I = 0; I < b.length; I++) b[I] = b[I] / L;
    (x.envMap.value = e.texture),
      (x.samples.value = S),
      (x.weights.value = b),
      (x.latitudinal.value = u === "latitudinal"),
      c && (x.poleAxis.value = c);
    const { _lodMax: T } = this;
    (x.dTheta.value = E), (x.mipInt.value = T - i);
    const R = this._sizeLods[r],
      U = 3 * R * (r > T - vo ? r - T + vo : 0),
      q = 4 * (this._cubeSize - R);
    EA(t, U, q, 3 * R, 2 * R), d.setRenderTarget(t), d.render(_, j0);
  }
}
function Px(n) {
  const e = [],
    t = [],
    i = [];
  let r = n;
  const s = n - vo + 1 + wh.length;
  for (let u = 0; u < s; u++) {
    const c = Math.pow(2, r);
    t.push(c);
    let d = 1 / c;
    u > n - vo ? (d = wh[u - n + vo - 1]) : u === 0 && (d = 0), i.push(d);
    const p = 1 / (c - 2),
      g = -p,
      _ = 1 + p,
      x = [g, g, _, g, _, _, g, g, _, _, g, _],
      M = 6,
      E = 6,
      C = 3,
      S = 2,
      b = 1,
      L = new Float32Array(C * E * M),
      T = new Float32Array(S * E * M),
      R = new Float32Array(b * E * M);
    for (let q = 0; q < M; q++) {
      const I = ((q % 3) * 2) / 3 - 1,
        N = q > 2 ? 0 : -1,
        D = [
          I,
          N,
          0,
          I + 2 / 3,
          N,
          0,
          I + 2 / 3,
          N + 1,
          0,
          I,
          N,
          0,
          I + 2 / 3,
          N + 1,
          0,
          I,
          N + 1,
          0,
        ];
      L.set(D, C * E * q), T.set(x, S * E * q);
      const O = [q, q, q, q, q, q];
      R.set(O, b * E * q);
    }
    const U = new cn();
    U.setAttribute("position", new mn(L, C)),
      U.setAttribute("uv", new mn(T, S)),
      U.setAttribute("faceIndex", new mn(R, b)),
      e.push(U),
      r > vo && r--;
  }
  return { lodPlanes: e, sizeLods: t, sigmas: i };
}
function Ph(n, e, t) {
  const i = new qs(n, e, t);
  return (
    (i.texture.mapping = Wl),
    (i.texture.name = "PMREM.cubeUv"),
    (i.scissorTest = !0),
    i
  );
}
function EA(n, e, t, i, r) {
  n.viewport.set(e, t, i, r), n.scissor.set(e, t, i, r);
}
function Lx(n, e, t) {
  const i = new Float32Array(Cs),
    r = new J(0, 1, 0);
  return new or({
    name: "SphericalGaussianBlur",
    defines: {
      n: Cs,
      CUBEUV_TEXEL_WIDTH: 1 / e,
      CUBEUV_TEXEL_HEIGHT: 1 / t,
      CUBEUV_MAX_MIP: `${n}.0`,
    },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: i },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: r },
    },
    vertexShader: dc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
    blending: os,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Lh() {
  return new or({
    name: "EquirectangularToCubeUV",
    uniforms: { envMap: { value: null } },
    vertexShader: dc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
    blending: os,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Dh() {
  return new or({
    name: "CubemapToCubeUV",
    uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
    vertexShader: dc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
    blending: os,
    depthTest: !1,
    depthWrite: !1,
  });
}
function dc() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function Dx(n) {
  let e = new WeakMap(),
    t = null;
  function i(c) {
    if (c && c.isTexture) {
      const d = c.mapping,
        p = d === pu || d === mu,
        g = d === Lo || d === Do;
      if (p || g)
        if (c.isRenderTargetTexture && c.needsPMREMUpdate === !0) {
          c.needsPMREMUpdate = !1;
          let _ = e.get(c);
          return (
            t === null && (t = new Rh(n)),
            (_ = p ? t.fromEquirectangular(c, _) : t.fromCubemap(c, _)),
            e.set(c, _),
            _.texture
          );
        } else {
          if (e.has(c)) return e.get(c).texture;
          {
            const _ = c.image;
            if ((p && _ && _.height > 0) || (g && _ && r(_))) {
              t === null && (t = new Rh(n));
              const x = p ? t.fromEquirectangular(c) : t.fromCubemap(c);
              return e.set(c, x), c.addEventListener("dispose", s), x.texture;
            } else return null;
          }
        }
    }
    return c;
  }
  function r(c) {
    let d = 0;
    const p = 6;
    for (let g = 0; g < p; g++) c[g] !== void 0 && d++;
    return d === p;
  }
  function s(c) {
    const d = c.target;
    d.removeEventListener("dispose", s);
    const p = e.get(d);
    p !== void 0 && (e.delete(d), p.dispose());
  }
  function u() {
    (e = new WeakMap()), t !== null && (t.dispose(), (t = null));
  }
  return { get: i, dispose: u };
}
function Ix(n) {
  const e = {};
  function t(i) {
    if (e[i] !== void 0) return e[i];
    let r;
    switch (i) {
      case "WEBGL_depth_texture":
        r =
          n.getExtension("WEBGL_depth_texture") ||
          n.getExtension("MOZ_WEBGL_depth_texture") ||
          n.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        r =
          n.getExtension("EXT_texture_filter_anisotropic") ||
          n.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
          n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        r =
          n.getExtension("WEBGL_compressed_texture_s3tc") ||
          n.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
          n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        r =
          n.getExtension("WEBGL_compressed_texture_pvrtc") ||
          n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        r = n.getExtension(i);
    }
    return (e[i] = r), r;
  }
  return {
    has: function (i) {
      return t(i) !== null;
    },
    init: function (i) {
      i.isWebGL2
        ? t("EXT_color_buffer_float")
        : (t("WEBGL_depth_texture"),
          t("OES_texture_float"),
          t("OES_texture_half_float"),
          t("OES_texture_half_float_linear"),
          t("OES_standard_derivatives"),
          t("OES_element_index_uint"),
          t("OES_vertex_array_object"),
          t("ANGLE_instanced_arrays")),
        t("OES_texture_float_linear"),
        t("EXT_color_buffer_half_float"),
        t("WEBGL_multisampled_render_to_texture");
    },
    get: function (i) {
      const r = t(i);
      return (
        r === null &&
          console.warn(
            "THREE.WebGLRenderer: " + i + " extension not supported."
          ),
        r
      );
    },
  };
}
function Ox(n, e, t, i) {
  const r = {},
    s = new WeakMap();
  function u(_) {
    const x = _.target;
    x.index !== null && e.remove(x.index);
    for (const E in x.attributes) e.remove(x.attributes[E]);
    for (const E in x.morphAttributes) {
      const C = x.morphAttributes[E];
      for (let S = 0, b = C.length; S < b; S++) e.remove(C[S]);
    }
    x.removeEventListener("dispose", u), delete r[x.id];
    const M = s.get(x);
    M && (e.remove(M), s.delete(x)),
      i.releaseStatesOfGeometry(x),
      x.isInstancedBufferGeometry === !0 && delete x._maxInstanceCount,
      t.memory.geometries--;
  }
  function c(_, x) {
    return (
      r[x.id] === !0 ||
        (x.addEventListener("dispose", u),
        (r[x.id] = !0),
        t.memory.geometries++),
      x
    );
  }
  function d(_) {
    const x = _.attributes;
    for (const E in x) e.update(x[E], n.ARRAY_BUFFER);
    const M = _.morphAttributes;
    for (const E in M) {
      const C = M[E];
      for (let S = 0, b = C.length; S < b; S++) e.update(C[S], n.ARRAY_BUFFER);
    }
  }
  function p(_) {
    const x = [],
      M = _.index,
      E = _.attributes.position;
    let C = 0;
    if (M !== null) {
      const L = M.array;
      C = M.version;
      for (let T = 0, R = L.length; T < R; T += 3) {
        const U = L[T + 0],
          q = L[T + 1],
          I = L[T + 2];
        x.push(U, q, q, I, I, U);
      }
    } else if (E !== void 0) {
      const L = E.array;
      C = E.version;
      for (let T = 0, R = L.length / 3 - 1; T < R; T += 3) {
        const U = T + 0,
          q = T + 1,
          I = T + 2;
        x.push(U, q, q, I, I, U);
      }
    } else return;
    const S = new (c1(x) ? _1 : g1)(x, 1);
    S.version = C;
    const b = s.get(_);
    b && e.remove(b), s.set(_, S);
  }
  function g(_) {
    const x = s.get(_);
    if (x) {
      const M = _.index;
      M !== null && x.version < M.version && p(_);
    } else p(_);
    return s.get(_);
  }
  return { get: c, update: d, getWireframeAttribute: g };
}
function Ux(n, e, t, i) {
  const r = i.isWebGL2;
  let s;
  function u(x) {
    s = x;
  }
  let c, d;
  function p(x) {
    (c = x.type), (d = x.bytesPerElement);
  }
  function g(x, M) {
    n.drawElements(s, M, c, x * d), t.update(M, s, 1);
  }
  function _(x, M, E) {
    if (E === 0) return;
    let C, S;
    if (r) (C = n), (S = "drawElementsInstanced");
    else if (
      ((C = e.get("ANGLE_instanced_arrays")),
      (S = "drawElementsInstancedANGLE"),
      C === null)
    ) {
      console.error(
        "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    C[S](s, M, c, x * d, E), t.update(M, s, E);
  }
  (this.setMode = u),
    (this.setIndex = p),
    (this.render = g),
    (this.renderInstances = _);
}
function qx(n) {
  const e = { geometries: 0, textures: 0 },
    t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function i(s, u, c) {
    switch ((t.calls++, u)) {
      case n.TRIANGLES:
        t.triangles += c * (s / 3);
        break;
      case n.LINES:
        t.lines += c * (s / 2);
        break;
      case n.LINE_STRIP:
        t.lines += c * (s - 1);
        break;
      case n.LINE_LOOP:
        t.lines += c * s;
        break;
      case n.POINTS:
        t.points += c * s;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", u);
        break;
    }
  }
  function r() {
    (t.calls = 0), (t.triangles = 0), (t.points = 0), (t.lines = 0);
  }
  return {
    memory: e,
    render: t,
    programs: null,
    autoReset: !0,
    reset: r,
    update: i,
  };
}
function Bx(n, e) {
  return n[0] - e[0];
}
function Nx(n, e) {
  return Math.abs(e[1]) - Math.abs(n[1]);
}
function Fx(n, e, t) {
  const i = {},
    r = new Float32Array(8),
    s = new WeakMap(),
    u = new Ln(),
    c = [];
  for (let p = 0; p < 8; p++) c[p] = [p, 0];
  function d(p, g, _) {
    const x = p.morphTargetInfluences;
    if (e.isWebGL2 === !0) {
      const E =
          g.morphAttributes.position ||
          g.morphAttributes.normal ||
          g.morphAttributes.color,
        C = E !== void 0 ? E.length : 0;
      let S = s.get(g);
      if (S === void 0 || S.count !== C) {
        let k = function () {
          V.dispose(), s.delete(g), g.removeEventListener("dispose", k);
        };
        var M = k;
        S !== void 0 && S.texture.dispose();
        const T = g.morphAttributes.position !== void 0,
          R = g.morphAttributes.normal !== void 0,
          U = g.morphAttributes.color !== void 0,
          q = g.morphAttributes.position || [],
          I = g.morphAttributes.normal || [],
          N = g.morphAttributes.color || [];
        let D = 0;
        T === !0 && (D = 1), R === !0 && (D = 2), U === !0 && (D = 3);
        let O = g.attributes.position.count * D,
          F = 1;
        O > e.maxTextureSize &&
          ((F = Math.ceil(O / e.maxTextureSize)), (O = e.maxTextureSize));
        const $ = new Float32Array(O * F * 4 * C),
          V = new d1($, O, F, C);
        (V.type = ss), (V.needsUpdate = !0);
        const Q = D * 4;
        for (let te = 0; te < C; te++) {
          const ee = q[te],
            se = I[te],
            pe = N[te],
            de = O * F * 4 * te;
          for (let oe = 0; oe < ee.count; oe++) {
            const he = oe * Q;
            T === !0 &&
              (u.fromBufferAttribute(ee, oe),
              ($[de + he + 0] = u.x),
              ($[de + he + 1] = u.y),
              ($[de + he + 2] = u.z),
              ($[de + he + 3] = 0)),
              R === !0 &&
                (u.fromBufferAttribute(se, oe),
                ($[de + he + 4] = u.x),
                ($[de + he + 5] = u.y),
                ($[de + he + 6] = u.z),
                ($[de + he + 7] = 0)),
              U === !0 &&
                (u.fromBufferAttribute(pe, oe),
                ($[de + he + 8] = u.x),
                ($[de + he + 9] = u.y),
                ($[de + he + 10] = u.z),
                ($[de + he + 11] = pe.itemSize === 4 ? u.w : 1));
          }
        }
        (S = { count: C, texture: V, size: new ke(O, F) }),
          s.set(g, S),
          g.addEventListener("dispose", k);
      }
      let b = 0;
      for (let T = 0; T < x.length; T++) b += x[T];
      const L = g.morphTargetsRelative ? 1 : 1 - b;
      _.getUniforms().setValue(n, "morphTargetBaseInfluence", L),
        _.getUniforms().setValue(n, "morphTargetInfluences", x),
        _.getUniforms().setValue(n, "morphTargetsTexture", S.texture, t),
        _.getUniforms().setValue(n, "morphTargetsTextureSize", S.size);
    } else {
      const E = x === void 0 ? 0 : x.length;
      let C = i[g.id];
      if (C === void 0 || C.length !== E) {
        C = [];
        for (let R = 0; R < E; R++) C[R] = [R, 0];
        i[g.id] = C;
      }
      for (let R = 0; R < E; R++) {
        const U = C[R];
        (U[0] = R), (U[1] = x[R]);
      }
      C.sort(Nx);
      for (let R = 0; R < 8; R++)
        R < E && C[R][1]
          ? ((c[R][0] = C[R][0]), (c[R][1] = C[R][1]))
          : ((c[R][0] = Number.MAX_SAFE_INTEGER), (c[R][1] = 0));
      c.sort(Bx);
      const S = g.morphAttributes.position,
        b = g.morphAttributes.normal;
      let L = 0;
      for (let R = 0; R < 8; R++) {
        const U = c[R],
          q = U[0],
          I = U[1];
        q !== Number.MAX_SAFE_INTEGER && I
          ? (S &&
              g.getAttribute("morphTarget" + R) !== S[q] &&
              g.setAttribute("morphTarget" + R, S[q]),
            b &&
              g.getAttribute("morphNormal" + R) !== b[q] &&
              g.setAttribute("morphNormal" + R, b[q]),
            (r[R] = I),
            (L += I))
          : (S &&
              g.hasAttribute("morphTarget" + R) === !0 &&
              g.deleteAttribute("morphTarget" + R),
            b &&
              g.hasAttribute("morphNormal" + R) === !0 &&
              g.deleteAttribute("morphNormal" + R),
            (r[R] = 0));
      }
      const T = g.morphTargetsRelative ? 1 : 1 - L;
      _.getUniforms().setValue(n, "morphTargetBaseInfluence", T),
        _.getUniforms().setValue(n, "morphTargetInfluences", r);
    }
  }
  return { update: d };
}
function kx(n, e, t, i) {
  let r = new WeakMap();
  function s(d) {
    const p = i.render.frame,
      g = d.geometry,
      _ = e.get(d, g);
    if (
      (r.get(_) !== p && (e.update(_), r.set(_, p)),
      d.isInstancedMesh &&
        (d.hasEventListener("dispose", c) === !1 &&
          d.addEventListener("dispose", c),
        r.get(d) !== p &&
          (t.update(d.instanceMatrix, n.ARRAY_BUFFER),
          d.instanceColor !== null && t.update(d.instanceColor, n.ARRAY_BUFFER),
          r.set(d, p))),
      d.isSkinnedMesh)
    ) {
      const x = d.skeleton;
      r.get(x) !== p && (x.update(), r.set(x, p));
    }
    return _;
  }
  function u() {
    r = new WeakMap();
  }
  function c(d) {
    const p = d.target;
    p.removeEventListener("dispose", c),
      t.remove(p.instanceMatrix),
      p.instanceColor !== null && t.remove(p.instanceColor);
  }
  return { update: s, dispose: u };
}
const E1 = new xi(),
  w1 = new d1(),
  T1 = new T_(),
  C1 = new b1(),
  Ih = [],
  Oh = [],
  Uh = new Float32Array(16),
  qh = new Float32Array(9),
  Bh = new Float32Array(4);
function Ho(n, e, t) {
  const i = n[0];
  if (i <= 0 || i > 0) return n;
  const r = e * t;
  let s = Ih[r];
  if ((s === void 0 && ((s = new Float32Array(r)), (Ih[r] = s)), e !== 0)) {
    i.toArray(s, 0);
    for (let u = 1, c = 0; u !== e; ++u) (c += t), n[u].toArray(s, c);
  }
  return s;
}
function In(n, e) {
  if (n.length !== e.length) return !1;
  for (let t = 0, i = n.length; t < i; t++) if (n[t] !== e[t]) return !1;
  return !0;
}
function On(n, e) {
  for (let t = 0, i = e.length; t < i; t++) n[t] = e[t];
}
function Xl(n, e) {
  let t = Oh[e];
  t === void 0 && ((t = new Int32Array(e)), (Oh[e] = t));
  for (let i = 0; i !== e; ++i) t[i] = n.allocateTextureUnit();
  return t;
}
function zx(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1f(this.addr, e), (t[0] = e));
}
function Gx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2f(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (In(t, e)) return;
    n.uniform2fv(this.addr, e), On(t, e);
  }
}
function Hx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3f(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else if (e.r !== void 0)
    (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) &&
      (n.uniform3f(this.addr, e.r, e.g, e.b),
      (t[0] = e.r),
      (t[1] = e.g),
      (t[2] = e.b));
  else {
    if (In(t, e)) return;
    n.uniform3fv(this.addr, e), On(t, e);
  }
}
function Vx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4f(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (In(t, e)) return;
    n.uniform4fv(this.addr, e), On(t, e);
  }
}
function Wx(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (In(t, e)) return;
    n.uniformMatrix2fv(this.addr, !1, e), On(t, e);
  } else {
    if (In(t, i)) return;
    Bh.set(i), n.uniformMatrix2fv(this.addr, !1, Bh), On(t, i);
  }
}
function jx(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (In(t, e)) return;
    n.uniformMatrix3fv(this.addr, !1, e), On(t, e);
  } else {
    if (In(t, i)) return;
    qh.set(i), n.uniformMatrix3fv(this.addr, !1, qh), On(t, i);
  }
}
function Xx(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (In(t, e)) return;
    n.uniformMatrix4fv(this.addr, !1, e), On(t, e);
  } else {
    if (In(t, i)) return;
    Uh.set(i), n.uniformMatrix4fv(this.addr, !1, Uh), On(t, i);
  }
}
function Qx(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1i(this.addr, e), (t[0] = e));
}
function $x(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2i(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (In(t, e)) return;
    n.uniform2iv(this.addr, e), On(t, e);
  }
}
function Yx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3i(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else {
    if (In(t, e)) return;
    n.uniform3iv(this.addr, e), On(t, e);
  }
}
function Zx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4i(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (In(t, e)) return;
    n.uniform4iv(this.addr, e), On(t, e);
  }
}
function Kx(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1ui(this.addr, e), (t[0] = e));
}
function Jx(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2ui(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (In(t, e)) return;
    n.uniform2uiv(this.addr, e), On(t, e);
  }
}
function ey(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3ui(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else {
    if (In(t, e)) return;
    n.uniform3uiv(this.addr, e), On(t, e);
  }
}
function ty(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4ui(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (In(t, e)) return;
    n.uniform4uiv(this.addr, e), On(t, e);
  }
}
function ny(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture2D(e || E1, r);
}
function iy(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture3D(e || T1, r);
}
function ry(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTextureCube(e || C1, r);
}
function sy(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture2DArray(e || w1, r);
}
function oy(n) {
  switch (n) {
    case 5126:
      return zx;
    case 35664:
      return Gx;
    case 35665:
      return Hx;
    case 35666:
      return Vx;
    case 35674:
      return Wx;
    case 35675:
      return jx;
    case 35676:
      return Xx;
    case 5124:
    case 35670:
      return Qx;
    case 35667:
    case 35671:
      return $x;
    case 35668:
    case 35672:
      return Yx;
    case 35669:
    case 35673:
      return Zx;
    case 5125:
      return Kx;
    case 36294:
      return Jx;
    case 36295:
      return ey;
    case 36296:
      return ty;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return ny;
    case 35679:
    case 36299:
    case 36307:
      return iy;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return ry;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return sy;
  }
}
function ay(n, e) {
  n.uniform1fv(this.addr, e);
}
function Ay(n, e) {
  const t = Ho(e, this.size, 2);
  n.uniform2fv(this.addr, t);
}
function ly(n, e) {
  const t = Ho(e, this.size, 3);
  n.uniform3fv(this.addr, t);
}
function uy(n, e) {
  const t = Ho(e, this.size, 4);
  n.uniform4fv(this.addr, t);
}
function cy(n, e) {
  const t = Ho(e, this.size, 4);
  n.uniformMatrix2fv(this.addr, !1, t);
}
function fy(n, e) {
  const t = Ho(e, this.size, 9);
  n.uniformMatrix3fv(this.addr, !1, t);
}
function hy(n, e) {
  const t = Ho(e, this.size, 16);
  n.uniformMatrix4fv(this.addr, !1, t);
}
function dy(n, e) {
  n.uniform1iv(this.addr, e);
}
function py(n, e) {
  n.uniform2iv(this.addr, e);
}
function my(n, e) {
  n.uniform3iv(this.addr, e);
}
function gy(n, e) {
  n.uniform4iv(this.addr, e);
}
function _y(n, e) {
  n.uniform1uiv(this.addr, e);
}
function vy(n, e) {
  n.uniform2uiv(this.addr, e);
}
function xy(n, e) {
  n.uniform3uiv(this.addr, e);
}
function yy(n, e) {
  n.uniform4uiv(this.addr, e);
}
function by(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Xl(t, r);
  In(i, s) || (n.uniform1iv(this.addr, s), On(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture2D(e[u] || E1, s[u]);
}
function My(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Xl(t, r);
  In(i, s) || (n.uniform1iv(this.addr, s), On(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture3D(e[u] || T1, s[u]);
}
function Sy(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Xl(t, r);
  In(i, s) || (n.uniform1iv(this.addr, s), On(i, s));
  for (let u = 0; u !== r; ++u) t.setTextureCube(e[u] || C1, s[u]);
}
function Ey(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Xl(t, r);
  In(i, s) || (n.uniform1iv(this.addr, s), On(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture2DArray(e[u] || w1, s[u]);
}
function wy(n) {
  switch (n) {
    case 5126:
      return ay;
    case 35664:
      return Ay;
    case 35665:
      return ly;
    case 35666:
      return uy;
    case 35674:
      return cy;
    case 35675:
      return fy;
    case 35676:
      return hy;
    case 5124:
    case 35670:
      return dy;
    case 35667:
    case 35671:
      return py;
    case 35668:
    case 35672:
      return my;
    case 35669:
    case 35673:
      return gy;
    case 5125:
      return _y;
    case 36294:
      return vy;
    case 36295:
      return xy;
    case 36296:
      return yy;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return by;
    case 35679:
    case 36299:
    case 36307:
      return My;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return Sy;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return Ey;
  }
}
class Ty {
  constructor(e, t, i) {
    (this.id = e),
      (this.addr = i),
      (this.cache = []),
      (this.setValue = oy(t.type));
  }
}
class Cy {
  constructor(e, t, i) {
    (this.id = e),
      (this.addr = i),
      (this.cache = []),
      (this.size = t.size),
      (this.setValue = wy(t.type));
  }
}
class Ry {
  constructor(e) {
    (this.id = e), (this.seq = []), (this.map = {});
  }
  setValue(e, t, i) {
    const r = this.seq;
    for (let s = 0, u = r.length; s !== u; ++s) {
      const c = r[s];
      c.setValue(e, t[c.id], i);
    }
  }
}
const Q0 = /(\w+)(\])?(\[|\.)?/g;
function Nh(n, e) {
  n.seq.push(e), (n.map[e.id] = e);
}
function Py(n, e, t) {
  const i = n.name,
    r = i.length;
  for (Q0.lastIndex = 0; ; ) {
    const s = Q0.exec(i),
      u = Q0.lastIndex;
    let c = s[1];
    const d = s[2] === "]",
      p = s[3];
    if ((d && (c = c | 0), p === void 0 || (p === "[" && u + 2 === r))) {
      Nh(t, p === void 0 ? new Ty(c, n, e) : new Cy(c, n, e));
      break;
    } else {
      let _ = t.map[c];
      _ === void 0 && ((_ = new Ry(c)), Nh(t, _)), (t = _);
    }
  }
}
class ZA {
  constructor(e, t) {
    (this.seq = []), (this.map = {});
    const i = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
    for (let r = 0; r < i; ++r) {
      const s = e.getActiveUniform(t, r),
        u = e.getUniformLocation(t, s.name);
      Py(s, u, this);
    }
  }
  setValue(e, t, i, r) {
    const s = this.map[t];
    s !== void 0 && s.setValue(e, i, r);
  }
  setOptional(e, t, i) {
    const r = t[i];
    r !== void 0 && this.setValue(e, i, r);
  }
  static upload(e, t, i, r) {
    for (let s = 0, u = t.length; s !== u; ++s) {
      const c = t[s],
        d = i[c.id];
      d.needsUpdate !== !1 && c.setValue(e, d.value, r);
    }
  }
  static seqWithValue(e, t) {
    const i = [];
    for (let r = 0, s = e.length; r !== s; ++r) {
      const u = e[r];
      u.id in t && i.push(u);
    }
    return i;
  }
}
function Fh(n, e, t) {
  const i = n.createShader(e);
  return n.shaderSource(i, t), n.compileShader(i), i;
}
let Ly = 0;
function Dy(n, e) {
  const t = n.split(`
`),
    i = [],
    r = Math.max(e - 6, 0),
    s = Math.min(e + 6, t.length);
  for (let u = r; u < s; u++) {
    const c = u + 1;
    i.push(`${c === e ? ">" : " "} ${c}: ${t[u]}`);
  }
  return i.join(`
`);
}
function Iy(n) {
  switch (n) {
    case xr:
      return ["Linear", "( value )"];
    case fn:
      return ["sRGB", "( value )"];
    default:
      return (
        console.warn("THREE.WebGLProgram: Unsupported color space:", n),
        ["Linear", "( value )"]
      );
  }
}
function kh(n, e, t) {
  const i = n.getShaderParameter(e, n.COMPILE_STATUS),
    r = n.getShaderInfoLog(e).trim();
  if (i && r === "") return "";
  const s = /ERROR: 0:(\d+)/.exec(r);
  if (s) {
    const u = parseInt(s[1]);
    return (
      t.toUpperCase() +
      `

` +
      r +
      `

` +
      Dy(n.getShaderSource(e), u)
    );
  } else return r;
}
function Oy(n, e) {
  const t = Iy(e);
  return "vec4 " + n + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function Uy(n, e) {
  let t;
  switch (e) {
    case C3:
      t = "Linear";
      break;
    case R3:
      t = "Reinhard";
      break;
    case P3:
      t = "OptimizedCineon";
      break;
    case L3:
      t = "ACESFilmic";
      break;
    case D3:
      t = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e),
        (t = "Linear");
  }
  return (
    "vec3 " + n + "( vec3 color ) { return " + t + "ToneMapping( color ); }"
  );
}
function qy(n) {
  return [
    n.extensionDerivatives ||
    n.envMapCubeUVHeight ||
    n.bumpMap ||
    n.normalMapTangentSpace ||
    n.clearcoatNormalMap ||
    n.flatShading ||
    n.shaderID === "physical"
      ? "#extension GL_OES_standard_derivatives : enable"
      : "",
    (n.extensionFragDepth || n.logarithmicDepthBuffer) &&
    n.rendererExtensionFragDepth
      ? "#extension GL_EXT_frag_depth : enable"
      : "",
    n.extensionDrawBuffers && n.rendererExtensionDrawBuffers
      ? "#extension GL_EXT_draw_buffers : require"
      : "",
    (n.extensionShaderTextureLOD || n.envMap || n.transmission) &&
    n.rendererExtensionShaderTextureLod
      ? "#extension GL_EXT_shader_texture_lod : enable"
      : "",
  ].filter(fa).join(`
`);
}
function By(n) {
  const e = [];
  for (const t in n) {
    const i = n[t];
    i !== !1 && e.push("#define " + t + " " + i);
  }
  return e.join(`
`);
}
function Ny(n, e) {
  const t = {},
    i = n.getProgramParameter(e, n.ACTIVE_ATTRIBUTES);
  for (let r = 0; r < i; r++) {
    const s = n.getActiveAttrib(e, r),
      u = s.name;
    let c = 1;
    s.type === n.FLOAT_MAT2 && (c = 2),
      s.type === n.FLOAT_MAT3 && (c = 3),
      s.type === n.FLOAT_MAT4 && (c = 4),
      (t[u] = {
        type: s.type,
        location: n.getAttribLocation(e, u),
        locationSize: c,
      });
  }
  return t;
}
function fa(n) {
  return n !== "";
}
function zh(n, e) {
  const t =
    e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
  return n
    .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
    .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
    .replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps)
    .replace(/NUM_SPOT_LIGHT_COORDS/g, t)
    .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
    .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
    .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    .replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
    .replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps)
    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
    .replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function Gh(n, e) {
  return n
    .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
    .replace(
      /UNION_CLIPPING_PLANES/g,
      e.numClippingPlanes - e.numClipIntersection
    );
}
const Fy = /^[ \t]*#include +<([\w\d./]+)>/gm;
function bu(n) {
  return n.replace(Fy, zy);
}
const ky = new Map([
  ["encodings_fragment", "colorspace_fragment"],
  ["encodings_pars_fragment", "colorspace_pars_fragment"],
  ["output_fragment", "opaque_fragment"],
]);
function zy(n, e) {
  let t = Ft[e];
  if (t === void 0) {
    const i = ky.get(e);
    if (i !== void 0)
      (t = Ft[i]),
        console.warn(
          'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
          e,
          i
        );
    else throw new Error("Can not resolve #include <" + e + ">");
  }
  return bu(t);
}
const Gy =
  /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Hh(n) {
  return n.replace(Gy, Hy);
}
function Hy(n, e, t, i) {
  let r = "";
  for (let s = parseInt(e); s < parseInt(t); s++)
    r += i
      .replace(/\[\s*i\s*\]/g, "[ " + s + " ]")
      .replace(/UNROLLED_LOOP_INDEX/g, s);
  return r;
}
function Vh(n) {
  let e =
    "precision " +
    n.precision +
    ` float;
precision ` +
    n.precision +
    " int;";
  return (
    n.precision === "highp"
      ? (e += `
#define HIGH_PRECISION`)
      : n.precision === "mediump"
      ? (e += `
#define MEDIUM_PRECISION`)
      : n.precision === "lowp" &&
        (e += `
#define LOW_PRECISION`),
    e
  );
}
function Vy(n) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return (
    n.shadowMapType === Jp
      ? (e = "SHADOWMAP_TYPE_PCF")
      : n.shadowMapType === o3
      ? (e = "SHADOWMAP_TYPE_PCF_SOFT")
      : n.shadowMapType === Or && (e = "SHADOWMAP_TYPE_VSM"),
    e
  );
}
function Wy(n) {
  let e = "ENVMAP_TYPE_CUBE";
  if (n.envMap)
    switch (n.envMapMode) {
      case Lo:
      case Do:
        e = "ENVMAP_TYPE_CUBE";
        break;
      case Wl:
        e = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  return e;
}
function jy(n) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (n.envMap)
    switch (n.envMapMode) {
      case Do:
        e = "ENVMAP_MODE_REFRACTION";
        break;
    }
  return e;
}
function Xy(n) {
  let e = "ENVMAP_BLENDING_NONE";
  if (n.envMap)
    switch (n.combine) {
      case Vl:
        e = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case w3:
        e = "ENVMAP_BLENDING_MIX";
        break;
      case T3:
        e = "ENVMAP_BLENDING_ADD";
        break;
    }
  return e;
}
function Qy(n) {
  const e = n.envMapCubeUVHeight;
  if (e === null) return null;
  const t = Math.log2(e) - 2,
    i = 1 / e;
  return {
    texelWidth: 1 / (3 * Math.max(Math.pow(2, t), 7 * 16)),
    texelHeight: i,
    maxMip: t,
  };
}
function $y(n, e, t, i) {
  const r = n.getContext(),
    s = t.defines;
  let u = t.vertexShader,
    c = t.fragmentShader;
  const d = Vy(t),
    p = Wy(t),
    g = jy(t),
    _ = Xy(t),
    x = Qy(t),
    M = t.isWebGL2 ? "" : qy(t),
    E = By(s),
    C = r.createProgram();
  let S,
    b,
    L = t.glslVersion
      ? "#version " +
        t.glslVersion +
        `
`
      : "";
  t.isRawShaderMaterial
    ? ((S = [
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        E,
      ].filter(fa).join(`
`)),
      S.length > 0 &&
        (S += `
`),
      (b = [
        M,
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        E,
      ].filter(fa).join(`
`)),
      b.length > 0 &&
        (b += `
`))
    : ((S = [
        Vh(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        E,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + g : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.mapUv ? "#define MAP_UV " + t.mapUv : "",
        t.alphaMapUv ? "#define ALPHAMAP_UV " + t.alphaMapUv : "",
        t.lightMapUv ? "#define LIGHTMAP_UV " + t.lightMapUv : "",
        t.aoMapUv ? "#define AOMAP_UV " + t.aoMapUv : "",
        t.emissiveMapUv ? "#define EMISSIVEMAP_UV " + t.emissiveMapUv : "",
        t.bumpMapUv ? "#define BUMPMAP_UV " + t.bumpMapUv : "",
        t.normalMapUv ? "#define NORMALMAP_UV " + t.normalMapUv : "",
        t.displacementMapUv
          ? "#define DISPLACEMENTMAP_UV " + t.displacementMapUv
          : "",
        t.metalnessMapUv ? "#define METALNESSMAP_UV " + t.metalnessMapUv : "",
        t.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + t.roughnessMapUv : "",
        t.anisotropyMapUv
          ? "#define ANISOTROPYMAP_UV " + t.anisotropyMapUv
          : "",
        t.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + t.clearcoatMapUv : "",
        t.clearcoatNormalMapUv
          ? "#define CLEARCOAT_NORMALMAP_UV " + t.clearcoatNormalMapUv
          : "",
        t.clearcoatRoughnessMapUv
          ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + t.clearcoatRoughnessMapUv
          : "",
        t.iridescenceMapUv
          ? "#define IRIDESCENCEMAP_UV " + t.iridescenceMapUv
          : "",
        t.iridescenceThicknessMapUv
          ? "#define IRIDESCENCE_THICKNESSMAP_UV " + t.iridescenceThicknessMapUv
          : "",
        t.sheenColorMapUv
          ? "#define SHEEN_COLORMAP_UV " + t.sheenColorMapUv
          : "",
        t.sheenRoughnessMapUv
          ? "#define SHEEN_ROUGHNESSMAP_UV " + t.sheenRoughnessMapUv
          : "",
        t.specularMapUv ? "#define SPECULARMAP_UV " + t.specularMapUv : "",
        t.specularColorMapUv
          ? "#define SPECULAR_COLORMAP_UV " + t.specularColorMapUv
          : "",
        t.specularIntensityMapUv
          ? "#define SPECULAR_INTENSITYMAP_UV " + t.specularIntensityMapUv
          : "",
        t.transmissionMapUv
          ? "#define TRANSMISSIONMAP_UV " + t.transmissionMapUv
          : "",
        t.thicknessMapUv ? "#define THICKNESSMAP_UV " + t.thicknessMapUv : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1
          ? "#define USE_MORPHNORMALS"
          : "",
        t.morphColors && t.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE"
          : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE_STRIDE " + t.morphTextureStride
          : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount
          : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + d : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_UV1",
        "	attribute vec2 uv1;",
        "#endif",
        "#ifdef USE_UV2",
        "	attribute vec2 uv2;",
        "#endif",
        "#ifdef USE_UV3",
        "	attribute vec2 uv3;",
        "#endif",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`,
      ].filter(fa).join(`
`)),
      (b = [
        M,
        Vh(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        E,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + p : "",
        t.envMap ? "#define " + g : "",
        t.envMap ? "#define " + _ : "",
        x ? "#define CUBEUV_TEXEL_WIDTH " + x.texelWidth : "",
        x ? "#define CUBEUV_TEXEL_HEIGHT " + x.texelHeight : "",
        x ? "#define CUBEUV_MAX_MIP " + x.maxMip + ".0" : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropy ? "#define USE_ANISOTROPY" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescence ? "#define USE_IRIDESCENCE" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + d : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== As ? "#define TONE_MAPPING" : "",
        t.toneMapping !== As ? Ft.tonemapping_pars_fragment : "",
        t.toneMapping !== As ? Uy("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.opaque ? "#define OPAQUE" : "",
        Ft.colorspace_pars_fragment,
        Oy("linearToOutputTexel", t.outputColorSpace),
        t.useDepthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`,
      ].filter(fa).join(`
`))),
    (u = bu(u)),
    (u = zh(u, t)),
    (u = Gh(u, t)),
    (c = bu(c)),
    (c = zh(c, t)),
    (c = Gh(c, t)),
    (u = Hh(u)),
    (c = Hh(c)),
    t.isWebGL2 &&
      t.isRawShaderMaterial !== !0 &&
      ((L = `#version 300 es
`),
      (S =
        [
          "precision mediump sampler2DArray;",
          "#define attribute in",
          "#define varying out",
          "#define texture2D texture",
        ].join(`
`) +
        `
` +
        S),
      (b =
        [
          "#define varying in",
          t.glslVersion === uh
            ? ""
            : "layout(location = 0) out highp vec4 pc_fragColor;",
          t.glslVersion === uh ? "" : "#define gl_FragColor pc_fragColor",
          "#define gl_FragDepthEXT gl_FragDepth",
          "#define texture2D texture",
          "#define textureCube texture",
          "#define texture2DProj textureProj",
          "#define texture2DLodEXT textureLod",
          "#define texture2DProjLodEXT textureProjLod",
          "#define textureCubeLodEXT textureLod",
          "#define texture2DGradEXT textureGrad",
          "#define texture2DProjGradEXT textureProjGrad",
          "#define textureCubeGradEXT textureGrad",
        ].join(`
`) +
        `
` +
        b));
  const T = L + S + u,
    R = L + b + c,
    U = Fh(r, r.VERTEX_SHADER, T),
    q = Fh(r, r.FRAGMENT_SHADER, R);
  if (
    (r.attachShader(C, U),
    r.attachShader(C, q),
    t.index0AttributeName !== void 0
      ? r.bindAttribLocation(C, 0, t.index0AttributeName)
      : t.morphTargets === !0 && r.bindAttribLocation(C, 0, "position"),
    r.linkProgram(C),
    n.debug.checkShaderErrors)
  ) {
    const D = r.getProgramInfoLog(C).trim(),
      O = r.getShaderInfoLog(U).trim(),
      F = r.getShaderInfoLog(q).trim();
    let $ = !0,
      V = !0;
    if (r.getProgramParameter(C, r.LINK_STATUS) === !1)
      if ((($ = !1), typeof n.debug.onShaderError == "function"))
        n.debug.onShaderError(r, C, U, q);
      else {
        const Q = kh(r, U, "vertex"),
          k = kh(r, q, "fragment");
        console.error(
          "THREE.WebGLProgram: Shader Error " +
            r.getError() +
            " - VALIDATE_STATUS " +
            r.getProgramParameter(C, r.VALIDATE_STATUS) +
            `

Program Info Log: ` +
            D +
            `
` +
            Q +
            `
` +
            k
        );
      }
    else
      D !== ""
        ? console.warn("THREE.WebGLProgram: Program Info Log:", D)
        : (O === "" || F === "") && (V = !1);
    V &&
      (this.diagnostics = {
        runnable: $,
        programLog: D,
        vertexShader: { log: O, prefix: S },
        fragmentShader: { log: F, prefix: b },
      });
  }
  r.deleteShader(U), r.deleteShader(q);
  let I;
  this.getUniforms = function () {
    return I === void 0 && (I = new ZA(r, C)), I;
  };
  let N;
  return (
    (this.getAttributes = function () {
      return N === void 0 && (N = Ny(r, C)), N;
    }),
    (this.destroy = function () {
      i.releaseStatesOfProgram(this),
        r.deleteProgram(C),
        (this.program = void 0);
    }),
    (this.type = t.shaderType),
    (this.name = t.shaderName),
    (this.id = Ly++),
    (this.cacheKey = e),
    (this.usedTimes = 1),
    (this.program = C),
    (this.vertexShader = U),
    (this.fragmentShader = q),
    this
  );
}
let Yy = 0;
class Zy {
  constructor() {
    (this.shaderCache = new Map()), (this.materialCache = new Map());
  }
  update(e) {
    const t = e.vertexShader,
      i = e.fragmentShader,
      r = this._getShaderStage(t),
      s = this._getShaderStage(i),
      u = this._getShaderCacheForMaterial(e);
    return (
      u.has(r) === !1 && (u.add(r), r.usedTimes++),
      u.has(s) === !1 && (u.add(s), s.usedTimes++),
      this
    );
  }
  remove(e) {
    const t = this.materialCache.get(e);
    for (const i of t)
      i.usedTimes--, i.usedTimes === 0 && this.shaderCache.delete(i.code);
    return this.materialCache.delete(e), this;
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(e) {
    const t = this.materialCache;
    let i = t.get(e);
    return i === void 0 && ((i = new Set()), t.set(e, i)), i;
  }
  _getShaderStage(e) {
    const t = this.shaderCache;
    let i = t.get(e);
    return i === void 0 && ((i = new Ky(e)), t.set(e, i)), i;
  }
}
class Ky {
  constructor(e) {
    (this.id = Yy++), (this.code = e), (this.usedTimes = 0);
  }
}
function Jy(n, e, t, i, r, s, u) {
  const c = new p1(),
    d = new Zy(),
    p = [],
    g = r.isWebGL2,
    _ = r.logarithmicDepthBuffer,
    x = r.vertexTextures;
  let M = r.precision;
  const E = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite",
  };
  function C(D) {
    return D === 0 ? "uv" : `uv${D}`;
  }
  function S(D, O, F, $, V) {
    const Q = $.fog,
      k = V.geometry,
      te = D.isMeshStandardMaterial ? $.environment : null,
      ee = (D.isMeshStandardMaterial ? t : e).get(D.envMap || te),
      se = ee && ee.mapping === Wl ? ee.image.height : null,
      pe = E[D.type];
    D.precision !== null &&
      ((M = r.getMaxPrecision(D.precision)),
      M !== D.precision &&
        console.warn(
          "THREE.WebGLProgram.getParameters:",
          D.precision,
          "not supported, using",
          M,
          "instead."
        ));
    const de =
        k.morphAttributes.position ||
        k.morphAttributes.normal ||
        k.morphAttributes.color,
      oe = de !== void 0 ? de.length : 0;
    let he = 0;
    k.morphAttributes.position !== void 0 && (he = 1),
      k.morphAttributes.normal !== void 0 && (he = 2),
      k.morphAttributes.color !== void 0 && (he = 3);
    let Te, Pe, Oe, Je;
    if (pe) {
      const Jt = er[pe];
      (Te = Jt.vertexShader), (Pe = Jt.fragmentShader);
    } else
      (Te = D.vertexShader),
        (Pe = D.fragmentShader),
        d.update(D),
        (Oe = d.getVertexShaderID(D)),
        (Je = d.getFragmentShaderID(D));
    const rt = n.getRenderTarget(),
      ot = V.isInstancedMesh === !0,
      Rt = !!D.map,
      It = !!D.matcap,
      ft = !!ee,
      ne = !!D.aoMap,
      ze = !!D.lightMap,
      Ce = !!D.bumpMap,
      Ne = !!D.normalMap,
      Le = !!D.displacementMap,
      At = !!D.emissiveMap,
      nt = !!D.metalnessMap,
      at = !!D.roughnessMap,
      mt = D.anisotropy > 0,
      xt = D.clearcoat > 0,
      nn = D.iridescence > 0,
      Y = D.sheen > 0,
      G = D.transmission > 0,
      xe = mt && !!D.anisotropyMap,
      qe = xt && !!D.clearcoatMap,
      Ie = xt && !!D.clearcoatNormalMap,
      Be = xt && !!D.clearcoatRoughnessMap,
      ut = nn && !!D.iridescenceMap,
      Fe = nn && !!D.iridescenceThicknessMap,
      be = Y && !!D.sheenColorMap,
      ie = Y && !!D.sheenRoughnessMap,
      Re = !!D.specularMap,
      tt = !!D.specularColorMap,
      Xe = !!D.specularIntensityMap,
      et = G && !!D.transmissionMap,
      Et = G && !!D.thicknessMap,
      Vt = !!D.gradientMap,
      ae = !!D.alphaMap,
      $e = D.alphaTest > 0,
      Me = !!D.alphaHash,
      Ue = !!D.extensions,
      fe = !!k.attributes.uv1,
      kt = !!k.attributes.uv2,
      Yt = !!k.attributes.uv3;
    let rn = As;
    return (
      D.toneMapped &&
        (rt === null || rt.isXRRenderTarget === !0) &&
        (rn = n.toneMapping),
      {
        isWebGL2: g,
        shaderID: pe,
        shaderType: D.type,
        shaderName: D.name,
        vertexShader: Te,
        fragmentShader: Pe,
        defines: D.defines,
        customVertexShaderID: Oe,
        customFragmentShaderID: Je,
        isRawShaderMaterial: D.isRawShaderMaterial === !0,
        glslVersion: D.glslVersion,
        precision: M,
        instancing: ot,
        instancingColor: ot && V.instanceColor !== null,
        supportsVertexTextures: x,
        outputColorSpace:
          rt === null
            ? n.outputColorSpace
            : rt.isXRRenderTarget === !0
            ? rt.texture.colorSpace
            : xr,
        map: Rt,
        matcap: It,
        envMap: ft,
        envMapMode: ft && ee.mapping,
        envMapCubeUVHeight: se,
        aoMap: ne,
        lightMap: ze,
        bumpMap: Ce,
        normalMap: Ne,
        displacementMap: x && Le,
        emissiveMap: At,
        normalMapObjectSpace: Ne && D.normalMapType === X3,
        normalMapTangentSpace: Ne && D.normalMapType === lc,
        metalnessMap: nt,
        roughnessMap: at,
        anisotropy: mt,
        anisotropyMap: xe,
        clearcoat: xt,
        clearcoatMap: qe,
        clearcoatNormalMap: Ie,
        clearcoatRoughnessMap: Be,
        iridescence: nn,
        iridescenceMap: ut,
        iridescenceThicknessMap: Fe,
        sheen: Y,
        sheenColorMap: be,
        sheenRoughnessMap: ie,
        specularMap: Re,
        specularColorMap: tt,
        specularIntensityMap: Xe,
        transmission: G,
        transmissionMap: et,
        thicknessMap: Et,
        gradientMap: Vt,
        opaque: D.transparent === !1 && D.blending === as,
        alphaMap: ae,
        alphaTest: $e,
        alphaHash: Me,
        combine: D.combine,
        mapUv: Rt && C(D.map.channel),
        aoMapUv: ne && C(D.aoMap.channel),
        lightMapUv: ze && C(D.lightMap.channel),
        bumpMapUv: Ce && C(D.bumpMap.channel),
        normalMapUv: Ne && C(D.normalMap.channel),
        displacementMapUv: Le && C(D.displacementMap.channel),
        emissiveMapUv: At && C(D.emissiveMap.channel),
        metalnessMapUv: nt && C(D.metalnessMap.channel),
        roughnessMapUv: at && C(D.roughnessMap.channel),
        anisotropyMapUv: xe && C(D.anisotropyMap.channel),
        clearcoatMapUv: qe && C(D.clearcoatMap.channel),
        clearcoatNormalMapUv: Ie && C(D.clearcoatNormalMap.channel),
        clearcoatRoughnessMapUv: Be && C(D.clearcoatRoughnessMap.channel),
        iridescenceMapUv: ut && C(D.iridescenceMap.channel),
        iridescenceThicknessMapUv: Fe && C(D.iridescenceThicknessMap.channel),
        sheenColorMapUv: be && C(D.sheenColorMap.channel),
        sheenRoughnessMapUv: ie && C(D.sheenRoughnessMap.channel),
        specularMapUv: Re && C(D.specularMap.channel),
        specularColorMapUv: tt && C(D.specularColorMap.channel),
        specularIntensityMapUv: Xe && C(D.specularIntensityMap.channel),
        transmissionMapUv: et && C(D.transmissionMap.channel),
        thicknessMapUv: Et && C(D.thicknessMap.channel),
        alphaMapUv: ae && C(D.alphaMap.channel),
        vertexTangents: !!k.attributes.tangent && (Ne || mt),
        vertexColors: D.vertexColors,
        vertexAlphas:
          D.vertexColors === !0 &&
          !!k.attributes.color &&
          k.attributes.color.itemSize === 4,
        vertexUv1s: fe,
        vertexUv2s: kt,
        vertexUv3s: Yt,
        pointsUvs: V.isPoints === !0 && !!k.attributes.uv && (Rt || ae),
        fog: !!Q,
        useFog: D.fog === !0,
        fogExp2: Q && Q.isFogExp2,
        flatShading: D.flatShading === !0,
        sizeAttenuation: D.sizeAttenuation === !0,
        logarithmicDepthBuffer: _,
        skinning: V.isSkinnedMesh === !0,
        morphTargets: k.morphAttributes.position !== void 0,
        morphNormals: k.morphAttributes.normal !== void 0,
        morphColors: k.morphAttributes.color !== void 0,
        morphTargetsCount: oe,
        morphTextureStride: he,
        numDirLights: O.directional.length,
        numPointLights: O.point.length,
        numSpotLights: O.spot.length,
        numSpotLightMaps: O.spotLightMap.length,
        numRectAreaLights: O.rectArea.length,
        numHemiLights: O.hemi.length,
        numDirLightShadows: O.directionalShadowMap.length,
        numPointLightShadows: O.pointShadowMap.length,
        numSpotLightShadows: O.spotShadowMap.length,
        numSpotLightShadowsWithMaps: O.numSpotLightShadowsWithMaps,
        numClippingPlanes: u.numPlanes,
        numClipIntersection: u.numIntersection,
        dithering: D.dithering,
        shadowMapEnabled: n.shadowMap.enabled && F.length > 0,
        shadowMapType: n.shadowMap.type,
        toneMapping: rn,
        useLegacyLights: n._useLegacyLights,
        decodeVideoTexture:
          Rt && D.map.isVideoTexture === !0 && D.map.colorSpace === fn,
        premultipliedAlpha: D.premultipliedAlpha,
        doubleSided: D.side === gi,
        flipSided: D.side === ci,
        useDepthPacking: D.depthPacking >= 0,
        depthPacking: D.depthPacking || 0,
        index0AttributeName: D.index0AttributeName,
        extensionDerivatives: Ue && D.extensions.derivatives === !0,
        extensionFragDepth: Ue && D.extensions.fragDepth === !0,
        extensionDrawBuffers: Ue && D.extensions.drawBuffers === !0,
        extensionShaderTextureLOD: Ue && D.extensions.shaderTextureLOD === !0,
        rendererExtensionFragDepth: g || i.has("EXT_frag_depth"),
        rendererExtensionDrawBuffers: g || i.has("WEBGL_draw_buffers"),
        rendererExtensionShaderTextureLod: g || i.has("EXT_shader_texture_lod"),
        customProgramCacheKey: D.customProgramCacheKey(),
      }
    );
  }
  function b(D) {
    const O = [];
    if (
      (D.shaderID
        ? O.push(D.shaderID)
        : (O.push(D.customVertexShaderID), O.push(D.customFragmentShaderID)),
      D.defines !== void 0)
    )
      for (const F in D.defines) O.push(F), O.push(D.defines[F]);
    return (
      D.isRawShaderMaterial === !1 &&
        (L(O, D), T(O, D), O.push(n.outputColorSpace)),
      O.push(D.customProgramCacheKey),
      O.join()
    );
  }
  function L(D, O) {
    D.push(O.precision),
      D.push(O.outputColorSpace),
      D.push(O.envMapMode),
      D.push(O.envMapCubeUVHeight),
      D.push(O.mapUv),
      D.push(O.alphaMapUv),
      D.push(O.lightMapUv),
      D.push(O.aoMapUv),
      D.push(O.bumpMapUv),
      D.push(O.normalMapUv),
      D.push(O.displacementMapUv),
      D.push(O.emissiveMapUv),
      D.push(O.metalnessMapUv),
      D.push(O.roughnessMapUv),
      D.push(O.anisotropyMapUv),
      D.push(O.clearcoatMapUv),
      D.push(O.clearcoatNormalMapUv),
      D.push(O.clearcoatRoughnessMapUv),
      D.push(O.iridescenceMapUv),
      D.push(O.iridescenceThicknessMapUv),
      D.push(O.sheenColorMapUv),
      D.push(O.sheenRoughnessMapUv),
      D.push(O.specularMapUv),
      D.push(O.specularColorMapUv),
      D.push(O.specularIntensityMapUv),
      D.push(O.transmissionMapUv),
      D.push(O.thicknessMapUv),
      D.push(O.combine),
      D.push(O.fogExp2),
      D.push(O.sizeAttenuation),
      D.push(O.morphTargetsCount),
      D.push(O.morphAttributeCount),
      D.push(O.numDirLights),
      D.push(O.numPointLights),
      D.push(O.numSpotLights),
      D.push(O.numSpotLightMaps),
      D.push(O.numHemiLights),
      D.push(O.numRectAreaLights),
      D.push(O.numDirLightShadows),
      D.push(O.numPointLightShadows),
      D.push(O.numSpotLightShadows),
      D.push(O.numSpotLightShadowsWithMaps),
      D.push(O.shadowMapType),
      D.push(O.toneMapping),
      D.push(O.numClippingPlanes),
      D.push(O.numClipIntersection),
      D.push(O.depthPacking);
  }
  function T(D, O) {
    c.disableAll(),
      O.isWebGL2 && c.enable(0),
      O.supportsVertexTextures && c.enable(1),
      O.instancing && c.enable(2),
      O.instancingColor && c.enable(3),
      O.matcap && c.enable(4),
      O.envMap && c.enable(5),
      O.normalMapObjectSpace && c.enable(6),
      O.normalMapTangentSpace && c.enable(7),
      O.clearcoat && c.enable(8),
      O.iridescence && c.enable(9),
      O.alphaTest && c.enable(10),
      O.vertexColors && c.enable(11),
      O.vertexAlphas && c.enable(12),
      O.vertexUv1s && c.enable(13),
      O.vertexUv2s && c.enable(14),
      O.vertexUv3s && c.enable(15),
      O.vertexTangents && c.enable(16),
      O.anisotropy && c.enable(17),
      D.push(c.mask),
      c.disableAll(),
      O.fog && c.enable(0),
      O.useFog && c.enable(1),
      O.flatShading && c.enable(2),
      O.logarithmicDepthBuffer && c.enable(3),
      O.skinning && c.enable(4),
      O.morphTargets && c.enable(5),
      O.morphNormals && c.enable(6),
      O.morphColors && c.enable(7),
      O.premultipliedAlpha && c.enable(8),
      O.shadowMapEnabled && c.enable(9),
      O.useLegacyLights && c.enable(10),
      O.doubleSided && c.enable(11),
      O.flipSided && c.enable(12),
      O.useDepthPacking && c.enable(13),
      O.dithering && c.enable(14),
      O.transmission && c.enable(15),
      O.sheen && c.enable(16),
      O.opaque && c.enable(17),
      O.pointsUvs && c.enable(18),
      O.decodeVideoTexture && c.enable(19),
      D.push(c.mask);
  }
  function R(D) {
    const O = E[D.type];
    let F;
    if (O) {
      const $ = er[O];
      F = x1.clone($.uniforms);
    } else F = D.uniforms;
    return F;
  }
  function U(D, O) {
    let F;
    for (let $ = 0, V = p.length; $ < V; $++) {
      const Q = p[$];
      if (Q.cacheKey === O) {
        (F = Q), ++F.usedTimes;
        break;
      }
    }
    return F === void 0 && ((F = new $y(n, O, D, s)), p.push(F)), F;
  }
  function q(D) {
    if (--D.usedTimes === 0) {
      const O = p.indexOf(D);
      (p[O] = p[p.length - 1]), p.pop(), D.destroy();
    }
  }
  function I(D) {
    d.remove(D);
  }
  function N() {
    d.dispose();
  }
  return {
    getParameters: S,
    getProgramCacheKey: b,
    getUniforms: R,
    acquireProgram: U,
    releaseProgram: q,
    releaseShaderCache: I,
    programs: p,
    dispose: N,
  };
}
function e5() {
  let n = new WeakMap();
  function e(s) {
    let u = n.get(s);
    return u === void 0 && ((u = {}), n.set(s, u)), u;
  }
  function t(s) {
    n.delete(s);
  }
  function i(s, u, c) {
    n.get(s)[u] = c;
  }
  function r() {
    n = new WeakMap();
  }
  return { get: e, remove: t, update: i, dispose: r };
}
function t5(n, e) {
  return n.groupOrder !== e.groupOrder
    ? n.groupOrder - e.groupOrder
    : n.renderOrder !== e.renderOrder
    ? n.renderOrder - e.renderOrder
    : n.material.id !== e.material.id
    ? n.material.id - e.material.id
    : n.z !== e.z
    ? n.z - e.z
    : n.id - e.id;
}
function Wh(n, e) {
  return n.groupOrder !== e.groupOrder
    ? n.groupOrder - e.groupOrder
    : n.renderOrder !== e.renderOrder
    ? n.renderOrder - e.renderOrder
    : n.z !== e.z
    ? e.z - n.z
    : n.id - e.id;
}
function jh() {
  const n = [];
  let e = 0;
  const t = [],
    i = [],
    r = [];
  function s() {
    (e = 0), (t.length = 0), (i.length = 0), (r.length = 0);
  }
  function u(_, x, M, E, C, S) {
    let b = n[e];
    return (
      b === void 0
        ? ((b = {
            id: _.id,
            object: _,
            geometry: x,
            material: M,
            groupOrder: E,
            renderOrder: _.renderOrder,
            z: C,
            group: S,
          }),
          (n[e] = b))
        : ((b.id = _.id),
          (b.object = _),
          (b.geometry = x),
          (b.material = M),
          (b.groupOrder = E),
          (b.renderOrder = _.renderOrder),
          (b.z = C),
          (b.group = S)),
      e++,
      b
    );
  }
  function c(_, x, M, E, C, S) {
    const b = u(_, x, M, E, C, S);
    M.transmission > 0
      ? i.push(b)
      : M.transparent === !0
      ? r.push(b)
      : t.push(b);
  }
  function d(_, x, M, E, C, S) {
    const b = u(_, x, M, E, C, S);
    M.transmission > 0
      ? i.unshift(b)
      : M.transparent === !0
      ? r.unshift(b)
      : t.unshift(b);
  }
  function p(_, x) {
    t.length > 1 && t.sort(_ || t5),
      i.length > 1 && i.sort(x || Wh),
      r.length > 1 && r.sort(x || Wh);
  }
  function g() {
    for (let _ = e, x = n.length; _ < x; _++) {
      const M = n[_];
      if (M.id === null) break;
      (M.id = null),
        (M.object = null),
        (M.geometry = null),
        (M.material = null),
        (M.group = null);
    }
  }
  return {
    opaque: t,
    transmissive: i,
    transparent: r,
    init: s,
    push: c,
    unshift: d,
    finish: g,
    sort: p,
  };
}
function n5() {
  let n = new WeakMap();
  function e(i, r) {
    const s = n.get(i);
    let u;
    return (
      s === void 0
        ? ((u = new jh()), n.set(i, [u]))
        : r >= s.length
        ? ((u = new jh()), s.push(u))
        : (u = s[r]),
      u
    );
  }
  function t() {
    n = new WeakMap();
  }
  return { get: e, dispose: t };
}
function i5() {
  const n = {};
  return {
    get: function (e) {
      if (n[e.id] !== void 0) return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = { direction: new J(), color: new Nt() };
          break;
        case "SpotLight":
          t = {
            position: new J(),
            direction: new J(),
            color: new Nt(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0,
          };
          break;
        case "PointLight":
          t = { position: new J(), color: new Nt(), distance: 0, decay: 0 };
          break;
        case "HemisphereLight":
          t = { direction: new J(), skyColor: new Nt(), groundColor: new Nt() };
          break;
        case "RectAreaLight":
          t = {
            color: new Nt(),
            position: new J(),
            halfWidth: new J(),
            halfHeight: new J(),
          };
          break;
      }
      return (n[e.id] = t), t;
    },
  };
}
function r5() {
  const n = {};
  return {
    get: function (e) {
      if (n[e.id] !== void 0) return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
          };
          break;
        case "SpotLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
          };
          break;
        case "PointLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3,
          };
          break;
      }
      return (n[e.id] = t), t;
    },
  };
}
let s5 = 0;
function o5(n, e) {
  return (
    (e.castShadow ? 2 : 0) -
    (n.castShadow ? 2 : 0) +
    (e.map ? 1 : 0) -
    (n.map ? 1 : 0)
  );
}
function a5(n, e) {
  const t = new i5(),
    i = r5(),
    r = {
      version: 0,
      hash: {
        directionalLength: -1,
        pointLength: -1,
        spotLength: -1,
        rectAreaLength: -1,
        hemiLength: -1,
        numDirectionalShadows: -1,
        numPointShadows: -1,
        numSpotShadows: -1,
        numSpotMaps: -1,
      },
      ambient: [0, 0, 0],
      probe: [],
      directional: [],
      directionalShadow: [],
      directionalShadowMap: [],
      directionalShadowMatrix: [],
      spot: [],
      spotLightMap: [],
      spotShadow: [],
      spotShadowMap: [],
      spotLightMatrix: [],
      rectArea: [],
      rectAreaLTC1: null,
      rectAreaLTC2: null,
      point: [],
      pointShadow: [],
      pointShadowMap: [],
      pointShadowMatrix: [],
      hemi: [],
      numSpotLightShadowsWithMaps: 0,
    };
  for (let g = 0; g < 9; g++) r.probe.push(new J());
  const s = new J(),
    u = new dn(),
    c = new dn();
  function d(g, _) {
    let x = 0,
      M = 0,
      E = 0;
    for (let F = 0; F < 9; F++) r.probe[F].set(0, 0, 0);
    let C = 0,
      S = 0,
      b = 0,
      L = 0,
      T = 0,
      R = 0,
      U = 0,
      q = 0,
      I = 0,
      N = 0;
    g.sort(o5);
    const D = _ === !0 ? Math.PI : 1;
    for (let F = 0, $ = g.length; F < $; F++) {
      const V = g[F],
        Q = V.color,
        k = V.intensity,
        te = V.distance,
        ee = V.shadow && V.shadow.map ? V.shadow.map.texture : null;
      if (V.isAmbientLight)
        (x += Q.r * k * D), (M += Q.g * k * D), (E += Q.b * k * D);
      else if (V.isLightProbe)
        for (let se = 0; se < 9; se++)
          r.probe[se].addScaledVector(V.sh.coefficients[se], k);
      else if (V.isDirectionalLight) {
        const se = t.get(V);
        if (
          (se.color.copy(V.color).multiplyScalar(V.intensity * D), V.castShadow)
        ) {
          const pe = V.shadow,
            de = i.get(V);
          (de.shadowBias = pe.bias),
            (de.shadowNormalBias = pe.normalBias),
            (de.shadowRadius = pe.radius),
            (de.shadowMapSize = pe.mapSize),
            (r.directionalShadow[C] = de),
            (r.directionalShadowMap[C] = ee),
            (r.directionalShadowMatrix[C] = V.shadow.matrix),
            R++;
        }
        (r.directional[C] = se), C++;
      } else if (V.isSpotLight) {
        const se = t.get(V);
        se.position.setFromMatrixPosition(V.matrixWorld),
          se.color.copy(Q).multiplyScalar(k * D),
          (se.distance = te),
          (se.coneCos = Math.cos(V.angle)),
          (se.penumbraCos = Math.cos(V.angle * (1 - V.penumbra))),
          (se.decay = V.decay),
          (r.spot[b] = se);
        const pe = V.shadow;
        if (
          (V.map &&
            ((r.spotLightMap[I] = V.map),
            I++,
            pe.updateMatrices(V),
            V.castShadow && N++),
          (r.spotLightMatrix[b] = pe.matrix),
          V.castShadow)
        ) {
          const de = i.get(V);
          (de.shadowBias = pe.bias),
            (de.shadowNormalBias = pe.normalBias),
            (de.shadowRadius = pe.radius),
            (de.shadowMapSize = pe.mapSize),
            (r.spotShadow[b] = de),
            (r.spotShadowMap[b] = ee),
            q++;
        }
        b++;
      } else if (V.isRectAreaLight) {
        const se = t.get(V);
        se.color.copy(Q).multiplyScalar(k),
          se.halfWidth.set(V.width * 0.5, 0, 0),
          se.halfHeight.set(0, V.height * 0.5, 0),
          (r.rectArea[L] = se),
          L++;
      } else if (V.isPointLight) {
        const se = t.get(V);
        if (
          (se.color.copy(V.color).multiplyScalar(V.intensity * D),
          (se.distance = V.distance),
          (se.decay = V.decay),
          V.castShadow)
        ) {
          const pe = V.shadow,
            de = i.get(V);
          (de.shadowBias = pe.bias),
            (de.shadowNormalBias = pe.normalBias),
            (de.shadowRadius = pe.radius),
            (de.shadowMapSize = pe.mapSize),
            (de.shadowCameraNear = pe.camera.near),
            (de.shadowCameraFar = pe.camera.far),
            (r.pointShadow[S] = de),
            (r.pointShadowMap[S] = ee),
            (r.pointShadowMatrix[S] = V.shadow.matrix),
            U++;
        }
        (r.point[S] = se), S++;
      } else if (V.isHemisphereLight) {
        const se = t.get(V);
        se.skyColor.copy(V.color).multiplyScalar(k * D),
          se.groundColor.copy(V.groundColor).multiplyScalar(k * D),
          (r.hemi[T] = se),
          T++;
      }
    }
    L > 0 &&
      (e.isWebGL2 || n.has("OES_texture_float_linear") === !0
        ? ((r.rectAreaLTC1 = Ke.LTC_FLOAT_1), (r.rectAreaLTC2 = Ke.LTC_FLOAT_2))
        : n.has("OES_texture_half_float_linear") === !0
        ? ((r.rectAreaLTC1 = Ke.LTC_HALF_1), (r.rectAreaLTC2 = Ke.LTC_HALF_2))
        : console.error(
            "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
          )),
      (r.ambient[0] = x),
      (r.ambient[1] = M),
      (r.ambient[2] = E);
    const O = r.hash;
    (O.directionalLength !== C ||
      O.pointLength !== S ||
      O.spotLength !== b ||
      O.rectAreaLength !== L ||
      O.hemiLength !== T ||
      O.numDirectionalShadows !== R ||
      O.numPointShadows !== U ||
      O.numSpotShadows !== q ||
      O.numSpotMaps !== I) &&
      ((r.directional.length = C),
      (r.spot.length = b),
      (r.rectArea.length = L),
      (r.point.length = S),
      (r.hemi.length = T),
      (r.directionalShadow.length = R),
      (r.directionalShadowMap.length = R),
      (r.pointShadow.length = U),
      (r.pointShadowMap.length = U),
      (r.spotShadow.length = q),
      (r.spotShadowMap.length = q),
      (r.directionalShadowMatrix.length = R),
      (r.pointShadowMatrix.length = U),
      (r.spotLightMatrix.length = q + I - N),
      (r.spotLightMap.length = I),
      (r.numSpotLightShadowsWithMaps = N),
      (O.directionalLength = C),
      (O.pointLength = S),
      (O.spotLength = b),
      (O.rectAreaLength = L),
      (O.hemiLength = T),
      (O.numDirectionalShadows = R),
      (O.numPointShadows = U),
      (O.numSpotShadows = q),
      (O.numSpotMaps = I),
      (r.version = s5++));
  }
  function p(g, _) {
    let x = 0,
      M = 0,
      E = 0,
      C = 0,
      S = 0;
    const b = _.matrixWorldInverse;
    for (let L = 0, T = g.length; L < T; L++) {
      const R = g[L];
      if (R.isDirectionalLight) {
        const U = r.directional[x];
        U.direction.setFromMatrixPosition(R.matrixWorld),
          s.setFromMatrixPosition(R.target.matrixWorld),
          U.direction.sub(s),
          U.direction.transformDirection(b),
          x++;
      } else if (R.isSpotLight) {
        const U = r.spot[E];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          U.direction.setFromMatrixPosition(R.matrixWorld),
          s.setFromMatrixPosition(R.target.matrixWorld),
          U.direction.sub(s),
          U.direction.transformDirection(b),
          E++;
      } else if (R.isRectAreaLight) {
        const U = r.rectArea[C];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          c.identity(),
          u.copy(R.matrixWorld),
          u.premultiply(b),
          c.extractRotation(u),
          U.halfWidth.set(R.width * 0.5, 0, 0),
          U.halfHeight.set(0, R.height * 0.5, 0),
          U.halfWidth.applyMatrix4(c),
          U.halfHeight.applyMatrix4(c),
          C++;
      } else if (R.isPointLight) {
        const U = r.point[M];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          M++;
      } else if (R.isHemisphereLight) {
        const U = r.hemi[S];
        U.direction.setFromMatrixPosition(R.matrixWorld),
          U.direction.transformDirection(b),
          S++;
      }
    }
  }
  return { setup: d, setupView: p, state: r };
}
function Xh(n, e) {
  const t = new a5(n, e),
    i = [],
    r = [];
  function s() {
    (i.length = 0), (r.length = 0);
  }
  function u(_) {
    i.push(_);
  }
  function c(_) {
    r.push(_);
  }
  function d(_) {
    t.setup(i, _);
  }
  function p(_) {
    t.setupView(i, _);
  }
  return {
    init: s,
    state: { lightsArray: i, shadowsArray: r, lights: t },
    setupLights: d,
    setupLightsView: p,
    pushLight: u,
    pushShadow: c,
  };
}
function A5(n, e) {
  let t = new WeakMap();
  function i(s, u = 0) {
    const c = t.get(s);
    let d;
    return (
      c === void 0
        ? ((d = new Xh(n, e)), t.set(s, [d]))
        : u >= c.length
        ? ((d = new Xh(n, e)), c.push(d))
        : (d = c[u]),
      d
    );
  }
  function r() {
    t = new WeakMap();
  }
  return { get: i, dispose: r };
}
class l5 extends Hs {
  constructor(e) {
    super(),
      (this.isMeshDepthMaterial = !0),
      (this.type = "MeshDepthMaterial"),
      (this.depthPacking = W3),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.depthPacking = e.depthPacking),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      this
    );
  }
}
class u5 extends Hs {
  constructor(e) {
    super(),
      (this.isMeshDistanceMaterial = !0),
      (this.type = "MeshDistanceMaterial"),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      this
    );
  }
}
const c5 = `void main() {
	gl_Position = vec4( position, 1.0 );
}`,
  f5 = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function h5(n, e, t) {
  let i = new fc();
  const r = new ke(),
    s = new ke(),
    u = new Ln(),
    c = new l5({ depthPacking: j3 }),
    d = new u5(),
    p = {},
    g = t.maxTextureSize,
    _ = { [us]: ci, [ci]: us, [gi]: gi },
    x = new or({
      defines: { VSM_SAMPLES: 8 },
      uniforms: {
        shadow_pass: { value: null },
        resolution: { value: new ke() },
        radius: { value: 4 },
      },
      vertexShader: c5,
      fragmentShader: f5,
    }),
    M = x.clone();
  M.defines.HORIZONTAL_PASS = 1;
  const E = new cn();
  E.setAttribute(
    "position",
    new mn(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
  );
  const C = new Dn(E, x),
    S = this;
  (this.enabled = !1),
    (this.autoUpdate = !0),
    (this.needsUpdate = !1),
    (this.type = Jp);
  let b = this.type;
  this.render = function (U, q, I) {
    if (
      S.enabled === !1 ||
      (S.autoUpdate === !1 && S.needsUpdate === !1) ||
      U.length === 0
    )
      return;
    const N = n.getRenderTarget(),
      D = n.getActiveCubeFace(),
      O = n.getActiveMipmapLevel(),
      F = n.state;
    F.setBlending(os),
      F.buffers.color.setClear(1, 1, 1, 1),
      F.buffers.depth.setTest(!0),
      F.setScissorTest(!1);
    const $ = b !== Or && this.type === Or,
      V = b === Or && this.type !== Or;
    for (let Q = 0, k = U.length; Q < k; Q++) {
      const te = U[Q],
        ee = te.shadow;
      if (ee === void 0) {
        console.warn("THREE.WebGLShadowMap:", te, "has no shadow.");
        continue;
      }
      if (ee.autoUpdate === !1 && ee.needsUpdate === !1) continue;
      r.copy(ee.mapSize);
      const se = ee.getFrameExtents();
      if (
        (r.multiply(se),
        s.copy(ee.mapSize),
        (r.x > g || r.y > g) &&
          (r.x > g &&
            ((s.x = Math.floor(g / se.x)),
            (r.x = s.x * se.x),
            (ee.mapSize.x = s.x)),
          r.y > g &&
            ((s.y = Math.floor(g / se.y)),
            (r.y = s.y * se.y),
            (ee.mapSize.y = s.y))),
        ee.map === null || $ === !0 || V === !0)
      ) {
        const de = this.type !== Or ? { minFilter: ai, magFilter: ai } : {};
        ee.map !== null && ee.map.dispose(),
          (ee.map = new qs(r.x, r.y, de)),
          (ee.map.texture.name = te.name + ".shadowMap"),
          ee.camera.updateProjectionMatrix();
      }
      n.setRenderTarget(ee.map), n.clear();
      const pe = ee.getViewportCount();
      for (let de = 0; de < pe; de++) {
        const oe = ee.getViewport(de);
        u.set(s.x * oe.x, s.y * oe.y, s.x * oe.z, s.y * oe.w),
          F.viewport(u),
          ee.updateMatrices(te, de),
          (i = ee.getFrustum()),
          R(q, I, ee.camera, te, this.type);
      }
      ee.isPointLightShadow !== !0 && this.type === Or && L(ee, I),
        (ee.needsUpdate = !1);
    }
    (b = this.type), (S.needsUpdate = !1), n.setRenderTarget(N, D, O);
  };
  function L(U, q) {
    const I = e.update(C);
    x.defines.VSM_SAMPLES !== U.blurSamples &&
      ((x.defines.VSM_SAMPLES = U.blurSamples),
      (M.defines.VSM_SAMPLES = U.blurSamples),
      (x.needsUpdate = !0),
      (M.needsUpdate = !0)),
      U.mapPass === null && (U.mapPass = new qs(r.x, r.y)),
      (x.uniforms.shadow_pass.value = U.map.texture),
      (x.uniforms.resolution.value = U.mapSize),
      (x.uniforms.radius.value = U.radius),
      n.setRenderTarget(U.mapPass),
      n.clear(),
      n.renderBufferDirect(q, null, I, x, C, null),
      (M.uniforms.shadow_pass.value = U.mapPass.texture),
      (M.uniforms.resolution.value = U.mapSize),
      (M.uniforms.radius.value = U.radius),
      n.setRenderTarget(U.map),
      n.clear(),
      n.renderBufferDirect(q, null, I, M, C, null);
  }
  function T(U, q, I, N) {
    let D = null;
    const O =
      I.isPointLight === !0 ? U.customDistanceMaterial : U.customDepthMaterial;
    if (O !== void 0) D = O;
    else if (
      ((D = I.isPointLight === !0 ? d : c),
      (n.localClippingEnabled &&
        q.clipShadows === !0 &&
        Array.isArray(q.clippingPlanes) &&
        q.clippingPlanes.length !== 0) ||
        (q.displacementMap && q.displacementScale !== 0) ||
        (q.alphaMap && q.alphaTest > 0) ||
        (q.map && q.alphaTest > 0))
    ) {
      const F = D.uuid,
        $ = q.uuid;
      let V = p[F];
      V === void 0 && ((V = {}), (p[F] = V));
      let Q = V[$];
      Q === void 0 && ((Q = D.clone()), (V[$] = Q)), (D = Q);
    }
    if (
      ((D.visible = q.visible),
      (D.wireframe = q.wireframe),
      N === Or
        ? (D.side = q.shadowSide !== null ? q.shadowSide : q.side)
        : (D.side = q.shadowSide !== null ? q.shadowSide : _[q.side]),
      (D.alphaMap = q.alphaMap),
      (D.alphaTest = q.alphaTest),
      (D.map = q.map),
      (D.clipShadows = q.clipShadows),
      (D.clippingPlanes = q.clippingPlanes),
      (D.clipIntersection = q.clipIntersection),
      (D.displacementMap = q.displacementMap),
      (D.displacementScale = q.displacementScale),
      (D.displacementBias = q.displacementBias),
      (D.wireframeLinewidth = q.wireframeLinewidth),
      (D.linewidth = q.linewidth),
      I.isPointLight === !0 && D.isMeshDistanceMaterial === !0)
    ) {
      const F = n.properties.get(D);
      F.light = I;
    }
    return D;
  }
  function R(U, q, I, N, D) {
    if (U.visible === !1) return;
    if (
      U.layers.test(q.layers) &&
      (U.isMesh || U.isLine || U.isPoints) &&
      (U.castShadow || (U.receiveShadow && D === Or)) &&
      (!U.frustumCulled || i.intersectsObject(U))
    ) {
      U.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse, U.matrixWorld);
      const $ = e.update(U),
        V = U.material;
      if (Array.isArray(V)) {
        const Q = $.groups;
        for (let k = 0, te = Q.length; k < te; k++) {
          const ee = Q[k],
            se = V[ee.materialIndex];
          if (se && se.visible) {
            const pe = T(U, se, N, D);
            n.renderBufferDirect(I, null, $, pe, U, ee);
          }
        }
      } else if (V.visible) {
        const Q = T(U, V, N, D);
        n.renderBufferDirect(I, null, $, Q, U, null);
      }
    }
    const F = U.children;
    for (let $ = 0, V = F.length; $ < V; $++) R(F[$], q, I, N, D);
  }
}
function d5(n, e, t) {
  const i = t.isWebGL2;
  function r() {
    let ae = !1;
    const $e = new Ln();
    let Me = null;
    const Ue = new Ln(0, 0, 0, 0);
    return {
      setMask: function (fe) {
        Me !== fe && !ae && (n.colorMask(fe, fe, fe, fe), (Me = fe));
      },
      setLocked: function (fe) {
        ae = fe;
      },
      setClear: function (fe, kt, Yt, rn, Kn) {
        Kn === !0 && ((fe *= rn), (kt *= rn), (Yt *= rn)),
          $e.set(fe, kt, Yt, rn),
          Ue.equals($e) === !1 && (n.clearColor(fe, kt, Yt, rn), Ue.copy($e));
      },
      reset: function () {
        (ae = !1), (Me = null), Ue.set(-1, 0, 0, 0);
      },
    };
  }
  function s() {
    let ae = !1,
      $e = null,
      Me = null,
      Ue = null;
    return {
      setTest: function (fe) {
        fe ? rt(n.DEPTH_TEST) : ot(n.DEPTH_TEST);
      },
      setMask: function (fe) {
        $e !== fe && !ae && (n.depthMask(fe), ($e = fe));
      },
      setFunc: function (fe) {
        if (Me !== fe) {
          switch (fe) {
            case v3:
              n.depthFunc(n.NEVER);
              break;
            case x3:
              n.depthFunc(n.ALWAYS);
              break;
            case y3:
              n.depthFunc(n.LESS);
              break;
            case du:
              n.depthFunc(n.LEQUAL);
              break;
            case b3:
              n.depthFunc(n.EQUAL);
              break;
            case M3:
              n.depthFunc(n.GEQUAL);
              break;
            case S3:
              n.depthFunc(n.GREATER);
              break;
            case E3:
              n.depthFunc(n.NOTEQUAL);
              break;
            default:
              n.depthFunc(n.LEQUAL);
          }
          Me = fe;
        }
      },
      setLocked: function (fe) {
        ae = fe;
      },
      setClear: function (fe) {
        Ue !== fe && (n.clearDepth(fe), (Ue = fe));
      },
      reset: function () {
        (ae = !1), ($e = null), (Me = null), (Ue = null);
      },
    };
  }
  function u() {
    let ae = !1,
      $e = null,
      Me = null,
      Ue = null,
      fe = null,
      kt = null,
      Yt = null,
      rn = null,
      Kn = null;
    return {
      setTest: function (Jt) {
        ae || (Jt ? rt(n.STENCIL_TEST) : ot(n.STENCIL_TEST));
      },
      setMask: function (Jt) {
        $e !== Jt && !ae && (n.stencilMask(Jt), ($e = Jt));
      },
      setFunc: function (Jt, Mi, Un) {
        (Me !== Jt || Ue !== Mi || fe !== Un) &&
          (n.stencilFunc(Jt, Mi, Un), (Me = Jt), (Ue = Mi), (fe = Un));
      },
      setOp: function (Jt, Mi, Un) {
        (kt !== Jt || Yt !== Mi || rn !== Un) &&
          (n.stencilOp(Jt, Mi, Un), (kt = Jt), (Yt = Mi), (rn = Un));
      },
      setLocked: function (Jt) {
        ae = Jt;
      },
      setClear: function (Jt) {
        Kn !== Jt && (n.clearStencil(Jt), (Kn = Jt));
      },
      reset: function () {
        (ae = !1),
          ($e = null),
          (Me = null),
          (Ue = null),
          (fe = null),
          (kt = null),
          (Yt = null),
          (rn = null),
          (Kn = null);
      },
    };
  }
  const c = new r(),
    d = new s(),
    p = new u(),
    g = new WeakMap(),
    _ = new WeakMap();
  let x = {},
    M = {},
    E = new WeakMap(),
    C = [],
    S = null,
    b = !1,
    L = null,
    T = null,
    R = null,
    U = null,
    q = null,
    I = null,
    N = null,
    D = !1,
    O = null,
    F = null,
    $ = null,
    V = null,
    Q = null;
  const k = n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
  let te = !1,
    ee = 0;
  const se = n.getParameter(n.VERSION);
  se.indexOf("WebGL") !== -1
    ? ((ee = parseFloat(/^WebGL (\d)/.exec(se)[1])), (te = ee >= 1))
    : se.indexOf("OpenGL ES") !== -1 &&
      ((ee = parseFloat(/^OpenGL ES (\d)/.exec(se)[1])), (te = ee >= 2));
  let pe = null,
    de = {};
  const oe = n.getParameter(n.SCISSOR_BOX),
    he = n.getParameter(n.VIEWPORT),
    Te = new Ln().fromArray(oe),
    Pe = new Ln().fromArray(he);
  function Oe(ae, $e, Me, Ue) {
    const fe = new Uint8Array(4),
      kt = n.createTexture();
    n.bindTexture(ae, kt),
      n.texParameteri(ae, n.TEXTURE_MIN_FILTER, n.NEAREST),
      n.texParameteri(ae, n.TEXTURE_MAG_FILTER, n.NEAREST);
    for (let Yt = 0; Yt < Me; Yt++)
      i && (ae === n.TEXTURE_3D || ae === n.TEXTURE_2D_ARRAY)
        ? n.texImage3D($e, 0, n.RGBA, 1, 1, Ue, 0, n.RGBA, n.UNSIGNED_BYTE, fe)
        : n.texImage2D(
            $e + Yt,
            0,
            n.RGBA,
            1,
            1,
            0,
            n.RGBA,
            n.UNSIGNED_BYTE,
            fe
          );
    return kt;
  }
  const Je = {};
  (Je[n.TEXTURE_2D] = Oe(n.TEXTURE_2D, n.TEXTURE_2D, 1)),
    (Je[n.TEXTURE_CUBE_MAP] = Oe(
      n.TEXTURE_CUBE_MAP,
      n.TEXTURE_CUBE_MAP_POSITIVE_X,
      6
    )),
    i &&
      ((Je[n.TEXTURE_2D_ARRAY] = Oe(
        n.TEXTURE_2D_ARRAY,
        n.TEXTURE_2D_ARRAY,
        1,
        1
      )),
      (Je[n.TEXTURE_3D] = Oe(n.TEXTURE_3D, n.TEXTURE_3D, 1, 1))),
    c.setClear(0, 0, 0, 1),
    d.setClear(1),
    p.setClear(0),
    rt(n.DEPTH_TEST),
    d.setFunc(du),
    Le(!1),
    At(Lf),
    rt(n.CULL_FACE),
    Ce(os);
  function rt(ae) {
    x[ae] !== !0 && (n.enable(ae), (x[ae] = !0));
  }
  function ot(ae) {
    x[ae] !== !1 && (n.disable(ae), (x[ae] = !1));
  }
  function Rt(ae, $e) {
    return M[ae] !== $e
      ? (n.bindFramebuffer(ae, $e),
        (M[ae] = $e),
        i &&
          (ae === n.DRAW_FRAMEBUFFER && (M[n.FRAMEBUFFER] = $e),
          ae === n.FRAMEBUFFER && (M[n.DRAW_FRAMEBUFFER] = $e)),
        !0)
      : !1;
  }
  function It(ae, $e) {
    let Me = C,
      Ue = !1;
    if (ae)
      if (
        ((Me = E.get($e)),
        Me === void 0 && ((Me = []), E.set($e, Me)),
        ae.isWebGLMultipleRenderTargets)
      ) {
        const fe = ae.texture;
        if (Me.length !== fe.length || Me[0] !== n.COLOR_ATTACHMENT0) {
          for (let kt = 0, Yt = fe.length; kt < Yt; kt++)
            Me[kt] = n.COLOR_ATTACHMENT0 + kt;
          (Me.length = fe.length), (Ue = !0);
        }
      } else
        Me[0] !== n.COLOR_ATTACHMENT0 &&
          ((Me[0] = n.COLOR_ATTACHMENT0), (Ue = !0));
    else Me[0] !== n.BACK && ((Me[0] = n.BACK), (Ue = !0));
    Ue &&
      (t.isWebGL2
        ? n.drawBuffers(Me)
        : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Me));
  }
  function ft(ae) {
    return S !== ae ? (n.useProgram(ae), (S = ae), !0) : !1;
  }
  const ne = {
    [_o]: n.FUNC_ADD,
    [A3]: n.FUNC_SUBTRACT,
    [l3]: n.FUNC_REVERSE_SUBTRACT,
  };
  if (i) (ne[Uf] = n.MIN), (ne[qf] = n.MAX);
  else {
    const ae = e.get("EXT_blend_minmax");
    ae !== null && ((ne[Uf] = ae.MIN_EXT), (ne[qf] = ae.MAX_EXT));
  }
  const ze = {
    [u3]: n.ZERO,
    [c3]: n.ONE,
    [f3]: n.SRC_COLOR,
    [e1]: n.SRC_ALPHA,
    [_3]: n.SRC_ALPHA_SATURATE,
    [m3]: n.DST_COLOR,
    [d3]: n.DST_ALPHA,
    [h3]: n.ONE_MINUS_SRC_COLOR,
    [t1]: n.ONE_MINUS_SRC_ALPHA,
    [g3]: n.ONE_MINUS_DST_COLOR,
    [p3]: n.ONE_MINUS_DST_ALPHA,
  };
  function Ce(ae, $e, Me, Ue, fe, kt, Yt, rn) {
    if (ae === os) {
      b === !0 && (ot(n.BLEND), (b = !1));
      return;
    }
    if ((b === !1 && (rt(n.BLEND), (b = !0)), ae !== a3)) {
      if (ae !== L || rn !== D) {
        if (
          ((T !== _o || q !== _o) &&
            (n.blendEquation(n.FUNC_ADD), (T = _o), (q = _o)),
          rn)
        )
          switch (ae) {
            case as:
              n.blendFuncSeparate(
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA,
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA
              );
              break;
            case Df:
              n.blendFunc(n.ONE, n.ONE);
              break;
            case If:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case Of:
              n.blendFuncSeparate(n.ZERO, n.SRC_COLOR, n.ZERO, n.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ae);
              break;
          }
        else
          switch (ae) {
            case as:
              n.blendFuncSeparate(
                n.SRC_ALPHA,
                n.ONE_MINUS_SRC_ALPHA,
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA
              );
              break;
            case Df:
              n.blendFunc(n.SRC_ALPHA, n.ONE);
              break;
            case If:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case Of:
              n.blendFunc(n.ZERO, n.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ae);
              break;
          }
        (R = null), (U = null), (I = null), (N = null), (L = ae), (D = rn);
      }
      return;
    }
    (fe = fe || $e),
      (kt = kt || Me),
      (Yt = Yt || Ue),
      ($e !== T || fe !== q) &&
        (n.blendEquationSeparate(ne[$e], ne[fe]), (T = $e), (q = fe)),
      (Me !== R || Ue !== U || kt !== I || Yt !== N) &&
        (n.blendFuncSeparate(ze[Me], ze[Ue], ze[kt], ze[Yt]),
        (R = Me),
        (U = Ue),
        (I = kt),
        (N = Yt)),
      (L = ae),
      (D = !1);
  }
  function Ne(ae, $e) {
    ae.side === gi ? ot(n.CULL_FACE) : rt(n.CULL_FACE);
    let Me = ae.side === ci;
    $e && (Me = !Me),
      Le(Me),
      ae.blending === as && ae.transparent === !1
        ? Ce(os)
        : Ce(
            ae.blending,
            ae.blendEquation,
            ae.blendSrc,
            ae.blendDst,
            ae.blendEquationAlpha,
            ae.blendSrcAlpha,
            ae.blendDstAlpha,
            ae.premultipliedAlpha
          ),
      d.setFunc(ae.depthFunc),
      d.setTest(ae.depthTest),
      d.setMask(ae.depthWrite),
      c.setMask(ae.colorWrite);
    const Ue = ae.stencilWrite;
    p.setTest(Ue),
      Ue &&
        (p.setMask(ae.stencilWriteMask),
        p.setFunc(ae.stencilFunc, ae.stencilRef, ae.stencilFuncMask),
        p.setOp(ae.stencilFail, ae.stencilZFail, ae.stencilZPass)),
      at(ae.polygonOffset, ae.polygonOffsetFactor, ae.polygonOffsetUnits),
      ae.alphaToCoverage === !0
        ? rt(n.SAMPLE_ALPHA_TO_COVERAGE)
        : ot(n.SAMPLE_ALPHA_TO_COVERAGE);
  }
  function Le(ae) {
    O !== ae && (ae ? n.frontFace(n.CW) : n.frontFace(n.CCW), (O = ae));
  }
  function At(ae) {
    ae !== r3
      ? (rt(n.CULL_FACE),
        ae !== F &&
          (ae === Lf
            ? n.cullFace(n.BACK)
            : ae === s3
            ? n.cullFace(n.FRONT)
            : n.cullFace(n.FRONT_AND_BACK)))
      : ot(n.CULL_FACE),
      (F = ae);
  }
  function nt(ae) {
    ae !== $ && (te && n.lineWidth(ae), ($ = ae));
  }
  function at(ae, $e, Me) {
    ae
      ? (rt(n.POLYGON_OFFSET_FILL),
        (V !== $e || Q !== Me) && (n.polygonOffset($e, Me), (V = $e), (Q = Me)))
      : ot(n.POLYGON_OFFSET_FILL);
  }
  function mt(ae) {
    ae ? rt(n.SCISSOR_TEST) : ot(n.SCISSOR_TEST);
  }
  function xt(ae) {
    ae === void 0 && (ae = n.TEXTURE0 + k - 1),
      pe !== ae && (n.activeTexture(ae), (pe = ae));
  }
  function nn(ae, $e, Me) {
    Me === void 0 && (pe === null ? (Me = n.TEXTURE0 + k - 1) : (Me = pe));
    let Ue = de[Me];
    Ue === void 0 && ((Ue = { type: void 0, texture: void 0 }), (de[Me] = Ue)),
      (Ue.type !== ae || Ue.texture !== $e) &&
        (pe !== Me && (n.activeTexture(Me), (pe = Me)),
        n.bindTexture(ae, $e || Je[ae]),
        (Ue.type = ae),
        (Ue.texture = $e));
  }
  function Y() {
    const ae = de[pe];
    ae !== void 0 &&
      ae.type !== void 0 &&
      (n.bindTexture(ae.type, null), (ae.type = void 0), (ae.texture = void 0));
  }
  function G() {
    try {
      n.compressedTexImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function xe() {
    try {
      n.compressedTexImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function qe() {
    try {
      n.texSubImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Ie() {
    try {
      n.texSubImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Be() {
    try {
      n.compressedTexSubImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function ut() {
    try {
      n.compressedTexSubImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Fe() {
    try {
      n.texStorage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function be() {
    try {
      n.texStorage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function ie() {
    try {
      n.texImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Re() {
    try {
      n.texImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function tt(ae) {
    Te.equals(ae) === !1 && (n.scissor(ae.x, ae.y, ae.z, ae.w), Te.copy(ae));
  }
  function Xe(ae) {
    Pe.equals(ae) === !1 && (n.viewport(ae.x, ae.y, ae.z, ae.w), Pe.copy(ae));
  }
  function et(ae, $e) {
    let Me = _.get($e);
    Me === void 0 && ((Me = new WeakMap()), _.set($e, Me));
    let Ue = Me.get(ae);
    Ue === void 0 &&
      ((Ue = n.getUniformBlockIndex($e, ae.name)), Me.set(ae, Ue));
  }
  function Et(ae, $e) {
    const Ue = _.get($e).get(ae);
    g.get($e) !== Ue &&
      (n.uniformBlockBinding($e, Ue, ae.__bindingPointIndex), g.set($e, Ue));
  }
  function Vt() {
    n.disable(n.BLEND),
      n.disable(n.CULL_FACE),
      n.disable(n.DEPTH_TEST),
      n.disable(n.POLYGON_OFFSET_FILL),
      n.disable(n.SCISSOR_TEST),
      n.disable(n.STENCIL_TEST),
      n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),
      n.blendEquation(n.FUNC_ADD),
      n.blendFunc(n.ONE, n.ZERO),
      n.blendFuncSeparate(n.ONE, n.ZERO, n.ONE, n.ZERO),
      n.colorMask(!0, !0, !0, !0),
      n.clearColor(0, 0, 0, 0),
      n.depthMask(!0),
      n.depthFunc(n.LESS),
      n.clearDepth(1),
      n.stencilMask(4294967295),
      n.stencilFunc(n.ALWAYS, 0, 4294967295),
      n.stencilOp(n.KEEP, n.KEEP, n.KEEP),
      n.clearStencil(0),
      n.cullFace(n.BACK),
      n.frontFace(n.CCW),
      n.polygonOffset(0, 0),
      n.activeTexture(n.TEXTURE0),
      n.bindFramebuffer(n.FRAMEBUFFER, null),
      i === !0 &&
        (n.bindFramebuffer(n.DRAW_FRAMEBUFFER, null),
        n.bindFramebuffer(n.READ_FRAMEBUFFER, null)),
      n.useProgram(null),
      n.lineWidth(1),
      n.scissor(0, 0, n.canvas.width, n.canvas.height),
      n.viewport(0, 0, n.canvas.width, n.canvas.height),
      (x = {}),
      (pe = null),
      (de = {}),
      (M = {}),
      (E = new WeakMap()),
      (C = []),
      (S = null),
      (b = !1),
      (L = null),
      (T = null),
      (R = null),
      (U = null),
      (q = null),
      (I = null),
      (N = null),
      (D = !1),
      (O = null),
      (F = null),
      ($ = null),
      (V = null),
      (Q = null),
      Te.set(0, 0, n.canvas.width, n.canvas.height),
      Pe.set(0, 0, n.canvas.width, n.canvas.height),
      c.reset(),
      d.reset(),
      p.reset();
  }
  return {
    buffers: { color: c, depth: d, stencil: p },
    enable: rt,
    disable: ot,
    bindFramebuffer: Rt,
    drawBuffers: It,
    useProgram: ft,
    setBlending: Ce,
    setMaterial: Ne,
    setFlipSided: Le,
    setCullFace: At,
    setLineWidth: nt,
    setPolygonOffset: at,
    setScissorTest: mt,
    activeTexture: xt,
    bindTexture: nn,
    unbindTexture: Y,
    compressedTexImage2D: G,
    compressedTexImage3D: xe,
    texImage2D: ie,
    texImage3D: Re,
    updateUBOMapping: et,
    uniformBlockBinding: Et,
    texStorage2D: Fe,
    texStorage3D: be,
    texSubImage2D: qe,
    texSubImage3D: Ie,
    compressedTexSubImage2D: Be,
    compressedTexSubImage3D: ut,
    scissor: tt,
    viewport: Xe,
    reset: Vt,
  };
}
function p5(n, e, t, i, r, s, u) {
  const c = r.isWebGL2,
    d = r.maxTextures,
    p = r.maxCubemapSize,
    g = r.maxTextureSize,
    _ = r.maxSamples,
    x = e.has("WEBGL_multisampled_render_to_texture")
      ? e.get("WEBGL_multisampled_render_to_texture")
      : null,
    M =
      typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent),
    E = new WeakMap();
  let C;
  const S = new WeakMap();
  let b = !1;
  try {
    b =
      typeof OffscreenCanvas < "u" &&
      new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {}
  function L(Y, G) {
    return b ? new OffscreenCanvas(Y, G) : Ta("canvas");
  }
  function T(Y, G, xe, qe) {
    let Ie = 1;
    if (
      ((Y.width > qe || Y.height > qe) &&
        (Ie = qe / Math.max(Y.width, Y.height)),
      Ie < 1 || G === !0)
    )
      if (
        (typeof HTMLImageElement < "u" && Y instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < "u" && Y instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < "u" && Y instanceof ImageBitmap)
      ) {
        const Be = G ? ol : Math.floor,
          ut = Be(Ie * Y.width),
          Fe = Be(Ie * Y.height);
        C === void 0 && (C = L(ut, Fe));
        const be = xe ? L(ut, Fe) : C;
        return (
          (be.width = ut),
          (be.height = Fe),
          be.getContext("2d").drawImage(Y, 0, 0, ut, Fe),
          console.warn(
            "THREE.WebGLRenderer: Texture has been resized from (" +
              Y.width +
              "x" +
              Y.height +
              ") to (" +
              ut +
              "x" +
              Fe +
              ")."
          ),
          be
        );
      } else
        return (
          "data" in Y &&
            console.warn(
              "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                Y.width +
                "x" +
                Y.height +
                ")."
            ),
          Y
        );
    return Y;
  }
  function R(Y) {
    return yu(Y.width) && yu(Y.height);
  }
  function U(Y) {
    return c
      ? !1
      : Y.wrapS !== tr ||
          Y.wrapT !== tr ||
          (Y.minFilter !== ai && Y.minFilter !== ki);
  }
  function q(Y, G) {
    return Y.generateMipmaps && G && Y.minFilter !== ai && Y.minFilter !== ki;
  }
  function I(Y) {
    n.generateMipmap(Y);
  }
  function N(Y, G, xe, qe, Ie = !1) {
    if (c === !1) return G;
    if (Y !== null) {
      if (n[Y] !== void 0) return n[Y];
      console.warn(
        "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
          Y +
          "'"
      );
    }
    let Be = G;
    return (
      G === n.RED &&
        (xe === n.FLOAT && (Be = n.R32F),
        xe === n.HALF_FLOAT && (Be = n.R16F),
        xe === n.UNSIGNED_BYTE && (Be = n.R8)),
      G === n.RED_INTEGER &&
        (xe === n.UNSIGNED_BYTE && (Be = n.R8UI),
        xe === n.UNSIGNED_SHORT && (Be = n.R16UI),
        xe === n.UNSIGNED_INT && (Be = n.R32UI),
        xe === n.BYTE && (Be = n.R8I),
        xe === n.SHORT && (Be = n.R16I),
        xe === n.INT && (Be = n.R32I)),
      G === n.RG &&
        (xe === n.FLOAT && (Be = n.RG32F),
        xe === n.HALF_FLOAT && (Be = n.RG16F),
        xe === n.UNSIGNED_BYTE && (Be = n.RG8)),
      G === n.RGBA &&
        (xe === n.FLOAT && (Be = n.RGBA32F),
        xe === n.HALF_FLOAT && (Be = n.RGBA16F),
        xe === n.UNSIGNED_BYTE &&
          (Be = qe === fn && Ie === !1 ? n.SRGB8_ALPHA8 : n.RGBA8),
        xe === n.UNSIGNED_SHORT_4_4_4_4 && (Be = n.RGBA4),
        xe === n.UNSIGNED_SHORT_5_5_5_1 && (Be = n.RGB5_A1)),
      (Be === n.R16F ||
        Be === n.R32F ||
        Be === n.RG16F ||
        Be === n.RG32F ||
        Be === n.RGBA16F ||
        Be === n.RGBA32F) &&
        e.get("EXT_color_buffer_float"),
      Be
    );
  }
  function D(Y, G, xe) {
    return q(Y, xe) === !0 ||
      (Y.isFramebufferTexture && Y.minFilter !== ai && Y.minFilter !== ki)
      ? Math.log2(Math.max(G.width, G.height)) + 1
      : Y.mipmaps !== void 0 && Y.mipmaps.length > 0
      ? Y.mipmaps.length
      : Y.isCompressedTexture && Array.isArray(Y.image)
      ? G.mipmaps.length
      : 1;
  }
  function O(Y) {
    return Y === ai || Y === Bf || Y === b0 ? n.NEAREST : n.LINEAR;
  }
  function F(Y) {
    const G = Y.target;
    G.removeEventListener("dispose", F), V(G), G.isVideoTexture && E.delete(G);
  }
  function $(Y) {
    const G = Y.target;
    G.removeEventListener("dispose", $), k(G);
  }
  function V(Y) {
    const G = i.get(Y);
    if (G.__webglInit === void 0) return;
    const xe = Y.source,
      qe = S.get(xe);
    if (qe) {
      const Ie = qe[G.__cacheKey];
      Ie.usedTimes--,
        Ie.usedTimes === 0 && Q(Y),
        Object.keys(qe).length === 0 && S.delete(xe);
    }
    i.remove(Y);
  }
  function Q(Y) {
    const G = i.get(Y);
    n.deleteTexture(G.__webglTexture);
    const xe = Y.source,
      qe = S.get(xe);
    delete qe[G.__cacheKey], u.memory.textures--;
  }
  function k(Y) {
    const G = Y.texture,
      xe = i.get(Y),
      qe = i.get(G);
    if (
      (qe.__webglTexture !== void 0 &&
        (n.deleteTexture(qe.__webglTexture), u.memory.textures--),
      Y.depthTexture && Y.depthTexture.dispose(),
      Y.isWebGLCubeRenderTarget)
    )
      for (let Ie = 0; Ie < 6; Ie++) {
        if (Array.isArray(xe.__webglFramebuffer[Ie]))
          for (let Be = 0; Be < xe.__webglFramebuffer[Ie].length; Be++)
            n.deleteFramebuffer(xe.__webglFramebuffer[Ie][Be]);
        else n.deleteFramebuffer(xe.__webglFramebuffer[Ie]);
        xe.__webglDepthbuffer &&
          n.deleteRenderbuffer(xe.__webglDepthbuffer[Ie]);
      }
    else {
      if (Array.isArray(xe.__webglFramebuffer))
        for (let Ie = 0; Ie < xe.__webglFramebuffer.length; Ie++)
          n.deleteFramebuffer(xe.__webglFramebuffer[Ie]);
      else n.deleteFramebuffer(xe.__webglFramebuffer);
      if (
        (xe.__webglDepthbuffer && n.deleteRenderbuffer(xe.__webglDepthbuffer),
        xe.__webglMultisampledFramebuffer &&
          n.deleteFramebuffer(xe.__webglMultisampledFramebuffer),
        xe.__webglColorRenderbuffer)
      )
        for (let Ie = 0; Ie < xe.__webglColorRenderbuffer.length; Ie++)
          xe.__webglColorRenderbuffer[Ie] &&
            n.deleteRenderbuffer(xe.__webglColorRenderbuffer[Ie]);
      xe.__webglDepthRenderbuffer &&
        n.deleteRenderbuffer(xe.__webglDepthRenderbuffer);
    }
    if (Y.isWebGLMultipleRenderTargets)
      for (let Ie = 0, Be = G.length; Ie < Be; Ie++) {
        const ut = i.get(G[Ie]);
        ut.__webglTexture &&
          (n.deleteTexture(ut.__webglTexture), u.memory.textures--),
          i.remove(G[Ie]);
      }
    i.remove(G), i.remove(Y);
  }
  let te = 0;
  function ee() {
    te = 0;
  }
  function se() {
    const Y = te;
    return (
      Y >= d &&
        console.warn(
          "THREE.WebGLTextures: Trying to use " +
            Y +
            " texture units while this GPU supports only " +
            d
        ),
      (te += 1),
      Y
    );
  }
  function pe(Y) {
    const G = [];
    return (
      G.push(Y.wrapS),
      G.push(Y.wrapT),
      G.push(Y.wrapR || 0),
      G.push(Y.magFilter),
      G.push(Y.minFilter),
      G.push(Y.anisotropy),
      G.push(Y.internalFormat),
      G.push(Y.format),
      G.push(Y.type),
      G.push(Y.generateMipmaps),
      G.push(Y.premultiplyAlpha),
      G.push(Y.flipY),
      G.push(Y.unpackAlignment),
      G.push(Y.colorSpace),
      G.join()
    );
  }
  function de(Y, G) {
    const xe = i.get(Y);
    if (
      (Y.isVideoTexture && xt(Y),
      Y.isRenderTargetTexture === !1 &&
        Y.version > 0 &&
        xe.__version !== Y.version)
    ) {
      const qe = Y.image;
      if (qe === null)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but no image data found."
        );
      else if (qe.complete === !1)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
        );
      else {
        Rt(xe, Y, G);
        return;
      }
    }
    t.bindTexture(n.TEXTURE_2D, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function oe(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      Rt(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_2D_ARRAY, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function he(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      Rt(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_3D, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function Te(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      It(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_CUBE_MAP, xe.__webglTexture, n.TEXTURE0 + G);
  }
  const Pe = { [gu]: n.REPEAT, [tr]: n.CLAMP_TO_EDGE, [_u]: n.MIRRORED_REPEAT },
    Oe = {
      [ai]: n.NEAREST,
      [Bf]: n.NEAREST_MIPMAP_NEAREST,
      [b0]: n.NEAREST_MIPMAP_LINEAR,
      [ki]: n.LINEAR,
      [I3]: n.LINEAR_MIPMAP_NEAREST,
      [Sa]: n.LINEAR_MIPMAP_LINEAR,
    },
    Je = {
      [$3]: n.NEVER,
      [n_]: n.ALWAYS,
      [Y3]: n.LESS,
      [K3]: n.LEQUAL,
      [Z3]: n.EQUAL,
      [t_]: n.GEQUAL,
      [J3]: n.GREATER,
      [e_]: n.NOTEQUAL,
    };
  function rt(Y, G, xe) {
    if (
      (xe
        ? (n.texParameteri(Y, n.TEXTURE_WRAP_S, Pe[G.wrapS]),
          n.texParameteri(Y, n.TEXTURE_WRAP_T, Pe[G.wrapT]),
          (Y === n.TEXTURE_3D || Y === n.TEXTURE_2D_ARRAY) &&
            n.texParameteri(Y, n.TEXTURE_WRAP_R, Pe[G.wrapR]),
          n.texParameteri(Y, n.TEXTURE_MAG_FILTER, Oe[G.magFilter]),
          n.texParameteri(Y, n.TEXTURE_MIN_FILTER, Oe[G.minFilter]))
        : (n.texParameteri(Y, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE),
          n.texParameteri(Y, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE),
          (Y === n.TEXTURE_3D || Y === n.TEXTURE_2D_ARRAY) &&
            n.texParameteri(Y, n.TEXTURE_WRAP_R, n.CLAMP_TO_EDGE),
          (G.wrapS !== tr || G.wrapT !== tr) &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
            ),
          n.texParameteri(Y, n.TEXTURE_MAG_FILTER, O(G.magFilter)),
          n.texParameteri(Y, n.TEXTURE_MIN_FILTER, O(G.minFilter)),
          G.minFilter !== ai &&
            G.minFilter !== ki &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
            )),
      G.compareFunction &&
        (n.texParameteri(Y, n.TEXTURE_COMPARE_MODE, n.COMPARE_REF_TO_TEXTURE),
        n.texParameteri(Y, n.TEXTURE_COMPARE_FUNC, Je[G.compareFunction])),
      e.has("EXT_texture_filter_anisotropic") === !0)
    ) {
      const qe = e.get("EXT_texture_filter_anisotropic");
      if (
        G.magFilter === ai ||
        (G.minFilter !== b0 && G.minFilter !== Sa) ||
        (G.type === ss && e.has("OES_texture_float_linear") === !1) ||
        (c === !1 &&
          G.type === Ea &&
          e.has("OES_texture_half_float_linear") === !1)
      )
        return;
      (G.anisotropy > 1 || i.get(G).__currentAnisotropy) &&
        (n.texParameterf(
          Y,
          qe.TEXTURE_MAX_ANISOTROPY_EXT,
          Math.min(G.anisotropy, r.getMaxAnisotropy())
        ),
        (i.get(G).__currentAnisotropy = G.anisotropy));
    }
  }
  function ot(Y, G) {
    let xe = !1;
    Y.__webglInit === void 0 &&
      ((Y.__webglInit = !0), G.addEventListener("dispose", F));
    const qe = G.source;
    let Ie = S.get(qe);
    Ie === void 0 && ((Ie = {}), S.set(qe, Ie));
    const Be = pe(G);
    if (Be !== Y.__cacheKey) {
      Ie[Be] === void 0 &&
        ((Ie[Be] = { texture: n.createTexture(), usedTimes: 0 }),
        u.memory.textures++,
        (xe = !0)),
        Ie[Be].usedTimes++;
      const ut = Ie[Y.__cacheKey];
      ut !== void 0 &&
        (Ie[Y.__cacheKey].usedTimes--, ut.usedTimes === 0 && Q(G)),
        (Y.__cacheKey = Be),
        (Y.__webglTexture = Ie[Be].texture);
    }
    return xe;
  }
  function Rt(Y, G, xe) {
    let qe = n.TEXTURE_2D;
    (G.isDataArrayTexture || G.isCompressedArrayTexture) &&
      (qe = n.TEXTURE_2D_ARRAY),
      G.isData3DTexture && (qe = n.TEXTURE_3D);
    const Ie = ot(Y, G),
      Be = G.source;
    t.bindTexture(qe, Y.__webglTexture, n.TEXTURE0 + xe);
    const ut = i.get(Be);
    if (Be.version !== ut.__version || Ie === !0) {
      t.activeTexture(n.TEXTURE0 + xe),
        n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, G.flipY),
        n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha),
        n.pixelStorei(n.UNPACK_ALIGNMENT, G.unpackAlignment),
        n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const Fe = U(G) && R(G.image) === !1;
      let be = T(G.image, Fe, !1, g);
      be = nn(G, be);
      const ie = R(be) || c,
        Re = s.convert(G.format, G.colorSpace);
      let tt = s.convert(G.type),
        Xe = N(G.internalFormat, Re, tt, G.colorSpace, G.isVideoTexture);
      rt(qe, G, ie);
      let et;
      const Et = G.mipmaps,
        Vt = c && G.isVideoTexture !== !0,
        ae = ut.__version === void 0 || Ie === !0,
        $e = D(G, be, ie);
      if (G.isDepthTexture)
        (Xe = n.DEPTH_COMPONENT),
          c
            ? G.type === ss
              ? (Xe = n.DEPTH_COMPONENT32F)
              : G.type === rs
              ? (Xe = n.DEPTH_COMPONENT24)
              : G.type === Ls
              ? (Xe = n.DEPTH24_STENCIL8)
              : (Xe = n.DEPTH_COMPONENT16)
            : G.type === ss &&
              console.error(
                "WebGLRenderer: Floating point depth texture requires WebGL2."
              ),
          G.format === Ds &&
            Xe === n.DEPTH_COMPONENT &&
            G.type !== Ac &&
            G.type !== rs &&
            (console.warn(
              "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
            ),
            (G.type = rs),
            (tt = s.convert(G.type))),
          G.format === Io &&
            Xe === n.DEPTH_COMPONENT &&
            ((Xe = n.DEPTH_STENCIL),
            G.type !== Ls &&
              (console.warn(
                "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
              ),
              (G.type = Ls),
              (tt = s.convert(G.type)))),
          ae &&
            (Vt
              ? t.texStorage2D(n.TEXTURE_2D, 1, Xe, be.width, be.height)
              : t.texImage2D(
                  n.TEXTURE_2D,
                  0,
                  Xe,
                  be.width,
                  be.height,
                  0,
                  Re,
                  tt,
                  null
                ));
      else if (G.isDataTexture)
        if (Et.length > 0 && ie) {
          Vt &&
            ae &&
            t.texStorage2D(n.TEXTURE_2D, $e, Xe, Et[0].width, Et[0].height);
          for (let Me = 0, Ue = Et.length; Me < Ue; Me++)
            (et = Et[Me]),
              Vt
                ? t.texSubImage2D(
                    n.TEXTURE_2D,
                    Me,
                    0,
                    0,
                    et.width,
                    et.height,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage2D(
                    n.TEXTURE_2D,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    0,
                    Re,
                    tt,
                    et.data
                  );
          G.generateMipmaps = !1;
        } else
          Vt
            ? (ae && t.texStorage2D(n.TEXTURE_2D, $e, Xe, be.width, be.height),
              t.texSubImage2D(
                n.TEXTURE_2D,
                0,
                0,
                0,
                be.width,
                be.height,
                Re,
                tt,
                be.data
              ))
            : t.texImage2D(
                n.TEXTURE_2D,
                0,
                Xe,
                be.width,
                be.height,
                0,
                Re,
                tt,
                be.data
              );
      else if (G.isCompressedTexture)
        if (G.isCompressedArrayTexture) {
          Vt &&
            ae &&
            t.texStorage3D(
              n.TEXTURE_2D_ARRAY,
              $e,
              Xe,
              Et[0].width,
              Et[0].height,
              be.depth
            );
          for (let Me = 0, Ue = Et.length; Me < Ue; Me++)
            (et = Et[Me]),
              G.format !== nr
                ? Re !== null
                  ? Vt
                    ? t.compressedTexSubImage3D(
                        n.TEXTURE_2D_ARRAY,
                        Me,
                        0,
                        0,
                        0,
                        et.width,
                        et.height,
                        be.depth,
                        Re,
                        et.data,
                        0,
                        0
                      )
                    : t.compressedTexImage3D(
                        n.TEXTURE_2D_ARRAY,
                        Me,
                        Xe,
                        et.width,
                        et.height,
                        be.depth,
                        0,
                        et.data,
                        0,
                        0
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : Vt
                ? t.texSubImage3D(
                    n.TEXTURE_2D_ARRAY,
                    Me,
                    0,
                    0,
                    0,
                    et.width,
                    et.height,
                    be.depth,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage3D(
                    n.TEXTURE_2D_ARRAY,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    be.depth,
                    0,
                    Re,
                    tt,
                    et.data
                  );
        } else {
          Vt &&
            ae &&
            t.texStorage2D(n.TEXTURE_2D, $e, Xe, Et[0].width, Et[0].height);
          for (let Me = 0, Ue = Et.length; Me < Ue; Me++)
            (et = Et[Me]),
              G.format !== nr
                ? Re !== null
                  ? Vt
                    ? t.compressedTexSubImage2D(
                        n.TEXTURE_2D,
                        Me,
                        0,
                        0,
                        et.width,
                        et.height,
                        Re,
                        et.data
                      )
                    : t.compressedTexImage2D(
                        n.TEXTURE_2D,
                        Me,
                        Xe,
                        et.width,
                        et.height,
                        0,
                        et.data
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : Vt
                ? t.texSubImage2D(
                    n.TEXTURE_2D,
                    Me,
                    0,
                    0,
                    et.width,
                    et.height,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage2D(
                    n.TEXTURE_2D,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    0,
                    Re,
                    tt,
                    et.data
                  );
        }
      else if (G.isDataArrayTexture)
        Vt
          ? (ae &&
              t.texStorage3D(
                n.TEXTURE_2D_ARRAY,
                $e,
                Xe,
                be.width,
                be.height,
                be.depth
              ),
            t.texSubImage3D(
              n.TEXTURE_2D_ARRAY,
              0,
              0,
              0,
              0,
              be.width,
              be.height,
              be.depth,
              Re,
              tt,
              be.data
            ))
          : t.texImage3D(
              n.TEXTURE_2D_ARRAY,
              0,
              Xe,
              be.width,
              be.height,
              be.depth,
              0,
              Re,
              tt,
              be.data
            );
      else if (G.isData3DTexture)
        Vt
          ? (ae &&
              t.texStorage3D(
                n.TEXTURE_3D,
                $e,
                Xe,
                be.width,
                be.height,
                be.depth
              ),
            t.texSubImage3D(
              n.TEXTURE_3D,
              0,
              0,
              0,
              0,
              be.width,
              be.height,
              be.depth,
              Re,
              tt,
              be.data
            ))
          : t.texImage3D(
              n.TEXTURE_3D,
              0,
              Xe,
              be.width,
              be.height,
              be.depth,
              0,
              Re,
              tt,
              be.data
            );
      else if (G.isFramebufferTexture) {
        if (ae)
          if (Vt) t.texStorage2D(n.TEXTURE_2D, $e, Xe, be.width, be.height);
          else {
            let Me = be.width,
              Ue = be.height;
            for (let fe = 0; fe < $e; fe++)
              t.texImage2D(n.TEXTURE_2D, fe, Xe, Me, Ue, 0, Re, tt, null),
                (Me >>= 1),
                (Ue >>= 1);
          }
      } else if (Et.length > 0 && ie) {
        Vt &&
          ae &&
          t.texStorage2D(n.TEXTURE_2D, $e, Xe, Et[0].width, Et[0].height);
        for (let Me = 0, Ue = Et.length; Me < Ue; Me++)
          (et = Et[Me]),
            Vt
              ? t.texSubImage2D(n.TEXTURE_2D, Me, 0, 0, Re, tt, et)
              : t.texImage2D(n.TEXTURE_2D, Me, Xe, Re, tt, et);
        G.generateMipmaps = !1;
      } else
        Vt
          ? (ae && t.texStorage2D(n.TEXTURE_2D, $e, Xe, be.width, be.height),
            t.texSubImage2D(n.TEXTURE_2D, 0, 0, 0, Re, tt, be))
          : t.texImage2D(n.TEXTURE_2D, 0, Xe, Re, tt, be);
      q(G, ie) && I(qe),
        (ut.__version = Be.version),
        G.onUpdate && G.onUpdate(G);
    }
    Y.__version = G.version;
  }
  function It(Y, G, xe) {
    if (G.image.length !== 6) return;
    const qe = ot(Y, G),
      Ie = G.source;
    t.bindTexture(n.TEXTURE_CUBE_MAP, Y.__webglTexture, n.TEXTURE0 + xe);
    const Be = i.get(Ie);
    if (Ie.version !== Be.__version || qe === !0) {
      t.activeTexture(n.TEXTURE0 + xe),
        n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, G.flipY),
        n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha),
        n.pixelStorei(n.UNPACK_ALIGNMENT, G.unpackAlignment),
        n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const ut = G.isCompressedTexture || G.image[0].isCompressedTexture,
        Fe = G.image[0] && G.image[0].isDataTexture,
        be = [];
      for (let Me = 0; Me < 6; Me++)
        !ut && !Fe
          ? (be[Me] = T(G.image[Me], !1, !0, p))
          : (be[Me] = Fe ? G.image[Me].image : G.image[Me]),
          (be[Me] = nn(G, be[Me]));
      const ie = be[0],
        Re = R(ie) || c,
        tt = s.convert(G.format, G.colorSpace),
        Xe = s.convert(G.type),
        et = N(G.internalFormat, tt, Xe, G.colorSpace),
        Et = c && G.isVideoTexture !== !0,
        Vt = Be.__version === void 0 || qe === !0;
      let ae = D(G, ie, Re);
      rt(n.TEXTURE_CUBE_MAP, G, Re);
      let $e;
      if (ut) {
        Et &&
          Vt &&
          t.texStorage2D(n.TEXTURE_CUBE_MAP, ae, et, ie.width, ie.height);
        for (let Me = 0; Me < 6; Me++) {
          $e = be[Me].mipmaps;
          for (let Ue = 0; Ue < $e.length; Ue++) {
            const fe = $e[Ue];
            G.format !== nr
              ? tt !== null
                ? Et
                  ? t.compressedTexSubImage2D(
                      n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                      Ue,
                      0,
                      0,
                      fe.width,
                      fe.height,
                      tt,
                      fe.data
                    )
                  : t.compressedTexImage2D(
                      n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                      Ue,
                      et,
                      fe.width,
                      fe.height,
                      0,
                      fe.data
                    )
                : console.warn(
                    "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                  )
              : Et
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  Ue,
                  0,
                  0,
                  fe.width,
                  fe.height,
                  tt,
                  Xe,
                  fe.data
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  Ue,
                  et,
                  fe.width,
                  fe.height,
                  0,
                  tt,
                  Xe,
                  fe.data
                );
          }
        }
      } else {
        ($e = G.mipmaps),
          Et &&
            Vt &&
            ($e.length > 0 && ae++,
            t.texStorage2D(
              n.TEXTURE_CUBE_MAP,
              ae,
              et,
              be[0].width,
              be[0].height
            ));
        for (let Me = 0; Me < 6; Me++)
          if (Fe) {
            Et
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  0,
                  0,
                  be[Me].width,
                  be[Me].height,
                  tt,
                  Xe,
                  be[Me].data
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  et,
                  be[Me].width,
                  be[Me].height,
                  0,
                  tt,
                  Xe,
                  be[Me].data
                );
            for (let Ue = 0; Ue < $e.length; Ue++) {
              const kt = $e[Ue].image[Me].image;
              Et
                ? t.texSubImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    0,
                    0,
                    kt.width,
                    kt.height,
                    tt,
                    Xe,
                    kt.data
                  )
                : t.texImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    et,
                    kt.width,
                    kt.height,
                    0,
                    tt,
                    Xe,
                    kt.data
                  );
            }
          } else {
            Et
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  0,
                  0,
                  tt,
                  Xe,
                  be[Me]
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  et,
                  tt,
                  Xe,
                  be[Me]
                );
            for (let Ue = 0; Ue < $e.length; Ue++) {
              const fe = $e[Ue];
              Et
                ? t.texSubImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    0,
                    0,
                    tt,
                    Xe,
                    fe.image[Me]
                  )
                : t.texImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    et,
                    tt,
                    Xe,
                    fe.image[Me]
                  );
            }
          }
      }
      q(G, Re) && I(n.TEXTURE_CUBE_MAP),
        (Be.__version = Ie.version),
        G.onUpdate && G.onUpdate(G);
    }
    Y.__version = G.version;
  }
  function ft(Y, G, xe, qe, Ie, Be) {
    const ut = s.convert(xe.format, xe.colorSpace),
      Fe = s.convert(xe.type),
      be = N(xe.internalFormat, ut, Fe, xe.colorSpace);
    if (!i.get(G).__hasExternalTextures) {
      const Re = Math.max(1, G.width >> Be),
        tt = Math.max(1, G.height >> Be);
      Ie === n.TEXTURE_3D || Ie === n.TEXTURE_2D_ARRAY
        ? t.texImage3D(Ie, Be, be, Re, tt, G.depth, 0, ut, Fe, null)
        : t.texImage2D(Ie, Be, be, Re, tt, 0, ut, Fe, null);
    }
    t.bindFramebuffer(n.FRAMEBUFFER, Y),
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            qe,
            Ie,
            i.get(xe).__webglTexture,
            0,
            at(G)
          )
        : (Ie === n.TEXTURE_2D ||
            (Ie >= n.TEXTURE_CUBE_MAP_POSITIVE_X &&
              Ie <= n.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
          n.framebufferTexture2D(
            n.FRAMEBUFFER,
            qe,
            Ie,
            i.get(xe).__webglTexture,
            Be
          ),
      t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function ne(Y, G, xe) {
    if (
      (n.bindRenderbuffer(n.RENDERBUFFER, Y), G.depthBuffer && !G.stencilBuffer)
    ) {
      let qe = n.DEPTH_COMPONENT16;
      if (xe || mt(G)) {
        const Ie = G.depthTexture;
        Ie &&
          Ie.isDepthTexture &&
          (Ie.type === ss
            ? (qe = n.DEPTH_COMPONENT32F)
            : Ie.type === rs && (qe = n.DEPTH_COMPONENT24));
        const Be = at(G);
        mt(G)
          ? x.renderbufferStorageMultisampleEXT(
              n.RENDERBUFFER,
              Be,
              qe,
              G.width,
              G.height
            )
          : n.renderbufferStorageMultisample(
              n.RENDERBUFFER,
              Be,
              qe,
              G.width,
              G.height
            );
      } else n.renderbufferStorage(n.RENDERBUFFER, qe, G.width, G.height);
      n.framebufferRenderbuffer(
        n.FRAMEBUFFER,
        n.DEPTH_ATTACHMENT,
        n.RENDERBUFFER,
        Y
      );
    } else if (G.depthBuffer && G.stencilBuffer) {
      const qe = at(G);
      xe && mt(G) === !1
        ? n.renderbufferStorageMultisample(
            n.RENDERBUFFER,
            qe,
            n.DEPTH24_STENCIL8,
            G.width,
            G.height
          )
        : mt(G)
        ? x.renderbufferStorageMultisampleEXT(
            n.RENDERBUFFER,
            qe,
            n.DEPTH24_STENCIL8,
            G.width,
            G.height
          )
        : n.renderbufferStorage(
            n.RENDERBUFFER,
            n.DEPTH_STENCIL,
            G.width,
            G.height
          ),
        n.framebufferRenderbuffer(
          n.FRAMEBUFFER,
          n.DEPTH_STENCIL_ATTACHMENT,
          n.RENDERBUFFER,
          Y
        );
    } else {
      const qe =
        G.isWebGLMultipleRenderTargets === !0 ? G.texture : [G.texture];
      for (let Ie = 0; Ie < qe.length; Ie++) {
        const Be = qe[Ie],
          ut = s.convert(Be.format, Be.colorSpace),
          Fe = s.convert(Be.type),
          be = N(Be.internalFormat, ut, Fe, Be.colorSpace),
          ie = at(G);
        xe && mt(G) === !1
          ? n.renderbufferStorageMultisample(
              n.RENDERBUFFER,
              ie,
              be,
              G.width,
              G.height
            )
          : mt(G)
          ? x.renderbufferStorageMultisampleEXT(
              n.RENDERBUFFER,
              ie,
              be,
              G.width,
              G.height
            )
          : n.renderbufferStorage(n.RENDERBUFFER, be, G.width, G.height);
      }
    }
    n.bindRenderbuffer(n.RENDERBUFFER, null);
  }
  function ze(Y, G) {
    if (G && G.isWebGLCubeRenderTarget)
      throw new Error(
        "Depth Texture with cube render targets is not supported"
      );
    if (
      (t.bindFramebuffer(n.FRAMEBUFFER, Y),
      !(G.depthTexture && G.depthTexture.isDepthTexture))
    )
      throw new Error(
        "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
      );
    (!i.get(G.depthTexture).__webglTexture ||
      G.depthTexture.image.width !== G.width ||
      G.depthTexture.image.height !== G.height) &&
      ((G.depthTexture.image.width = G.width),
      (G.depthTexture.image.height = G.height),
      (G.depthTexture.needsUpdate = !0)),
      de(G.depthTexture, 0);
    const qe = i.get(G.depthTexture).__webglTexture,
      Ie = at(G);
    if (G.depthTexture.format === Ds)
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            n.DEPTH_ATTACHMENT,
            n.TEXTURE_2D,
            qe,
            0,
            Ie
          )
        : n.framebufferTexture2D(
            n.FRAMEBUFFER,
            n.DEPTH_ATTACHMENT,
            n.TEXTURE_2D,
            qe,
            0
          );
    else if (G.depthTexture.format === Io)
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            n.DEPTH_STENCIL_ATTACHMENT,
            n.TEXTURE_2D,
            qe,
            0,
            Ie
          )
        : n.framebufferTexture2D(
            n.FRAMEBUFFER,
            n.DEPTH_STENCIL_ATTACHMENT,
            n.TEXTURE_2D,
            qe,
            0
          );
    else throw new Error("Unknown depthTexture format");
  }
  function Ce(Y) {
    const G = i.get(Y),
      xe = Y.isWebGLCubeRenderTarget === !0;
    if (Y.depthTexture && !G.__autoAllocateDepthBuffer) {
      if (xe)
        throw new Error(
          "target.depthTexture not supported in Cube render targets"
        );
      ze(G.__webglFramebuffer, Y);
    } else if (xe) {
      G.__webglDepthbuffer = [];
      for (let qe = 0; qe < 6; qe++)
        t.bindFramebuffer(n.FRAMEBUFFER, G.__webglFramebuffer[qe]),
          (G.__webglDepthbuffer[qe] = n.createRenderbuffer()),
          ne(G.__webglDepthbuffer[qe], Y, !1);
    } else
      t.bindFramebuffer(n.FRAMEBUFFER, G.__webglFramebuffer),
        (G.__webglDepthbuffer = n.createRenderbuffer()),
        ne(G.__webglDepthbuffer, Y, !1);
    t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function Ne(Y, G, xe) {
    const qe = i.get(Y);
    G !== void 0 &&
      ft(
        qe.__webglFramebuffer,
        Y,
        Y.texture,
        n.COLOR_ATTACHMENT0,
        n.TEXTURE_2D,
        0
      ),
      xe !== void 0 && Ce(Y);
  }
  function Le(Y) {
    const G = Y.texture,
      xe = i.get(Y),
      qe = i.get(G);
    Y.addEventListener("dispose", $),
      Y.isWebGLMultipleRenderTargets !== !0 &&
        (qe.__webglTexture === void 0 &&
          (qe.__webglTexture = n.createTexture()),
        (qe.__version = G.version),
        u.memory.textures++);
    const Ie = Y.isWebGLCubeRenderTarget === !0,
      Be = Y.isWebGLMultipleRenderTargets === !0,
      ut = R(Y) || c;
    if (Ie) {
      xe.__webglFramebuffer = [];
      for (let Fe = 0; Fe < 6; Fe++)
        if (c && G.mipmaps && G.mipmaps.length > 0) {
          xe.__webglFramebuffer[Fe] = [];
          for (let be = 0; be < G.mipmaps.length; be++)
            xe.__webglFramebuffer[Fe][be] = n.createFramebuffer();
        } else xe.__webglFramebuffer[Fe] = n.createFramebuffer();
    } else {
      if (c && G.mipmaps && G.mipmaps.length > 0) {
        xe.__webglFramebuffer = [];
        for (let Fe = 0; Fe < G.mipmaps.length; Fe++)
          xe.__webglFramebuffer[Fe] = n.createFramebuffer();
      } else xe.__webglFramebuffer = n.createFramebuffer();
      if (Be)
        if (r.drawBuffers) {
          const Fe = Y.texture;
          for (let be = 0, ie = Fe.length; be < ie; be++) {
            const Re = i.get(Fe[be]);
            Re.__webglTexture === void 0 &&
              ((Re.__webglTexture = n.createTexture()), u.memory.textures++);
          }
        } else
          console.warn(
            "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
          );
      if (c && Y.samples > 0 && mt(Y) === !1) {
        const Fe = Be ? G : [G];
        (xe.__webglMultisampledFramebuffer = n.createFramebuffer()),
          (xe.__webglColorRenderbuffer = []),
          t.bindFramebuffer(n.FRAMEBUFFER, xe.__webglMultisampledFramebuffer);
        for (let be = 0; be < Fe.length; be++) {
          const ie = Fe[be];
          (xe.__webglColorRenderbuffer[be] = n.createRenderbuffer()),
            n.bindRenderbuffer(n.RENDERBUFFER, xe.__webglColorRenderbuffer[be]);
          const Re = s.convert(ie.format, ie.colorSpace),
            tt = s.convert(ie.type),
            Xe = N(
              ie.internalFormat,
              Re,
              tt,
              ie.colorSpace,
              Y.isXRRenderTarget === !0
            ),
            et = at(Y);
          n.renderbufferStorageMultisample(
            n.RENDERBUFFER,
            et,
            Xe,
            Y.width,
            Y.height
          ),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + be,
              n.RENDERBUFFER,
              xe.__webglColorRenderbuffer[be]
            );
        }
        n.bindRenderbuffer(n.RENDERBUFFER, null),
          Y.depthBuffer &&
            ((xe.__webglDepthRenderbuffer = n.createRenderbuffer()),
            ne(xe.__webglDepthRenderbuffer, Y, !0)),
          t.bindFramebuffer(n.FRAMEBUFFER, null);
      }
    }
    if (Ie) {
      t.bindTexture(n.TEXTURE_CUBE_MAP, qe.__webglTexture),
        rt(n.TEXTURE_CUBE_MAP, G, ut);
      for (let Fe = 0; Fe < 6; Fe++)
        if (c && G.mipmaps && G.mipmaps.length > 0)
          for (let be = 0; be < G.mipmaps.length; be++)
            ft(
              xe.__webglFramebuffer[Fe][be],
              Y,
              G,
              n.COLOR_ATTACHMENT0,
              n.TEXTURE_CUBE_MAP_POSITIVE_X + Fe,
              be
            );
        else
          ft(
            xe.__webglFramebuffer[Fe],
            Y,
            G,
            n.COLOR_ATTACHMENT0,
            n.TEXTURE_CUBE_MAP_POSITIVE_X + Fe,
            0
          );
      q(G, ut) && I(n.TEXTURE_CUBE_MAP), t.unbindTexture();
    } else if (Be) {
      const Fe = Y.texture;
      for (let be = 0, ie = Fe.length; be < ie; be++) {
        const Re = Fe[be],
          tt = i.get(Re);
        t.bindTexture(n.TEXTURE_2D, tt.__webglTexture),
          rt(n.TEXTURE_2D, Re, ut),
          ft(
            xe.__webglFramebuffer,
            Y,
            Re,
            n.COLOR_ATTACHMENT0 + be,
            n.TEXTURE_2D,
            0
          ),
          q(Re, ut) && I(n.TEXTURE_2D);
      }
      t.unbindTexture();
    } else {
      let Fe = n.TEXTURE_2D;
      if (
        ((Y.isWebGL3DRenderTarget || Y.isWebGLArrayRenderTarget) &&
          (c
            ? (Fe = Y.isWebGL3DRenderTarget ? n.TEXTURE_3D : n.TEXTURE_2D_ARRAY)
            : console.error(
                "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
              )),
        t.bindTexture(Fe, qe.__webglTexture),
        rt(Fe, G, ut),
        c && G.mipmaps && G.mipmaps.length > 0)
      )
        for (let be = 0; be < G.mipmaps.length; be++)
          ft(xe.__webglFramebuffer[be], Y, G, n.COLOR_ATTACHMENT0, Fe, be);
      else ft(xe.__webglFramebuffer, Y, G, n.COLOR_ATTACHMENT0, Fe, 0);
      q(G, ut) && I(Fe), t.unbindTexture();
    }
    Y.depthBuffer && Ce(Y);
  }
  function At(Y) {
    const G = R(Y) || c,
      xe = Y.isWebGLMultipleRenderTargets === !0 ? Y.texture : [Y.texture];
    for (let qe = 0, Ie = xe.length; qe < Ie; qe++) {
      const Be = xe[qe];
      if (q(Be, G)) {
        const ut = Y.isWebGLCubeRenderTarget
            ? n.TEXTURE_CUBE_MAP
            : n.TEXTURE_2D,
          Fe = i.get(Be).__webglTexture;
        t.bindTexture(ut, Fe), I(ut), t.unbindTexture();
      }
    }
  }
  function nt(Y) {
    if (c && Y.samples > 0 && mt(Y) === !1) {
      const G = Y.isWebGLMultipleRenderTargets ? Y.texture : [Y.texture],
        xe = Y.width,
        qe = Y.height;
      let Ie = n.COLOR_BUFFER_BIT;
      const Be = [],
        ut = Y.stencilBuffer ? n.DEPTH_STENCIL_ATTACHMENT : n.DEPTH_ATTACHMENT,
        Fe = i.get(Y),
        be = Y.isWebGLMultipleRenderTargets === !0;
      if (be)
        for (let ie = 0; ie < G.length; ie++)
          t.bindFramebuffer(n.FRAMEBUFFER, Fe.__webglMultisampledFramebuffer),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + ie,
              n.RENDERBUFFER,
              null
            ),
            t.bindFramebuffer(n.FRAMEBUFFER, Fe.__webglFramebuffer),
            n.framebufferTexture2D(
              n.DRAW_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + ie,
              n.TEXTURE_2D,
              null,
              0
            );
      t.bindFramebuffer(n.READ_FRAMEBUFFER, Fe.__webglMultisampledFramebuffer),
        t.bindFramebuffer(n.DRAW_FRAMEBUFFER, Fe.__webglFramebuffer);
      for (let ie = 0; ie < G.length; ie++) {
        Be.push(n.COLOR_ATTACHMENT0 + ie), Y.depthBuffer && Be.push(ut);
        const Re =
          Fe.__ignoreDepthValues !== void 0 ? Fe.__ignoreDepthValues : !1;
        if (
          (Re === !1 &&
            (Y.depthBuffer && (Ie |= n.DEPTH_BUFFER_BIT),
            Y.stencilBuffer && (Ie |= n.STENCIL_BUFFER_BIT)),
          be &&
            n.framebufferRenderbuffer(
              n.READ_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0,
              n.RENDERBUFFER,
              Fe.__webglColorRenderbuffer[ie]
            ),
          Re === !0 &&
            (n.invalidateFramebuffer(n.READ_FRAMEBUFFER, [ut]),
            n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER, [ut])),
          be)
        ) {
          const tt = i.get(G[ie]).__webglTexture;
          n.framebufferTexture2D(
            n.DRAW_FRAMEBUFFER,
            n.COLOR_ATTACHMENT0,
            n.TEXTURE_2D,
            tt,
            0
          );
        }
        n.blitFramebuffer(0, 0, xe, qe, 0, 0, xe, qe, Ie, n.NEAREST),
          M && n.invalidateFramebuffer(n.READ_FRAMEBUFFER, Be);
      }
      if (
        (t.bindFramebuffer(n.READ_FRAMEBUFFER, null),
        t.bindFramebuffer(n.DRAW_FRAMEBUFFER, null),
        be)
      )
        for (let ie = 0; ie < G.length; ie++) {
          t.bindFramebuffer(n.FRAMEBUFFER, Fe.__webglMultisampledFramebuffer),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + ie,
              n.RENDERBUFFER,
              Fe.__webglColorRenderbuffer[ie]
            );
          const Re = i.get(G[ie]).__webglTexture;
          t.bindFramebuffer(n.FRAMEBUFFER, Fe.__webglFramebuffer),
            n.framebufferTexture2D(
              n.DRAW_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + ie,
              n.TEXTURE_2D,
              Re,
              0
            );
        }
      t.bindFramebuffer(n.DRAW_FRAMEBUFFER, Fe.__webglMultisampledFramebuffer);
    }
  }
  function at(Y) {
    return Math.min(_, Y.samples);
  }
  function mt(Y) {
    const G = i.get(Y);
    return (
      c &&
      Y.samples > 0 &&
      e.has("WEBGL_multisampled_render_to_texture") === !0 &&
      G.__useRenderToTexture !== !1
    );
  }
  function xt(Y) {
    const G = u.render.frame;
    E.get(Y) !== G && (E.set(Y, G), Y.update());
  }
  function nn(Y, G) {
    const xe = Y.colorSpace,
      qe = Y.format,
      Ie = Y.type;
    return (
      Y.isCompressedTexture === !0 ||
        Y.isVideoTexture === !0 ||
        Y.format === xu ||
        (xe !== xr &&
          xe !== Os &&
          (xe === fn || xe === jl
            ? c === !1
              ? e.has("EXT_sRGB") === !0 && qe === nr
                ? ((Y.format = xu),
                  (Y.minFilter = ki),
                  (Y.generateMipmaps = !1))
                : (G = f1.sRGBToLinear(G))
              : (qe !== nr || Ie !== ls) &&
                console.warn(
                  "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                )
            : console.error(
                "THREE.WebGLTextures: Unsupported texture color space:",
                xe
              ))),
      G
    );
  }
  (this.allocateTextureUnit = se),
    (this.resetTextureUnits = ee),
    (this.setTexture2D = de),
    (this.setTexture2DArray = oe),
    (this.setTexture3D = he),
    (this.setTextureCube = Te),
    (this.rebindTextures = Ne),
    (this.setupRenderTarget = Le),
    (this.updateRenderTargetMipmap = At),
    (this.updateMultisampleRenderTarget = nt),
    (this.setupDepthRenderbuffer = Ce),
    (this.setupFrameBufferTexture = ft),
    (this.useMultisampledRTT = mt);
}
const m5 = 0,
  Rn = 1;
function g5(n, e, t) {
  const i = t.isWebGL2;
  function r(s, u = Os) {
    let c;
    const d = u === fn || u === jl ? Rn : m5;
    if (s === ls) return n.UNSIGNED_BYTE;
    if (s === r1) return n.UNSIGNED_SHORT_4_4_4_4;
    if (s === s1) return n.UNSIGNED_SHORT_5_5_5_1;
    if (s === O3) return n.BYTE;
    if (s === U3) return n.SHORT;
    if (s === Ac) return n.UNSIGNED_SHORT;
    if (s === i1) return n.INT;
    if (s === rs) return n.UNSIGNED_INT;
    if (s === ss) return n.FLOAT;
    if (s === Ea)
      return i
        ? n.HALF_FLOAT
        : ((c = e.get("OES_texture_half_float")),
          c !== null ? c.HALF_FLOAT_OES : null);
    if (s === q3) return n.ALPHA;
    if (s === nr) return n.RGBA;
    if (s === B3) return n.LUMINANCE;
    if (s === N3) return n.LUMINANCE_ALPHA;
    if (s === Ds) return n.DEPTH_COMPONENT;
    if (s === Io) return n.DEPTH_STENCIL;
    if (s === xu)
      return (c = e.get("EXT_sRGB")), c !== null ? c.SRGB_ALPHA_EXT : null;
    if (s === F3) return n.RED;
    if (s === o1) return n.RED_INTEGER;
    if (s === k3) return n.RG;
    if (s === a1) return n.RG_INTEGER;
    if (s === A1) return n.RGBA_INTEGER;
    if (s === M0 || s === S0 || s === E0 || s === w0)
      if (d === Rn)
        if (((c = e.get("WEBGL_compressed_texture_s3tc_srgb")), c !== null)) {
          if (s === M0) return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (s === S0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (s === E0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (s === w0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else return null;
      else if (((c = e.get("WEBGL_compressed_texture_s3tc")), c !== null)) {
        if (s === M0) return c.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (s === S0) return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (s === E0) return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (s === w0) return c.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      } else return null;
    if (s === Nf || s === Ff || s === kf || s === zf)
      if (((c = e.get("WEBGL_compressed_texture_pvrtc")), c !== null)) {
        if (s === Nf) return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (s === Ff) return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (s === kf) return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (s === zf) return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else return null;
    if (s === z3)
      return (
        (c = e.get("WEBGL_compressed_texture_etc1")),
        c !== null ? c.COMPRESSED_RGB_ETC1_WEBGL : null
      );
    if (s === Gf || s === Hf)
      if (((c = e.get("WEBGL_compressed_texture_etc")), c !== null)) {
        if (s === Gf)
          return d === Rn ? c.COMPRESSED_SRGB8_ETC2 : c.COMPRESSED_RGB8_ETC2;
        if (s === Hf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
            : c.COMPRESSED_RGBA8_ETC2_EAC;
      } else return null;
    if (
      s === Vf ||
      s === Wf ||
      s === jf ||
      s === Xf ||
      s === Qf ||
      s === $f ||
      s === Yf ||
      s === Zf ||
      s === Kf ||
      s === Jf ||
      s === eh ||
      s === th ||
      s === nh ||
      s === ih
    )
      if (((c = e.get("WEBGL_compressed_texture_astc")), c !== null)) {
        if (s === Vf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
            : c.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (s === Wf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
            : c.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (s === jf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
            : c.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (s === Xf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
            : c.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (s === Qf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
            : c.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (s === $f)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
            : c.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (s === Yf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
            : c.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (s === Zf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
            : c.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (s === Kf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
            : c.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (s === Jf)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
            : c.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (s === eh)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
            : c.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (s === th)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
            : c.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (s === nh)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
            : c.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (s === ih)
          return d === Rn
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
            : c.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else return null;
    if (s === T0 || s === rh || s === sh)
      if (((c = e.get("EXT_texture_compression_bptc")), c !== null)) {
        if (s === T0)
          return d === Rn
            ? c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
            : c.COMPRESSED_RGBA_BPTC_UNORM_EXT;
        if (s === rh) return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
        if (s === sh) return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
      } else return null;
    if (s === G3 || s === oh || s === ah || s === Ah)
      if (((c = e.get("EXT_texture_compression_rgtc")), c !== null)) {
        if (s === T0) return c.COMPRESSED_RED_RGTC1_EXT;
        if (s === oh) return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (s === ah) return c.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (s === Ah) return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else return null;
    return s === Ls
      ? i
        ? n.UNSIGNED_INT_24_8
        : ((c = e.get("WEBGL_depth_texture")),
          c !== null ? c.UNSIGNED_INT_24_8_WEBGL : null)
      : n[s] !== void 0
      ? n[s]
      : null;
  }
  return { convert: r };
}
class _5 extends zi {
  constructor(e = []) {
    super(), (this.isArrayCamera = !0), (this.cameras = e);
  }
}
let Hi = class extends Cn {
  constructor() {
    super(), (this.isGroup = !0), (this.type = "Group");
  }
};
const v5 = { type: "move" };
class $0 {
  constructor() {
    (this._targetRay = null), (this._grip = null), (this._hand = null);
  }
  getHandSpace() {
    return (
      this._hand === null &&
        ((this._hand = new Hi()),
        (this._hand.matrixAutoUpdate = !1),
        (this._hand.visible = !1),
        (this._hand.joints = {}),
        (this._hand.inputState = { pinching: !1 })),
      this._hand
    );
  }
  getTargetRaySpace() {
    return (
      this._targetRay === null &&
        ((this._targetRay = new Hi()),
        (this._targetRay.matrixAutoUpdate = !1),
        (this._targetRay.visible = !1),
        (this._targetRay.hasLinearVelocity = !1),
        (this._targetRay.linearVelocity = new J()),
        (this._targetRay.hasAngularVelocity = !1),
        (this._targetRay.angularVelocity = new J())),
      this._targetRay
    );
  }
  getGripSpace() {
    return (
      this._grip === null &&
        ((this._grip = new Hi()),
        (this._grip.matrixAutoUpdate = !1),
        (this._grip.visible = !1),
        (this._grip.hasLinearVelocity = !1),
        (this._grip.linearVelocity = new J()),
        (this._grip.hasAngularVelocity = !1),
        (this._grip.angularVelocity = new J())),
      this._grip
    );
  }
  dispatchEvent(e) {
    return (
      this._targetRay !== null && this._targetRay.dispatchEvent(e),
      this._grip !== null && this._grip.dispatchEvent(e),
      this._hand !== null && this._hand.dispatchEvent(e),
      this
    );
  }
  connect(e) {
    if (e && e.hand) {
      const t = this._hand;
      if (t) for (const i of e.hand.values()) this._getHandJoint(t, i);
    }
    return this.dispatchEvent({ type: "connected", data: e }), this;
  }
  disconnect(e) {
    return (
      this.dispatchEvent({ type: "disconnected", data: e }),
      this._targetRay !== null && (this._targetRay.visible = !1),
      this._grip !== null && (this._grip.visible = !1),
      this._hand !== null && (this._hand.visible = !1),
      this
    );
  }
  update(e, t, i) {
    let r = null,
      s = null,
      u = null;
    const c = this._targetRay,
      d = this._grip,
      p = this._hand;
    if (e && t.session.visibilityState !== "visible-blurred") {
      if (p && e.hand) {
        u = !0;
        for (const C of e.hand.values()) {
          const S = t.getJointPose(C, i),
            b = this._getHandJoint(p, C);
          S !== null &&
            (b.matrix.fromArray(S.transform.matrix),
            b.matrix.decompose(b.position, b.rotation, b.scale),
            (b.matrixWorldNeedsUpdate = !0),
            (b.jointRadius = S.radius)),
            (b.visible = S !== null);
        }
        const g = p.joints["index-finger-tip"],
          _ = p.joints["thumb-tip"],
          x = g.position.distanceTo(_.position),
          M = 0.02,
          E = 0.005;
        p.inputState.pinching && x > M + E
          ? ((p.inputState.pinching = !1),
            this.dispatchEvent({
              type: "pinchend",
              handedness: e.handedness,
              target: this,
            }))
          : !p.inputState.pinching &&
            x <= M - E &&
            ((p.inputState.pinching = !0),
            this.dispatchEvent({
              type: "pinchstart",
              handedness: e.handedness,
              target: this,
            }));
      } else
        d !== null &&
          e.gripSpace &&
          ((s = t.getPose(e.gripSpace, i)),
          s !== null &&
            (d.matrix.fromArray(s.transform.matrix),
            d.matrix.decompose(d.position, d.rotation, d.scale),
            (d.matrixWorldNeedsUpdate = !0),
            s.linearVelocity
              ? ((d.hasLinearVelocity = !0),
                d.linearVelocity.copy(s.linearVelocity))
              : (d.hasLinearVelocity = !1),
            s.angularVelocity
              ? ((d.hasAngularVelocity = !0),
                d.angularVelocity.copy(s.angularVelocity))
              : (d.hasAngularVelocity = !1)));
      c !== null &&
        ((r = t.getPose(e.targetRaySpace, i)),
        r === null && s !== null && (r = s),
        r !== null &&
          (c.matrix.fromArray(r.transform.matrix),
          c.matrix.decompose(c.position, c.rotation, c.scale),
          (c.matrixWorldNeedsUpdate = !0),
          r.linearVelocity
            ? ((c.hasLinearVelocity = !0),
              c.linearVelocity.copy(r.linearVelocity))
            : (c.hasLinearVelocity = !1),
          r.angularVelocity
            ? ((c.hasAngularVelocity = !0),
              c.angularVelocity.copy(r.angularVelocity))
            : (c.hasAngularVelocity = !1),
          this.dispatchEvent(v5)));
    }
    return (
      c !== null && (c.visible = r !== null),
      d !== null && (d.visible = s !== null),
      p !== null && (p.visible = u !== null),
      this
    );
  }
  _getHandJoint(e, t) {
    if (e.joints[t.jointName] === void 0) {
      const i = new Hi();
      (i.matrixAutoUpdate = !1),
        (i.visible = !1),
        (e.joints[t.jointName] = i),
        e.add(i);
    }
    return e.joints[t.jointName];
  }
}
class x5 extends xi {
  constructor(e, t, i, r, s, u, c, d, p, g) {
    if (((g = g !== void 0 ? g : Ds), g !== Ds && g !== Io))
      throw new Error(
        "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
      );
    i === void 0 && g === Ds && (i = rs),
      i === void 0 && g === Io && (i = Ls),
      super(null, r, s, u, c, d, g, i, p),
      (this.isDepthTexture = !0),
      (this.image = { width: e, height: t }),
      (this.magFilter = c !== void 0 ? c : ai),
      (this.minFilter = d !== void 0 ? d : ai),
      (this.flipY = !1),
      (this.generateMipmaps = !1),
      (this.compareFunction = null);
  }
  copy(e) {
    return super.copy(e), (this.compareFunction = e.compareFunction), this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      this.compareFunction !== null &&
        (t.compareFunction = this.compareFunction),
      t
    );
  }
}
class y5 extends zs {
  constructor(e, t) {
    super();
    const i = this;
    let r = null,
      s = 1,
      u = null,
      c = "local-floor",
      d = 1,
      p = null,
      g = null,
      _ = null,
      x = null,
      M = null,
      E = null;
    const C = t.getContextAttributes();
    let S = null,
      b = null;
    const L = [],
      T = [],
      R = new zi();
    R.layers.enable(1), (R.viewport = new Ln());
    const U = new zi();
    U.layers.enable(2), (U.viewport = new Ln());
    const q = [R, U],
      I = new _5();
    I.layers.enable(1), I.layers.enable(2);
    let N = null,
      D = null;
    (this.cameraAutoUpdate = !0),
      (this.enabled = !1),
      (this.isPresenting = !1),
      (this.getController = function (oe) {
        let he = L[oe];
        return (
          he === void 0 && ((he = new $0()), (L[oe] = he)),
          he.getTargetRaySpace()
        );
      }),
      (this.getControllerGrip = function (oe) {
        let he = L[oe];
        return (
          he === void 0 && ((he = new $0()), (L[oe] = he)), he.getGripSpace()
        );
      }),
      (this.getHand = function (oe) {
        let he = L[oe];
        return (
          he === void 0 && ((he = new $0()), (L[oe] = he)), he.getHandSpace()
        );
      });
    function O(oe) {
      const he = T.indexOf(oe.inputSource);
      if (he === -1) return;
      const Te = L[he];
      Te !== void 0 &&
        (Te.update(oe.inputSource, oe.frame, p || u),
        Te.dispatchEvent({ type: oe.type, data: oe.inputSource }));
    }
    function F() {
      r.removeEventListener("select", O),
        r.removeEventListener("selectstart", O),
        r.removeEventListener("selectend", O),
        r.removeEventListener("squeeze", O),
        r.removeEventListener("squeezestart", O),
        r.removeEventListener("squeezeend", O),
        r.removeEventListener("end", F),
        r.removeEventListener("inputsourceschange", $);
      for (let oe = 0; oe < L.length; oe++) {
        const he = T[oe];
        he !== null && ((T[oe] = null), L[oe].disconnect(he));
      }
      (N = null),
        (D = null),
        e.setRenderTarget(S),
        (M = null),
        (x = null),
        (_ = null),
        (r = null),
        (b = null),
        de.stop(),
        (i.isPresenting = !1),
        i.dispatchEvent({ type: "sessionend" });
    }
    (this.setFramebufferScaleFactor = function (oe) {
      (s = oe),
        i.isPresenting === !0 &&
          console.warn(
            "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
          );
    }),
      (this.setReferenceSpaceType = function (oe) {
        (c = oe),
          i.isPresenting === !0 &&
            console.warn(
              "THREE.WebXRManager: Cannot change reference space type while presenting."
            );
      }),
      (this.getReferenceSpace = function () {
        return p || u;
      }),
      (this.setReferenceSpace = function (oe) {
        p = oe;
      }),
      (this.getBaseLayer = function () {
        return x !== null ? x : M;
      }),
      (this.getBinding = function () {
        return _;
      }),
      (this.getFrame = function () {
        return E;
      }),
      (this.getSession = function () {
        return r;
      }),
      (this.setSession = async function (oe) {
        if (((r = oe), r !== null)) {
          if (
            ((S = e.getRenderTarget()),
            r.addEventListener("select", O),
            r.addEventListener("selectstart", O),
            r.addEventListener("selectend", O),
            r.addEventListener("squeeze", O),
            r.addEventListener("squeezestart", O),
            r.addEventListener("squeezeend", O),
            r.addEventListener("end", F),
            r.addEventListener("inputsourceschange", $),
            C.xrCompatible !== !0 && (await t.makeXRCompatible()),
            r.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1)
          ) {
            const he = {
              antialias: r.renderState.layers === void 0 ? C.antialias : !0,
              alpha: !0,
              depth: C.depth,
              stencil: C.stencil,
              framebufferScaleFactor: s,
            };
            (M = new XRWebGLLayer(r, t, he)),
              r.updateRenderState({ baseLayer: M }),
              (b = new qs(M.framebufferWidth, M.framebufferHeight, {
                format: nr,
                type: ls,
                colorSpace: e.outputColorSpace,
                stencilBuffer: C.stencil,
              }));
          } else {
            let he = null,
              Te = null,
              Pe = null;
            C.depth &&
              ((Pe = C.stencil ? t.DEPTH24_STENCIL8 : t.DEPTH_COMPONENT24),
              (he = C.stencil ? Io : Ds),
              (Te = C.stencil ? Ls : rs));
            const Oe = {
              colorFormat: t.RGBA8,
              depthFormat: Pe,
              scaleFactor: s,
            };
            (_ = new XRWebGLBinding(r, t)),
              (x = _.createProjectionLayer(Oe)),
              r.updateRenderState({ layers: [x] }),
              (b = new qs(x.textureWidth, x.textureHeight, {
                format: nr,
                type: ls,
                depthTexture: new x5(
                  x.textureWidth,
                  x.textureHeight,
                  Te,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  he
                ),
                stencilBuffer: C.stencil,
                colorSpace: e.outputColorSpace,
                samples: C.antialias ? 4 : 0,
              }));
            const Je = e.properties.get(b);
            Je.__ignoreDepthValues = x.ignoreDepthValues;
          }
          (b.isXRRenderTarget = !0),
            this.setFoveation(d),
            (p = null),
            (u = await r.requestReferenceSpace(c)),
            de.setContext(r),
            de.start(),
            (i.isPresenting = !0),
            i.dispatchEvent({ type: "sessionstart" });
        }
      }),
      (this.getEnvironmentBlendMode = function () {
        if (r !== null) return r.environmentBlendMode;
      });
    function $(oe) {
      for (let he = 0; he < oe.removed.length; he++) {
        const Te = oe.removed[he],
          Pe = T.indexOf(Te);
        Pe >= 0 && ((T[Pe] = null), L[Pe].disconnect(Te));
      }
      for (let he = 0; he < oe.added.length; he++) {
        const Te = oe.added[he];
        let Pe = T.indexOf(Te);
        if (Pe === -1) {
          for (let Je = 0; Je < L.length; Je++)
            if (Je >= T.length) {
              T.push(Te), (Pe = Je);
              break;
            } else if (T[Je] === null) {
              (T[Je] = Te), (Pe = Je);
              break;
            }
          if (Pe === -1) break;
        }
        const Oe = L[Pe];
        Oe && Oe.connect(Te);
      }
    }
    const V = new J(),
      Q = new J();
    function k(oe, he, Te) {
      V.setFromMatrixPosition(he.matrixWorld),
        Q.setFromMatrixPosition(Te.matrixWorld);
      const Pe = V.distanceTo(Q),
        Oe = he.projectionMatrix.elements,
        Je = Te.projectionMatrix.elements,
        rt = Oe[14] / (Oe[10] - 1),
        ot = Oe[14] / (Oe[10] + 1),
        Rt = (Oe[9] + 1) / Oe[5],
        It = (Oe[9] - 1) / Oe[5],
        ft = (Oe[8] - 1) / Oe[0],
        ne = (Je[8] + 1) / Je[0],
        ze = rt * ft,
        Ce = rt * ne,
        Ne = Pe / (-ft + ne),
        Le = Ne * -ft;
      he.matrixWorld.decompose(oe.position, oe.quaternion, oe.scale),
        oe.translateX(Le),
        oe.translateZ(Ne),
        oe.matrixWorld.compose(oe.position, oe.quaternion, oe.scale),
        oe.matrixWorldInverse.copy(oe.matrixWorld).invert();
      const At = rt + Ne,
        nt = ot + Ne,
        at = ze - Le,
        mt = Ce + (Pe - Le),
        xt = ((Rt * ot) / nt) * At,
        nn = ((It * ot) / nt) * At;
      oe.projectionMatrix.makePerspective(at, mt, xt, nn, At, nt),
        oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert();
    }
    function te(oe, he) {
      he === null
        ? oe.matrixWorld.copy(oe.matrix)
        : oe.matrixWorld.multiplyMatrices(he.matrixWorld, oe.matrix),
        oe.matrixWorldInverse.copy(oe.matrixWorld).invert();
    }
    this.updateCamera = function (oe) {
      if (r === null) return;
      (I.near = U.near = R.near = oe.near),
        (I.far = U.far = R.far = oe.far),
        (N !== I.near || D !== I.far) &&
          (r.updateRenderState({ depthNear: I.near, depthFar: I.far }),
          (N = I.near),
          (D = I.far));
      const he = oe.parent,
        Te = I.cameras;
      te(I, he);
      for (let Pe = 0; Pe < Te.length; Pe++) te(Te[Pe], he);
      Te.length === 2
        ? k(I, R, U)
        : I.projectionMatrix.copy(R.projectionMatrix),
        ee(oe, I, he);
    };
    function ee(oe, he, Te) {
      Te === null
        ? oe.matrix.copy(he.matrixWorld)
        : (oe.matrix.copy(Te.matrixWorld),
          oe.matrix.invert(),
          oe.matrix.multiply(he.matrixWorld)),
        oe.matrix.decompose(oe.position, oe.quaternion, oe.scale),
        oe.updateMatrixWorld(!0),
        oe.projectionMatrix.copy(he.projectionMatrix),
        oe.projectionMatrixInverse.copy(he.projectionMatrixInverse),
        oe.isPerspectiveCamera &&
          ((oe.fov = wa * 2 * Math.atan(1 / oe.projectionMatrix.elements[5])),
          (oe.zoom = 1));
    }
    (this.getCamera = function () {
      return I;
    }),
      (this.getFoveation = function () {
        if (!(x === null && M === null)) return d;
      }),
      (this.setFoveation = function (oe) {
        (d = oe),
          x !== null && (x.fixedFoveation = oe),
          M !== null && M.fixedFoveation !== void 0 && (M.fixedFoveation = oe);
      });
    let se = null;
    function pe(oe, he) {
      if (((g = he.getViewerPose(p || u)), (E = he), g !== null)) {
        const Te = g.views;
        M !== null &&
          (e.setRenderTargetFramebuffer(b, M.framebuffer),
          e.setRenderTarget(b));
        let Pe = !1;
        Te.length !== I.cameras.length && ((I.cameras.length = 0), (Pe = !0));
        for (let Oe = 0; Oe < Te.length; Oe++) {
          const Je = Te[Oe];
          let rt = null;
          if (M !== null) rt = M.getViewport(Je);
          else {
            const Rt = _.getViewSubImage(x, Je);
            (rt = Rt.viewport),
              Oe === 0 &&
                (e.setRenderTargetTextures(
                  b,
                  Rt.colorTexture,
                  x.ignoreDepthValues ? void 0 : Rt.depthStencilTexture
                ),
                e.setRenderTarget(b));
          }
          let ot = q[Oe];
          ot === void 0 &&
            ((ot = new zi()),
            ot.layers.enable(Oe),
            (ot.viewport = new Ln()),
            (q[Oe] = ot)),
            ot.matrix.fromArray(Je.transform.matrix),
            ot.matrix.decompose(ot.position, ot.quaternion, ot.scale),
            ot.projectionMatrix.fromArray(Je.projectionMatrix),
            ot.projectionMatrixInverse.copy(ot.projectionMatrix).invert(),
            ot.viewport.set(rt.x, rt.y, rt.width, rt.height),
            Oe === 0 &&
              (I.matrix.copy(ot.matrix),
              I.matrix.decompose(I.position, I.quaternion, I.scale)),
            Pe === !0 && I.cameras.push(ot);
        }
      }
      for (let Te = 0; Te < L.length; Te++) {
        const Pe = T[Te],
          Oe = L[Te];
        Pe !== null && Oe !== void 0 && Oe.update(Pe, he, p || u);
      }
      se && se(oe, he),
        he.detectedPlanes &&
          i.dispatchEvent({ type: "planesdetected", data: he }),
        (E = null);
    }
    const de = new M1();
    de.setAnimationLoop(pe),
      (this.setAnimationLoop = function (oe) {
        se = oe;
      }),
      (this.dispose = function () {});
  }
}
function b5(n, e) {
  function t(S, b) {
    S.matrixAutoUpdate === !0 && S.updateMatrix(), b.value.copy(S.matrix);
  }
  function i(S, b) {
    b.color.getRGB(S.fogColor.value, v1(n)),
      b.isFog
        ? ((S.fogNear.value = b.near), (S.fogFar.value = b.far))
        : b.isFogExp2 && (S.fogDensity.value = b.density);
  }
  function r(S, b, L, T, R) {
    b.isMeshBasicMaterial || b.isMeshLambertMaterial
      ? s(S, b)
      : b.isMeshToonMaterial
      ? (s(S, b), _(S, b))
      : b.isMeshPhongMaterial
      ? (s(S, b), g(S, b))
      : b.isMeshStandardMaterial
      ? (s(S, b), x(S, b), b.isMeshPhysicalMaterial && M(S, b, R))
      : b.isMeshMatcapMaterial
      ? (s(S, b), E(S, b))
      : b.isMeshDepthMaterial
      ? s(S, b)
      : b.isMeshDistanceMaterial
      ? (s(S, b), C(S, b))
      : b.isMeshNormalMaterial
      ? s(S, b)
      : b.isLineBasicMaterial
      ? (u(S, b), b.isLineDashedMaterial && c(S, b))
      : b.isPointsMaterial
      ? d(S, b, L, T)
      : b.isSpriteMaterial
      ? p(S, b)
      : b.isShadowMaterial
      ? (S.color.value.copy(b.color), (S.opacity.value = b.opacity))
      : b.isShaderMaterial && (b.uniformsNeedUpdate = !1);
  }
  function s(S, b) {
    (S.opacity.value = b.opacity),
      b.color && S.diffuse.value.copy(b.color),
      b.emissive &&
        S.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity),
      b.map && ((S.map.value = b.map), t(b.map, S.mapTransform)),
      b.alphaMap &&
        ((S.alphaMap.value = b.alphaMap), t(b.alphaMap, S.alphaMapTransform)),
      b.bumpMap &&
        ((S.bumpMap.value = b.bumpMap),
        t(b.bumpMap, S.bumpMapTransform),
        (S.bumpScale.value = b.bumpScale),
        b.side === ci && (S.bumpScale.value *= -1)),
      b.normalMap &&
        ((S.normalMap.value = b.normalMap),
        t(b.normalMap, S.normalMapTransform),
        S.normalScale.value.copy(b.normalScale),
        b.side === ci && S.normalScale.value.negate()),
      b.displacementMap &&
        ((S.displacementMap.value = b.displacementMap),
        t(b.displacementMap, S.displacementMapTransform),
        (S.displacementScale.value = b.displacementScale),
        (S.displacementBias.value = b.displacementBias)),
      b.emissiveMap &&
        ((S.emissiveMap.value = b.emissiveMap),
        t(b.emissiveMap, S.emissiveMapTransform)),
      b.specularMap &&
        ((S.specularMap.value = b.specularMap),
        t(b.specularMap, S.specularMapTransform)),
      b.alphaTest > 0 && (S.alphaTest.value = b.alphaTest);
    const L = e.get(b).envMap;
    if (
      (L &&
        ((S.envMap.value = L),
        (S.flipEnvMap.value =
          L.isCubeTexture && L.isRenderTargetTexture === !1 ? -1 : 1),
        (S.reflectivity.value = b.reflectivity),
        (S.ior.value = b.ior),
        (S.refractionRatio.value = b.refractionRatio)),
      b.lightMap)
    ) {
      S.lightMap.value = b.lightMap;
      const T = n._useLegacyLights === !0 ? Math.PI : 1;
      (S.lightMapIntensity.value = b.lightMapIntensity * T),
        t(b.lightMap, S.lightMapTransform);
    }
    b.aoMap &&
      ((S.aoMap.value = b.aoMap),
      (S.aoMapIntensity.value = b.aoMapIntensity),
      t(b.aoMap, S.aoMapTransform));
  }
  function u(S, b) {
    S.diffuse.value.copy(b.color),
      (S.opacity.value = b.opacity),
      b.map && ((S.map.value = b.map), t(b.map, S.mapTransform));
  }
  function c(S, b) {
    (S.dashSize.value = b.dashSize),
      (S.totalSize.value = b.dashSize + b.gapSize),
      (S.scale.value = b.scale);
  }
  function d(S, b, L, T) {
    S.diffuse.value.copy(b.color),
      (S.opacity.value = b.opacity),
      (S.size.value = b.size * L),
      (S.scale.value = T * 0.5),
      b.map && ((S.map.value = b.map), t(b.map, S.uvTransform)),
      b.alphaMap &&
        ((S.alphaMap.value = b.alphaMap), t(b.alphaMap, S.alphaMapTransform)),
      b.alphaTest > 0 && (S.alphaTest.value = b.alphaTest);
  }
  function p(S, b) {
    S.diffuse.value.copy(b.color),
      (S.opacity.value = b.opacity),
      (S.rotation.value = b.rotation),
      b.map && ((S.map.value = b.map), t(b.map, S.mapTransform)),
      b.alphaMap &&
        ((S.alphaMap.value = b.alphaMap), t(b.alphaMap, S.alphaMapTransform)),
      b.alphaTest > 0 && (S.alphaTest.value = b.alphaTest);
  }
  function g(S, b) {
    S.specular.value.copy(b.specular),
      (S.shininess.value = Math.max(b.shininess, 1e-4));
  }
  function _(S, b) {
    b.gradientMap && (S.gradientMap.value = b.gradientMap);
  }
  function x(S, b) {
    (S.metalness.value = b.metalness),
      b.metalnessMap &&
        ((S.metalnessMap.value = b.metalnessMap),
        t(b.metalnessMap, S.metalnessMapTransform)),
      (S.roughness.value = b.roughness),
      b.roughnessMap &&
        ((S.roughnessMap.value = b.roughnessMap),
        t(b.roughnessMap, S.roughnessMapTransform)),
      e.get(b).envMap && (S.envMapIntensity.value = b.envMapIntensity);
  }
  function M(S, b, L) {
    (S.ior.value = b.ior),
      b.sheen > 0 &&
        (S.sheenColor.value.copy(b.sheenColor).multiplyScalar(b.sheen),
        (S.sheenRoughness.value = b.sheenRoughness),
        b.sheenColorMap &&
          ((S.sheenColorMap.value = b.sheenColorMap),
          t(b.sheenColorMap, S.sheenColorMapTransform)),
        b.sheenRoughnessMap &&
          ((S.sheenRoughnessMap.value = b.sheenRoughnessMap),
          t(b.sheenRoughnessMap, S.sheenRoughnessMapTransform))),
      b.clearcoat > 0 &&
        ((S.clearcoat.value = b.clearcoat),
        (S.clearcoatRoughness.value = b.clearcoatRoughness),
        b.clearcoatMap &&
          ((S.clearcoatMap.value = b.clearcoatMap),
          t(b.clearcoatMap, S.clearcoatMapTransform)),
        b.clearcoatRoughnessMap &&
          ((S.clearcoatRoughnessMap.value = b.clearcoatRoughnessMap),
          t(b.clearcoatRoughnessMap, S.clearcoatRoughnessMapTransform)),
        b.clearcoatNormalMap &&
          ((S.clearcoatNormalMap.value = b.clearcoatNormalMap),
          t(b.clearcoatNormalMap, S.clearcoatNormalMapTransform),
          S.clearcoatNormalScale.value.copy(b.clearcoatNormalScale),
          b.side === ci && S.clearcoatNormalScale.value.negate())),
      b.iridescence > 0 &&
        ((S.iridescence.value = b.iridescence),
        (S.iridescenceIOR.value = b.iridescenceIOR),
        (S.iridescenceThicknessMinimum.value = b.iridescenceThicknessRange[0]),
        (S.iridescenceThicknessMaximum.value = b.iridescenceThicknessRange[1]),
        b.iridescenceMap &&
          ((S.iridescenceMap.value = b.iridescenceMap),
          t(b.iridescenceMap, S.iridescenceMapTransform)),
        b.iridescenceThicknessMap &&
          ((S.iridescenceThicknessMap.value = b.iridescenceThicknessMap),
          t(b.iridescenceThicknessMap, S.iridescenceThicknessMapTransform))),
      b.transmission > 0 &&
        ((S.transmission.value = b.transmission),
        (S.transmissionSamplerMap.value = L.texture),
        S.transmissionSamplerSize.value.set(L.width, L.height),
        b.transmissionMap &&
          ((S.transmissionMap.value = b.transmissionMap),
          t(b.transmissionMap, S.transmissionMapTransform)),
        (S.thickness.value = b.thickness),
        b.thicknessMap &&
          ((S.thicknessMap.value = b.thicknessMap),
          t(b.thicknessMap, S.thicknessMapTransform)),
        (S.attenuationDistance.value = b.attenuationDistance),
        S.attenuationColor.value.copy(b.attenuationColor)),
      b.anisotropy > 0 &&
        (S.anisotropyVector.value.set(
          b.anisotropy * Math.cos(b.anisotropyRotation),
          b.anisotropy * Math.sin(b.anisotropyRotation)
        ),
        b.anisotropyMap &&
          ((S.anisotropyMap.value = b.anisotropyMap),
          t(b.anisotropyMap, S.anisotropyMapTransform))),
      (S.specularIntensity.value = b.specularIntensity),
      S.specularColor.value.copy(b.specularColor),
      b.specularColorMap &&
        ((S.specularColorMap.value = b.specularColorMap),
        t(b.specularColorMap, S.specularColorMapTransform)),
      b.specularIntensityMap &&
        ((S.specularIntensityMap.value = b.specularIntensityMap),
        t(b.specularIntensityMap, S.specularIntensityMapTransform));
  }
  function E(S, b) {
    b.matcap && (S.matcap.value = b.matcap);
  }
  function C(S, b) {
    const L = e.get(b).light;
    S.referencePosition.value.setFromMatrixPosition(L.matrixWorld),
      (S.nearDistance.value = L.shadow.camera.near),
      (S.farDistance.value = L.shadow.camera.far);
  }
  return { refreshFogUniforms: i, refreshMaterialUniforms: r };
}
function M5(n, e, t, i) {
  let r = {},
    s = {},
    u = [];
  const c = t.isWebGL2 ? n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
  function d(L, T) {
    const R = T.program;
    i.uniformBlockBinding(L, R);
  }
  function p(L, T) {
    let R = r[L.id];
    R === void 0 &&
      (E(L), (R = g(L)), (r[L.id] = R), L.addEventListener("dispose", S));
    const U = T.program;
    i.updateUBOMapping(L, U);
    const q = e.render.frame;
    s[L.id] !== q && (x(L), (s[L.id] = q));
  }
  function g(L) {
    const T = _();
    L.__bindingPointIndex = T;
    const R = n.createBuffer(),
      U = L.__size,
      q = L.usage;
    return (
      n.bindBuffer(n.UNIFORM_BUFFER, R),
      n.bufferData(n.UNIFORM_BUFFER, U, q),
      n.bindBuffer(n.UNIFORM_BUFFER, null),
      n.bindBufferBase(n.UNIFORM_BUFFER, T, R),
      R
    );
  }
  function _() {
    for (let L = 0; L < c; L++) if (u.indexOf(L) === -1) return u.push(L), L;
    return (
      console.error(
        "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
      ),
      0
    );
  }
  function x(L) {
    const T = r[L.id],
      R = L.uniforms,
      U = L.__cache;
    n.bindBuffer(n.UNIFORM_BUFFER, T);
    for (let q = 0, I = R.length; q < I; q++) {
      const N = R[q];
      if (M(N, q, U) === !0) {
        const D = N.__offset,
          O = Array.isArray(N.value) ? N.value : [N.value];
        let F = 0;
        for (let $ = 0; $ < O.length; $++) {
          const V = O[$],
            Q = C(V);
          typeof V == "number"
            ? ((N.__data[0] = V),
              n.bufferSubData(n.UNIFORM_BUFFER, D + F, N.__data))
            : V.isMatrix3
            ? ((N.__data[0] = V.elements[0]),
              (N.__data[1] = V.elements[1]),
              (N.__data[2] = V.elements[2]),
              (N.__data[3] = V.elements[0]),
              (N.__data[4] = V.elements[3]),
              (N.__data[5] = V.elements[4]),
              (N.__data[6] = V.elements[5]),
              (N.__data[7] = V.elements[0]),
              (N.__data[8] = V.elements[6]),
              (N.__data[9] = V.elements[7]),
              (N.__data[10] = V.elements[8]),
              (N.__data[11] = V.elements[0]))
            : (V.toArray(N.__data, F),
              (F += Q.storage / Float32Array.BYTES_PER_ELEMENT));
        }
        n.bufferSubData(n.UNIFORM_BUFFER, D, N.__data);
      }
    }
    n.bindBuffer(n.UNIFORM_BUFFER, null);
  }
  function M(L, T, R) {
    const U = L.value;
    if (R[T] === void 0) {
      if (typeof U == "number") R[T] = U;
      else {
        const q = Array.isArray(U) ? U : [U],
          I = [];
        for (let N = 0; N < q.length; N++) I.push(q[N].clone());
        R[T] = I;
      }
      return !0;
    } else if (typeof U == "number") {
      if (R[T] !== U) return (R[T] = U), !0;
    } else {
      const q = Array.isArray(R[T]) ? R[T] : [R[T]],
        I = Array.isArray(U) ? U : [U];
      for (let N = 0; N < q.length; N++) {
        const D = q[N];
        if (D.equals(I[N]) === !1) return D.copy(I[N]), !0;
      }
    }
    return !1;
  }
  function E(L) {
    const T = L.uniforms;
    let R = 0;
    const U = 16;
    let q = 0;
    for (let I = 0, N = T.length; I < N; I++) {
      const D = T[I],
        O = { boundary: 0, storage: 0 },
        F = Array.isArray(D.value) ? D.value : [D.value];
      for (let $ = 0, V = F.length; $ < V; $++) {
        const Q = F[$],
          k = C(Q);
        (O.boundary += k.boundary), (O.storage += k.storage);
      }
      if (
        ((D.__data = new Float32Array(
          O.storage / Float32Array.BYTES_PER_ELEMENT
        )),
        (D.__offset = R),
        I > 0)
      ) {
        q = R % U;
        const $ = U - q;
        q !== 0 && $ - O.boundary < 0 && ((R += U - q), (D.__offset = R));
      }
      R += O.storage;
    }
    return (
      (q = R % U), q > 0 && (R += U - q), (L.__size = R), (L.__cache = {}), this
    );
  }
  function C(L) {
    const T = { boundary: 0, storage: 0 };
    return (
      typeof L == "number"
        ? ((T.boundary = 4), (T.storage = 4))
        : L.isVector2
        ? ((T.boundary = 8), (T.storage = 8))
        : L.isVector3 || L.isColor
        ? ((T.boundary = 16), (T.storage = 12))
        : L.isVector4
        ? ((T.boundary = 16), (T.storage = 16))
        : L.isMatrix3
        ? ((T.boundary = 48), (T.storage = 48))
        : L.isMatrix4
        ? ((T.boundary = 64), (T.storage = 64))
        : L.isTexture
        ? console.warn(
            "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
          )
        : console.warn(
            "THREE.WebGLRenderer: Unsupported uniform value type.",
            L
          ),
      T
    );
  }
  function S(L) {
    const T = L.target;
    T.removeEventListener("dispose", S);
    const R = u.indexOf(T.__bindingPointIndex);
    u.splice(R, 1), n.deleteBuffer(r[T.id]), delete r[T.id], delete s[T.id];
  }
  function b() {
    for (const L in r) n.deleteBuffer(r[L]);
    (u = []), (r = {}), (s = {});
  }
  return { bind: d, update: p, dispose: b };
}
class R1 {
  constructor(e = {}) {
    const {
      canvas: t = g_(),
      context: i = null,
      depth: r = !0,
      stencil: s = !0,
      alpha: u = !1,
      antialias: c = !1,
      premultipliedAlpha: d = !0,
      preserveDrawingBuffer: p = !1,
      powerPreference: g = "default",
      failIfMajorPerformanceCaveat: _ = !1,
    } = e;
    this.isWebGLRenderer = !0;
    let x;
    i !== null ? (x = i.getContextAttributes().alpha) : (x = u);
    const M = new Uint32Array(4),
      E = new Int32Array(4);
    let C = null,
      S = null;
    const b = [],
      L = [];
    (this.domElement = t),
      (this.debug = { checkShaderErrors: !0, onShaderError: null }),
      (this.autoClear = !0),
      (this.autoClearColor = !0),
      (this.autoClearDepth = !0),
      (this.autoClearStencil = !0),
      (this.sortObjects = !0),
      (this.clippingPlanes = []),
      (this.localClippingEnabled = !1),
      (this.outputColorSpace = fn),
      (this._useLegacyLights = !1),
      (this.toneMapping = As),
      (this.toneMappingExposure = 1);
    const T = this;
    let R = !1,
      U = 0,
      q = 0,
      I = null,
      N = -1,
      D = null;
    const O = new Ln(),
      F = new Ln();
    let $ = null;
    const V = new Nt(0);
    let Q = 0,
      k = t.width,
      te = t.height,
      ee = 1,
      se = null,
      pe = null;
    const de = new Ln(0, 0, k, te),
      oe = new Ln(0, 0, k, te);
    let he = !1;
    const Te = new fc();
    let Pe = !1,
      Oe = !1,
      Je = null;
    const rt = new dn(),
      ot = new ke(),
      Rt = new J(),
      It = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0,
      };
    function ft() {
      return I === null ? ee : 1;
    }
    let ne = i;
    function ze(X, le) {
      for (let ye = 0; ye < X.length; ye++) {
        const Ae = X[ye],
          ge = t.getContext(Ae, le);
        if (ge !== null) return ge;
      }
      return null;
    }
    try {
      const X = {
        alpha: !0,
        depth: r,
        stencil: s,
        antialias: c,
        premultipliedAlpha: d,
        preserveDrawingBuffer: p,
        powerPreference: g,
        failIfMajorPerformanceCaveat: _,
      };
      if (
        ("setAttribute" in t &&
          t.setAttribute("data-engine", `three.js r${ac}`),
        t.addEventListener("webglcontextlost", $e, !1),
        t.addEventListener("webglcontextrestored", Me, !1),
        t.addEventListener("webglcontextcreationerror", Ue, !1),
        ne === null)
      ) {
        const le = ["webgl2", "webgl", "experimental-webgl"];
        if (
          (T.isWebGL1Renderer === !0 && le.shift(),
          (ne = ze(le, X)),
          ne === null)
        )
          throw ze(le)
            ? new Error(
                "Error creating WebGL context with your selected attributes."
              )
            : new Error("Error creating WebGL context.");
      }
      typeof WebGLRenderingContext < "u" &&
        ne instanceof WebGLRenderingContext &&
        console.warn(
          "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."
        ),
        ne.getShaderPrecisionFormat === void 0 &&
          (ne.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
    } catch (X) {
      throw (console.error("THREE.WebGLRenderer: " + X.message), X);
    }
    let Ce,
      Ne,
      Le,
      At,
      nt,
      at,
      mt,
      xt,
      nn,
      Y,
      G,
      xe,
      qe,
      Ie,
      Be,
      ut,
      Fe,
      be,
      ie,
      Re,
      tt,
      Xe,
      et,
      Et;
    function Vt() {
      (Ce = new Ix(ne)),
        (Ne = new Tx(ne, Ce, e)),
        Ce.init(Ne),
        (Xe = new g5(ne, Ce, Ne)),
        (Le = new d5(ne, Ce, Ne)),
        (At = new qx(ne)),
        (nt = new e5()),
        (at = new p5(ne, Ce, Le, nt, Ne, Xe, At)),
        (mt = new Rx(T)),
        (xt = new Dx(T)),
        (nn = new j_(ne, Ne)),
        (et = new Ex(ne, Ce, nn, Ne)),
        (Y = new Ox(ne, nn, At, et)),
        (G = new kx(ne, Y, nn, At)),
        (ie = new Fx(ne, Ne, at)),
        (ut = new Cx(nt)),
        (xe = new Jy(T, mt, xt, Ce, Ne, et, ut)),
        (qe = new b5(T, nt)),
        (Ie = new n5()),
        (Be = new A5(Ce, Ne)),
        (be = new Sx(T, mt, xt, Le, G, x, d)),
        (Fe = new h5(T, G, Ne)),
        (Et = new M5(ne, At, Ne, Le)),
        (Re = new wx(ne, Ce, At, Ne)),
        (tt = new Ux(ne, Ce, At, Ne)),
        (At.programs = xe.programs),
        (T.capabilities = Ne),
        (T.extensions = Ce),
        (T.properties = nt),
        (T.renderLists = Ie),
        (T.shadowMap = Fe),
        (T.state = Le),
        (T.info = At);
    }
    Vt();
    const ae = new y5(T, ne);
    (this.xr = ae),
      (this.getContext = function () {
        return ne;
      }),
      (this.getContextAttributes = function () {
        return ne.getContextAttributes();
      }),
      (this.forceContextLoss = function () {
        const X = Ce.get("WEBGL_lose_context");
        X && X.loseContext();
      }),
      (this.forceContextRestore = function () {
        const X = Ce.get("WEBGL_lose_context");
        X && X.restoreContext();
      }),
      (this.getPixelRatio = function () {
        return ee;
      }),
      (this.setPixelRatio = function (X) {
        X !== void 0 && ((ee = X), this.setSize(k, te, !1));
      }),
      (this.getSize = function (X) {
        return X.set(k, te);
      }),
      (this.setSize = function (X, le, ye = !0) {
        if (ae.isPresenting) {
          console.warn(
            "THREE.WebGLRenderer: Can't change size while VR device is presenting."
          );
          return;
        }
        (k = X),
          (te = le),
          (t.width = Math.floor(X * ee)),
          (t.height = Math.floor(le * ee)),
          ye === !0 &&
            ((t.style.width = X + "px"), (t.style.height = le + "px")),
          this.setViewport(0, 0, X, le);
      }),
      (this.getDrawingBufferSize = function (X) {
        return X.set(k * ee, te * ee).floor();
      }),
      (this.setDrawingBufferSize = function (X, le, ye) {
        (k = X),
          (te = le),
          (ee = ye),
          (t.width = Math.floor(X * ye)),
          (t.height = Math.floor(le * ye)),
          this.setViewport(0, 0, X, le);
      }),
      (this.getCurrentViewport = function (X) {
        return X.copy(O);
      }),
      (this.getViewport = function (X) {
        return X.copy(de);
      }),
      (this.setViewport = function (X, le, ye, Ae) {
        X.isVector4 ? de.set(X.x, X.y, X.z, X.w) : de.set(X, le, ye, Ae),
          Le.viewport(O.copy(de).multiplyScalar(ee).floor());
      }),
      (this.getScissor = function (X) {
        return X.copy(oe);
      }),
      (this.setScissor = function (X, le, ye, Ae) {
        X.isVector4 ? oe.set(X.x, X.y, X.z, X.w) : oe.set(X, le, ye, Ae),
          Le.scissor(F.copy(oe).multiplyScalar(ee).floor());
      }),
      (this.getScissorTest = function () {
        return he;
      }),
      (this.setScissorTest = function (X) {
        Le.setScissorTest((he = X));
      }),
      (this.setOpaqueSort = function (X) {
        se = X;
      }),
      (this.setTransparentSort = function (X) {
        pe = X;
      }),
      (this.getClearColor = function (X) {
        return X.copy(be.getClearColor());
      }),
      (this.setClearColor = function () {
        be.setClearColor.apply(be, arguments);
      }),
      (this.getClearAlpha = function () {
        return be.getClearAlpha();
      }),
      (this.setClearAlpha = function () {
        be.setClearAlpha.apply(be, arguments);
      }),
      (this.clear = function (X = !0, le = !0, ye = !0) {
        let Ae = 0;
        if (X) {
          let ge = !1;
          if (I !== null) {
            const it = I.texture.format;
            ge = it === A1 || it === a1 || it === o1;
          }
          if (ge) {
            const it = I.texture.type,
              Qe =
                it === ls ||
                it === rs ||
                it === Ac ||
                it === Ls ||
                it === r1 ||
                it === s1,
              Ge = be.getClearColor(),
              ht = be.getClearAlpha(),
              Bt = Ge.r,
              _t = Ge.g,
              Pt = Ge.b;
            Qe
              ? ((M[0] = Bt),
                (M[1] = _t),
                (M[2] = Pt),
                (M[3] = ht),
                ne.clearBufferuiv(ne.COLOR, 0, M))
              : ((E[0] = Bt),
                (E[1] = _t),
                (E[2] = Pt),
                (E[3] = ht),
                ne.clearBufferiv(ne.COLOR, 0, E));
          } else Ae |= ne.COLOR_BUFFER_BIT;
        }
        le && (Ae |= ne.DEPTH_BUFFER_BIT),
          ye && (Ae |= ne.STENCIL_BUFFER_BIT),
          ne.clear(Ae);
      }),
      (this.clearColor = function () {
        this.clear(!0, !1, !1);
      }),
      (this.clearDepth = function () {
        this.clear(!1, !0, !1);
      }),
      (this.clearStencil = function () {
        this.clear(!1, !1, !0);
      }),
      (this.dispose = function () {
        t.removeEventListener("webglcontextlost", $e, !1),
          t.removeEventListener("webglcontextrestored", Me, !1),
          t.removeEventListener("webglcontextcreationerror", Ue, !1),
          Ie.dispose(),
          Be.dispose(),
          nt.dispose(),
          mt.dispose(),
          xt.dispose(),
          G.dispose(),
          et.dispose(),
          Et.dispose(),
          xe.dispose(),
          ae.dispose(),
          ae.removeEventListener("sessionstart", Jt),
          ae.removeEventListener("sessionend", Mi),
          Je && (Je.dispose(), (Je = null)),
          Un.stop();
      });
    function $e(X) {
      X.preventDefault(),
        console.log("THREE.WebGLRenderer: Context Lost."),
        (R = !0);
    }
    function Me() {
      console.log("THREE.WebGLRenderer: Context Restored."), (R = !1);
      const X = At.autoReset,
        le = Fe.enabled,
        ye = Fe.autoUpdate,
        Ae = Fe.needsUpdate,
        ge = Fe.type;
      Vt(),
        (At.autoReset = X),
        (Fe.enabled = le),
        (Fe.autoUpdate = ye),
        (Fe.needsUpdate = Ae),
        (Fe.type = ge);
    }
    function Ue(X) {
      console.error(
        "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
        X.statusMessage
      );
    }
    function fe(X) {
      const le = X.target;
      le.removeEventListener("dispose", fe), kt(le);
    }
    function kt(X) {
      Yt(X), nt.remove(X);
    }
    function Yt(X) {
      const le = nt.get(X).programs;
      le !== void 0 &&
        (le.forEach(function (ye) {
          xe.releaseProgram(ye);
        }),
        X.isShaderMaterial && xe.releaseShaderCache(X));
    }
    (this.renderBufferDirect = function (X, le, ye, Ae, ge, it) {
      le === null && (le = It);
      const Qe = ge.isMesh && ge.matrixWorld.determinant() < 0,
        Ge = pt(X, le, ye, Ae, ge);
      Le.setMaterial(Ae, Qe);
      let ht = ye.index,
        Bt = 1;
      if (Ae.wireframe === !0) {
        if (((ht = Y.getWireframeAttribute(ye)), ht === void 0)) return;
        Bt = 2;
      }
      const _t = ye.drawRange,
        Pt = ye.attributes.position;
      let jt = _t.start * Bt,
        sn = (_t.start + _t.count) * Bt;
      it !== null &&
        ((jt = Math.max(jt, it.start * Bt)),
        (sn = Math.min(sn, (it.start + it.count) * Bt))),
        ht !== null
          ? ((jt = Math.max(jt, 0)), (sn = Math.min(sn, ht.count)))
          : Pt != null &&
            ((jt = Math.max(jt, 0)), (sn = Math.min(sn, Pt.count)));
      const gn = sn - jt;
      if (gn < 0 || gn === 1 / 0) return;
      et.setup(ge, Ae, Ge, ye, ht);
      let Si,
        bn = Re;
      if (
        (ht !== null && ((Si = nn.get(ht)), (bn = tt), bn.setIndex(Si)),
        ge.isMesh)
      )
        Ae.wireframe === !0
          ? (Le.setLineWidth(Ae.wireframeLinewidth * ft()),
            bn.setMode(ne.LINES))
          : bn.setMode(ne.TRIANGLES);
      else if (ge.isLine) {
        let Lt = Ae.linewidth;
        Lt === void 0 && (Lt = 1),
          Le.setLineWidth(Lt * ft()),
          ge.isLineSegments
            ? bn.setMode(ne.LINES)
            : ge.isLineLoop
            ? bn.setMode(ne.LINE_LOOP)
            : bn.setMode(ne.LINE_STRIP);
      } else
        ge.isPoints
          ? bn.setMode(ne.POINTS)
          : ge.isSprite && bn.setMode(ne.TRIANGLES);
      if (ge.isInstancedMesh) bn.renderInstances(jt, gn, ge.count);
      else if (ye.isInstancedBufferGeometry) {
        const Lt =
            ye._maxInstanceCount !== void 0 ? ye._maxInstanceCount : 1 / 0,
          wt = Math.min(ye.instanceCount, Lt);
        bn.renderInstances(jt, gn, wt);
      } else bn.render(jt, gn);
    }),
      (this.compile = function (X, le) {
        function ye(Ae, ge, it) {
          Ae.transparent === !0 && Ae.side === gi && Ae.forceSinglePass === !1
            ? ((Ae.side = ci),
              (Ae.needsUpdate = !0),
              we(Ae, ge, it),
              (Ae.side = us),
              (Ae.needsUpdate = !0),
              we(Ae, ge, it),
              (Ae.side = gi))
            : we(Ae, ge, it);
        }
        (S = Be.get(X)),
          S.init(),
          L.push(S),
          X.traverseVisible(function (Ae) {
            Ae.isLight &&
              Ae.layers.test(le.layers) &&
              (S.pushLight(Ae), Ae.castShadow && S.pushShadow(Ae));
          }),
          S.setupLights(T._useLegacyLights),
          X.traverse(function (Ae) {
            const ge = Ae.material;
            if (ge)
              if (Array.isArray(ge))
                for (let it = 0; it < ge.length; it++) {
                  const Qe = ge[it];
                  ye(Qe, X, Ae);
                }
              else ye(ge, X, Ae);
          }),
          L.pop(),
          (S = null);
      });
    let rn = null;
    function Kn(X) {
      rn && rn(X);
    }
    function Jt() {
      Un.stop();
    }
    function Mi() {
      Un.start();
    }
    const Un = new M1();
    Un.setAnimationLoop(Kn),
      typeof self < "u" && Un.setContext(self),
      (this.setAnimationLoop = function (X) {
        (rn = X), ae.setAnimationLoop(X), X === null ? Un.stop() : Un.start();
      }),
      ae.addEventListener("sessionstart", Jt),
      ae.addEventListener("sessionend", Mi),
      (this.render = function (X, le) {
        if (le !== void 0 && le.isCamera !== !0) {
          console.error(
            "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
          );
          return;
        }
        if (R === !0) return;
        X.matrixWorldAutoUpdate === !0 && X.updateMatrixWorld(),
          le.parent === null &&
            le.matrixWorldAutoUpdate === !0 &&
            le.updateMatrixWorld(),
          ae.enabled === !0 &&
            ae.isPresenting === !0 &&
            (ae.cameraAutoUpdate === !0 && ae.updateCamera(le),
            (le = ae.getCamera())),
          X.isScene === !0 && X.onBeforeRender(T, X, le, I),
          (S = Be.get(X, L.length)),
          S.init(),
          L.push(S),
          rt.multiplyMatrices(le.projectionMatrix, le.matrixWorldInverse),
          Te.setFromProjectionMatrix(rt),
          (Oe = this.localClippingEnabled),
          (Pe = ut.init(this.clippingPlanes, Oe)),
          (C = Ie.get(X, b.length)),
          C.init(),
          b.push(C),
          Wo(X, le, 0, T.sortObjects),
          C.finish(),
          T.sortObjects === !0 && C.sort(se, pe),
          this.info.render.frame++,
          Pe === !0 && ut.beginShadows();
        const ye = S.state.shadowsArray;
        if (
          (Fe.render(ye, X, le),
          Pe === !0 && ut.endShadows(),
          this.info.autoReset === !0 && this.info.reset(),
          be.render(C, X),
          S.setupLights(T._useLegacyLights),
          le.isArrayCamera)
        ) {
          const Ae = le.cameras;
          for (let ge = 0, it = Ae.length; ge < it; ge++) {
            const Qe = Ae[ge];
            ds(C, X, Qe, Qe.viewport);
          }
        } else ds(C, X, le);
        I !== null &&
          (at.updateMultisampleRenderTarget(I), at.updateRenderTargetMipmap(I)),
          X.isScene === !0 && X.onAfterRender(T, X, le),
          et.resetDefaultState(),
          (N = -1),
          (D = null),
          L.pop(),
          L.length > 0 ? (S = L[L.length - 1]) : (S = null),
          b.pop(),
          b.length > 0 ? (C = b[b.length - 1]) : (C = null);
      });
    function Wo(X, le, ye, Ae) {
      if (X.visible === !1) return;
      if (X.layers.test(le.layers)) {
        if (X.isGroup) ye = X.renderOrder;
        else if (X.isLOD) X.autoUpdate === !0 && X.update(le);
        else if (X.isLight) S.pushLight(X), X.castShadow && S.pushShadow(X);
        else if (X.isSprite) {
          if (!X.frustumCulled || Te.intersectsSprite(X)) {
            Ae && Rt.setFromMatrixPosition(X.matrixWorld).applyMatrix4(rt);
            const Qe = G.update(X),
              Ge = X.material;
            Ge.visible && C.push(X, Qe, Ge, ye, Rt.z, null);
          }
        } else if (
          (X.isMesh || X.isLine || X.isPoints) &&
          (!X.frustumCulled || Te.intersectsObject(X))
        ) {
          const Qe = G.update(X),
            Ge = X.material;
          if (
            (Ae &&
              (X.boundingSphere !== void 0
                ? (X.boundingSphere === null && X.computeBoundingSphere(),
                  Rt.copy(X.boundingSphere.center))
                : (Qe.boundingSphere === null && Qe.computeBoundingSphere(),
                  Rt.copy(Qe.boundingSphere.center)),
              Rt.applyMatrix4(X.matrixWorld).applyMatrix4(rt)),
            Array.isArray(Ge))
          ) {
            const ht = Qe.groups;
            for (let Bt = 0, _t = ht.length; Bt < _t; Bt++) {
              const Pt = ht[Bt],
                jt = Ge[Pt.materialIndex];
              jt && jt.visible && C.push(X, Qe, jt, ye, Rt.z, Pt);
            }
          } else Ge.visible && C.push(X, Qe, Ge, ye, Rt.z, null);
        }
      }
      const it = X.children;
      for (let Qe = 0, Ge = it.length; Qe < Ge; Qe++) Wo(it[Qe], le, ye, Ae);
    }
    function ds(X, le, ye, Ae) {
      const ge = X.opaque,
        it = X.transmissive,
        Qe = X.transparent;
      S.setupLightsView(ye),
        Pe === !0 && ut.setGlobalState(T.clippingPlanes, ye),
        it.length > 0 && jo(ge, it, le, ye),
        Ae && Le.viewport(O.copy(Ae)),
        ge.length > 0 && Oi(ge, le, ye),
        it.length > 0 && Oi(it, le, ye),
        Qe.length > 0 && Oi(Qe, le, ye),
        Le.buffers.depth.setTest(!0),
        Le.buffers.depth.setMask(!0),
        Le.buffers.color.setMask(!0),
        Le.setPolygonOffset(!1);
    }
    function jo(X, le, ye, Ae) {
      const ge = Ne.isWebGL2;
      Je === null &&
        (Je = new qs(1, 1, {
          generateMipmaps: !0,
          type: Ce.has("EXT_color_buffer_half_float") ? Ea : ls,
          minFilter: Sa,
          samples: ge ? 4 : 0,
        })),
        T.getDrawingBufferSize(ot),
        ge ? Je.setSize(ot.x, ot.y) : Je.setSize(ol(ot.x), ol(ot.y));
      const it = T.getRenderTarget();
      T.setRenderTarget(Je),
        T.getClearColor(V),
        (Q = T.getClearAlpha()),
        Q < 1 && T.setClearColor(16777215, 0.5),
        T.clear();
      const Qe = T.toneMapping;
      (T.toneMapping = As),
        Oi(X, ye, Ae),
        at.updateMultisampleRenderTarget(Je),
        at.updateRenderTargetMipmap(Je);
      let Ge = !1;
      for (let ht = 0, Bt = le.length; ht < Bt; ht++) {
        const _t = le[ht],
          Pt = _t.object,
          jt = _t.geometry,
          sn = _t.material,
          gn = _t.group;
        if (sn.side === gi && Pt.layers.test(Ae.layers)) {
          const Si = sn.side;
          (sn.side = ci),
            (sn.needsUpdate = !0),
            me(Pt, ye, Ae, jt, sn, gn),
            (sn.side = Si),
            (sn.needsUpdate = !0),
            (Ge = !0);
        }
      }
      Ge === !0 &&
        (at.updateMultisampleRenderTarget(Je), at.updateRenderTargetMipmap(Je)),
        T.setRenderTarget(it),
        T.setClearColor(V, Q),
        (T.toneMapping = Qe);
    }
    function Oi(X, le, ye) {
      const Ae = le.isScene === !0 ? le.overrideMaterial : null;
      for (let ge = 0, it = X.length; ge < it; ge++) {
        const Qe = X[ge],
          Ge = Qe.object,
          ht = Qe.geometry,
          Bt = Ae === null ? Qe.material : Ae,
          _t = Qe.group;
        Ge.layers.test(ye.layers) && me(Ge, le, ye, ht, Bt, _t);
      }
    }
    function me(X, le, ye, Ae, ge, it) {
      X.onBeforeRender(T, le, ye, Ae, ge, it),
        X.modelViewMatrix.multiplyMatrices(
          ye.matrixWorldInverse,
          X.matrixWorld
        ),
        X.normalMatrix.getNormalMatrix(X.modelViewMatrix),
        ge.onBeforeRender(T, le, ye, Ae, X, it),
        ge.transparent === !0 && ge.side === gi && ge.forceSinglePass === !1
          ? ((ge.side = ci),
            (ge.needsUpdate = !0),
            T.renderBufferDirect(ye, le, Ae, ge, X, it),
            (ge.side = us),
            (ge.needsUpdate = !0),
            T.renderBufferDirect(ye, le, Ae, ge, X, it),
            (ge.side = gi))
          : T.renderBufferDirect(ye, le, Ae, ge, X, it),
        X.onAfterRender(T, le, ye, Ae, ge, it);
    }
    function we(X, le, ye) {
      le.isScene !== !0 && (le = It);
      const Ae = nt.get(X),
        ge = S.state.lights,
        it = S.state.shadowsArray,
        Qe = ge.state.version,
        Ge = xe.getParameters(X, ge.state, it, le, ye),
        ht = xe.getProgramCacheKey(Ge);
      let Bt = Ae.programs;
      (Ae.environment = X.isMeshStandardMaterial ? le.environment : null),
        (Ae.fog = le.fog),
        (Ae.envMap = (X.isMeshStandardMaterial ? xt : mt).get(
          X.envMap || Ae.environment
        )),
        Bt === void 0 &&
          (X.addEventListener("dispose", fe),
          (Bt = new Map()),
          (Ae.programs = Bt));
      let _t = Bt.get(ht);
      if (_t !== void 0) {
        if (Ae.currentProgram === _t && Ae.lightsStateVersion === Qe)
          return We(X, Ge), _t;
      } else
        (Ge.uniforms = xe.getUniforms(X)),
          X.onBuild(ye, Ge, T),
          X.onBeforeCompile(Ge, T),
          (_t = xe.acquireProgram(Ge, ht)),
          Bt.set(ht, _t),
          (Ae.uniforms = Ge.uniforms);
      const Pt = Ae.uniforms;
      ((!X.isShaderMaterial && !X.isRawShaderMaterial) || X.clipping === !0) &&
        (Pt.clippingPlanes = ut.uniform),
        We(X, Ge),
        (Ae.needsLights = H(X)),
        (Ae.lightsStateVersion = Qe),
        Ae.needsLights &&
          ((Pt.ambientLightColor.value = ge.state.ambient),
          (Pt.lightProbe.value = ge.state.probe),
          (Pt.directionalLights.value = ge.state.directional),
          (Pt.directionalLightShadows.value = ge.state.directionalShadow),
          (Pt.spotLights.value = ge.state.spot),
          (Pt.spotLightShadows.value = ge.state.spotShadow),
          (Pt.rectAreaLights.value = ge.state.rectArea),
          (Pt.ltc_1.value = ge.state.rectAreaLTC1),
          (Pt.ltc_2.value = ge.state.rectAreaLTC2),
          (Pt.pointLights.value = ge.state.point),
          (Pt.pointLightShadows.value = ge.state.pointShadow),
          (Pt.hemisphereLights.value = ge.state.hemi),
          (Pt.directionalShadowMap.value = ge.state.directionalShadowMap),
          (Pt.directionalShadowMatrix.value = ge.state.directionalShadowMatrix),
          (Pt.spotShadowMap.value = ge.state.spotShadowMap),
          (Pt.spotLightMatrix.value = ge.state.spotLightMatrix),
          (Pt.spotLightMap.value = ge.state.spotLightMap),
          (Pt.pointShadowMap.value = ge.state.pointShadowMap),
          (Pt.pointShadowMatrix.value = ge.state.pointShadowMatrix));
      const jt = _t.getUniforms(),
        sn = ZA.seqWithValue(jt.seq, Pt);
      return (Ae.currentProgram = _t), (Ae.uniformsList = sn), _t;
    }
    function We(X, le) {
      const ye = nt.get(X);
      (ye.outputColorSpace = le.outputColorSpace),
        (ye.instancing = le.instancing),
        (ye.instancingColor = le.instancingColor),
        (ye.skinning = le.skinning),
        (ye.morphTargets = le.morphTargets),
        (ye.morphNormals = le.morphNormals),
        (ye.morphColors = le.morphColors),
        (ye.morphTargetsCount = le.morphTargetsCount),
        (ye.numClippingPlanes = le.numClippingPlanes),
        (ye.numIntersection = le.numClipIntersection),
        (ye.vertexAlphas = le.vertexAlphas),
        (ye.vertexTangents = le.vertexTangents),
        (ye.toneMapping = le.toneMapping);
    }
    function pt(X, le, ye, Ae, ge) {
      le.isScene !== !0 && (le = It), at.resetTextureUnits();
      const it = le.fog,
        Qe = Ae.isMeshStandardMaterial ? le.environment : null,
        Ge =
          I === null
            ? T.outputColorSpace
            : I.isXRRenderTarget === !0
            ? I.texture.colorSpace
            : xr,
        ht = (Ae.isMeshStandardMaterial ? xt : mt).get(Ae.envMap || Qe),
        Bt =
          Ae.vertexColors === !0 &&
          !!ye.attributes.color &&
          ye.attributes.color.itemSize === 4,
        _t = !!ye.attributes.tangent && (!!Ae.normalMap || Ae.anisotropy > 0),
        Pt = !!ye.morphAttributes.position,
        jt = !!ye.morphAttributes.normal,
        sn = !!ye.morphAttributes.color;
      let gn = As;
      Ae.toneMapped &&
        (I === null || I.isXRRenderTarget === !0) &&
        (gn = T.toneMapping);
      const Si =
          ye.morphAttributes.position ||
          ye.morphAttributes.normal ||
          ye.morphAttributes.color,
        bn = Si !== void 0 ? Si.length : 0,
        Lt = nt.get(Ae),
        wt = S.state.lights;
      if (Pe === !0 && (Oe === !0 || X !== D)) {
        const Jn = X === D && Ae.id === N;
        ut.setState(Ae, X, Jn);
      }
      let W = !1;
      Ae.version === Lt.__version
        ? ((Lt.needsLights && Lt.lightsStateVersion !== wt.state.version) ||
            Lt.outputColorSpace !== Ge ||
            (ge.isInstancedMesh && Lt.instancing === !1) ||
            (!ge.isInstancedMesh && Lt.instancing === !0) ||
            (ge.isSkinnedMesh && Lt.skinning === !1) ||
            (!ge.isSkinnedMesh && Lt.skinning === !0) ||
            (ge.isInstancedMesh &&
              Lt.instancingColor === !0 &&
              ge.instanceColor === null) ||
            (ge.isInstancedMesh &&
              Lt.instancingColor === !1 &&
              ge.instanceColor !== null) ||
            Lt.envMap !== ht ||
            (Ae.fog === !0 && Lt.fog !== it) ||
            (Lt.numClippingPlanes !== void 0 &&
              (Lt.numClippingPlanes !== ut.numPlanes ||
                Lt.numIntersection !== ut.numIntersection)) ||
            Lt.vertexAlphas !== Bt ||
            Lt.vertexTangents !== _t ||
            Lt.morphTargets !== Pt ||
            Lt.morphNormals !== jt ||
            Lt.morphColors !== sn ||
            Lt.toneMapping !== gn ||
            (Ne.isWebGL2 === !0 && Lt.morphTargetsCount !== bn)) &&
          (W = !0)
        : ((W = !0), (Lt.__version = Ae.version));
      let dt = Lt.currentProgram;
      W === !0 && (dt = we(Ae, le, ge));
      let Xo = !1,
        ps = !1,
        Qo = !1;
      const Fn = dt.getUniforms(),
        br = Lt.uniforms;
      if (
        (Le.useProgram(dt.program) && ((Xo = !0), (ps = !0), (Qo = !0)),
        Ae.id !== N && ((N = Ae.id), (ps = !0)),
        Xo || D !== X)
      ) {
        Fn.setValue(ne, "projectionMatrix", X.projectionMatrix),
          Fn.setValue(ne, "viewMatrix", X.matrixWorldInverse);
        const Jn = Fn.map.cameraPosition;
        Jn !== void 0 &&
          Jn.setValue(ne, Rt.setFromMatrixPosition(X.matrixWorld)),
          Ne.logarithmicDepthBuffer &&
            Fn.setValue(
              ne,
              "logDepthBufFC",
              2 / (Math.log(X.far + 1) / Math.LN2)
            ),
          (Ae.isMeshPhongMaterial ||
            Ae.isMeshToonMaterial ||
            Ae.isMeshLambertMaterial ||
            Ae.isMeshBasicMaterial ||
            Ae.isMeshStandardMaterial ||
            Ae.isShaderMaterial) &&
            Fn.setValue(ne, "isOrthographic", X.isOrthographicCamera === !0),
          D !== X && ((D = X), (ps = !0), (Qo = !0));
      }
      if (ge.isSkinnedMesh) {
        Fn.setOptional(ne, ge, "bindMatrix"),
          Fn.setOptional(ne, ge, "bindMatrixInverse");
        const Jn = ge.skeleton;
        Jn &&
          (Ne.floatVertexTextures
            ? (Jn.boneTexture === null && Jn.computeBoneTexture(),
              Fn.setValue(ne, "boneTexture", Jn.boneTexture, at),
              Fn.setValue(ne, "boneTextureSize", Jn.boneTextureSize))
            : console.warn(
                "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
              ));
      }
      const z = ye.morphAttributes;
      if (
        ((z.position !== void 0 ||
          z.normal !== void 0 ||
          (z.color !== void 0 && Ne.isWebGL2 === !0)) &&
          ie.update(ge, ye, dt),
        (ps || Lt.receiveShadow !== ge.receiveShadow) &&
          ((Lt.receiveShadow = ge.receiveShadow),
          Fn.setValue(ne, "receiveShadow", ge.receiveShadow)),
        Ae.isMeshGouraudMaterial &&
          Ae.envMap !== null &&
          ((br.envMap.value = ht),
          (br.flipEnvMap.value =
            ht.isCubeTexture && ht.isRenderTargetTexture === !1 ? -1 : 1)),
        ps &&
          (Fn.setValue(ne, "toneMappingExposure", T.toneMappingExposure),
          Lt.needsLights && A(br, Qo),
          it && Ae.fog === !0 && qe.refreshFogUniforms(br, it),
          qe.refreshMaterialUniforms(br, Ae, ee, te, Je),
          ZA.upload(ne, Lt.uniformsList, br, at)),
        Ae.isShaderMaterial &&
          Ae.uniformsNeedUpdate === !0 &&
          (ZA.upload(ne, Lt.uniformsList, br, at),
          (Ae.uniformsNeedUpdate = !1)),
        Ae.isSpriteMaterial && Fn.setValue(ne, "center", ge.center),
        Fn.setValue(ne, "modelViewMatrix", ge.modelViewMatrix),
        Fn.setValue(ne, "normalMatrix", ge.normalMatrix),
        Fn.setValue(ne, "modelMatrix", ge.matrixWorld),
        Ae.isShaderMaterial || Ae.isRawShaderMaterial)
      ) {
        const Jn = Ae.uniformsGroups;
        for (let $o = 0, i0 = Jn.length; $o < i0; $o++)
          if (Ne.isWebGL2) {
            const Za = Jn[$o];
            Et.update(Za, dt), Et.bind(Za, dt);
          } else
            console.warn(
              "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
            );
      }
      return dt;
    }
    function A(X, le) {
      (X.ambientLightColor.needsUpdate = le),
        (X.lightProbe.needsUpdate = le),
        (X.directionalLights.needsUpdate = le),
        (X.directionalLightShadows.needsUpdate = le),
        (X.pointLights.needsUpdate = le),
        (X.pointLightShadows.needsUpdate = le),
        (X.spotLights.needsUpdate = le),
        (X.spotLightShadows.needsUpdate = le),
        (X.rectAreaLights.needsUpdate = le),
        (X.hemisphereLights.needsUpdate = le);
    }
    function H(X) {
      return (
        X.isMeshLambertMaterial ||
        X.isMeshToonMaterial ||
        X.isMeshPhongMaterial ||
        X.isMeshStandardMaterial ||
        X.isShadowMaterial ||
        (X.isShaderMaterial && X.lights === !0)
      );
    }
    (this.getActiveCubeFace = function () {
      return U;
    }),
      (this.getActiveMipmapLevel = function () {
        return q;
      }),
      (this.getRenderTarget = function () {
        return I;
      }),
      (this.setRenderTargetTextures = function (X, le, ye) {
        (nt.get(X.texture).__webglTexture = le),
          (nt.get(X.depthTexture).__webglTexture = ye);
        const Ae = nt.get(X);
        (Ae.__hasExternalTextures = !0),
          Ae.__hasExternalTextures &&
            ((Ae.__autoAllocateDepthBuffer = ye === void 0),
            Ae.__autoAllocateDepthBuffer ||
              (Ce.has("WEBGL_multisampled_render_to_texture") === !0 &&
                (console.warn(
                  "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                ),
                (Ae.__useRenderToTexture = !1))));
      }),
      (this.setRenderTargetFramebuffer = function (X, le) {
        const ye = nt.get(X);
        (ye.__webglFramebuffer = le),
          (ye.__useDefaultFramebuffer = le === void 0);
      }),
      (this.setRenderTarget = function (X, le = 0, ye = 0) {
        (I = X), (U = le), (q = ye);
        let Ae = !0,
          ge = null,
          it = !1,
          Qe = !1;
        if (X) {
          const ht = nt.get(X);
          ht.__useDefaultFramebuffer !== void 0
            ? (Le.bindFramebuffer(ne.FRAMEBUFFER, null), (Ae = !1))
            : ht.__webglFramebuffer === void 0
            ? at.setupRenderTarget(X)
            : ht.__hasExternalTextures &&
              at.rebindTextures(
                X,
                nt.get(X.texture).__webglTexture,
                nt.get(X.depthTexture).__webglTexture
              );
          const Bt = X.texture;
          (Bt.isData3DTexture ||
            Bt.isDataArrayTexture ||
            Bt.isCompressedArrayTexture) &&
            (Qe = !0);
          const _t = nt.get(X).__webglFramebuffer;
          X.isWebGLCubeRenderTarget
            ? (Array.isArray(_t[le]) ? (ge = _t[le][ye]) : (ge = _t[le]),
              (it = !0))
            : Ne.isWebGL2 && X.samples > 0 && at.useMultisampledRTT(X) === !1
            ? (ge = nt.get(X).__webglMultisampledFramebuffer)
            : Array.isArray(_t)
            ? (ge = _t[ye])
            : (ge = _t),
            O.copy(X.viewport),
            F.copy(X.scissor),
            ($ = X.scissorTest);
        } else
          O.copy(de).multiplyScalar(ee).floor(),
            F.copy(oe).multiplyScalar(ee).floor(),
            ($ = he);
        if (
          (Le.bindFramebuffer(ne.FRAMEBUFFER, ge) &&
            Ne.drawBuffers &&
            Ae &&
            Le.drawBuffers(X, ge),
          Le.viewport(O),
          Le.scissor(F),
          Le.setScissorTest($),
          it)
        ) {
          const ht = nt.get(X.texture);
          ne.framebufferTexture2D(
            ne.FRAMEBUFFER,
            ne.COLOR_ATTACHMENT0,
            ne.TEXTURE_CUBE_MAP_POSITIVE_X + le,
            ht.__webglTexture,
            ye
          );
        } else if (Qe) {
          const ht = nt.get(X.texture),
            Bt = le || 0;
          ne.framebufferTextureLayer(
            ne.FRAMEBUFFER,
            ne.COLOR_ATTACHMENT0,
            ht.__webglTexture,
            ye || 0,
            Bt
          );
        }
        N = -1;
      }),
      (this.readRenderTargetPixels = function (X, le, ye, Ae, ge, it, Qe) {
        if (!(X && X.isWebGLRenderTarget)) {
          console.error(
            "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
          );
          return;
        }
        let Ge = nt.get(X).__webglFramebuffer;
        if ((X.isWebGLCubeRenderTarget && Qe !== void 0 && (Ge = Ge[Qe]), Ge)) {
          Le.bindFramebuffer(ne.FRAMEBUFFER, Ge);
          try {
            const ht = X.texture,
              Bt = ht.format,
              _t = ht.type;
            if (
              Bt !== nr &&
              Xe.convert(Bt) !==
                ne.getParameter(ne.IMPLEMENTATION_COLOR_READ_FORMAT)
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
              );
              return;
            }
            const Pt =
              _t === Ea &&
              (Ce.has("EXT_color_buffer_half_float") ||
                (Ne.isWebGL2 && Ce.has("EXT_color_buffer_float")));
            if (
              _t !== ls &&
              Xe.convert(_t) !==
                ne.getParameter(ne.IMPLEMENTATION_COLOR_READ_TYPE) &&
              !(
                _t === ss &&
                (Ne.isWebGL2 ||
                  Ce.has("OES_texture_float") ||
                  Ce.has("WEBGL_color_buffer_float"))
              ) &&
              !Pt
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
              );
              return;
            }
            le >= 0 &&
              le <= X.width - Ae &&
              ye >= 0 &&
              ye <= X.height - ge &&
              ne.readPixels(le, ye, Ae, ge, Xe.convert(Bt), Xe.convert(_t), it);
          } finally {
            const ht = I !== null ? nt.get(I).__webglFramebuffer : null;
            Le.bindFramebuffer(ne.FRAMEBUFFER, ht);
          }
        }
      }),
      (this.copyFramebufferToTexture = function (X, le, ye = 0) {
        const Ae = Math.pow(2, -ye),
          ge = Math.floor(le.image.width * Ae),
          it = Math.floor(le.image.height * Ae);
        at.setTexture2D(le, 0),
          ne.copyTexSubImage2D(ne.TEXTURE_2D, ye, 0, 0, X.x, X.y, ge, it),
          Le.unbindTexture();
      }),
      (this.copyTextureToTexture = function (X, le, ye, Ae = 0) {
        const ge = le.image.width,
          it = le.image.height,
          Qe = Xe.convert(ye.format),
          Ge = Xe.convert(ye.type);
        at.setTexture2D(ye, 0),
          ne.pixelStorei(ne.UNPACK_FLIP_Y_WEBGL, ye.flipY),
          ne.pixelStorei(
            ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
            ye.premultiplyAlpha
          ),
          ne.pixelStorei(ne.UNPACK_ALIGNMENT, ye.unpackAlignment),
          le.isDataTexture
            ? ne.texSubImage2D(
                ne.TEXTURE_2D,
                Ae,
                X.x,
                X.y,
                ge,
                it,
                Qe,
                Ge,
                le.image.data
              )
            : le.isCompressedTexture
            ? ne.compressedTexSubImage2D(
                ne.TEXTURE_2D,
                Ae,
                X.x,
                X.y,
                le.mipmaps[0].width,
                le.mipmaps[0].height,
                Qe,
                le.mipmaps[0].data
              )
            : ne.texSubImage2D(ne.TEXTURE_2D, Ae, X.x, X.y, Qe, Ge, le.image),
          Ae === 0 && ye.generateMipmaps && ne.generateMipmap(ne.TEXTURE_2D),
          Le.unbindTexture();
      }),
      (this.copyTextureToTexture3D = function (X, le, ye, Ae, ge = 0) {
        if (T.isWebGL1Renderer) {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
          );
          return;
        }
        const it = X.max.x - X.min.x + 1,
          Qe = X.max.y - X.min.y + 1,
          Ge = X.max.z - X.min.z + 1,
          ht = Xe.convert(Ae.format),
          Bt = Xe.convert(Ae.type);
        let _t;
        if (Ae.isData3DTexture) at.setTexture3D(Ae, 0), (_t = ne.TEXTURE_3D);
        else if (Ae.isDataArrayTexture)
          at.setTexture2DArray(Ae, 0), (_t = ne.TEXTURE_2D_ARRAY);
        else {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
          );
          return;
        }
        ne.pixelStorei(ne.UNPACK_FLIP_Y_WEBGL, Ae.flipY),
          ne.pixelStorei(
            ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
            Ae.premultiplyAlpha
          ),
          ne.pixelStorei(ne.UNPACK_ALIGNMENT, Ae.unpackAlignment);
        const Pt = ne.getParameter(ne.UNPACK_ROW_LENGTH),
          jt = ne.getParameter(ne.UNPACK_IMAGE_HEIGHT),
          sn = ne.getParameter(ne.UNPACK_SKIP_PIXELS),
          gn = ne.getParameter(ne.UNPACK_SKIP_ROWS),
          Si = ne.getParameter(ne.UNPACK_SKIP_IMAGES),
          bn = ye.isCompressedTexture ? ye.mipmaps[0] : ye.image;
        ne.pixelStorei(ne.UNPACK_ROW_LENGTH, bn.width),
          ne.pixelStorei(ne.UNPACK_IMAGE_HEIGHT, bn.height),
          ne.pixelStorei(ne.UNPACK_SKIP_PIXELS, X.min.x),
          ne.pixelStorei(ne.UNPACK_SKIP_ROWS, X.min.y),
          ne.pixelStorei(ne.UNPACK_SKIP_IMAGES, X.min.z),
          ye.isDataTexture || ye.isData3DTexture
            ? ne.texSubImage3D(
                _t,
                ge,
                le.x,
                le.y,
                le.z,
                it,
                Qe,
                Ge,
                ht,
                Bt,
                bn.data
              )
            : ye.isCompressedArrayTexture
            ? (console.warn(
                "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
              ),
              ne.compressedTexSubImage3D(
                _t,
                ge,
                le.x,
                le.y,
                le.z,
                it,
                Qe,
                Ge,
                ht,
                bn.data
              ))
            : ne.texSubImage3D(
                _t,
                ge,
                le.x,
                le.y,
                le.z,
                it,
                Qe,
                Ge,
                ht,
                Bt,
                bn
              ),
          ne.pixelStorei(ne.UNPACK_ROW_LENGTH, Pt),
          ne.pixelStorei(ne.UNPACK_IMAGE_HEIGHT, jt),
          ne.pixelStorei(ne.UNPACK_SKIP_PIXELS, sn),
          ne.pixelStorei(ne.UNPACK_SKIP_ROWS, gn),
          ne.pixelStorei(ne.UNPACK_SKIP_IMAGES, Si),
          ge === 0 && Ae.generateMipmaps && ne.generateMipmap(_t),
          Le.unbindTexture();
      }),
      (this.initTexture = function (X) {
        X.isCubeTexture
          ? at.setTextureCube(X, 0)
          : X.isData3DTexture
          ? at.setTexture3D(X, 0)
          : X.isDataArrayTexture || X.isCompressedArrayTexture
          ? at.setTexture2DArray(X, 0)
          : at.setTexture2D(X, 0),
          Le.unbindTexture();
      }),
      (this.resetState = function () {
        (U = 0), (q = 0), (I = null), Le.reset(), et.reset();
      }),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  get coordinateSystem() {
    return Br;
  }
  get physicallyCorrectLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
      ),
      !this.useLegacyLights
    );
  }
  set physicallyCorrectLights(e) {
    console.warn(
      "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
    ),
      (this.useLegacyLights = !e);
  }
  get outputEncoding() {
    return (
      console.warn(
        "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
      ),
      this.outputColorSpace === fn ? Is : l1
    );
  }
  set outputEncoding(e) {
    console.warn(
      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
    ),
      (this.outputColorSpace = e === Is ? fn : xr);
  }
  get useLegacyLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
      ),
      this._useLegacyLights
    );
  }
  set useLegacyLights(e) {
    console.warn(
      "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
    ),
      (this._useLegacyLights = e);
  }
}
class S5 extends R1 {}
S5.prototype.isWebGL1Renderer = !0;
class pc {
  constructor(e, t = 1, i = 1e3) {
    (this.isFog = !0),
      (this.name = ""),
      (this.color = new Nt(e)),
      (this.near = t),
      (this.far = i);
  }
  clone() {
    return new pc(this.color, this.near, this.far);
  }
  toJSON() {
    return {
      type: "Fog",
      color: this.color.getHex(),
      near: this.near,
      far: this.far,
    };
  }
}
class E5 extends Cn {
  constructor() {
    super(),
      (this.isScene = !0),
      (this.type = "Scene"),
      (this.background = null),
      (this.environment = null),
      (this.fog = null),
      (this.backgroundBlurriness = 0),
      (this.backgroundIntensity = 1),
      (this.overrideMaterial = null),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      e.background !== null && (this.background = e.background.clone()),
      e.environment !== null && (this.environment = e.environment.clone()),
      e.fog !== null && (this.fog = e.fog.clone()),
      (this.backgroundBlurriness = e.backgroundBlurriness),
      (this.backgroundIntensity = e.backgroundIntensity),
      e.overrideMaterial !== null &&
        (this.overrideMaterial = e.overrideMaterial.clone()),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      this.fog !== null && (t.object.fog = this.fog.toJSON()),
      this.backgroundBlurriness > 0 &&
        (t.object.backgroundBlurriness = this.backgroundBlurriness),
      this.backgroundIntensity !== 1 &&
        (t.object.backgroundIntensity = this.backgroundIntensity),
      t
    );
  }
}
class P1 {
  constructor(e, t) {
    (this.isInterleavedBuffer = !0),
      (this.array = e),
      (this.stride = t),
      (this.count = e !== void 0 ? e.length / t : 0),
      (this.usage = vu),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.version = 0),
      (this.uuid = mr());
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  copy(e) {
    return (
      (this.array = new e.array.constructor(e.array)),
      (this.count = e.count),
      (this.stride = e.stride),
      (this.usage = e.usage),
      this
    );
  }
  copyAt(e, t, i) {
    (e *= this.stride), (i *= t.stride);
    for (let r = 0, s = this.stride; r < s; r++)
      this.array[e + r] = t.array[i + r];
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  clone(e) {
    e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = mr()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
    const t = new this.array.constructor(
        e.arrayBuffers[this.array.buffer._uuid]
      ),
      i = new this.constructor(t, this.stride);
    return i.setUsage(this.usage), i;
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  toJSON(e) {
    return (
      e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = mr()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
          new Uint32Array(this.array.buffer)
        )),
      {
        uuid: this.uuid,
        buffer: this.array.buffer._uuid,
        type: this.array.constructor.name,
        stride: this.stride,
      }
    );
  }
}
const ni = new J();
class ja {
  constructor(e, t, i, r = !1) {
    (this.isInterleavedBufferAttribute = !0),
      (this.name = ""),
      (this.data = e),
      (this.itemSize = t),
      (this.offset = i),
      (this.normalized = r);
  }
  get count() {
    return this.data.count;
  }
  get array() {
    return this.data.array;
  }
  set needsUpdate(e) {
    this.data.needsUpdate = e;
  }
  applyMatrix4(e) {
    for (let t = 0, i = this.data.count; t < i; t++)
      ni.fromBufferAttribute(this, t),
        ni.applyMatrix4(e),
        this.setXYZ(t, ni.x, ni.y, ni.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, i = this.count; t < i; t++)
      ni.fromBufferAttribute(this, t),
        ni.applyNormalMatrix(e),
        this.setXYZ(t, ni.x, ni.y, ni.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, i = this.count; t < i; t++)
      ni.fromBufferAttribute(this, t),
        ni.transformDirection(e),
        this.setXYZ(t, ni.x, ni.y, ni.z);
    return this;
  }
  setX(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset] = t),
      this
    );
  }
  setY(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 1] = t),
      this
    );
  }
  setZ(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 2] = t),
      this
    );
  }
  setW(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 3] = t),
      this
    );
  }
  getX(e) {
    let t = this.data.array[e * this.data.stride + this.offset];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  getY(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 1];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  getZ(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 2];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  getW(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 3];
    return this.normalized && (t = pr(t, this.array)), t;
  }
  setXY(e, t, i) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized && ((t = on(t, this.array)), (i = on(i, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      this
    );
  }
  setXYZ(e, t, i, r) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      (this.data.array[e + 2] = r),
      this
    );
  }
  setXYZW(e, t, i, r, s) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array)),
        (s = on(s, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      (this.data.array[e + 2] = r),
      (this.data.array[e + 3] = s),
      this
    );
  }
  clone(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data."
      );
      const t = [];
      for (let i = 0; i < this.count; i++) {
        const r = i * this.data.stride + this.offset;
        for (let s = 0; s < this.itemSize; s++) t.push(this.data.array[r + s]);
      }
      return new mn(
        new this.array.constructor(t),
        this.itemSize,
        this.normalized
      );
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
        new ja(
          e.interleavedBuffers[this.data.uuid],
          this.itemSize,
          this.offset,
          this.normalized
        )
      );
  }
  toJSON(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data."
      );
      const t = [];
      for (let i = 0; i < this.count; i++) {
        const r = i * this.data.stride + this.offset;
        for (let s = 0; s < this.itemSize; s++) t.push(this.data.array[r + s]);
      }
      return {
        itemSize: this.itemSize,
        type: this.array.constructor.name,
        array: t,
        normalized: this.normalized,
      };
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
        {
          isInterleavedBufferAttribute: !0,
          itemSize: this.itemSize,
          data: this.data.uuid,
          offset: this.offset,
          normalized: this.normalized,
        }
      );
  }
}
class L1 extends mn {
  constructor(e, t, i, r = 1) {
    super(e, t, i),
      (this.isInstancedBufferAttribute = !0),
      (this.meshPerAttribute = r);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.meshPerAttribute = this.meshPerAttribute),
      (e.isInstancedBufferAttribute = !0),
      e
    );
  }
}
class Ql extends Hs {
  constructor(e) {
    super(),
      (this.isLineBasicMaterial = !0),
      (this.type = "LineBasicMaterial"),
      (this.color = new Nt(16777215)),
      (this.map = null),
      (this.linewidth = 1),
      (this.linecap = "round"),
      (this.linejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.linewidth = e.linewidth),
      (this.linecap = e.linecap),
      (this.linejoin = e.linejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const Qh = new J(),
  $h = new J(),
  Yh = new dn(),
  Y0 = new cc(),
  wA = new Go();
class $l extends Cn {
  constructor(e = new cn(), t = new Ql()) {
    super(),
      (this.isLine = !0),
      (this.type = "Line"),
      (this.geometry = e),
      (this.material = t),
      this.updateMorphTargets();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position,
        i = [0];
      for (let r = 1, s = t.count; r < s; r++)
        Qh.fromBufferAttribute(t, r - 1),
          $h.fromBufferAttribute(t, r),
          (i[r] = i[r - 1]),
          (i[r] += Qh.distanceTo($h));
      e.setAttribute("lineDistance", new Kt(i, 1));
    } else
      console.warn(
        "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
  raycast(e, t) {
    const i = this.geometry,
      r = this.matrixWorld,
      s = e.params.Line.threshold,
      u = i.drawRange;
    if (
      (i.boundingSphere === null && i.computeBoundingSphere(),
      wA.copy(i.boundingSphere),
      wA.applyMatrix4(r),
      (wA.radius += s),
      e.ray.intersectsSphere(wA) === !1)
    )
      return;
    Yh.copy(r).invert(), Y0.copy(e.ray).applyMatrix4(Yh);
    const c = s / ((this.scale.x + this.scale.y + this.scale.z) / 3),
      d = c * c,
      p = new J(),
      g = new J(),
      _ = new J(),
      x = new J(),
      M = this.isLineSegments ? 2 : 1,
      E = i.index,
      S = i.attributes.position;
    if (E !== null) {
      const b = Math.max(0, u.start),
        L = Math.min(E.count, u.start + u.count);
      for (let T = b, R = L - 1; T < R; T += M) {
        const U = E.getX(T),
          q = E.getX(T + 1);
        if (
          (p.fromBufferAttribute(S, U),
          g.fromBufferAttribute(S, q),
          Y0.distanceSqToSegment(p, g, x, _) > d)
        )
          continue;
        x.applyMatrix4(this.matrixWorld);
        const N = e.ray.origin.distanceTo(x);
        N < e.near ||
          N > e.far ||
          t.push({
            distance: N,
            point: _.clone().applyMatrix4(this.matrixWorld),
            index: T,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    } else {
      const b = Math.max(0, u.start),
        L = Math.min(S.count, u.start + u.count);
      for (let T = b, R = L - 1; T < R; T += M) {
        if (
          (p.fromBufferAttribute(S, T),
          g.fromBufferAttribute(S, T + 1),
          Y0.distanceSqToSegment(p, g, x, _) > d)
        )
          continue;
        x.applyMatrix4(this.matrixWorld);
        const q = e.ray.origin.distanceTo(x);
        q < e.near ||
          q > e.far ||
          t.push({
            distance: q,
            point: _.clone().applyMatrix4(this.matrixWorld),
            index: T,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    }
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes,
      i = Object.keys(t);
    if (i.length > 0) {
      const r = t[i[0]];
      if (r !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let s = 0, u = r.length; s < u; s++) {
          const c = r[s].name || String(s);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[c] = s);
        }
      }
    }
  }
}
const Zh = new J(),
  Kh = new J();
class D1 extends $l {
  constructor(e, t) {
    super(e, t), (this.isLineSegments = !0), (this.type = "LineSegments");
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position,
        i = [];
      for (let r = 0, s = t.count; r < s; r += 2)
        Zh.fromBufferAttribute(t, r),
          Kh.fromBufferAttribute(t, r + 1),
          (i[r] = r === 0 ? 0 : i[r - 1]),
          (i[r + 1] = i[r] + Zh.distanceTo(Kh));
      e.setAttribute("lineDistance", new Kt(i, 1));
    } else
      console.warn(
        "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
}
class ar {
  constructor() {
    (this.type = "Curve"), (this.arcLengthDivisions = 200);
  }
  getPoint() {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }
  getPointAt(e, t) {
    const i = this.getUtoTmapping(e);
    return this.getPoint(i, t);
  }
  getPoints(e = 5) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPoint(i / e));
    return t;
  }
  getSpacedPoints(e = 5) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPointAt(i / e));
    return t;
  }
  getLength() {
    const e = this.getLengths();
    return e[e.length - 1];
  }
  getLengths(e = this.arcLengthDivisions) {
    if (
      this.cacheArcLengths &&
      this.cacheArcLengths.length === e + 1 &&
      !this.needsUpdate
    )
      return this.cacheArcLengths;
    this.needsUpdate = !1;
    const t = [];
    let i,
      r = this.getPoint(0),
      s = 0;
    t.push(0);
    for (let u = 1; u <= e; u++)
      (i = this.getPoint(u / e)), (s += i.distanceTo(r)), t.push(s), (r = i);
    return (this.cacheArcLengths = t), t;
  }
  updateArcLengths() {
    (this.needsUpdate = !0), this.getLengths();
  }
  getUtoTmapping(e, t) {
    const i = this.getLengths();
    let r = 0;
    const s = i.length;
    let u;
    t ? (u = t) : (u = e * i[s - 1]);
    let c = 0,
      d = s - 1,
      p;
    for (; c <= d; )
      if (((r = Math.floor(c + (d - c) / 2)), (p = i[r] - u), p < 0)) c = r + 1;
      else if (p > 0) d = r - 1;
      else {
        d = r;
        break;
      }
    if (((r = d), i[r] === u)) return r / (s - 1);
    const g = i[r],
      x = i[r + 1] - g,
      M = (u - g) / x;
    return (r + M) / (s - 1);
  }
  getTangent(e, t) {
    let r = e - 1e-4,
      s = e + 1e-4;
    r < 0 && (r = 0), s > 1 && (s = 1);
    const u = this.getPoint(r),
      c = this.getPoint(s),
      d = t || (u.isVector2 ? new ke() : new J());
    return d.copy(c).sub(u).normalize(), d;
  }
  getTangentAt(e, t) {
    const i = this.getUtoTmapping(e);
    return this.getTangent(i, t);
  }
  computeFrenetFrames(e, t) {
    const i = new J(),
      r = [],
      s = [],
      u = [],
      c = new J(),
      d = new dn();
    for (let M = 0; M <= e; M++) {
      const E = M / e;
      r[M] = this.getTangentAt(E, new J());
    }
    (s[0] = new J()), (u[0] = new J());
    let p = Number.MAX_VALUE;
    const g = Math.abs(r[0].x),
      _ = Math.abs(r[0].y),
      x = Math.abs(r[0].z);
    g <= p && ((p = g), i.set(1, 0, 0)),
      _ <= p && ((p = _), i.set(0, 1, 0)),
      x <= p && i.set(0, 0, 1),
      c.crossVectors(r[0], i).normalize(),
      s[0].crossVectors(r[0], c),
      u[0].crossVectors(r[0], s[0]);
    for (let M = 1; M <= e; M++) {
      if (
        ((s[M] = s[M - 1].clone()),
        (u[M] = u[M - 1].clone()),
        c.crossVectors(r[M - 1], r[M]),
        c.length() > Number.EPSILON)
      ) {
        c.normalize();
        const E = Math.acos(Pn(r[M - 1].dot(r[M]), -1, 1));
        s[M].applyMatrix4(d.makeRotationAxis(c, E));
      }
      u[M].crossVectors(r[M], s[M]);
    }
    if (t === !0) {
      let M = Math.acos(Pn(s[0].dot(s[e]), -1, 1));
      (M /= e), r[0].dot(c.crossVectors(s[0], s[e])) > 0 && (M = -M);
      for (let E = 1; E <= e; E++)
        s[E].applyMatrix4(d.makeRotationAxis(r[E], M * E)),
          u[E].crossVectors(r[E], s[E]);
    }
    return { tangents: r, normals: s, binormals: u };
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
  toJSON() {
    const e = {
      metadata: { version: 4.6, type: "Curve", generator: "Curve.toJSON" },
    };
    return (
      (e.arcLengthDivisions = this.arcLengthDivisions), (e.type = this.type), e
    );
  }
  fromJSON(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
}
class mc extends ar {
  constructor(
    e = 0,
    t = 0,
    i = 1,
    r = 1,
    s = 0,
    u = Math.PI * 2,
    c = !1,
    d = 0
  ) {
    super(),
      (this.isEllipseCurve = !0),
      (this.type = "EllipseCurve"),
      (this.aX = e),
      (this.aY = t),
      (this.xRadius = i),
      (this.yRadius = r),
      (this.aStartAngle = s),
      (this.aEndAngle = u),
      (this.aClockwise = c),
      (this.aRotation = d);
  }
  getPoint(e, t) {
    const i = t || new ke(),
      r = Math.PI * 2;
    let s = this.aEndAngle - this.aStartAngle;
    const u = Math.abs(s) < Number.EPSILON;
    for (; s < 0; ) s += r;
    for (; s > r; ) s -= r;
    s < Number.EPSILON && (u ? (s = 0) : (s = r)),
      this.aClockwise === !0 && !u && (s === r ? (s = -r) : (s = s - r));
    const c = this.aStartAngle + e * s;
    let d = this.aX + this.xRadius * Math.cos(c),
      p = this.aY + this.yRadius * Math.sin(c);
    if (this.aRotation !== 0) {
      const g = Math.cos(this.aRotation),
        _ = Math.sin(this.aRotation),
        x = d - this.aX,
        M = p - this.aY;
      (d = x * g - M * _ + this.aX), (p = x * _ + M * g + this.aY);
    }
    return i.set(d, p);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.aX = this.aX),
      (e.aY = this.aY),
      (e.xRadius = this.xRadius),
      (e.yRadius = this.yRadius),
      (e.aStartAngle = this.aStartAngle),
      (e.aEndAngle = this.aEndAngle),
      (e.aClockwise = this.aClockwise),
      (e.aRotation = this.aRotation),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
}
class w5 extends mc {
  constructor(e, t, i, r, s, u) {
    super(e, t, i, i, r, s, u),
      (this.isArcCurve = !0),
      (this.type = "ArcCurve");
  }
}
function gc() {
  let n = 0,
    e = 0,
    t = 0,
    i = 0;
  function r(s, u, c, d) {
    (n = s),
      (e = c),
      (t = -3 * s + 3 * u - 2 * c - d),
      (i = 2 * s - 2 * u + c + d);
  }
  return {
    initCatmullRom: function (s, u, c, d, p) {
      r(u, c, p * (c - s), p * (d - u));
    },
    initNonuniformCatmullRom: function (s, u, c, d, p, g, _) {
      let x = (u - s) / p - (c - s) / (p + g) + (c - u) / g,
        M = (c - u) / g - (d - u) / (g + _) + (d - c) / _;
      (x *= g), (M *= g), r(u, c, x, M);
    },
    calc: function (s) {
      const u = s * s,
        c = u * s;
      return n + e * s + t * u + i * c;
    },
  };
}
const TA = new J(),
  Z0 = new gc(),
  K0 = new gc(),
  J0 = new gc();
class T5 extends ar {
  constructor(e = [], t = !1, i = "centripetal", r = 0.5) {
    super(),
      (this.isCatmullRomCurve3 = !0),
      (this.type = "CatmullRomCurve3"),
      (this.points = e),
      (this.closed = t),
      (this.curveType = i),
      (this.tension = r);
  }
  getPoint(e, t = new J()) {
    const i = t,
      r = this.points,
      s = r.length,
      u = (s - (this.closed ? 0 : 1)) * e;
    let c = Math.floor(u),
      d = u - c;
    this.closed
      ? (c += c > 0 ? 0 : (Math.floor(Math.abs(c) / s) + 1) * s)
      : d === 0 && c === s - 1 && ((c = s - 2), (d = 1));
    let p, g;
    this.closed || c > 0
      ? (p = r[(c - 1) % s])
      : (TA.subVectors(r[0], r[1]).add(r[0]), (p = TA));
    const _ = r[c % s],
      x = r[(c + 1) % s];
    if (
      (this.closed || c + 2 < s
        ? (g = r[(c + 2) % s])
        : (TA.subVectors(r[s - 1], r[s - 2]).add(r[s - 1]), (g = TA)),
      this.curveType === "centripetal" || this.curveType === "chordal")
    ) {
      const M = this.curveType === "chordal" ? 0.5 : 0.25;
      let E = Math.pow(p.distanceToSquared(_), M),
        C = Math.pow(_.distanceToSquared(x), M),
        S = Math.pow(x.distanceToSquared(g), M);
      C < 1e-4 && (C = 1),
        E < 1e-4 && (E = C),
        S < 1e-4 && (S = C),
        Z0.initNonuniformCatmullRom(p.x, _.x, x.x, g.x, E, C, S),
        K0.initNonuniformCatmullRom(p.y, _.y, x.y, g.y, E, C, S),
        J0.initNonuniformCatmullRom(p.z, _.z, x.z, g.z, E, C, S);
    } else
      this.curveType === "catmullrom" &&
        (Z0.initCatmullRom(p.x, _.x, x.x, g.x, this.tension),
        K0.initCatmullRom(p.y, _.y, x.y, g.y, this.tension),
        J0.initCatmullRom(p.z, _.z, x.z, g.z, this.tension));
    return i.set(Z0.calc(d), K0.calc(d), J0.calc(d)), i;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(r.clone());
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, i = this.points.length; t < i; t++) {
      const r = this.points[t];
      e.points.push(r.toArray());
    }
    return (
      (e.closed = this.closed),
      (e.curveType = this.curveType),
      (e.tension = this.tension),
      e
    );
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(new J().fromArray(r));
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
}
function Jh(n, e, t, i, r) {
  const s = (i - e) * 0.5,
    u = (r - t) * 0.5,
    c = n * n,
    d = n * c;
  return (
    (2 * t - 2 * i + s + u) * d + (-3 * t + 3 * i - 2 * s - u) * c + s * n + t
  );
}
function C5(n, e) {
  const t = 1 - n;
  return t * t * e;
}
function R5(n, e) {
  return 2 * (1 - n) * n * e;
}
function P5(n, e) {
  return n * n * e;
}
function xa(n, e, t, i) {
  return C5(n, e) + R5(n, t) + P5(n, i);
}
function L5(n, e) {
  const t = 1 - n;
  return t * t * t * e;
}
function D5(n, e) {
  const t = 1 - n;
  return 3 * t * t * n * e;
}
function I5(n, e) {
  return 3 * (1 - n) * n * n * e;
}
function O5(n, e) {
  return n * n * n * e;
}
function ya(n, e, t, i, r) {
  return L5(n, e) + D5(n, t) + I5(n, i) + O5(n, r);
}
class I1 extends ar {
  constructor(e = new ke(), t = new ke(), i = new ke(), r = new ke()) {
    super(),
      (this.isCubicBezierCurve = !0),
      (this.type = "CubicBezierCurve"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i),
      (this.v3 = r);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2,
      c = this.v3;
    return i.set(ya(e, r.x, s.x, u.x, c.x), ya(e, r.y, s.y, u.y, c.y)), i;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class O1 extends ar {
  constructor(e = new J(), t = new J(), i = new J(), r = new J()) {
    super(),
      (this.isCubicBezierCurve3 = !0),
      (this.type = "CubicBezierCurve3"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i),
      (this.v3 = r);
  }
  getPoint(e, t = new J()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2,
      c = this.v3;
    return (
      i.set(
        ya(e, r.x, s.x, u.x, c.x),
        ya(e, r.y, s.y, u.y, c.y),
        ya(e, r.z, s.z, u.z, c.z)
      ),
      i
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class _c extends ar {
  constructor(e = new ke(), t = new ke()) {
    super(),
      (this.isLineCurve = !0),
      (this.type = "LineCurve"),
      (this.v1 = e),
      (this.v2 = t);
  }
  getPoint(e, t = new ke()) {
    const i = t;
    return (
      e === 1
        ? i.copy(this.v2)
        : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(e).add(this.v1)),
      i
    );
  }
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new ke()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class U5 extends ar {
  constructor(e = new J(), t = new J()) {
    super(),
      (this.isLineCurve3 = !0),
      (this.type = "LineCurve3"),
      (this.v1 = e),
      (this.v2 = t);
  }
  getPoint(e, t = new J()) {
    const i = t;
    return (
      e === 1
        ? i.copy(this.v2)
        : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(e).add(this.v1)),
      i
    );
  }
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new J()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class U1 extends ar {
  constructor(e = new ke(), t = new ke(), i = new ke()) {
    super(),
      (this.isQuadraticBezierCurve = !0),
      (this.type = "QuadraticBezierCurve"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2;
    return i.set(xa(e, r.x, s.x, u.x), xa(e, r.y, s.y, u.y)), i;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class vc extends ar {
  constructor(e = new J(), t = new J(), i = new J()) {
    super(),
      (this.isQuadraticBezierCurve3 = !0),
      (this.type = "QuadraticBezierCurve3"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i);
  }
  getPoint(e, t = new J()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2;
    return (
      i.set(xa(e, r.x, s.x, u.x), xa(e, r.y, s.y, u.y), xa(e, r.z, s.z, u.z)), i
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class q1 extends ar {
  constructor(e = []) {
    super(),
      (this.isSplineCurve = !0),
      (this.type = "SplineCurve"),
      (this.points = e);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.points,
      s = (r.length - 1) * e,
      u = Math.floor(s),
      c = s - u,
      d = r[u === 0 ? u : u - 1],
      p = r[u],
      g = r[u > r.length - 2 ? r.length - 1 : u + 1],
      _ = r[u > r.length - 3 ? r.length - 1 : u + 2];
    return i.set(Jh(c, d.x, p.x, g.x, _.x), Jh(c, d.y, p.y, g.y, _.y)), i;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(r.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, i = this.points.length; t < i; t++) {
      const r = this.points[t];
      e.points.push(r.toArray());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(new ke().fromArray(r));
    }
    return this;
  }
}
var xc = Object.freeze({
  __proto__: null,
  ArcCurve: w5,
  CatmullRomCurve3: T5,
  CubicBezierCurve: I1,
  CubicBezierCurve3: O1,
  EllipseCurve: mc,
  LineCurve: _c,
  LineCurve3: U5,
  QuadraticBezierCurve: U1,
  QuadraticBezierCurve3: vc,
  SplineCurve: q1,
});
class q5 extends ar {
  constructor() {
    super(),
      (this.type = "CurvePath"),
      (this.curves = []),
      (this.autoClose = !1);
  }
  add(e) {
    this.curves.push(e);
  }
  closePath() {
    const e = this.curves[0].getPoint(0),
      t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new _c(t, e));
  }
  getPoint(e, t) {
    const i = e * this.getLength(),
      r = this.getCurveLengths();
    let s = 0;
    for (; s < r.length; ) {
      if (r[s] >= i) {
        const u = r[s] - i,
          c = this.curves[s],
          d = c.getLength(),
          p = d === 0 ? 0 : 1 - u / d;
        return c.getPointAt(p, t);
      }
      s++;
    }
    return null;
  }
  getLength() {
    const e = this.getCurveLengths();
    return e[e.length - 1];
  }
  updateArcLengths() {
    (this.needsUpdate = !0), (this.cacheLengths = null), this.getCurveLengths();
  }
  getCurveLengths() {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
      return this.cacheLengths;
    const e = [];
    let t = 0;
    for (let i = 0, r = this.curves.length; i < r; i++)
      (t += this.curves[i].getLength()), e.push(t);
    return (this.cacheLengths = e), e;
  }
  getSpacedPoints(e = 40) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPoint(i / e));
    return this.autoClose && t.push(t[0]), t;
  }
  getPoints(e = 12) {
    const t = [];
    let i;
    for (let r = 0, s = this.curves; r < s.length; r++) {
      const u = s[r],
        c = u.isEllipseCurve
          ? e * 2
          : u.isLineCurve || u.isLineCurve3
          ? 1
          : u.isSplineCurve
          ? e * u.points.length
          : e,
        d = u.getPoints(c);
      for (let p = 0; p < d.length; p++) {
        const g = d[p];
        (i && i.equals(g)) || (t.push(g), (i = g));
      }
    }
    return (
      this.autoClose &&
        t.length > 1 &&
        !t[t.length - 1].equals(t[0]) &&
        t.push(t[0]),
      t
    );
  }
  copy(e) {
    super.copy(e), (this.curves = []);
    for (let t = 0, i = e.curves.length; t < i; t++) {
      const r = e.curves[t];
      this.curves.push(r.clone());
    }
    return (this.autoClose = e.autoClose), this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.autoClose = this.autoClose), (e.curves = []);
    for (let t = 0, i = this.curves.length; t < i; t++) {
      const r = this.curves[t];
      e.curves.push(r.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
    for (let t = 0, i = e.curves.length; t < i; t++) {
      const r = e.curves[t];
      this.curves.push(new xc[r.type]().fromJSON(r));
    }
    return this;
  }
}
let Mu = class extends q5 {
  constructor(e) {
    super(),
      (this.type = "Path"),
      (this.currentPoint = new ke()),
      e && this.setFromPoints(e);
  }
  setFromPoints(e) {
    this.moveTo(e[0].x, e[0].y);
    for (let t = 1, i = e.length; t < i; t++) this.lineTo(e[t].x, e[t].y);
    return this;
  }
  moveTo(e, t) {
    return this.currentPoint.set(e, t), this;
  }
  lineTo(e, t) {
    const i = new _c(this.currentPoint.clone(), new ke(e, t));
    return this.curves.push(i), this.currentPoint.set(e, t), this;
  }
  quadraticCurveTo(e, t, i, r) {
    const s = new U1(this.currentPoint.clone(), new ke(e, t), new ke(i, r));
    return this.curves.push(s), this.currentPoint.set(i, r), this;
  }
  bezierCurveTo(e, t, i, r, s, u) {
    const c = new I1(
      this.currentPoint.clone(),
      new ke(e, t),
      new ke(i, r),
      new ke(s, u)
    );
    return this.curves.push(c), this.currentPoint.set(s, u), this;
  }
  splineThru(e) {
    const t = [this.currentPoint.clone()].concat(e),
      i = new q1(t);
    return this.curves.push(i), this.currentPoint.copy(e[e.length - 1]), this;
  }
  arc(e, t, i, r, s, u) {
    const c = this.currentPoint.x,
      d = this.currentPoint.y;
    return this.absarc(e + c, t + d, i, r, s, u), this;
  }
  absarc(e, t, i, r, s, u) {
    return this.absellipse(e, t, i, i, r, s, u), this;
  }
  ellipse(e, t, i, r, s, u, c, d) {
    const p = this.currentPoint.x,
      g = this.currentPoint.y;
    return this.absellipse(e + p, t + g, i, r, s, u, c, d), this;
  }
  absellipse(e, t, i, r, s, u, c, d) {
    const p = new mc(e, t, i, r, s, u, c, d);
    if (this.curves.length > 0) {
      const _ = p.getPoint(0);
      _.equals(this.currentPoint) || this.lineTo(_.x, _.y);
    }
    this.curves.push(p);
    const g = p.getPoint(1);
    return this.currentPoint.copy(g), this;
  }
  copy(e) {
    return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.currentPoint = this.currentPoint.toArray()), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
  }
};
class yc extends cn {
  constructor(e = 1, t = 32, i = 0, r = Math.PI * 2) {
    super(),
      (this.type = "CircleGeometry"),
      (this.parameters = {
        radius: e,
        segments: t,
        thetaStart: i,
        thetaLength: r,
      }),
      (t = Math.max(3, t));
    const s = [],
      u = [],
      c = [],
      d = [],
      p = new J(),
      g = new ke();
    u.push(0, 0, 0), c.push(0, 0, 1), d.push(0.5, 0.5);
    for (let _ = 0, x = 3; _ <= t; _++, x += 3) {
      const M = i + (_ / t) * r;
      (p.x = e * Math.cos(M)),
        (p.y = e * Math.sin(M)),
        u.push(p.x, p.y, p.z),
        c.push(0, 0, 1),
        (g.x = (u[x] / e + 1) / 2),
        (g.y = (u[x + 1] / e + 1) / 2),
        d.push(g.x, g.y);
    }
    for (let _ = 1; _ <= t; _++) s.push(_, _ + 1, 0);
    this.setIndex(s),
      this.setAttribute("position", new Kt(u, 3)),
      this.setAttribute("normal", new Kt(c, 3)),
      this.setAttribute("uv", new Kt(d, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new yc(e.radius, e.segments, e.thetaStart, e.thetaLength);
  }
}
class bc extends cn {
  constructor(
    e = 1,
    t = 1,
    i = 1,
    r = 32,
    s = 1,
    u = !1,
    c = 0,
    d = Math.PI * 2
  ) {
    super(),
      (this.type = "CylinderGeometry"),
      (this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: i,
        radialSegments: r,
        heightSegments: s,
        openEnded: u,
        thetaStart: c,
        thetaLength: d,
      });
    const p = this;
    (r = Math.floor(r)), (s = Math.floor(s));
    const g = [],
      _ = [],
      x = [],
      M = [];
    let E = 0;
    const C = [],
      S = i / 2;
    let b = 0;
    L(),
      u === !1 && (e > 0 && T(!0), t > 0 && T(!1)),
      this.setIndex(g),
      this.setAttribute("position", new Kt(_, 3)),
      this.setAttribute("normal", new Kt(x, 3)),
      this.setAttribute("uv", new Kt(M, 2));
    function L() {
      const R = new J(),
        U = new J();
      let q = 0;
      const I = (t - e) / i;
      for (let N = 0; N <= s; N++) {
        const D = [],
          O = N / s,
          F = O * (t - e) + e;
        for (let $ = 0; $ <= r; $++) {
          const V = $ / r,
            Q = V * d + c,
            k = Math.sin(Q),
            te = Math.cos(Q);
          (U.x = F * k),
            (U.y = -O * i + S),
            (U.z = F * te),
            _.push(U.x, U.y, U.z),
            R.set(k, I, te).normalize(),
            x.push(R.x, R.y, R.z),
            M.push(V, 1 - O),
            D.push(E++);
        }
        C.push(D);
      }
      for (let N = 0; N < r; N++)
        for (let D = 0; D < s; D++) {
          const O = C[D][N],
            F = C[D + 1][N],
            $ = C[D + 1][N + 1],
            V = C[D][N + 1];
          g.push(O, F, V), g.push(F, $, V), (q += 6);
        }
      p.addGroup(b, q, 0), (b += q);
    }
    function T(R) {
      const U = E,
        q = new ke(),
        I = new J();
      let N = 0;
      const D = R === !0 ? e : t,
        O = R === !0 ? 1 : -1;
      for (let $ = 1; $ <= r; $++)
        _.push(0, S * O, 0), x.push(0, O, 0), M.push(0.5, 0.5), E++;
      const F = E;
      for (let $ = 0; $ <= r; $++) {
        const Q = ($ / r) * d + c,
          k = Math.cos(Q),
          te = Math.sin(Q);
        (I.x = D * te),
          (I.y = S * O),
          (I.z = D * k),
          _.push(I.x, I.y, I.z),
          x.push(0, O, 0),
          (q.x = k * 0.5 + 0.5),
          (q.y = te * 0.5 * O + 0.5),
          M.push(q.x, q.y),
          E++;
      }
      for (let $ = 0; $ < r; $++) {
        const V = U + $,
          Q = F + $;
        R === !0 ? g.push(Q, Q + 1, V) : g.push(Q + 1, Q, V), (N += 3);
      }
      p.addGroup(b, N, R === !0 ? 1 : 2), (b += N);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new bc(
      e.radiusTop,
      e.radiusBottom,
      e.height,
      e.radialSegments,
      e.heightSegments,
      e.openEnded,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class KA extends Mu {
  constructor(e) {
    super(e), (this.uuid = mr()), (this.type = "Shape"), (this.holes = []);
  }
  getPointsHoles(e) {
    const t = [];
    for (let i = 0, r = this.holes.length; i < r; i++)
      t[i] = this.holes[i].getPoints(e);
    return t;
  }
  extractPoints(e) {
    return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
  }
  copy(e) {
    super.copy(e), (this.holes = []);
    for (let t = 0, i = e.holes.length; t < i; t++) {
      const r = e.holes[t];
      this.holes.push(r.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.uuid = this.uuid), (e.holes = []);
    for (let t = 0, i = this.holes.length; t < i; t++) {
      const r = this.holes[t];
      e.holes.push(r.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
    for (let t = 0, i = e.holes.length; t < i; t++) {
      const r = e.holes[t];
      this.holes.push(new Mu().fromJSON(r));
    }
    return this;
  }
}
const B5 = {
  triangulate: function (n, e, t = 2) {
    const i = e && e.length,
      r = i ? e[0] * t : n.length;
    let s = B1(n, 0, r, t, !0);
    const u = [];
    if (!s || s.next === s.prev) return u;
    let c, d, p, g, _, x, M;
    if ((i && (s = G5(n, e, s, t)), n.length > 80 * t)) {
      (c = p = n[0]), (d = g = n[1]);
      for (let E = t; E < r; E += t)
        (_ = n[E]),
          (x = n[E + 1]),
          _ < c && (c = _),
          x < d && (d = x),
          _ > p && (p = _),
          x > g && (g = x);
      (M = Math.max(p - c, g - d)), (M = M !== 0 ? 32767 / M : 0);
    }
    return Ca(s, u, t, c, d, M, 0), u;
  },
};
function B1(n, e, t, i, r) {
  let s, u;
  if (r === J5(n, e, t, i) > 0)
    for (s = e; s < t; s += i) u = ed(s, n[s], n[s + 1], u);
  else for (s = t - i; s >= e; s -= i) u = ed(s, n[s], n[s + 1], u);
  return u && Yl(u, u.next) && (Pa(u), (u = u.next)), u;
}
function Ns(n, e) {
  if (!n) return n;
  e || (e = n);
  let t = n,
    i;
  do
    if (
      ((i = !1), !t.steiner && (Yl(t, t.next) || vn(t.prev, t, t.next) === 0))
    ) {
      if ((Pa(t), (t = e = t.prev), t === t.next)) break;
      i = !0;
    } else t = t.next;
  while (i || t !== e);
  return e;
}
function Ca(n, e, t, i, r, s, u) {
  if (!n) return;
  !u && s && X5(n, i, r, s);
  let c = n,
    d,
    p;
  for (; n.prev !== n.next; ) {
    if (((d = n.prev), (p = n.next), s ? F5(n, i, r, s) : N5(n))) {
      e.push((d.i / t) | 0),
        e.push((n.i / t) | 0),
        e.push((p.i / t) | 0),
        Pa(n),
        (n = p.next),
        (c = p.next);
      continue;
    }
    if (((n = p), n === c)) {
      u
        ? u === 1
          ? ((n = k5(Ns(n), e, t)), Ca(n, e, t, i, r, s, 2))
          : u === 2 && z5(n, e, t, i, r, s)
        : Ca(Ns(n), e, t, i, r, s, 1);
      break;
    }
  }
}
function N5(n) {
  const e = n.prev,
    t = n,
    i = n.next;
  if (vn(e, t, i) >= 0) return !1;
  const r = e.x,
    s = t.x,
    u = i.x,
    c = e.y,
    d = t.y,
    p = i.y,
    g = r < s ? (r < u ? r : u) : s < u ? s : u,
    _ = c < d ? (c < p ? c : p) : d < p ? d : p,
    x = r > s ? (r > u ? r : u) : s > u ? s : u,
    M = c > d ? (c > p ? c : p) : d > p ? d : p;
  let E = i.next;
  for (; E !== e; ) {
    if (
      E.x >= g &&
      E.x <= x &&
      E.y >= _ &&
      E.y <= M &&
      xo(r, c, s, d, u, p, E.x, E.y) &&
      vn(E.prev, E, E.next) >= 0
    )
      return !1;
    E = E.next;
  }
  return !0;
}
function F5(n, e, t, i) {
  const r = n.prev,
    s = n,
    u = n.next;
  if (vn(r, s, u) >= 0) return !1;
  const c = r.x,
    d = s.x,
    p = u.x,
    g = r.y,
    _ = s.y,
    x = u.y,
    M = c < d ? (c < p ? c : p) : d < p ? d : p,
    E = g < _ ? (g < x ? g : x) : _ < x ? _ : x,
    C = c > d ? (c > p ? c : p) : d > p ? d : p,
    S = g > _ ? (g > x ? g : x) : _ > x ? _ : x,
    b = Su(M, E, e, t, i),
    L = Su(C, S, e, t, i);
  let T = n.prevZ,
    R = n.nextZ;
  for (; T && T.z >= b && R && R.z <= L; ) {
    if (
      (T.x >= M &&
        T.x <= C &&
        T.y >= E &&
        T.y <= S &&
        T !== r &&
        T !== u &&
        xo(c, g, d, _, p, x, T.x, T.y) &&
        vn(T.prev, T, T.next) >= 0) ||
      ((T = T.prevZ),
      R.x >= M &&
        R.x <= C &&
        R.y >= E &&
        R.y <= S &&
        R !== r &&
        R !== u &&
        xo(c, g, d, _, p, x, R.x, R.y) &&
        vn(R.prev, R, R.next) >= 0)
    )
      return !1;
    R = R.nextZ;
  }
  for (; T && T.z >= b; ) {
    if (
      T.x >= M &&
      T.x <= C &&
      T.y >= E &&
      T.y <= S &&
      T !== r &&
      T !== u &&
      xo(c, g, d, _, p, x, T.x, T.y) &&
      vn(T.prev, T, T.next) >= 0
    )
      return !1;
    T = T.prevZ;
  }
  for (; R && R.z <= L; ) {
    if (
      R.x >= M &&
      R.x <= C &&
      R.y >= E &&
      R.y <= S &&
      R !== r &&
      R !== u &&
      xo(c, g, d, _, p, x, R.x, R.y) &&
      vn(R.prev, R, R.next) >= 0
    )
      return !1;
    R = R.nextZ;
  }
  return !0;
}
function k5(n, e, t) {
  let i = n;
  do {
    const r = i.prev,
      s = i.next.next;
    !Yl(r, s) &&
      N1(r, i, i.next, s) &&
      Ra(r, s) &&
      Ra(s, r) &&
      (e.push((r.i / t) | 0),
      e.push((i.i / t) | 0),
      e.push((s.i / t) | 0),
      Pa(i),
      Pa(i.next),
      (i = n = s)),
      (i = i.next);
  } while (i !== n);
  return Ns(i);
}
function z5(n, e, t, i, r, s) {
  let u = n;
  do {
    let c = u.next.next;
    for (; c !== u.prev; ) {
      if (u.i !== c.i && Y5(u, c)) {
        let d = F1(u, c);
        (u = Ns(u, u.next)),
          (d = Ns(d, d.next)),
          Ca(u, e, t, i, r, s, 0),
          Ca(d, e, t, i, r, s, 0);
        return;
      }
      c = c.next;
    }
    u = u.next;
  } while (u !== n);
}
function G5(n, e, t, i) {
  const r = [];
  let s, u, c, d, p;
  for (s = 0, u = e.length; s < u; s++)
    (c = e[s] * i),
      (d = s < u - 1 ? e[s + 1] * i : n.length),
      (p = B1(n, c, d, i, !1)),
      p === p.next && (p.steiner = !0),
      r.push($5(p));
  for (r.sort(H5), s = 0; s < r.length; s++) t = V5(r[s], t);
  return t;
}
function H5(n, e) {
  return n.x - e.x;
}
function V5(n, e) {
  const t = W5(n, e);
  if (!t) return e;
  const i = F1(t, n);
  return Ns(i, i.next), Ns(t, t.next);
}
function W5(n, e) {
  let t = e,
    i = -1 / 0,
    r;
  const s = n.x,
    u = n.y;
  do {
    if (u <= t.y && u >= t.next.y && t.next.y !== t.y) {
      const x = t.x + ((u - t.y) * (t.next.x - t.x)) / (t.next.y - t.y);
      if (
        x <= s &&
        x > i &&
        ((i = x), (r = t.x < t.next.x ? t : t.next), x === s)
      )
        return r;
    }
    t = t.next;
  } while (t !== e);
  if (!r) return null;
  const c = r,
    d = r.x,
    p = r.y;
  let g = 1 / 0,
    _;
  t = r;
  do
    s >= t.x &&
      t.x >= d &&
      s !== t.x &&
      xo(u < p ? s : i, u, d, p, u < p ? i : s, u, t.x, t.y) &&
      ((_ = Math.abs(u - t.y) / (s - t.x)),
      Ra(t, n) &&
        (_ < g || (_ === g && (t.x > r.x || (t.x === r.x && j5(r, t))))) &&
        ((r = t), (g = _))),
      (t = t.next);
  while (t !== c);
  return r;
}
function j5(n, e) {
  return vn(n.prev, n, e.prev) < 0 && vn(e.next, n, n.next) < 0;
}
function X5(n, e, t, i) {
  let r = n;
  do
    r.z === 0 && (r.z = Su(r.x, r.y, e, t, i)),
      (r.prevZ = r.prev),
      (r.nextZ = r.next),
      (r = r.next);
  while (r !== n);
  (r.prevZ.nextZ = null), (r.prevZ = null), Q5(r);
}
function Q5(n) {
  let e,
    t,
    i,
    r,
    s,
    u,
    c,
    d,
    p = 1;
  do {
    for (t = n, n = null, s = null, u = 0; t; ) {
      for (u++, i = t, c = 0, e = 0; e < p && (c++, (i = i.nextZ), !!i); e++);
      for (d = p; c > 0 || (d > 0 && i); )
        c !== 0 && (d === 0 || !i || t.z <= i.z)
          ? ((r = t), (t = t.nextZ), c--)
          : ((r = i), (i = i.nextZ), d--),
          s ? (s.nextZ = r) : (n = r),
          (r.prevZ = s),
          (s = r);
      t = i;
    }
    (s.nextZ = null), (p *= 2);
  } while (u > 1);
  return n;
}
function Su(n, e, t, i, r) {
  return (
    (n = ((n - t) * r) | 0),
    (e = ((e - i) * r) | 0),
    (n = (n | (n << 8)) & 16711935),
    (n = (n | (n << 4)) & 252645135),
    (n = (n | (n << 2)) & 858993459),
    (n = (n | (n << 1)) & 1431655765),
    (e = (e | (e << 8)) & 16711935),
    (e = (e | (e << 4)) & 252645135),
    (e = (e | (e << 2)) & 858993459),
    (e = (e | (e << 1)) & 1431655765),
    n | (e << 1)
  );
}
function $5(n) {
  let e = n,
    t = n;
  do (e.x < t.x || (e.x === t.x && e.y < t.y)) && (t = e), (e = e.next);
  while (e !== n);
  return t;
}
function xo(n, e, t, i, r, s, u, c) {
  return (
    (r - u) * (e - c) >= (n - u) * (s - c) &&
    (n - u) * (i - c) >= (t - u) * (e - c) &&
    (t - u) * (s - c) >= (r - u) * (i - c)
  );
}
function Y5(n, e) {
  return (
    n.next.i !== e.i &&
    n.prev.i !== e.i &&
    !Z5(n, e) &&
    ((Ra(n, e) &&
      Ra(e, n) &&
      K5(n, e) &&
      (vn(n.prev, n, e.prev) || vn(n, e.prev, e))) ||
      (Yl(n, e) && vn(n.prev, n, n.next) > 0 && vn(e.prev, e, e.next) > 0))
  );
}
function vn(n, e, t) {
  return (e.y - n.y) * (t.x - e.x) - (e.x - n.x) * (t.y - e.y);
}
function Yl(n, e) {
  return n.x === e.x && n.y === e.y;
}
function N1(n, e, t, i) {
  const r = RA(vn(n, e, t)),
    s = RA(vn(n, e, i)),
    u = RA(vn(t, i, n)),
    c = RA(vn(t, i, e));
  return !!(
    (r !== s && u !== c) ||
    (r === 0 && CA(n, t, e)) ||
    (s === 0 && CA(n, i, e)) ||
    (u === 0 && CA(t, n, i)) ||
    (c === 0 && CA(t, e, i))
  );
}
function CA(n, e, t) {
  return (
    e.x <= Math.max(n.x, t.x) &&
    e.x >= Math.min(n.x, t.x) &&
    e.y <= Math.max(n.y, t.y) &&
    e.y >= Math.min(n.y, t.y)
  );
}
function RA(n) {
  return n > 0 ? 1 : n < 0 ? -1 : 0;
}
function Z5(n, e) {
  let t = n;
  do {
    if (
      t.i !== n.i &&
      t.next.i !== n.i &&
      t.i !== e.i &&
      t.next.i !== e.i &&
      N1(t, t.next, n, e)
    )
      return !0;
    t = t.next;
  } while (t !== n);
  return !1;
}
function Ra(n, e) {
  return vn(n.prev, n, n.next) < 0
    ? vn(n, e, n.next) >= 0 && vn(n, n.prev, e) >= 0
    : vn(n, e, n.prev) < 0 || vn(n, n.next, e) < 0;
}
function K5(n, e) {
  let t = n,
    i = !1;
  const r = (n.x + e.x) / 2,
    s = (n.y + e.y) / 2;
  do
    t.y > s != t.next.y > s &&
      t.next.y !== t.y &&
      r < ((t.next.x - t.x) * (s - t.y)) / (t.next.y - t.y) + t.x &&
      (i = !i),
      (t = t.next);
  while (t !== n);
  return i;
}
function F1(n, e) {
  const t = new Eu(n.i, n.x, n.y),
    i = new Eu(e.i, e.x, e.y),
    r = n.next,
    s = e.prev;
  return (
    (n.next = e),
    (e.prev = n),
    (t.next = r),
    (r.prev = t),
    (i.next = t),
    (t.prev = i),
    (s.next = i),
    (i.prev = s),
    i
  );
}
function ed(n, e, t, i) {
  const r = new Eu(n, e, t);
  return (
    i
      ? ((r.next = i.next), (r.prev = i), (i.next.prev = r), (i.next = r))
      : ((r.prev = r), (r.next = r)),
    r
  );
}
function Pa(n) {
  (n.next.prev = n.prev),
    (n.prev.next = n.next),
    n.prevZ && (n.prevZ.nextZ = n.nextZ),
    n.nextZ && (n.nextZ.prevZ = n.prevZ);
}
function Eu(n, e, t) {
  (this.i = n),
    (this.x = e),
    (this.y = t),
    (this.prev = null),
    (this.next = null),
    (this.z = 0),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
function J5(n, e, t, i) {
  let r = 0;
  for (let s = e, u = t - i; s < t; s += i)
    (r += (n[u] - n[s]) * (n[s + 1] + n[u + 1])), (u = s);
  return r;
}
class Co {
  static area(e) {
    const t = e.length;
    let i = 0;
    for (let r = t - 1, s = 0; s < t; r = s++)
      i += e[r].x * e[s].y - e[s].x * e[r].y;
    return i * 0.5;
  }
  static isClockWise(e) {
    return Co.area(e) < 0;
  }
  static triangulateShape(e, t) {
    const i = [],
      r = [],
      s = [];
    td(e), nd(i, e);
    let u = e.length;
    t.forEach(td);
    for (let d = 0; d < t.length; d++)
      r.push(u), (u += t[d].length), nd(i, t[d]);
    const c = B5.triangulate(i, r);
    for (let d = 0; d < c.length; d += 3) s.push(c.slice(d, d + 3));
    return s;
  }
}
function td(n) {
  const e = n.length;
  e > 2 && n[e - 1].equals(n[0]) && n.pop();
}
function nd(n, e) {
  for (let t = 0; t < e.length; t++) n.push(e[t].x), n.push(e[t].y);
}
class Mc extends cn {
  constructor(
    e = new KA([
      new ke(0.5, 0.5),
      new ke(-0.5, 0.5),
      new ke(-0.5, -0.5),
      new ke(0.5, -0.5),
    ]),
    t = {}
  ) {
    super(),
      (this.type = "ExtrudeGeometry"),
      (this.parameters = { shapes: e, options: t }),
      (e = Array.isArray(e) ? e : [e]);
    const i = this,
      r = [],
      s = [];
    for (let c = 0, d = e.length; c < d; c++) {
      const p = e[c];
      u(p);
    }
    this.setAttribute("position", new Kt(r, 3)),
      this.setAttribute("uv", new Kt(s, 2)),
      this.computeVertexNormals();
    function u(c) {
      const d = [],
        p = t.curveSegments !== void 0 ? t.curveSegments : 12,
        g = t.steps !== void 0 ? t.steps : 1,
        _ = t.depth !== void 0 ? t.depth : 1;
      let x = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0,
        M = t.bevelThickness !== void 0 ? t.bevelThickness : 0.2,
        E = t.bevelSize !== void 0 ? t.bevelSize : M - 0.1,
        C = t.bevelOffset !== void 0 ? t.bevelOffset : 0,
        S = t.bevelSegments !== void 0 ? t.bevelSegments : 3;
      const b = t.extrudePath,
        L = t.UVGenerator !== void 0 ? t.UVGenerator : e8;
      let T,
        R = !1,
        U,
        q,
        I,
        N;
      b &&
        ((T = b.getSpacedPoints(g)),
        (R = !0),
        (x = !1),
        (U = b.computeFrenetFrames(g, !1)),
        (q = new J()),
        (I = new J()),
        (N = new J())),
        x || ((S = 0), (M = 0), (E = 0), (C = 0));
      const D = c.extractPoints(p);
      let O = D.shape;
      const F = D.holes;
      if (!Co.isClockWise(O)) {
        O = O.reverse();
        for (let ne = 0, ze = F.length; ne < ze; ne++) {
          const Ce = F[ne];
          Co.isClockWise(Ce) && (F[ne] = Ce.reverse());
        }
      }
      const V = Co.triangulateShape(O, F),
        Q = O;
      for (let ne = 0, ze = F.length; ne < ze; ne++) {
        const Ce = F[ne];
        O = O.concat(Ce);
      }
      function k(ne, ze, Ce) {
        return (
          ze || console.error("THREE.ExtrudeGeometry: vec does not exist"),
          ne.clone().addScaledVector(ze, Ce)
        );
      }
      const te = O.length,
        ee = V.length;
      function se(ne, ze, Ce) {
        let Ne, Le, At;
        const nt = ne.x - ze.x,
          at = ne.y - ze.y,
          mt = Ce.x - ne.x,
          xt = Ce.y - ne.y,
          nn = nt * nt + at * at,
          Y = nt * xt - at * mt;
        if (Math.abs(Y) > Number.EPSILON) {
          const G = Math.sqrt(nn),
            xe = Math.sqrt(mt * mt + xt * xt),
            qe = ze.x - at / G,
            Ie = ze.y + nt / G,
            Be = Ce.x - xt / xe,
            ut = Ce.y + mt / xe,
            Fe = ((Be - qe) * xt - (ut - Ie) * mt) / (nt * xt - at * mt);
          (Ne = qe + nt * Fe - ne.x), (Le = Ie + at * Fe - ne.y);
          const be = Ne * Ne + Le * Le;
          if (be <= 2) return new ke(Ne, Le);
          At = Math.sqrt(be / 2);
        } else {
          let G = !1;
          nt > Number.EPSILON
            ? mt > Number.EPSILON && (G = !0)
            : nt < -Number.EPSILON
            ? mt < -Number.EPSILON && (G = !0)
            : Math.sign(at) === Math.sign(xt) && (G = !0),
            G
              ? ((Ne = -at), (Le = nt), (At = Math.sqrt(nn)))
              : ((Ne = nt), (Le = at), (At = Math.sqrt(nn / 2)));
        }
        return new ke(Ne / At, Le / At);
      }
      const pe = [];
      for (
        let ne = 0, ze = Q.length, Ce = ze - 1, Ne = ne + 1;
        ne < ze;
        ne++, Ce++, Ne++
      )
        Ce === ze && (Ce = 0),
          Ne === ze && (Ne = 0),
          (pe[ne] = se(Q[ne], Q[Ce], Q[Ne]));
      const de = [];
      let oe,
        he = pe.concat();
      for (let ne = 0, ze = F.length; ne < ze; ne++) {
        const Ce = F[ne];
        oe = [];
        for (
          let Ne = 0, Le = Ce.length, At = Le - 1, nt = Ne + 1;
          Ne < Le;
          Ne++, At++, nt++
        )
          At === Le && (At = 0),
            nt === Le && (nt = 0),
            (oe[Ne] = se(Ce[Ne], Ce[At], Ce[nt]));
        de.push(oe), (he = he.concat(oe));
      }
      for (let ne = 0; ne < S; ne++) {
        const ze = ne / S,
          Ce = M * Math.cos((ze * Math.PI) / 2),
          Ne = E * Math.sin((ze * Math.PI) / 2) + C;
        for (let Le = 0, At = Q.length; Le < At; Le++) {
          const nt = k(Q[Le], pe[Le], Ne);
          rt(nt.x, nt.y, -Ce);
        }
        for (let Le = 0, At = F.length; Le < At; Le++) {
          const nt = F[Le];
          oe = de[Le];
          for (let at = 0, mt = nt.length; at < mt; at++) {
            const xt = k(nt[at], oe[at], Ne);
            rt(xt.x, xt.y, -Ce);
          }
        }
      }
      const Te = E + C;
      for (let ne = 0; ne < te; ne++) {
        const ze = x ? k(O[ne], he[ne], Te) : O[ne];
        R
          ? (I.copy(U.normals[0]).multiplyScalar(ze.x),
            q.copy(U.binormals[0]).multiplyScalar(ze.y),
            N.copy(T[0]).add(I).add(q),
            rt(N.x, N.y, N.z))
          : rt(ze.x, ze.y, 0);
      }
      for (let ne = 1; ne <= g; ne++)
        for (let ze = 0; ze < te; ze++) {
          const Ce = x ? k(O[ze], he[ze], Te) : O[ze];
          R
            ? (I.copy(U.normals[ne]).multiplyScalar(Ce.x),
              q.copy(U.binormals[ne]).multiplyScalar(Ce.y),
              N.copy(T[ne]).add(I).add(q),
              rt(N.x, N.y, N.z))
            : rt(Ce.x, Ce.y, (_ / g) * ne);
        }
      for (let ne = S - 1; ne >= 0; ne--) {
        const ze = ne / S,
          Ce = M * Math.cos((ze * Math.PI) / 2),
          Ne = E * Math.sin((ze * Math.PI) / 2) + C;
        for (let Le = 0, At = Q.length; Le < At; Le++) {
          const nt = k(Q[Le], pe[Le], Ne);
          rt(nt.x, nt.y, _ + Ce);
        }
        for (let Le = 0, At = F.length; Le < At; Le++) {
          const nt = F[Le];
          oe = de[Le];
          for (let at = 0, mt = nt.length; at < mt; at++) {
            const xt = k(nt[at], oe[at], Ne);
            R
              ? rt(xt.x, xt.y + T[g - 1].y, T[g - 1].x + Ce)
              : rt(xt.x, xt.y, _ + Ce);
          }
        }
      }
      Pe(), Oe();
      function Pe() {
        const ne = r.length / 3;
        if (x) {
          let ze = 0,
            Ce = te * ze;
          for (let Ne = 0; Ne < ee; Ne++) {
            const Le = V[Ne];
            ot(Le[2] + Ce, Le[1] + Ce, Le[0] + Ce);
          }
          (ze = g + S * 2), (Ce = te * ze);
          for (let Ne = 0; Ne < ee; Ne++) {
            const Le = V[Ne];
            ot(Le[0] + Ce, Le[1] + Ce, Le[2] + Ce);
          }
        } else {
          for (let ze = 0; ze < ee; ze++) {
            const Ce = V[ze];
            ot(Ce[2], Ce[1], Ce[0]);
          }
          for (let ze = 0; ze < ee; ze++) {
            const Ce = V[ze];
            ot(Ce[0] + te * g, Ce[1] + te * g, Ce[2] + te * g);
          }
        }
        i.addGroup(ne, r.length / 3 - ne, 0);
      }
      function Oe() {
        const ne = r.length / 3;
        let ze = 0;
        Je(Q, ze), (ze += Q.length);
        for (let Ce = 0, Ne = F.length; Ce < Ne; Ce++) {
          const Le = F[Ce];
          Je(Le, ze), (ze += Le.length);
        }
        i.addGroup(ne, r.length / 3 - ne, 1);
      }
      function Je(ne, ze) {
        let Ce = ne.length;
        for (; --Ce >= 0; ) {
          const Ne = Ce;
          let Le = Ce - 1;
          Le < 0 && (Le = ne.length - 1);
          for (let At = 0, nt = g + S * 2; At < nt; At++) {
            const at = te * At,
              mt = te * (At + 1),
              xt = ze + Ne + at,
              nn = ze + Le + at,
              Y = ze + Le + mt,
              G = ze + Ne + mt;
            Rt(xt, nn, Y, G);
          }
        }
      }
      function rt(ne, ze, Ce) {
        d.push(ne), d.push(ze), d.push(Ce);
      }
      function ot(ne, ze, Ce) {
        It(ne), It(ze), It(Ce);
        const Ne = r.length / 3,
          Le = L.generateTopUV(i, r, Ne - 3, Ne - 2, Ne - 1);
        ft(Le[0]), ft(Le[1]), ft(Le[2]);
      }
      function Rt(ne, ze, Ce, Ne) {
        It(ne), It(ze), It(Ne), It(ze), It(Ce), It(Ne);
        const Le = r.length / 3,
          At = L.generateSideWallUV(i, r, Le - 6, Le - 3, Le - 2, Le - 1);
        ft(At[0]), ft(At[1]), ft(At[3]), ft(At[1]), ft(At[2]), ft(At[3]);
      }
      function It(ne) {
        r.push(d[ne * 3 + 0]), r.push(d[ne * 3 + 1]), r.push(d[ne * 3 + 2]);
      }
      function ft(ne) {
        s.push(ne.x), s.push(ne.y);
      }
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON(),
      t = this.parameters.shapes,
      i = this.parameters.options;
    return t8(t, i, e);
  }
  static fromJSON(e, t) {
    const i = [];
    for (let s = 0, u = e.shapes.length; s < u; s++) {
      const c = t[e.shapes[s]];
      i.push(c);
    }
    const r = e.options.extrudePath;
    return (
      r !== void 0 && (e.options.extrudePath = new xc[r.type]().fromJSON(r)),
      new Mc(i, e.options)
    );
  }
}
const e8 = {
  generateTopUV: function (n, e, t, i, r) {
    const s = e[t * 3],
      u = e[t * 3 + 1],
      c = e[i * 3],
      d = e[i * 3 + 1],
      p = e[r * 3],
      g = e[r * 3 + 1];
    return [new ke(s, u), new ke(c, d), new ke(p, g)];
  },
  generateSideWallUV: function (n, e, t, i, r, s) {
    const u = e[t * 3],
      c = e[t * 3 + 1],
      d = e[t * 3 + 2],
      p = e[i * 3],
      g = e[i * 3 + 1],
      _ = e[i * 3 + 2],
      x = e[r * 3],
      M = e[r * 3 + 1],
      E = e[r * 3 + 2],
      C = e[s * 3],
      S = e[s * 3 + 1],
      b = e[s * 3 + 2];
    return Math.abs(c - g) < Math.abs(u - p)
      ? [new ke(u, 1 - d), new ke(p, 1 - _), new ke(x, 1 - E), new ke(C, 1 - b)]
      : [
          new ke(c, 1 - d),
          new ke(g, 1 - _),
          new ke(M, 1 - E),
          new ke(S, 1 - b),
        ];
  },
};
function t8(n, e, t) {
  if (((t.shapes = []), Array.isArray(n)))
    for (let i = 0, r = n.length; i < r; i++) {
      const s = n[i];
      t.shapes.push(s.uuid);
    }
  else t.shapes.push(n.uuid);
  return (
    (t.options = Object.assign({}, e)),
    e.extrudePath !== void 0 &&
      (t.options.extrudePath = e.extrudePath.toJSON()),
    t
  );
}
class Xa extends cn {
  constructor(
    e = 1,
    t = 32,
    i = 16,
    r = 0,
    s = Math.PI * 2,
    u = 0,
    c = Math.PI
  ) {
    super(),
      (this.type = "SphereGeometry"),
      (this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: i,
        phiStart: r,
        phiLength: s,
        thetaStart: u,
        thetaLength: c,
      }),
      (t = Math.max(3, Math.floor(t))),
      (i = Math.max(2, Math.floor(i)));
    const d = Math.min(u + c, Math.PI);
    let p = 0;
    const g = [],
      _ = new J(),
      x = new J(),
      M = [],
      E = [],
      C = [],
      S = [];
    for (let b = 0; b <= i; b++) {
      const L = [],
        T = b / i;
      let R = 0;
      b === 0 && u === 0
        ? (R = 0.5 / t)
        : b === i && d === Math.PI && (R = -0.5 / t);
      for (let U = 0; U <= t; U++) {
        const q = U / t;
        (_.x = -e * Math.cos(r + q * s) * Math.sin(u + T * c)),
          (_.y = e * Math.cos(u + T * c)),
          (_.z = e * Math.sin(r + q * s) * Math.sin(u + T * c)),
          E.push(_.x, _.y, _.z),
          x.copy(_).normalize(),
          C.push(x.x, x.y, x.z),
          S.push(q + R, 1 - T),
          L.push(p++);
      }
      g.push(L);
    }
    for (let b = 0; b < i; b++)
      for (let L = 0; L < t; L++) {
        const T = g[b][L + 1],
          R = g[b][L],
          U = g[b + 1][L],
          q = g[b + 1][L + 1];
        (b !== 0 || u > 0) && M.push(T, R, q),
          (b !== i - 1 || d < Math.PI) && M.push(R, U, q);
      }
    this.setIndex(M),
      this.setAttribute("position", new Kt(E, 3)),
      this.setAttribute("normal", new Kt(C, 3)),
      this.setAttribute("uv", new Kt(S, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Xa(
      e.radius,
      e.widthSegments,
      e.heightSegments,
      e.phiStart,
      e.phiLength,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class Sc extends cn {
  constructor(
    e = new vc(new J(-1, -1, 0), new J(-1, 1, 0), new J(1, 1, 0)),
    t = 64,
    i = 1,
    r = 8,
    s = !1
  ) {
    super(),
      (this.type = "TubeGeometry"),
      (this.parameters = {
        path: e,
        tubularSegments: t,
        radius: i,
        radialSegments: r,
        closed: s,
      });
    const u = e.computeFrenetFrames(t, s);
    (this.tangents = u.tangents),
      (this.normals = u.normals),
      (this.binormals = u.binormals);
    const c = new J(),
      d = new J(),
      p = new ke();
    let g = new J();
    const _ = [],
      x = [],
      M = [],
      E = [];
    C(),
      this.setIndex(E),
      this.setAttribute("position", new Kt(_, 3)),
      this.setAttribute("normal", new Kt(x, 3)),
      this.setAttribute("uv", new Kt(M, 2));
    function C() {
      for (let T = 0; T < t; T++) S(T);
      S(s === !1 ? t : 0), L(), b();
    }
    function S(T) {
      g = e.getPointAt(T / t, g);
      const R = u.normals[T],
        U = u.binormals[T];
      for (let q = 0; q <= r; q++) {
        const I = (q / r) * Math.PI * 2,
          N = Math.sin(I),
          D = -Math.cos(I);
        (d.x = D * R.x + N * U.x),
          (d.y = D * R.y + N * U.y),
          (d.z = D * R.z + N * U.z),
          d.normalize(),
          x.push(d.x, d.y, d.z),
          (c.x = g.x + i * d.x),
          (c.y = g.y + i * d.y),
          (c.z = g.z + i * d.z),
          _.push(c.x, c.y, c.z);
      }
    }
    function b() {
      for (let T = 1; T <= t; T++)
        for (let R = 1; R <= r; R++) {
          const U = (r + 1) * (T - 1) + (R - 1),
            q = (r + 1) * T + (R - 1),
            I = (r + 1) * T + R,
            N = (r + 1) * (T - 1) + R;
          E.push(U, q, N), E.push(q, I, N);
        }
    }
    function L() {
      for (let T = 0; T <= t; T++)
        for (let R = 0; R <= r; R++)
          (p.x = T / t), (p.y = R / r), M.push(p.x, p.y);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (e.path = this.parameters.path.toJSON()), e;
  }
  static fromJSON(e) {
    return new Sc(
      new xc[e.path.type]().fromJSON(e.path),
      e.tubularSegments,
      e.radius,
      e.radialSegments,
      e.closed
    );
  }
}
class n8 extends cn {
  constructor(e = null) {
    if (
      (super(),
      (this.type = "WireframeGeometry"),
      (this.parameters = { geometry: e }),
      e !== null)
    ) {
      const t = [],
        i = new Set(),
        r = new J(),
        s = new J();
      if (e.index !== null) {
        const u = e.attributes.position,
          c = e.index;
        let d = e.groups;
        d.length === 0 &&
          (d = [{ start: 0, count: c.count, materialIndex: 0 }]);
        for (let p = 0, g = d.length; p < g; ++p) {
          const _ = d[p],
            x = _.start,
            M = _.count;
          for (let E = x, C = x + M; E < C; E += 3)
            for (let S = 0; S < 3; S++) {
              const b = c.getX(E + S),
                L = c.getX(E + ((S + 1) % 3));
              r.fromBufferAttribute(u, b),
                s.fromBufferAttribute(u, L),
                id(r, s, i) === !0 &&
                  (t.push(r.x, r.y, r.z), t.push(s.x, s.y, s.z));
            }
        }
      } else {
        const u = e.attributes.position;
        for (let c = 0, d = u.count / 3; c < d; c++)
          for (let p = 0; p < 3; p++) {
            const g = 3 * c + p,
              _ = 3 * c + ((p + 1) % 3);
            r.fromBufferAttribute(u, g),
              s.fromBufferAttribute(u, _),
              id(r, s, i) === !0 &&
                (t.push(r.x, r.y, r.z), t.push(s.x, s.y, s.z));
          }
      }
      this.setAttribute("position", new Kt(t, 3));
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
}
function id(n, e, t) {
  const i = `${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,
    r = `${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;
  return t.has(i) === !0 || t.has(r) === !0 ? !1 : (t.add(i), t.add(r), !0);
}
class i8 extends Hs {
  constructor(e) {
    super(),
      (this.isMeshPhongMaterial = !0),
      (this.type = "MeshPhongMaterial"),
      (this.color = new Nt(16777215)),
      (this.specular = new Nt(1118481)),
      (this.shininess = 30),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new Nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = lc),
      (this.normalScale = new ke(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Vl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      this.specular.copy(e.specular),
      (this.shininess = e.shininess),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class Vo extends Hs {
  constructor(e) {
    super(),
      (this.isMeshLambertMaterial = !0),
      (this.type = "MeshLambertMaterial"),
      (this.color = new Nt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new Nt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = lc),
      (this.normalScale = new ke(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Vl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
const rd = {
  enabled: !1,
  files: {},
  add: function (n, e) {
    this.enabled !== !1 && (this.files[n] = e);
  },
  get: function (n) {
    if (this.enabled !== !1) return this.files[n];
  },
  remove: function (n) {
    delete this.files[n];
  },
  clear: function () {
    this.files = {};
  },
};
class r8 {
  constructor(e, t, i) {
    const r = this;
    let s = !1,
      u = 0,
      c = 0,
      d;
    const p = [];
    (this.onStart = void 0),
      (this.onLoad = e),
      (this.onProgress = t),
      (this.onError = i),
      (this.itemStart = function (g) {
        c++, s === !1 && r.onStart !== void 0 && r.onStart(g, u, c), (s = !0);
      }),
      (this.itemEnd = function (g) {
        u++,
          r.onProgress !== void 0 && r.onProgress(g, u, c),
          u === c && ((s = !1), r.onLoad !== void 0 && r.onLoad());
      }),
      (this.itemError = function (g) {
        r.onError !== void 0 && r.onError(g);
      }),
      (this.resolveURL = function (g) {
        return d ? d(g) : g;
      }),
      (this.setURLModifier = function (g) {
        return (d = g), this;
      }),
      (this.addHandler = function (g, _) {
        return p.push(g, _), this;
      }),
      (this.removeHandler = function (g) {
        const _ = p.indexOf(g);
        return _ !== -1 && p.splice(_, 2), this;
      }),
      (this.getHandler = function (g) {
        for (let _ = 0, x = p.length; _ < x; _ += 2) {
          const M = p[_],
            E = p[_ + 1];
          if ((M.global && (M.lastIndex = 0), M.test(g))) return E;
        }
        return null;
      });
  }
}
const s8 = new r8();
class Ec {
  constructor(e) {
    (this.manager = e !== void 0 ? e : s8),
      (this.crossOrigin = "anonymous"),
      (this.withCredentials = !1),
      (this.path = ""),
      (this.resourcePath = ""),
      (this.requestHeader = {});
  }
  load() {}
  loadAsync(e, t) {
    const i = this;
    return new Promise(function (r, s) {
      i.load(e, r, t, s);
    });
  }
  parse() {}
  setCrossOrigin(e) {
    return (this.crossOrigin = e), this;
  }
  setWithCredentials(e) {
    return (this.withCredentials = e), this;
  }
  setPath(e) {
    return (this.path = e), this;
  }
  setResourcePath(e) {
    return (this.resourcePath = e), this;
  }
  setRequestHeader(e) {
    return (this.requestHeader = e), this;
  }
}
Ec.DEFAULT_MATERIAL_NAME = "__DEFAULT";
class o8 extends Ec {
  constructor(e) {
    super(e);
  }
  load(e, t, i, r) {
    this.path !== void 0 && (e = this.path + e),
      (e = this.manager.resolveURL(e));
    const s = this,
      u = rd.get(e);
    if (u !== void 0)
      return (
        s.manager.itemStart(e),
        setTimeout(function () {
          t && t(u), s.manager.itemEnd(e);
        }, 0),
        u
      );
    const c = Ta("img");
    function d() {
      g(), rd.add(e, this), t && t(this), s.manager.itemEnd(e);
    }
    function p(_) {
      g(), r && r(_), s.manager.itemError(e), s.manager.itemEnd(e);
    }
    function g() {
      c.removeEventListener("load", d, !1),
        c.removeEventListener("error", p, !1);
    }
    return (
      c.addEventListener("load", d, !1),
      c.addEventListener("error", p, !1),
      e.slice(0, 5) !== "data:" &&
        this.crossOrigin !== void 0 &&
        (c.crossOrigin = this.crossOrigin),
      s.manager.itemStart(e),
      (c.src = e),
      c
    );
  }
}
class a8 extends Ec {
  constructor(e) {
    super(e);
  }
  load(e, t, i, r) {
    const s = new xi(),
      u = new o8(this.manager);
    return (
      u.setCrossOrigin(this.crossOrigin),
      u.setPath(this.path),
      u.load(
        e,
        function (c) {
          (s.image = c), (s.needsUpdate = !0), t !== void 0 && t(s);
        },
        i,
        r
      ),
      s
    );
  }
}
class k1 extends Cn {
  constructor(e, t = 1) {
    super(),
      (this.isLight = !0),
      (this.type = "Light"),
      (this.color = new Nt(e)),
      (this.intensity = t);
  }
  dispose() {}
  copy(e, t) {
    return (
      super.copy(e, t),
      this.color.copy(e.color),
      (this.intensity = e.intensity),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.color = this.color.getHex()),
      (t.object.intensity = this.intensity),
      this.groundColor !== void 0 &&
        (t.object.groundColor = this.groundColor.getHex()),
      this.distance !== void 0 && (t.object.distance = this.distance),
      this.angle !== void 0 && (t.object.angle = this.angle),
      this.decay !== void 0 && (t.object.decay = this.decay),
      this.penumbra !== void 0 && (t.object.penumbra = this.penumbra),
      this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()),
      t
    );
  }
}
const eu = new dn(),
  sd = new J(),
  od = new J();
class A8 {
  constructor(e) {
    (this.camera = e),
      (this.bias = 0),
      (this.normalBias = 0),
      (this.radius = 1),
      (this.blurSamples = 8),
      (this.mapSize = new ke(512, 512)),
      (this.map = null),
      (this.mapPass = null),
      (this.matrix = new dn()),
      (this.autoUpdate = !0),
      (this.needsUpdate = !1),
      (this._frustum = new fc()),
      (this._frameExtents = new ke(1, 1)),
      (this._viewportCount = 1),
      (this._viewports = [new Ln(0, 0, 1, 1)]);
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const t = this.camera,
      i = this.matrix;
    sd.setFromMatrixPosition(e.matrixWorld),
      t.position.copy(sd),
      od.setFromMatrixPosition(e.target.matrixWorld),
      t.lookAt(od),
      t.updateMatrixWorld(),
      eu.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(eu),
      i.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
      i.multiply(eu);
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(e) {
    return (
      (this.camera = e.camera.clone()),
      (this.bias = e.bias),
      (this.radius = e.radius),
      this.mapSize.copy(e.mapSize),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return (
      this.bias !== 0 && (e.bias = this.bias),
      this.normalBias !== 0 && (e.normalBias = this.normalBias),
      this.radius !== 1 && (e.radius = this.radius),
      (this.mapSize.x !== 512 || this.mapSize.y !== 512) &&
        (e.mapSize = this.mapSize.toArray()),
      (e.camera = this.camera.toJSON(!1).object),
      delete e.camera.matrix,
      e
    );
  }
}
class l8 extends A8 {
  constructor() {
    super(new S1(-5, 5, 5, -5, 0.5, 500)), (this.isDirectionalLightShadow = !0);
  }
}
class ad extends k1 {
  constructor(e, t) {
    super(e, t),
      (this.isDirectionalLight = !0),
      (this.type = "DirectionalLight"),
      this.position.copy(Cn.DEFAULT_UP),
      this.updateMatrix(),
      (this.target = new Cn()),
      (this.shadow = new l8());
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e) {
    return (
      super.copy(e),
      (this.target = e.target.clone()),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
class u8 extends k1 {
  constructor(e, t) {
    super(e, t), (this.isAmbientLight = !0), (this.type = "AmbientLight");
  }
}
class c8 extends cn {
  constructor() {
    super(),
      (this.isInstancedBufferGeometry = !0),
      (this.type = "InstancedBufferGeometry"),
      (this.instanceCount = 1 / 0);
  }
  copy(e) {
    return super.copy(e), (this.instanceCount = e.instanceCount), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.instanceCount = this.instanceCount),
      (e.isInstancedBufferGeometry = !0),
      e
    );
  }
}
class z1 extends P1 {
  constructor(e, t, i = 1) {
    super(e, t),
      (this.isInstancedInterleavedBuffer = !0),
      (this.meshPerAttribute = i);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  clone(e) {
    const t = super.clone(e);
    return (t.meshPerAttribute = this.meshPerAttribute), t;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.isInstancedInterleavedBuffer = !0),
      (t.meshPerAttribute = this.meshPerAttribute),
      t
    );
  }
}
class Ad {
  constructor(e = 1, t = 0, i = 0) {
    return (this.radius = e), (this.phi = t), (this.theta = i), this;
  }
  set(e, t, i) {
    return (this.radius = e), (this.phi = t), (this.theta = i), this;
  }
  copy(e) {
    return (
      (this.radius = e.radius), (this.phi = e.phi), (this.theta = e.theta), this
    );
  }
  makeSafe() {
    return (
      (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))), this
    );
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, t, i) {
    return (
      (this.radius = Math.sqrt(e * e + t * t + i * i)),
      this.radius === 0
        ? ((this.theta = 0), (this.phi = 0))
        : ((this.theta = Math.atan2(e, i)),
          (this.phi = Math.acos(Pn(t / this.radius, -1, 1)))),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const ld = new J(),
  PA = new J();
class f8 {
  constructor(e = new J(), t = new J()) {
    (this.start = e), (this.end = t);
  }
  set(e, t) {
    return this.start.copy(e), this.end.copy(t), this;
  }
  copy(e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }
  getCenter(e) {
    return e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }
  delta(e) {
    return e.subVectors(this.end, this.start);
  }
  distanceSq() {
    return this.start.distanceToSquared(this.end);
  }
  distance() {
    return this.start.distanceTo(this.end);
  }
  at(e, t) {
    return this.delta(t).multiplyScalar(e).add(this.start);
  }
  closestPointToPointParameter(e, t) {
    ld.subVectors(e, this.start), PA.subVectors(this.end, this.start);
    const i = PA.dot(PA);
    let s = PA.dot(ld) / i;
    return t && (s = Pn(s, 0, 1)), s;
  }
  closestPointToPoint(e, t, i) {
    const r = this.closestPointToPointParameter(e, t);
    return this.delta(i).multiplyScalar(r).add(this.start);
  }
  applyMatrix4(e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }
  equals(e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class h8 {
  constructor() {
    (this.type = "ShapePath"),
      (this.color = new Nt()),
      (this.subPaths = []),
      (this.currentPath = null);
  }
  moveTo(e, t) {
    return (
      (this.currentPath = new Mu()),
      this.subPaths.push(this.currentPath),
      this.currentPath.moveTo(e, t),
      this
    );
  }
  lineTo(e, t) {
    return this.currentPath.lineTo(e, t), this;
  }
  quadraticCurveTo(e, t, i, r) {
    return this.currentPath.quadraticCurveTo(e, t, i, r), this;
  }
  bezierCurveTo(e, t, i, r, s, u) {
    return this.currentPath.bezierCurveTo(e, t, i, r, s, u), this;
  }
  splineThru(e) {
    return this.currentPath.splineThru(e), this;
  }
  toShapes(e) {
    function t(b) {
      const L = [];
      for (let T = 0, R = b.length; T < R; T++) {
        const U = b[T],
          q = new KA();
        (q.curves = U.curves), L.push(q);
      }
      return L;
    }
    function i(b, L) {
      const T = L.length;
      let R = !1;
      for (let U = T - 1, q = 0; q < T; U = q++) {
        let I = L[U],
          N = L[q],
          D = N.x - I.x,
          O = N.y - I.y;
        if (Math.abs(O) > Number.EPSILON) {
          if (
            (O < 0 && ((I = L[q]), (D = -D), (N = L[U]), (O = -O)),
            b.y < I.y || b.y > N.y)
          )
            continue;
          if (b.y === I.y) {
            if (b.x === I.x) return !0;
          } else {
            const F = O * (b.x - I.x) - D * (b.y - I.y);
            if (F === 0) return !0;
            if (F < 0) continue;
            R = !R;
          }
        } else {
          if (b.y !== I.y) continue;
          if ((N.x <= b.x && b.x <= I.x) || (I.x <= b.x && b.x <= N.x))
            return !0;
        }
      }
      return R;
    }
    const r = Co.isClockWise,
      s = this.subPaths;
    if (s.length === 0) return [];
    let u, c, d;
    const p = [];
    if (s.length === 1)
      return (c = s[0]), (d = new KA()), (d.curves = c.curves), p.push(d), p;
    let g = !r(s[0].getPoints());
    g = e ? !g : g;
    const _ = [],
      x = [];
    let M = [],
      E = 0,
      C;
    (x[E] = void 0), (M[E] = []);
    for (let b = 0, L = s.length; b < L; b++)
      (c = s[b]),
        (C = c.getPoints()),
        (u = r(C)),
        (u = e ? !u : u),
        u
          ? (!g && x[E] && E++,
            (x[E] = { s: new KA(), p: C }),
            (x[E].s.curves = c.curves),
            g && E++,
            (M[E] = []))
          : M[E].push({ h: c, p: C[0] });
    if (!x[0]) return t(s);
    if (x.length > 1) {
      let b = !1,
        L = 0;
      for (let T = 0, R = x.length; T < R; T++) _[T] = [];
      for (let T = 0, R = x.length; T < R; T++) {
        const U = M[T];
        for (let q = 0; q < U.length; q++) {
          const I = U[q];
          let N = !0;
          for (let D = 0; D < x.length; D++)
            i(I.p, x[D].p) &&
              (T !== D && L++, N ? ((N = !1), _[D].push(I)) : (b = !0));
          N && _[T].push(I);
        }
      }
      L > 0 && b === !1 && (M = _);
    }
    let S;
    for (let b = 0, L = x.length; b < L; b++) {
      (d = x[b].s), p.push(d), (S = M[b]);
      for (let T = 0, R = S.length; T < R; T++) d.holes.push(S[T].h);
    }
    return p;
  }
}
typeof __THREE_DEVTOOLS__ < "u" &&
  __THREE_DEVTOOLS__.dispatchEvent(
    new CustomEvent("register", { detail: { revision: ac } })
  );
typeof window < "u" &&
  (window.__THREE__
    ? console.warn("WARNING: Multiple instances of Three.js being imported.")
    : (window.__THREE__ = ac));
var d8 =
  typeof global == "object" && global && global.Object === Object && global;
const p8 = d8;
var m8 = typeof self == "object" && self && self.Object === Object && self,
  g8 = p8 || m8 || Function("return this")();
const G1 = g8;
var _8 = G1.Symbol;
const al = _8;
var H1 = Object.prototype,
  v8 = H1.hasOwnProperty,
  x8 = H1.toString,
  oa = al ? al.toStringTag : void 0;
function y8(n) {
  var e = v8.call(n, oa),
    t = n[oa];
  try {
    n[oa] = void 0;
    var i = !0;
  } catch {}
  var r = x8.call(n);
  return i && (e ? (n[oa] = t) : delete n[oa]), r;
}
var b8 = Object.prototype,
  M8 = b8.toString;
function S8(n) {
  return M8.call(n);
}
var E8 = "[object Null]",
  w8 = "[object Undefined]",
  ud = al ? al.toStringTag : void 0;
function T8(n) {
  return n == null
    ? n === void 0
      ? w8
      : E8
    : ud && ud in Object(n)
    ? y8(n)
    : S8(n);
}
function C8(n) {
  return n != null && typeof n == "object";
}
var R8 = "[object Symbol]";
function P8(n) {
  return typeof n == "symbol" || (C8(n) && T8(n) == R8);
}
var L8 = /\s/;
function D8(n) {
  for (var e = n.length; e-- && L8.test(n.charAt(e)); );
  return e;
}
var I8 = /^\s+/;
function O8(n) {
  return n && n.slice(0, D8(n) + 1).replace(I8, "");
}
function wu(n) {
  var e = typeof n;
  return n != null && (e == "object" || e == "function");
}
var cd = 0 / 0,
  U8 = /^[-+]0x[0-9a-f]+$/i,
  q8 = /^0b[01]+$/i,
  B8 = /^0o[0-7]+$/i,
  N8 = parseInt;
function fd(n) {
  if (typeof n == "number") return n;
  if (P8(n)) return cd;
  if (wu(n)) {
    var e = typeof n.valueOf == "function" ? n.valueOf() : n;
    n = wu(e) ? e + "" : e;
  }
  if (typeof n != "string") return n === 0 ? n : +n;
  n = O8(n);
  var t = q8.test(n);
  return t || B8.test(n) ? N8(n.slice(2), t ? 2 : 8) : U8.test(n) ? cd : +n;
}
var F8 = function () {
  return G1.Date.now();
};
const tu = F8;
var k8 = "Expected a function",
  z8 = Math.max,
  G8 = Math.min;
function H8(n, e, t) {
  var i,
    r,
    s,
    u,
    c,
    d,
    p = 0,
    g = !1,
    _ = !1,
    x = !0;
  if (typeof n != "function") throw new TypeError(k8);
  (e = fd(e) || 0),
    wu(t) &&
      ((g = !!t.leading),
      (_ = "maxWait" in t),
      (s = _ ? z8(fd(t.maxWait) || 0, e) : s),
      (x = "trailing" in t ? !!t.trailing : x));
  function M(q) {
    var I = i,
      N = r;
    return (i = r = void 0), (p = q), (u = n.apply(N, I)), u;
  }
  function E(q) {
    return (p = q), (c = setTimeout(b, e)), g ? M(q) : u;
  }
  function C(q) {
    var I = q - d,
      N = q - p,
      D = e - I;
    return _ ? G8(D, s - N) : D;
  }
  function S(q) {
    var I = q - d,
      N = q - p;
    return d === void 0 || I >= e || I < 0 || (_ && N >= s);
  }
  function b() {
    var q = tu();
    if (S(q)) return L(q);
    c = setTimeout(b, C(q));
  }
  function L(q) {
    return (c = void 0), x && i ? M(q) : ((i = r = void 0), u);
  }
  function T() {
    c !== void 0 && clearTimeout(c), (p = 0), (i = d = r = c = void 0);
  }
  function R() {
    return c === void 0 ? u : L(tu());
  }
  function U() {
    var q = tu(),
      I = S(q);
    if (((i = arguments), (r = this), (d = q), I)) {
      if (c === void 0) return E(d);
      if (_) return clearTimeout(c), (c = setTimeout(b, e)), M(d);
    }
    return c === void 0 && (c = setTimeout(b, e)), u;
  }
  return (U.cancel = T), (U.flush = R), U;
}
function V8(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function W8(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function hd(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, K8(i.key), i);
  }
}
function j8(n, e, t) {
  return (
    e && hd(n.prototype, e),
    t && hd(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function X8(n, e) {
  return Q8(n) || V8(n, e) || $8(n, e) || Y8();
}
function Q8(n) {
  if (Array.isArray(n)) return n;
}
function $8(n, e) {
  if (n) {
    if (typeof n == "string") return dd(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return dd(n, e);
  }
}
function dd(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function Y8() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Z8(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function K8(n) {
  var e = Z8(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var J8 = j8(function n(e, t) {
  var i = t.default,
    r = i === void 0 ? null : i,
    s = t.triggerUpdate,
    u = s === void 0 ? !0 : s,
    c = t.onChange,
    d = c === void 0 ? function (p, g) {} : c;
  W8(this, n),
    (this.name = e),
    (this.defaultVal = r),
    (this.triggerUpdate = u),
    (this.onChange = d);
});
function bi(n) {
  var e = n.stateInit,
    t =
      e === void 0
        ? function () {
            return {};
          }
        : e,
    i = n.props,
    r = i === void 0 ? {} : i,
    s = n.methods,
    u = s === void 0 ? {} : s,
    c = n.aliases,
    d = c === void 0 ? {} : c,
    p = n.init,
    g = p === void 0 ? function () {} : p,
    _ = n.update,
    x = _ === void 0 ? function () {} : _,
    M = Object.keys(r).map(function (E) {
      return new J8(E, r[E]);
    });
  return function () {
    var E = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      C = Object.assign({}, t instanceof Function ? t(E) : t, {
        initialised: !1,
      }),
      S = {};
    function b(R) {
      return L(R, E), T(), b;
    }
    var L = function (U, q) {
        g.call(b, U, C, q), (C.initialised = !0);
      },
      T = H8(function () {
        C.initialised && (x.call(b, C, S), (S = {}));
      }, 1);
    return (
      M.forEach(function (R) {
        b[R.name] = U(R);
        function U(q) {
          var I = q.name,
            N = q.triggerUpdate,
            D = N === void 0 ? !1 : N,
            O = q.onChange,
            F = O === void 0 ? function (Q, k) {} : O,
            $ = q.defaultVal,
            V = $ === void 0 ? null : $;
          return function (Q) {
            var k = C[I];
            if (!arguments.length) return k;
            var te = Q === void 0 ? V : Q;
            return (
              (C[I] = te),
              F.call(b, te, C, k),
              !S.hasOwnProperty(I) && (S[I] = k),
              D && T(),
              b
            );
          };
        }
      }),
      Object.keys(u).forEach(function (R) {
        b[R] = function () {
          for (var U, q = arguments.length, I = new Array(q), N = 0; N < q; N++)
            I[N] = arguments[N];
          return (U = u[R]).call.apply(U, [b, C].concat(I));
        };
      }),
      Object.entries(d).forEach(function (R) {
        var U = X8(R, 2),
          q = U[0],
          I = U[1];
        return (b[q] = b[I]);
      }),
      (b.resetProps = function () {
        return (
          M.forEach(function (R) {
            b[R.name](R.defaultVal);
          }),
          b
        );
      }),
      b.resetProps(),
      (C._rerender = T),
      b
    );
  };
}
var Zn = Object.freeze({
    Linear: Object.freeze({
      None: function (n) {
        return n;
      },
      In: function (n) {
        return this.None(n);
      },
      Out: function (n) {
        return this.None(n);
      },
      InOut: function (n) {
        return this.None(n);
      },
    }),
    Quadratic: Object.freeze({
      In: function (n) {
        return n * n;
      },
      Out: function (n) {
        return n * (2 - n);
      },
      InOut: function (n) {
        return (n *= 2) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1);
      },
    }),
    Cubic: Object.freeze({
      In: function (n) {
        return n * n * n;
      },
      Out: function (n) {
        return --n * n * n + 1;
      },
      InOut: function (n) {
        return (n *= 2) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2);
      },
    }),
    Quartic: Object.freeze({
      In: function (n) {
        return n * n * n * n;
      },
      Out: function (n) {
        return 1 - --n * n * n * n;
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? 0.5 * n * n * n * n
          : -0.5 * ((n -= 2) * n * n * n - 2);
      },
    }),
    Quintic: Object.freeze({
      In: function (n) {
        return n * n * n * n * n;
      },
      Out: function (n) {
        return --n * n * n * n * n + 1;
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? 0.5 * n * n * n * n * n
          : 0.5 * ((n -= 2) * n * n * n * n + 2);
      },
    }),
    Sinusoidal: Object.freeze({
      In: function (n) {
        return 1 - Math.sin(((1 - n) * Math.PI) / 2);
      },
      Out: function (n) {
        return Math.sin((n * Math.PI) / 2);
      },
      InOut: function (n) {
        return 0.5 * (1 - Math.sin(Math.PI * (0.5 - n)));
      },
    }),
    Exponential: Object.freeze({
      In: function (n) {
        return n === 0 ? 0 : Math.pow(1024, n - 1);
      },
      Out: function (n) {
        return n === 1 ? 1 : 1 - Math.pow(2, -10 * n);
      },
      InOut: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : (n *= 2) < 1
          ? 0.5 * Math.pow(1024, n - 1)
          : 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);
      },
    }),
    Circular: Object.freeze({
      In: function (n) {
        return 1 - Math.sqrt(1 - n * n);
      },
      Out: function (n) {
        return Math.sqrt(1 - --n * n);
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? -0.5 * (Math.sqrt(1 - n * n) - 1)
          : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);
      },
    }),
    Elastic: Object.freeze({
      In: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : -Math.pow(2, 10 * (n - 1)) * Math.sin((n - 1.1) * 5 * Math.PI);
      },
      Out: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : Math.pow(2, -10 * n) * Math.sin((n - 0.1) * 5 * Math.PI) + 1;
      },
      InOut: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : ((n *= 2),
            n < 1
              ? -0.5 *
                Math.pow(2, 10 * (n - 1)) *
                Math.sin((n - 1.1) * 5 * Math.PI)
              : 0.5 *
                  Math.pow(2, -10 * (n - 1)) *
                  Math.sin((n - 1.1) * 5 * Math.PI) +
                1);
      },
    }),
    Back: Object.freeze({
      In: function (n) {
        var e = 1.70158;
        return n === 1 ? 1 : n * n * ((e + 1) * n - e);
      },
      Out: function (n) {
        var e = 1.70158;
        return n === 0 ? 0 : --n * n * ((e + 1) * n + e) + 1;
      },
      InOut: function (n) {
        var e = 2.5949095;
        return (n *= 2) < 1
          ? 0.5 * (n * n * ((e + 1) * n - e))
          : 0.5 * ((n -= 2) * n * ((e + 1) * n + e) + 2);
      },
    }),
    Bounce: Object.freeze({
      In: function (n) {
        return 1 - Zn.Bounce.Out(1 - n);
      },
      Out: function (n) {
        return n < 1 / 2.75
          ? 7.5625 * n * n
          : n < 2 / 2.75
          ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
          : n < 2.5 / 2.75
          ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
          : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
      },
      InOut: function (n) {
        return n < 0.5
          ? Zn.Bounce.In(n * 2) * 0.5
          : Zn.Bounce.Out(n * 2 - 1) * 0.5 + 0.5;
      },
    }),
    generatePow: function (n) {
      return (
        n === void 0 && (n = 4),
        (n = n < Number.EPSILON ? Number.EPSILON : n),
        (n = n > 1e4 ? 1e4 : n),
        {
          In: function (e) {
            return Math.pow(e, n);
          },
          Out: function (e) {
            return 1 - Math.pow(1 - e, n);
          },
          InOut: function (e) {
            return e < 0.5
              ? Math.pow(e * 2, n) / 2
              : (1 - Math.pow(2 - e * 2, n)) / 2 + 0.5;
          },
        }
      );
    },
  }),
  ha = function () {
    return performance.now();
  },
  e6 = (function () {
    function n() {
      (this._tweens = {}), (this._tweensAddedDuringUpdate = {});
    }
    return (
      (n.prototype.getAll = function () {
        var e = this;
        return Object.keys(this._tweens).map(function (t) {
          return e._tweens[t];
        });
      }),
      (n.prototype.removeAll = function () {
        this._tweens = {};
      }),
      (n.prototype.add = function (e) {
        (this._tweens[e.getId()] = e),
          (this._tweensAddedDuringUpdate[e.getId()] = e);
      }),
      (n.prototype.remove = function (e) {
        delete this._tweens[e.getId()],
          delete this._tweensAddedDuringUpdate[e.getId()];
      }),
      (n.prototype.update = function (e, t) {
        e === void 0 && (e = ha()), t === void 0 && (t = !1);
        var i = Object.keys(this._tweens);
        if (i.length === 0) return !1;
        for (; i.length > 0; ) {
          this._tweensAddedDuringUpdate = {};
          for (var r = 0; r < i.length; r++) {
            var s = this._tweens[i[r]],
              u = !t;
            s && s.update(e, u) === !1 && !t && delete this._tweens[i[r]];
          }
          i = Object.keys(this._tweensAddedDuringUpdate);
        }
        return !0;
      }),
      n
    );
  })(),
  yo = {
    Linear: function (n, e) {
      var t = n.length - 1,
        i = t * e,
        r = Math.floor(i),
        s = yo.Utils.Linear;
      return e < 0
        ? s(n[0], n[1], i)
        : e > 1
        ? s(n[t], n[t - 1], t - i)
        : s(n[r], n[r + 1 > t ? t : r + 1], i - r);
    },
    Bezier: function (n, e) {
      for (
        var t = 0,
          i = n.length - 1,
          r = Math.pow,
          s = yo.Utils.Bernstein,
          u = 0;
        u <= i;
        u++
      )
        t += r(1 - e, i - u) * r(e, u) * n[u] * s(i, u);
      return t;
    },
    CatmullRom: function (n, e) {
      var t = n.length - 1,
        i = t * e,
        r = Math.floor(i),
        s = yo.Utils.CatmullRom;
      return n[0] === n[t]
        ? (e < 0 && (r = Math.floor((i = t * (1 + e)))),
          s(n[(r - 1 + t) % t], n[r], n[(r + 1) % t], n[(r + 2) % t], i - r))
        : e < 0
        ? n[0] - (s(n[0], n[0], n[1], n[1], -i) - n[0])
        : e > 1
        ? n[t] - (s(n[t], n[t], n[t - 1], n[t - 1], i - t) - n[t])
        : s(
            n[r ? r - 1 : 0],
            n[r],
            n[t < r + 1 ? t : r + 1],
            n[t < r + 2 ? t : r + 2],
            i - r
          );
    },
    Utils: {
      Linear: function (n, e, t) {
        return (e - n) * t + n;
      },
      Bernstein: function (n, e) {
        var t = yo.Utils.Factorial;
        return t(n) / t(e) / t(n - e);
      },
      Factorial: (function () {
        var n = [1];
        return function (e) {
          var t = 1;
          if (n[e]) return n[e];
          for (var i = e; i > 1; i--) t *= i;
          return (n[e] = t), t;
        };
      })(),
      CatmullRom: function (n, e, t, i, r) {
        var s = (t - n) * 0.5,
          u = (i - e) * 0.5,
          c = r * r,
          d = r * c;
        return (
          (2 * e - 2 * t + s + u) * d +
          (-3 * e + 3 * t - 2 * s - u) * c +
          s * r +
          e
        );
      },
    },
  },
  t6 = (function () {
    function n() {}
    return (
      (n.nextId = function () {
        return n._nextId++;
      }),
      (n._nextId = 0),
      n
    );
  })(),
  Tu = new e6(),
  Wi = (function () {
    function n(e, t) {
      t === void 0 && (t = Tu),
        (this._object = e),
        (this._group = t),
        (this._isPaused = !1),
        (this._pauseStart = 0),
        (this._valuesStart = {}),
        (this._valuesEnd = {}),
        (this._valuesStartRepeat = {}),
        (this._duration = 1e3),
        (this._isDynamic = !1),
        (this._initialRepeat = 0),
        (this._repeat = 0),
        (this._yoyo = !1),
        (this._isPlaying = !1),
        (this._reversed = !1),
        (this._delayTime = 0),
        (this._startTime = 0),
        (this._easingFunction = Zn.Linear.None),
        (this._interpolationFunction = yo.Linear),
        (this._chainedTweens = []),
        (this._onStartCallbackFired = !1),
        (this._onEveryStartCallbackFired = !1),
        (this._id = t6.nextId()),
        (this._isChainStopped = !1),
        (this._propertiesAreSetUp = !1),
        (this._goToEnd = !1);
    }
    return (
      (n.prototype.getId = function () {
        return this._id;
      }),
      (n.prototype.isPlaying = function () {
        return this._isPlaying;
      }),
      (n.prototype.isPaused = function () {
        return this._isPaused;
      }),
      (n.prototype.to = function (e, t) {
        if ((t === void 0 && (t = 1e3), this._isPlaying))
          throw new Error(
            "Can not call Tween.to() while Tween is already started or paused. Stop the Tween first."
          );
        return (
          (this._valuesEnd = e),
          (this._propertiesAreSetUp = !1),
          (this._duration = t),
          this
        );
      }),
      (n.prototype.duration = function (e) {
        return e === void 0 && (e = 1e3), (this._duration = e), this;
      }),
      (n.prototype.dynamic = function (e) {
        return e === void 0 && (e = !1), (this._isDynamic = e), this;
      }),
      (n.prototype.start = function (e, t) {
        if (
          (e === void 0 && (e = ha()),
          t === void 0 && (t = !1),
          this._isPlaying)
        )
          return this;
        if (
          (this._group && this._group.add(this),
          (this._repeat = this._initialRepeat),
          this._reversed)
        ) {
          this._reversed = !1;
          for (var i in this._valuesStartRepeat)
            this._swapEndStartRepeatValues(i),
              (this._valuesStart[i] = this._valuesStartRepeat[i]);
        }
        if (
          ((this._isPlaying = !0),
          (this._isPaused = !1),
          (this._onStartCallbackFired = !1),
          (this._onEveryStartCallbackFired = !1),
          (this._isChainStopped = !1),
          (this._startTime = e),
          (this._startTime += this._delayTime),
          !this._propertiesAreSetUp || t)
        ) {
          if (((this._propertiesAreSetUp = !0), !this._isDynamic)) {
            var r = {};
            for (var s in this._valuesEnd) r[s] = this._valuesEnd[s];
            this._valuesEnd = r;
          }
          this._setupProperties(
            this._object,
            this._valuesStart,
            this._valuesEnd,
            this._valuesStartRepeat,
            t
          );
        }
        return this;
      }),
      (n.prototype.startFromCurrentValues = function (e) {
        return this.start(e, !0);
      }),
      (n.prototype._setupProperties = function (e, t, i, r, s) {
        for (var u in i) {
          var c = e[u],
            d = Array.isArray(c),
            p = d ? "array" : typeof c,
            g = !d && Array.isArray(i[u]);
          if (!(p === "undefined" || p === "function")) {
            if (g) {
              var _ = i[u];
              if (_.length === 0) continue;
              for (var x = [c], M = 0, E = _.length; M < E; M += 1) {
                var C = this._handleRelativeValue(c, _[M]);
                if (isNaN(C)) {
                  (g = !1),
                    console.warn("Found invalid interpolation list. Skipping.");
                  break;
                }
                x.push(C);
              }
              g && (i[u] = x);
            }
            if ((p === "object" || d) && c && !g) {
              t[u] = d ? [] : {};
              var S = c;
              for (var b in S) t[u][b] = S[b];
              r[u] = d ? [] : {};
              var _ = i[u];
              if (!this._isDynamic) {
                var L = {};
                for (var b in _) L[b] = _[b];
                i[u] = _ = L;
              }
              this._setupProperties(S, t[u], _, r[u], s);
            } else
              (typeof t[u] > "u" || s) && (t[u] = c),
                d || (t[u] *= 1),
                g ? (r[u] = i[u].slice().reverse()) : (r[u] = t[u] || 0);
          }
        }
      }),
      (n.prototype.stop = function () {
        return (
          this._isChainStopped ||
            ((this._isChainStopped = !0), this.stopChainedTweens()),
          this._isPlaying
            ? (this._group && this._group.remove(this),
              (this._isPlaying = !1),
              (this._isPaused = !1),
              this._onStopCallback && this._onStopCallback(this._object),
              this)
            : this
        );
      }),
      (n.prototype.end = function () {
        return (this._goToEnd = !0), this.update(1 / 0), this;
      }),
      (n.prototype.pause = function (e) {
        return (
          e === void 0 && (e = ha()),
          this._isPaused || !this._isPlaying
            ? this
            : ((this._isPaused = !0),
              (this._pauseStart = e),
              this._group && this._group.remove(this),
              this)
        );
      }),
      (n.prototype.resume = function (e) {
        return (
          e === void 0 && (e = ha()),
          !this._isPaused || !this._isPlaying
            ? this
            : ((this._isPaused = !1),
              (this._startTime += e - this._pauseStart),
              (this._pauseStart = 0),
              this._group && this._group.add(this),
              this)
        );
      }),
      (n.prototype.stopChainedTweens = function () {
        for (var e = 0, t = this._chainedTweens.length; e < t; e++)
          this._chainedTweens[e].stop();
        return this;
      }),
      (n.prototype.group = function (e) {
        return e === void 0 && (e = Tu), (this._group = e), this;
      }),
      (n.prototype.delay = function (e) {
        return e === void 0 && (e = 0), (this._delayTime = e), this;
      }),
      (n.prototype.repeat = function (e) {
        return (
          e === void 0 && (e = 0),
          (this._initialRepeat = e),
          (this._repeat = e),
          this
        );
      }),
      (n.prototype.repeatDelay = function (e) {
        return (this._repeatDelayTime = e), this;
      }),
      (n.prototype.yoyo = function (e) {
        return e === void 0 && (e = !1), (this._yoyo = e), this;
      }),
      (n.prototype.easing = function (e) {
        return (
          e === void 0 && (e = Zn.Linear.None), (this._easingFunction = e), this
        );
      }),
      (n.prototype.interpolation = function (e) {
        return (
          e === void 0 && (e = yo.Linear),
          (this._interpolationFunction = e),
          this
        );
      }),
      (n.prototype.chain = function () {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        return (this._chainedTweens = e), this;
      }),
      (n.prototype.onStart = function (e) {
        return (this._onStartCallback = e), this;
      }),
      (n.prototype.onEveryStart = function (e) {
        return (this._onEveryStartCallback = e), this;
      }),
      (n.prototype.onUpdate = function (e) {
        return (this._onUpdateCallback = e), this;
      }),
      (n.prototype.onRepeat = function (e) {
        return (this._onRepeatCallback = e), this;
      }),
      (n.prototype.onComplete = function (e) {
        return (this._onCompleteCallback = e), this;
      }),
      (n.prototype.onStop = function (e) {
        return (this._onStopCallback = e), this;
      }),
      (n.prototype.update = function (e, t) {
        if (
          (e === void 0 && (e = ha()), t === void 0 && (t = !0), this._isPaused)
        )
          return !0;
        var i,
          r,
          s = this._startTime + this._duration;
        if (!this._goToEnd && !this._isPlaying) {
          if (e > s) return !1;
          t && this.start(e, !0);
        }
        if (((this._goToEnd = !1), e < this._startTime)) return !0;
        this._onStartCallbackFired === !1 &&
          (this._onStartCallback && this._onStartCallback(this._object),
          (this._onStartCallbackFired = !0)),
          this._onEveryStartCallbackFired === !1 &&
            (this._onEveryStartCallback &&
              this._onEveryStartCallback(this._object),
            (this._onEveryStartCallbackFired = !0)),
          (r = (e - this._startTime) / this._duration),
          (r = this._duration === 0 || r > 1 ? 1 : r);
        var u = this._easingFunction(r);
        if (
          (this._updateProperties(
            this._object,
            this._valuesStart,
            this._valuesEnd,
            u
          ),
          this._onUpdateCallback && this._onUpdateCallback(this._object, r),
          r === 1)
        )
          if (this._repeat > 0) {
            isFinite(this._repeat) && this._repeat--;
            for (i in this._valuesStartRepeat)
              !this._yoyo &&
                typeof this._valuesEnd[i] == "string" &&
                (this._valuesStartRepeat[i] =
                  this._valuesStartRepeat[i] + parseFloat(this._valuesEnd[i])),
                this._yoyo && this._swapEndStartRepeatValues(i),
                (this._valuesStart[i] = this._valuesStartRepeat[i]);
            return (
              this._yoyo && (this._reversed = !this._reversed),
              this._repeatDelayTime !== void 0
                ? (this._startTime = e + this._repeatDelayTime)
                : (this._startTime = e + this._delayTime),
              this._onRepeatCallback && this._onRepeatCallback(this._object),
              (this._onEveryStartCallbackFired = !1),
              !0
            );
          } else {
            this._onCompleteCallback && this._onCompleteCallback(this._object);
            for (var c = 0, d = this._chainedTweens.length; c < d; c++)
              this._chainedTweens[c].start(
                this._startTime + this._duration,
                !1
              );
            return (this._isPlaying = !1), !1;
          }
        return !0;
      }),
      (n.prototype._updateProperties = function (e, t, i, r) {
        for (var s in i)
          if (t[s] !== void 0) {
            var u = t[s] || 0,
              c = i[s],
              d = Array.isArray(e[s]),
              p = Array.isArray(c),
              g = !d && p;
            g
              ? (e[s] = this._interpolationFunction(c, r))
              : typeof c == "object" && c
              ? this._updateProperties(e[s], u, c, r)
              : ((c = this._handleRelativeValue(u, c)),
                typeof c == "number" && (e[s] = u + (c - u) * r));
          }
      }),
      (n.prototype._handleRelativeValue = function (e, t) {
        return typeof t != "string"
          ? t
          : t.charAt(0) === "+" || t.charAt(0) === "-"
          ? e + parseFloat(t)
          : parseFloat(t);
      }),
      (n.prototype._swapEndStartRepeatValues = function (e) {
        var t = this._valuesStartRepeat[e],
          i = this._valuesEnd[e];
        typeof i == "string"
          ? (this._valuesStartRepeat[e] =
              this._valuesStartRepeat[e] + parseFloat(i))
          : (this._valuesStartRepeat[e] = this._valuesEnd[e]),
          (this._valuesEnd[e] = t);
      }),
      n
    );
  })(),
  yr = Tu;
yr.getAll.bind(yr);
yr.removeAll.bind(yr);
yr.add.bind(yr);
yr.remove.bind(yr);
var n6 = yr.update.bind(yr),
  i6 =
    typeof globalThis < "u"
      ? globalThis
      : typeof window < "u"
      ? window
      : typeof global < "u"
      ? global
      : typeof self < "u"
      ? self
      : {};
function V1(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default")
    ? n.default
    : n;
}
var wc = { exports: {} };
wc.exports = Zl;
wc.exports.default = Zl;
function Zl(n, e, t) {
  t = t || 2;
  var i = e && e.length,
    r = i ? e[0] * t : n.length,
    s = W1(n, 0, r, t, !0),
    u = [];
  if (!s || s.next === s.prev) return u;
  var c, d, p, g, _, x, M;
  if ((i && (s = A6(n, e, s, t)), n.length > 80 * t)) {
    (c = p = n[0]), (d = g = n[1]);
    for (var E = t; E < r; E += t)
      (_ = n[E]),
        (x = n[E + 1]),
        _ < c && (c = _),
        x < d && (d = x),
        _ > p && (p = _),
        x > g && (g = x);
    (M = Math.max(p - c, g - d)), (M = M !== 0 ? 32767 / M : 0);
  }
  return La(s, u, t, c, d, M, 0), u;
}
function W1(n, e, t, i, r) {
  var s, u;
  if (r === Pu(n, e, t, i) > 0)
    for (s = e; s < t; s += i) u = pd(s, n[s], n[s + 1], u);
  else for (s = t - i; s >= e; s -= i) u = pd(s, n[s], n[s + 1], u);
  return u && Kl(u, u.next) && (Ia(u), (u = u.next)), u;
}
function Fs(n, e) {
  if (!n) return n;
  e || (e = n);
  var t = n,
    i;
  do
    if (
      ((i = !1), !t.steiner && (Kl(t, t.next) || xn(t.prev, t, t.next) === 0))
    ) {
      if ((Ia(t), (t = e = t.prev), t === t.next)) break;
      i = !0;
    } else t = t.next;
  while (i || t !== e);
  return e;
}
function La(n, e, t, i, r, s, u) {
  if (n) {
    !u && s && h6(n, i, r, s);
    for (var c = n, d, p; n.prev !== n.next; ) {
      if (((d = n.prev), (p = n.next), s ? s6(n, i, r, s) : r6(n))) {
        e.push((d.i / t) | 0),
          e.push((n.i / t) | 0),
          e.push((p.i / t) | 0),
          Ia(n),
          (n = p.next),
          (c = p.next);
        continue;
      }
      if (((n = p), n === c)) {
        u
          ? u === 1
            ? ((n = o6(Fs(n), e, t)), La(n, e, t, i, r, s, 2))
            : u === 2 && a6(n, e, t, i, r, s)
          : La(Fs(n), e, t, i, r, s, 1);
        break;
      }
    }
  }
}
function r6(n) {
  var e = n.prev,
    t = n,
    i = n.next;
  if (xn(e, t, i) >= 0) return !1;
  for (
    var r = e.x,
      s = t.x,
      u = i.x,
      c = e.y,
      d = t.y,
      p = i.y,
      g = r < s ? (r < u ? r : u) : s < u ? s : u,
      _ = c < d ? (c < p ? c : p) : d < p ? d : p,
      x = r > s ? (r > u ? r : u) : s > u ? s : u,
      M = c > d ? (c > p ? c : p) : d > p ? d : p,
      E = i.next;
    E !== e;

  ) {
    if (
      E.x >= g &&
      E.x <= x &&
      E.y >= _ &&
      E.y <= M &&
      bo(r, c, s, d, u, p, E.x, E.y) &&
      xn(E.prev, E, E.next) >= 0
    )
      return !1;
    E = E.next;
  }
  return !0;
}
function s6(n, e, t, i) {
  var r = n.prev,
    s = n,
    u = n.next;
  if (xn(r, s, u) >= 0) return !1;
  for (
    var c = r.x,
      d = s.x,
      p = u.x,
      g = r.y,
      _ = s.y,
      x = u.y,
      M = c < d ? (c < p ? c : p) : d < p ? d : p,
      E = g < _ ? (g < x ? g : x) : _ < x ? _ : x,
      C = c > d ? (c > p ? c : p) : d > p ? d : p,
      S = g > _ ? (g > x ? g : x) : _ > x ? _ : x,
      b = Cu(M, E, e, t, i),
      L = Cu(C, S, e, t, i),
      T = n.prevZ,
      R = n.nextZ;
    T && T.z >= b && R && R.z <= L;

  ) {
    if (
      (T.x >= M &&
        T.x <= C &&
        T.y >= E &&
        T.y <= S &&
        T !== r &&
        T !== u &&
        bo(c, g, d, _, p, x, T.x, T.y) &&
        xn(T.prev, T, T.next) >= 0) ||
      ((T = T.prevZ),
      R.x >= M &&
        R.x <= C &&
        R.y >= E &&
        R.y <= S &&
        R !== r &&
        R !== u &&
        bo(c, g, d, _, p, x, R.x, R.y) &&
        xn(R.prev, R, R.next) >= 0)
    )
      return !1;
    R = R.nextZ;
  }
  for (; T && T.z >= b; ) {
    if (
      T.x >= M &&
      T.x <= C &&
      T.y >= E &&
      T.y <= S &&
      T !== r &&
      T !== u &&
      bo(c, g, d, _, p, x, T.x, T.y) &&
      xn(T.prev, T, T.next) >= 0
    )
      return !1;
    T = T.prevZ;
  }
  for (; R && R.z <= L; ) {
    if (
      R.x >= M &&
      R.x <= C &&
      R.y >= E &&
      R.y <= S &&
      R !== r &&
      R !== u &&
      bo(c, g, d, _, p, x, R.x, R.y) &&
      xn(R.prev, R, R.next) >= 0
    )
      return !1;
    R = R.nextZ;
  }
  return !0;
}
function o6(n, e, t) {
  var i = n;
  do {
    var r = i.prev,
      s = i.next.next;
    !Kl(r, s) &&
      j1(r, i, i.next, s) &&
      Da(r, s) &&
      Da(s, r) &&
      (e.push((r.i / t) | 0),
      e.push((i.i / t) | 0),
      e.push((s.i / t) | 0),
      Ia(i),
      Ia(i.next),
      (i = n = s)),
      (i = i.next);
  } while (i !== n);
  return Fs(i);
}
function a6(n, e, t, i, r, s) {
  var u = n;
  do {
    for (var c = u.next.next; c !== u.prev; ) {
      if (u.i !== c.i && m6(u, c)) {
        var d = X1(u, c);
        (u = Fs(u, u.next)),
          (d = Fs(d, d.next)),
          La(u, e, t, i, r, s, 0),
          La(d, e, t, i, r, s, 0);
        return;
      }
      c = c.next;
    }
    u = u.next;
  } while (u !== n);
}
function A6(n, e, t, i) {
  var r = [],
    s,
    u,
    c,
    d,
    p;
  for (s = 0, u = e.length; s < u; s++)
    (c = e[s] * i),
      (d = s < u - 1 ? e[s + 1] * i : n.length),
      (p = W1(n, c, d, i, !1)),
      p === p.next && (p.steiner = !0),
      r.push(p6(p));
  for (r.sort(l6), s = 0; s < r.length; s++) t = u6(r[s], t);
  return t;
}
function l6(n, e) {
  return n.x - e.x;
}
function u6(n, e) {
  var t = c6(n, e);
  if (!t) return e;
  var i = X1(t, n);
  return Fs(i, i.next), Fs(t, t.next);
}
function c6(n, e) {
  var t = e,
    i = n.x,
    r = n.y,
    s = -1 / 0,
    u;
  do {
    if (r <= t.y && r >= t.next.y && t.next.y !== t.y) {
      var c = t.x + ((r - t.y) * (t.next.x - t.x)) / (t.next.y - t.y);
      if (
        c <= i &&
        c > s &&
        ((s = c), (u = t.x < t.next.x ? t : t.next), c === i)
      )
        return u;
    }
    t = t.next;
  } while (t !== e);
  if (!u) return null;
  var d = u,
    p = u.x,
    g = u.y,
    _ = 1 / 0,
    x;
  t = u;
  do
    i >= t.x &&
      t.x >= p &&
      i !== t.x &&
      bo(r < g ? i : s, r, p, g, r < g ? s : i, r, t.x, t.y) &&
      ((x = Math.abs(r - t.y) / (i - t.x)),
      Da(t, n) &&
        (x < _ || (x === _ && (t.x > u.x || (t.x === u.x && f6(u, t))))) &&
        ((u = t), (_ = x))),
      (t = t.next);
  while (t !== d);
  return u;
}
function f6(n, e) {
  return xn(n.prev, n, e.prev) < 0 && xn(e.next, n, n.next) < 0;
}
function h6(n, e, t, i) {
  var r = n;
  do
    r.z === 0 && (r.z = Cu(r.x, r.y, e, t, i)),
      (r.prevZ = r.prev),
      (r.nextZ = r.next),
      (r = r.next);
  while (r !== n);
  (r.prevZ.nextZ = null), (r.prevZ = null), d6(r);
}
function d6(n) {
  var e,
    t,
    i,
    r,
    s,
    u,
    c,
    d,
    p = 1;
  do {
    for (t = n, n = null, s = null, u = 0; t; ) {
      for (u++, i = t, c = 0, e = 0; e < p && (c++, (i = i.nextZ), !!i); e++);
      for (d = p; c > 0 || (d > 0 && i); )
        c !== 0 && (d === 0 || !i || t.z <= i.z)
          ? ((r = t), (t = t.nextZ), c--)
          : ((r = i), (i = i.nextZ), d--),
          s ? (s.nextZ = r) : (n = r),
          (r.prevZ = s),
          (s = r);
      t = i;
    }
    (s.nextZ = null), (p *= 2);
  } while (u > 1);
  return n;
}
function Cu(n, e, t, i, r) {
  return (
    (n = ((n - t) * r) | 0),
    (e = ((e - i) * r) | 0),
    (n = (n | (n << 8)) & 16711935),
    (n = (n | (n << 4)) & 252645135),
    (n = (n | (n << 2)) & 858993459),
    (n = (n | (n << 1)) & 1431655765),
    (e = (e | (e << 8)) & 16711935),
    (e = (e | (e << 4)) & 252645135),
    (e = (e | (e << 2)) & 858993459),
    (e = (e | (e << 1)) & 1431655765),
    n | (e << 1)
  );
}
function p6(n) {
  var e = n,
    t = n;
  do (e.x < t.x || (e.x === t.x && e.y < t.y)) && (t = e), (e = e.next);
  while (e !== n);
  return t;
}
function bo(n, e, t, i, r, s, u, c) {
  return (
    (r - u) * (e - c) >= (n - u) * (s - c) &&
    (n - u) * (i - c) >= (t - u) * (e - c) &&
    (t - u) * (s - c) >= (r - u) * (i - c)
  );
}
function m6(n, e) {
  return (
    n.next.i !== e.i &&
    n.prev.i !== e.i &&
    !g6(n, e) &&
    ((Da(n, e) &&
      Da(e, n) &&
      _6(n, e) &&
      (xn(n.prev, n, e.prev) || xn(n, e.prev, e))) ||
      (Kl(n, e) && xn(n.prev, n, n.next) > 0 && xn(e.prev, e, e.next) > 0))
  );
}
function xn(n, e, t) {
  return (e.y - n.y) * (t.x - e.x) - (e.x - n.x) * (t.y - e.y);
}
function Kl(n, e) {
  return n.x === e.x && n.y === e.y;
}
function j1(n, e, t, i) {
  var r = DA(xn(n, e, t)),
    s = DA(xn(n, e, i)),
    u = DA(xn(t, i, n)),
    c = DA(xn(t, i, e));
  return !!(
    (r !== s && u !== c) ||
    (r === 0 && LA(n, t, e)) ||
    (s === 0 && LA(n, i, e)) ||
    (u === 0 && LA(t, n, i)) ||
    (c === 0 && LA(t, e, i))
  );
}
function LA(n, e, t) {
  return (
    e.x <= Math.max(n.x, t.x) &&
    e.x >= Math.min(n.x, t.x) &&
    e.y <= Math.max(n.y, t.y) &&
    e.y >= Math.min(n.y, t.y)
  );
}
function DA(n) {
  return n > 0 ? 1 : n < 0 ? -1 : 0;
}
function g6(n, e) {
  var t = n;
  do {
    if (
      t.i !== n.i &&
      t.next.i !== n.i &&
      t.i !== e.i &&
      t.next.i !== e.i &&
      j1(t, t.next, n, e)
    )
      return !0;
    t = t.next;
  } while (t !== n);
  return !1;
}
function Da(n, e) {
  return xn(n.prev, n, n.next) < 0
    ? xn(n, e, n.next) >= 0 && xn(n, n.prev, e) >= 0
    : xn(n, e, n.prev) < 0 || xn(n, n.next, e) < 0;
}
function _6(n, e) {
  var t = n,
    i = !1,
    r = (n.x + e.x) / 2,
    s = (n.y + e.y) / 2;
  do
    t.y > s != t.next.y > s &&
      t.next.y !== t.y &&
      r < ((t.next.x - t.x) * (s - t.y)) / (t.next.y - t.y) + t.x &&
      (i = !i),
      (t = t.next);
  while (t !== n);
  return i;
}
function X1(n, e) {
  var t = new Ru(n.i, n.x, n.y),
    i = new Ru(e.i, e.x, e.y),
    r = n.next,
    s = e.prev;
  return (
    (n.next = e),
    (e.prev = n),
    (t.next = r),
    (r.prev = t),
    (i.next = t),
    (t.prev = i),
    (s.next = i),
    (i.prev = s),
    i
  );
}
function pd(n, e, t, i) {
  var r = new Ru(n, e, t);
  return (
    i
      ? ((r.next = i.next), (r.prev = i), (i.next.prev = r), (i.next = r))
      : ((r.prev = r), (r.next = r)),
    r
  );
}
function Ia(n) {
  (n.next.prev = n.prev),
    (n.prev.next = n.next),
    n.prevZ && (n.prevZ.nextZ = n.nextZ),
    n.nextZ && (n.nextZ.prevZ = n.prevZ);
}
function Ru(n, e, t) {
  (this.i = n),
    (this.x = e),
    (this.y = t),
    (this.prev = null),
    (this.next = null),
    (this.z = 0),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
Zl.deviation = function (n, e, t, i) {
  var r = e && e.length,
    s = r ? e[0] * t : n.length,
    u = Math.abs(Pu(n, 0, s, t));
  if (r)
    for (var c = 0, d = e.length; c < d; c++) {
      var p = e[c] * t,
        g = c < d - 1 ? e[c + 1] * t : n.length;
      u -= Math.abs(Pu(n, p, g, t));
    }
  var _ = 0;
  for (c = 0; c < i.length; c += 3) {
    var x = i[c] * t,
      M = i[c + 1] * t,
      E = i[c + 2] * t;
    _ += Math.abs(
      (n[x] - n[E]) * (n[M + 1] - n[x + 1]) -
        (n[x] - n[M]) * (n[E + 1] - n[x + 1])
    );
  }
  return u === 0 && _ === 0 ? 0 : Math.abs((_ - u) / u);
};
function Pu(n, e, t, i) {
  for (var r = 0, s = e, u = t - i; s < t; s += i)
    (r += (n[u] - n[s]) * (n[s + 1] + n[u + 1])), (u = s);
  return r;
}
Zl.flatten = function (n) {
  for (
    var e = n[0][0].length,
      t = { vertices: [], holes: [], dimensions: e },
      i = 0,
      r = 0;
    r < n.length;
    r++
  ) {
    for (var s = 0; s < n[r].length; s++)
      for (var u = 0; u < e; u++) t.vertices.push(n[r][s][u]);
    r > 0 && ((i += n[r - 1].length), t.holes.push(i));
  }
  return t;
};
var v6 = wc.exports;
const Oa = V1(v6);
function JA(n, e) {
  return n == null || e == null
    ? NaN
    : n < e
    ? -1
    : n > e
    ? 1
    : n >= e
    ? 0
    : NaN;
}
function x6(n, e) {
  return n == null || e == null
    ? NaN
    : e < n
    ? -1
    : e > n
    ? 1
    : e >= n
    ? 0
    : NaN;
}
function Q1(n) {
  let e, t, i;
  n.length !== 2
    ? ((e = JA), (t = (c, d) => JA(n(c), d)), (i = (c, d) => n(c) - d))
    : ((e = n === JA || n === x6 ? n : y6), (t = n), (i = n));
  function r(c, d, p = 0, g = c.length) {
    if (p < g) {
      if (e(d, d) !== 0) return g;
      do {
        const _ = (p + g) >>> 1;
        t(c[_], d) < 0 ? (p = _ + 1) : (g = _);
      } while (p < g);
    }
    return p;
  }
  function s(c, d, p = 0, g = c.length) {
    if (p < g) {
      if (e(d, d) !== 0) return g;
      do {
        const _ = (p + g) >>> 1;
        t(c[_], d) <= 0 ? (p = _ + 1) : (g = _);
      } while (p < g);
    }
    return p;
  }
  function u(c, d, p = 0, g = c.length) {
    const _ = r(c, d, p, g - 1);
    return _ > p && i(c[_ - 1], d) > -i(c[_], d) ? _ - 1 : _;
  }
  return { left: r, center: u, right: s };
}
function y6() {
  return 0;
}
function b6(n) {
  return n === null ? NaN : +n;
}
const M6 = Q1(JA),
  S6 = M6.right;
Q1(b6).center;
const E6 = S6;
function Al(n, e) {
  let t, i;
  if (e === void 0)
    for (const r of n)
      r != null &&
        (t === void 0
          ? r >= r && (t = i = r)
          : (t > r && (t = r), i < r && (i = r)));
  else {
    let r = -1;
    for (let s of n)
      (s = e(s, ++r, n)) != null &&
        (t === void 0
          ? s >= s && (t = i = s)
          : (t > s && (t = s), i < s && (i = s)));
  }
  return [t, i];
}
class Nr {
  constructor() {
    (this._partials = new Float64Array(32)), (this._n = 0);
  }
  add(e) {
    const t = this._partials;
    let i = 0;
    for (let r = 0; r < this._n && r < 32; r++) {
      const s = t[r],
        u = e + s,
        c = Math.abs(e) < Math.abs(s) ? e - (u - s) : s - (u - e);
      c && (t[i++] = c), (e = u);
    }
    return (t[i] = e), (this._n = i + 1), this;
  }
  valueOf() {
    const e = this._partials;
    let t = this._n,
      i,
      r,
      s,
      u = 0;
    if (t > 0) {
      for (
        u = e[--t];
        t > 0 && ((i = u), (r = e[--t]), (u = i + r), (s = r - (u - i)), !s);

      );
      t > 0 &&
        ((s < 0 && e[t - 1] < 0) || (s > 0 && e[t - 1] > 0)) &&
        ((r = s * 2), (i = u + r), r == i - u && (u = i));
    }
    return u;
  }
}
const w6 = Math.sqrt(50),
  T6 = Math.sqrt(10),
  C6 = Math.sqrt(2);
function ll(n, e, t) {
  const i = (e - n) / Math.max(0, t),
    r = Math.floor(Math.log10(i)),
    s = i / Math.pow(10, r),
    u = s >= w6 ? 10 : s >= T6 ? 5 : s >= C6 ? 2 : 1;
  let c, d, p;
  return (
    r < 0
      ? ((p = Math.pow(10, -r) / u),
        (c = Math.round(n * p)),
        (d = Math.round(e * p)),
        c / p < n && ++c,
        d / p > e && --d,
        (p = -p))
      : ((p = Math.pow(10, r) * u),
        (c = Math.round(n / p)),
        (d = Math.round(e / p)),
        c * p < n && ++c,
        d * p > e && --d),
    d < c && 0.5 <= t && t < 2 ? ll(n, e, t * 2) : [c, d, p]
  );
}
function R6(n, e, t) {
  if (((e = +e), (n = +n), (t = +t), !(t > 0))) return [];
  if (n === e) return [n];
  const i = e < n,
    [r, s, u] = i ? ll(e, n, t) : ll(n, e, t);
  if (!(s >= r)) return [];
  const c = s - r + 1,
    d = new Array(c);
  if (i)
    if (u < 0) for (let p = 0; p < c; ++p) d[p] = (s - p) / -u;
    else for (let p = 0; p < c; ++p) d[p] = (s - p) * u;
  else if (u < 0) for (let p = 0; p < c; ++p) d[p] = (r + p) / -u;
  else for (let p = 0; p < c; ++p) d[p] = (r + p) * u;
  return d;
}
function Lu(n, e, t) {
  return (e = +e), (n = +n), (t = +t), ll(n, e, t)[2];
}
function P6(n, e, t) {
  (e = +e), (n = +n), (t = +t);
  const i = e < n,
    r = i ? Lu(e, n, t) : Lu(n, e, t);
  return (i ? -1 : 1) * (r < 0 ? 1 / -r : r);
}
function L6(n, e) {
  let t = 0,
    i = 0;
  if (e === void 0)
    for (let r of n) r != null && (r = +r) >= r && (++t, (i += r));
  else {
    let r = -1;
    for (let s of n)
      (s = e(s, ++r, n)) != null && (s = +s) >= s && (++t, (i += s));
  }
  if (t) return i / t;
}
function* D6(n) {
  for (const e of n) yield* e;
}
function Ua(n) {
  return Array.from(D6(n));
}
function Mo(n, e, t) {
  (n = +n),
    (e = +e),
    (t = (r = arguments.length) < 2 ? ((e = n), (n = 0), 1) : r < 3 ? 1 : +t);
  for (
    var i = -1, r = Math.max(0, Math.ceil((e - n) / t)) | 0, s = new Array(r);
    ++i < r;

  )
    s[i] = n + i * t;
  return s;
}
var Ht = 1e-6,
  ul = 1e-12,
  $t = Math.PI,
  Vi = $t / 2,
  cl = $t / 4,
  Di = $t * 2,
  Sn = 180 / $t,
  Tt = $t / 180,
  an = Math.abs,
  $1 = Math.atan,
  ji = Math.atan2,
  Dt = Math.cos,
  IA = Math.ceil,
  Du = Math.hypot,
  vt = Math.sin,
  I6 =
    Math.sign ||
    function (n) {
      return n > 0 ? 1 : n < 0 ? -1 : 0;
    },
  kr = Math.sqrt;
function O6(n) {
  return n > 1 ? 0 : n < -1 ? $t : Math.acos(n);
}
function zr(n) {
  return n > 1 ? Vi : n < -1 ? -Vi : Math.asin(n);
}
function md(n) {
  return (n = vt(n / 2)) * n;
}
function Yn() {}
function fl(n, e) {
  n && _d.hasOwnProperty(n.type) && _d[n.type](n, e);
}
var gd = {
    Feature: function (n, e) {
      fl(n.geometry, e);
    },
    FeatureCollection: function (n, e) {
      for (var t = n.features, i = -1, r = t.length; ++i < r; )
        fl(t[i].geometry, e);
    },
  },
  _d = {
    Sphere: function (n, e) {
      e.sphere();
    },
    Point: function (n, e) {
      (n = n.coordinates), e.point(n[0], n[1], n[2]);
    },
    MultiPoint: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        (n = t[i]), e.point(n[0], n[1], n[2]);
    },
    LineString: function (n, e) {
      Iu(n.coordinates, e, 0);
    },
    MultiLineString: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        Iu(t[i], e, 0);
    },
    Polygon: function (n, e) {
      vd(n.coordinates, e);
    },
    MultiPolygon: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; ) vd(t[i], e);
    },
    GeometryCollection: function (n, e) {
      for (var t = n.geometries, i = -1, r = t.length; ++i < r; ) fl(t[i], e);
    },
  };
function Iu(n, e, t) {
  var i = -1,
    r = n.length - t,
    s;
  for (e.lineStart(); ++i < r; ) (s = n[i]), e.point(s[0], s[1], s[2]);
  e.lineEnd();
}
function vd(n, e) {
  var t = -1,
    i = n.length;
  for (e.polygonStart(); ++t < i; ) Iu(n[t], e, 1);
  e.polygonEnd();
}
function Jl(n, e) {
  n && gd.hasOwnProperty(n.type) ? gd[n.type](n, e) : fl(n, e);
}
var hl = new Nr(),
  xd = new Nr(),
  Y1,
  Z1,
  Ou,
  Uu,
  qu,
  Gr = {
    point: Yn,
    lineStart: Yn,
    lineEnd: Yn,
    polygonStart: function () {
      (hl = new Nr()), (Gr.lineStart = U6), (Gr.lineEnd = q6);
    },
    polygonEnd: function () {
      var n = +hl;
      xd.add(n < 0 ? Di + n : n),
        (this.lineStart = this.lineEnd = this.point = Yn);
    },
    sphere: function () {
      xd.add(Di);
    },
  };
function U6() {
  Gr.point = B6;
}
function q6() {
  K1(Y1, Z1);
}
function B6(n, e) {
  (Gr.point = K1),
    (Y1 = n),
    (Z1 = e),
    (n *= Tt),
    (e *= Tt),
    (Ou = n),
    (Uu = Dt((e = e / 2 + cl))),
    (qu = vt(e));
}
function K1(n, e) {
  (n *= Tt), (e *= Tt), (e = e / 2 + cl);
  var t = n - Ou,
    i = t >= 0 ? 1 : -1,
    r = i * t,
    s = Dt(e),
    u = vt(e),
    c = qu * u,
    d = Uu * s + c * Dt(r),
    p = c * i * vt(r);
  hl.add(ji(p, d)), (Ou = n), (Uu = s), (qu = u);
}
function dl(n) {
  return [ji(n[1], n[0]), zr(n[2])];
}
function ks(n) {
  var e = n[0],
    t = n[1],
    i = Dt(t);
  return [i * Dt(e), i * vt(e), vt(t)];
}
function OA(n, e) {
  return n[0] * e[0] + n[1] * e[1] + n[2] * e[2];
}
function Uo(n, e) {
  return [
    n[1] * e[2] - n[2] * e[1],
    n[2] * e[0] - n[0] * e[2],
    n[0] * e[1] - n[1] * e[0],
  ];
}
function nu(n, e) {
  (n[0] += e[0]), (n[1] += e[1]), (n[2] += e[2]);
}
function UA(n, e) {
  return [n[0] * e, n[1] * e, n[2] * e];
}
function pl(n) {
  var e = kr(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);
  (n[0] /= e), (n[1] /= e), (n[2] /= e);
}
var _n,
  mi,
  Mn,
  Li,
  Ts,
  J1,
  e2,
  Ro,
  ba,
  is,
  Hr,
  Ur = {
    point: Bu,
    lineStart: yd,
    lineEnd: bd,
    polygonStart: function () {
      (Ur.point = n2),
        (Ur.lineStart = N6),
        (Ur.lineEnd = F6),
        (ba = new Nr()),
        Gr.polygonStart();
    },
    polygonEnd: function () {
      Gr.polygonEnd(),
        (Ur.point = Bu),
        (Ur.lineStart = yd),
        (Ur.lineEnd = bd),
        hl < 0
          ? ((_n = -(Mn = 180)), (mi = -(Li = 90)))
          : ba > Ht
          ? (Li = 90)
          : ba < -Ht && (mi = -90),
        (Hr[0] = _n),
        (Hr[1] = Mn);
    },
    sphere: function () {
      (_n = -(Mn = 180)), (mi = -(Li = 90));
    },
  };
function Bu(n, e) {
  is.push((Hr = [(_n = n), (Mn = n)])), e < mi && (mi = e), e > Li && (Li = e);
}
function t2(n, e) {
  var t = ks([n * Tt, e * Tt]);
  if (Ro) {
    var i = Uo(Ro, t),
      r = [i[1], -i[0], 0],
      s = Uo(r, i);
    pl(s), (s = dl(s));
    var u = n - Ts,
      c = u > 0 ? 1 : -1,
      d = s[0] * Sn * c,
      p,
      g = an(u) > 180;
    g ^ (c * Ts < d && d < c * n)
      ? ((p = s[1] * Sn), p > Li && (Li = p))
      : ((d = ((d + 360) % 360) - 180),
        g ^ (c * Ts < d && d < c * n)
          ? ((p = -s[1] * Sn), p < mi && (mi = p))
          : (e < mi && (mi = e), e > Li && (Li = e))),
      g
        ? n < Ts
          ? Ri(_n, n) > Ri(_n, Mn) && (Mn = n)
          : Ri(n, Mn) > Ri(_n, Mn) && (_n = n)
        : Mn >= _n
        ? (n < _n && (_n = n), n > Mn && (Mn = n))
        : n > Ts
        ? Ri(_n, n) > Ri(_n, Mn) && (Mn = n)
        : Ri(n, Mn) > Ri(_n, Mn) && (_n = n);
  } else is.push((Hr = [(_n = n), (Mn = n)]));
  e < mi && (mi = e), e > Li && (Li = e), (Ro = t), (Ts = n);
}
function yd() {
  Ur.point = t2;
}
function bd() {
  (Hr[0] = _n), (Hr[1] = Mn), (Ur.point = Bu), (Ro = null);
}
function n2(n, e) {
  if (Ro) {
    var t = n - Ts;
    ba.add(an(t) > 180 ? t + (t > 0 ? 360 : -360) : t);
  } else (J1 = n), (e2 = e);
  Gr.point(n, e), t2(n, e);
}
function N6() {
  Gr.lineStart();
}
function F6() {
  n2(J1, e2),
    Gr.lineEnd(),
    an(ba) > Ht && (_n = -(Mn = 180)),
    (Hr[0] = _n),
    (Hr[1] = Mn),
    (Ro = null);
}
function Ri(n, e) {
  return (e -= n) < 0 ? e + 360 : e;
}
function k6(n, e) {
  return n[0] - e[0];
}
function Md(n, e) {
  return n[0] <= n[1] ? n[0] <= e && e <= n[1] : e < n[0] || n[1] < e;
}
function i2(n) {
  var e, t, i, r, s, u, c;
  if (((Li = Mn = -(_n = mi = 1 / 0)), (is = []), Jl(n, Ur), (t = is.length))) {
    for (is.sort(k6), e = 1, i = is[0], s = [i]; e < t; ++e)
      (r = is[e]),
        Md(i, r[0]) || Md(i, r[1])
          ? (Ri(i[0], r[1]) > Ri(i[0], i[1]) && (i[1] = r[1]),
            Ri(r[0], i[1]) > Ri(i[0], i[1]) && (i[0] = r[0]))
          : s.push((i = r));
    for (u = -1 / 0, t = s.length - 1, e = 0, i = s[t]; e <= t; i = r, ++e)
      (r = s[e]),
        (c = Ri(i[1], r[0])) > u && ((u = c), (_n = r[0]), (Mn = i[1]));
  }
  return (
    (is = Hr = null),
    _n === 1 / 0 || mi === 1 / 0
      ? [
          [NaN, NaN],
          [NaN, NaN],
        ]
      : [
          [_n, mi],
          [Mn, Li],
        ]
  );
}
var da,
  ml,
  gl,
  _l,
  vl,
  xl,
  yl,
  bl,
  Nu,
  Fu,
  ku,
  r2,
  s2,
  Ai,
  li,
  ui,
  rr = {
    sphere: Yn,
    point: Tc,
    lineStart: Sd,
    lineEnd: Ed,
    polygonStart: function () {
      (rr.lineStart = H6), (rr.lineEnd = V6);
    },
    polygonEnd: function () {
      (rr.lineStart = Sd), (rr.lineEnd = Ed);
    },
  };
function Tc(n, e) {
  (n *= Tt), (e *= Tt);
  var t = Dt(e);
  Qa(t * Dt(n), t * vt(n), vt(e));
}
function Qa(n, e, t) {
  ++da, (gl += (n - gl) / da), (_l += (e - _l) / da), (vl += (t - vl) / da);
}
function Sd() {
  rr.point = z6;
}
function z6(n, e) {
  (n *= Tt), (e *= Tt);
  var t = Dt(e);
  (Ai = t * Dt(n)),
    (li = t * vt(n)),
    (ui = vt(e)),
    (rr.point = G6),
    Qa(Ai, li, ui);
}
function G6(n, e) {
  (n *= Tt), (e *= Tt);
  var t = Dt(e),
    i = t * Dt(n),
    r = t * vt(n),
    s = vt(e),
    u = ji(
      kr(
        (u = li * s - ui * r) * u +
          (u = ui * i - Ai * s) * u +
          (u = Ai * r - li * i) * u
      ),
      Ai * i + li * r + ui * s
    );
  (ml += u),
    (xl += u * (Ai + (Ai = i))),
    (yl += u * (li + (li = r))),
    (bl += u * (ui + (ui = s))),
    Qa(Ai, li, ui);
}
function Ed() {
  rr.point = Tc;
}
function H6() {
  rr.point = W6;
}
function V6() {
  o2(r2, s2), (rr.point = Tc);
}
function W6(n, e) {
  (r2 = n), (s2 = e), (n *= Tt), (e *= Tt), (rr.point = o2);
  var t = Dt(e);
  (Ai = t * Dt(n)), (li = t * vt(n)), (ui = vt(e)), Qa(Ai, li, ui);
}
function o2(n, e) {
  (n *= Tt), (e *= Tt);
  var t = Dt(e),
    i = t * Dt(n),
    r = t * vt(n),
    s = vt(e),
    u = li * s - ui * r,
    c = ui * i - Ai * s,
    d = Ai * r - li * i,
    p = Du(u, c, d),
    g = zr(p),
    _ = p && -g / p;
  Nu.add(_ * u),
    Fu.add(_ * c),
    ku.add(_ * d),
    (ml += g),
    (xl += g * (Ai + (Ai = i))),
    (yl += g * (li + (li = r))),
    (bl += g * (ui + (ui = s))),
    Qa(Ai, li, ui);
}
function wd(n) {
  (da = ml = gl = _l = vl = xl = yl = bl = 0),
    (Nu = new Nr()),
    (Fu = new Nr()),
    (ku = new Nr()),
    Jl(n, rr);
  var e = +Nu,
    t = +Fu,
    i = +ku,
    r = Du(e, t, i);
  return r < ul &&
    ((e = xl),
    (t = yl),
    (i = bl),
    ml < Ht && ((e = gl), (t = _l), (i = vl)),
    (r = Du(e, t, i)),
    r < ul)
    ? [NaN, NaN]
    : [ji(t, e) * Sn, zr(i / r) * Sn];
}
function zu(n, e) {
  function t(i, r) {
    return (i = n(i, r)), e(i[0], i[1]);
  }
  return (
    n.invert &&
      e.invert &&
      (t.invert = function (i, r) {
        return (i = e.invert(i, r)), i && n.invert(i[0], i[1]);
      }),
    t
  );
}
function Gu(n, e) {
  return an(n) > $t && (n -= Math.round(n / Di) * Di), [n, e];
}
Gu.invert = Gu;
function a2(n, e, t) {
  return (n %= Di)
    ? e || t
      ? zu(Cd(n), Rd(e, t))
      : Cd(n)
    : e || t
    ? Rd(e, t)
    : Gu;
}
function Td(n) {
  return function (e, t) {
    return (e += n), an(e) > $t && (e -= Math.round(e / Di) * Di), [e, t];
  };
}
function Cd(n) {
  var e = Td(n);
  return (e.invert = Td(-n)), e;
}
function Rd(n, e) {
  var t = Dt(n),
    i = vt(n),
    r = Dt(e),
    s = vt(e);
  function u(c, d) {
    var p = Dt(d),
      g = Dt(c) * p,
      _ = vt(c) * p,
      x = vt(d),
      M = x * t + g * i;
    return [ji(_ * r - M * s, g * t - x * i), zr(M * r + _ * s)];
  }
  return (
    (u.invert = function (c, d) {
      var p = Dt(d),
        g = Dt(c) * p,
        _ = vt(c) * p,
        x = vt(d),
        M = x * r - _ * s;
      return [ji(_ * r + x * s, g * t + M * i), zr(M * t - g * i)];
    }),
    u
  );
}
function j6(n) {
  n = a2(n[0] * Tt, n[1] * Tt, n.length > 2 ? n[2] * Tt : 0);
  function e(t) {
    return (t = n(t[0] * Tt, t[1] * Tt)), (t[0] *= Sn), (t[1] *= Sn), t;
  }
  return (
    (e.invert = function (t) {
      return (
        (t = n.invert(t[0] * Tt, t[1] * Tt)), (t[0] *= Sn), (t[1] *= Sn), t
      );
    }),
    e
  );
}
function X6(n, e, t, i, r, s) {
  if (t) {
    var u = Dt(e),
      c = vt(e),
      d = i * t;
    r == null
      ? ((r = e + i * Di), (s = e - d / 2))
      : ((r = Pd(u, r)),
        (s = Pd(u, s)),
        (i > 0 ? r < s : r > s) && (r += i * Di));
    for (var p, g = r; i > 0 ? g > s : g < s; g -= d)
      (p = dl([u, -c * Dt(g), -c * vt(g)])), n.point(p[0], p[1]);
  }
}
function Pd(n, e) {
  (e = ks(e)), (e[0] -= n), pl(e);
  var t = O6(-e[1]);
  return ((-e[2] < 0 ? -t : t) + Di - Ht) % Di;
}
function A2() {
  var n = [],
    e;
  return {
    point: function (t, i, r) {
      e.push([t, i, r]);
    },
    lineStart: function () {
      n.push((e = []));
    },
    lineEnd: Yn,
    rejoin: function () {
      n.length > 1 && n.push(n.pop().concat(n.shift()));
    },
    result: function () {
      var t = n;
      return (n = []), (e = null), t;
    },
  };
}
function el(n, e) {
  return an(n[0] - e[0]) < Ht && an(n[1] - e[1]) < Ht;
}
function qA(n, e, t, i) {
  (this.x = n),
    (this.z = e),
    (this.o = t),
    (this.e = i),
    (this.v = !1),
    (this.n = this.p = null);
}
function l2(n, e, t, i, r) {
  var s = [],
    u = [],
    c,
    d;
  if (
    (n.forEach(function (E) {
      if (!((C = E.length - 1) <= 0)) {
        var C,
          S = E[0],
          b = E[C],
          L;
        if (el(S, b)) {
          if (!S[2] && !b[2]) {
            for (r.lineStart(), c = 0; c < C; ++c) r.point((S = E[c])[0], S[1]);
            r.lineEnd();
            return;
          }
          b[0] += 2 * Ht;
        }
        s.push((L = new qA(S, E, null, !0))),
          u.push((L.o = new qA(S, null, L, !1))),
          s.push((L = new qA(b, E, null, !1))),
          u.push((L.o = new qA(b, null, L, !0)));
      }
    }),
    !!s.length)
  ) {
    for (u.sort(e), Ld(s), Ld(u), c = 0, d = u.length; c < d; ++c)
      u[c].e = t = !t;
    for (var p = s[0], g, _; ; ) {
      for (var x = p, M = !0; x.v; ) if ((x = x.n) === p) return;
      (g = x.z), r.lineStart();
      do {
        if (((x.v = x.o.v = !0), x.e)) {
          if (M)
            for (c = 0, d = g.length; c < d; ++c) r.point((_ = g[c])[0], _[1]);
          else i(x.x, x.n.x, 1, r);
          x = x.n;
        } else {
          if (M)
            for (g = x.p.z, c = g.length - 1; c >= 0; --c)
              r.point((_ = g[c])[0], _[1]);
          else i(x.x, x.p.x, -1, r);
          x = x.p;
        }
        (x = x.o), (g = x.z), (M = !M);
      } while (!x.v);
      r.lineEnd();
    }
  }
}
function Ld(n) {
  if ((e = n.length)) {
    for (var e, t = 0, i = n[0], r; ++t < e; )
      (i.n = r = n[t]), (r.p = i), (i = r);
    (i.n = r = n[0]), (r.p = i);
  }
}
function iu(n) {
  return an(n[0]) <= $t ? n[0] : I6(n[0]) * (((an(n[0]) + $t) % Di) - $t);
}
function u2(n, e) {
  var t = iu(e),
    i = e[1],
    r = vt(i),
    s = [vt(t), -Dt(t), 0],
    u = 0,
    c = 0,
    d = new Nr();
  r === 1 ? (i = Vi + Ht) : r === -1 && (i = -Vi - Ht);
  for (var p = 0, g = n.length; p < g; ++p)
    if ((x = (_ = n[p]).length))
      for (
        var _,
          x,
          M = _[x - 1],
          E = iu(M),
          C = M[1] / 2 + cl,
          S = vt(C),
          b = Dt(C),
          L = 0;
        L < x;
        ++L, E = R, S = q, b = I, M = T
      ) {
        var T = _[L],
          R = iu(T),
          U = T[1] / 2 + cl,
          q = vt(U),
          I = Dt(U),
          N = R - E,
          D = N >= 0 ? 1 : -1,
          O = D * N,
          F = O > $t,
          $ = S * q;
        if (
          (d.add(ji($ * D * vt(O), b * I + $ * Dt(O))),
          (u += F ? N + D * Di : N),
          F ^ (E >= t) ^ (R >= t))
        ) {
          var V = Uo(ks(M), ks(T));
          pl(V);
          var Q = Uo(s, V);
          pl(Q);
          var k = (F ^ (N >= 0) ? -1 : 1) * zr(Q[2]);
          (i > k || (i === k && (V[0] || V[1]))) &&
            (c += F ^ (N >= 0) ? 1 : -1);
        }
      }
  return (u < -Ht || (u < Ht && d < -ul)) ^ (c & 1);
}
function c2(n, e, t, i) {
  return function (r) {
    var s = e(r),
      u = A2(),
      c = e(u),
      d = !1,
      p,
      g,
      _,
      x = {
        point: M,
        lineStart: C,
        lineEnd: S,
        polygonStart: function () {
          (x.point = b), (x.lineStart = L), (x.lineEnd = T), (g = []), (p = []);
        },
        polygonEnd: function () {
          (x.point = M), (x.lineStart = C), (x.lineEnd = S), (g = Ua(g));
          var R = u2(p, i);
          g.length
            ? (d || (r.polygonStart(), (d = !0)), l2(g, $6, R, t, r))
            : R &&
              (d || (r.polygonStart(), (d = !0)),
              r.lineStart(),
              t(null, null, 1, r),
              r.lineEnd()),
            d && (r.polygonEnd(), (d = !1)),
            (g = p = null);
        },
        sphere: function () {
          r.polygonStart(),
            r.lineStart(),
            t(null, null, 1, r),
            r.lineEnd(),
            r.polygonEnd();
        },
      };
    function M(R, U) {
      n(R, U) && r.point(R, U);
    }
    function E(R, U) {
      s.point(R, U);
    }
    function C() {
      (x.point = E), s.lineStart();
    }
    function S() {
      (x.point = M), s.lineEnd();
    }
    function b(R, U) {
      _.push([R, U]), c.point(R, U);
    }
    function L() {
      c.lineStart(), (_ = []);
    }
    function T() {
      b(_[0][0], _[0][1]), c.lineEnd();
      var R = c.clean(),
        U = u.result(),
        q,
        I = U.length,
        N,
        D,
        O;
      if ((_.pop(), p.push(_), (_ = null), !!I)) {
        if (R & 1) {
          if (((D = U[0]), (N = D.length - 1) > 0)) {
            for (
              d || (r.polygonStart(), (d = !0)), r.lineStart(), q = 0;
              q < N;
              ++q
            )
              r.point((O = D[q])[0], O[1]);
            r.lineEnd();
          }
          return;
        }
        I > 1 && R & 2 && U.push(U.pop().concat(U.shift())),
          g.push(U.filter(Q6));
      }
    }
    return x;
  };
}
function Q6(n) {
  return n.length > 1;
}
function $6(n, e) {
  return (
    ((n = n.x)[0] < 0 ? n[1] - Vi - Ht : Vi - n[1]) -
    ((e = e.x)[0] < 0 ? e[1] - Vi - Ht : Vi - e[1])
  );
}
const Dd = c2(
  function () {
    return !0;
  },
  Y6,
  K6,
  [-$t, -Vi]
);
function Y6(n) {
  var e = NaN,
    t = NaN,
    i = NaN,
    r;
  return {
    lineStart: function () {
      n.lineStart(), (r = 1);
    },
    point: function (s, u) {
      var c = s > 0 ? $t : -$t,
        d = an(s - e);
      an(d - $t) < Ht
        ? (n.point(e, (t = (t + u) / 2 > 0 ? Vi : -Vi)),
          n.point(i, t),
          n.lineEnd(),
          n.lineStart(),
          n.point(c, t),
          n.point(s, t),
          (r = 0))
        : i !== c &&
          d >= $t &&
          (an(e - i) < Ht && (e -= i * Ht),
          an(s - c) < Ht && (s -= c * Ht),
          (t = Z6(e, t, s, u)),
          n.point(i, t),
          n.lineEnd(),
          n.lineStart(),
          n.point(c, t),
          (r = 0)),
        n.point((e = s), (t = u)),
        (i = c);
    },
    lineEnd: function () {
      n.lineEnd(), (e = t = NaN);
    },
    clean: function () {
      return 2 - r;
    },
  };
}
function Z6(n, e, t, i) {
  var r,
    s,
    u = vt(n - t);
  return an(u) > Ht
    ? $1(
        (vt(e) * (s = Dt(i)) * vt(t) - vt(i) * (r = Dt(e)) * vt(n)) /
          (r * s * u)
      )
    : (e + i) / 2;
}
function K6(n, e, t, i) {
  var r;
  if (n == null)
    (r = t * Vi),
      i.point(-$t, r),
      i.point(0, r),
      i.point($t, r),
      i.point($t, 0),
      i.point($t, -r),
      i.point(0, -r),
      i.point(-$t, -r),
      i.point(-$t, 0),
      i.point(-$t, r);
  else if (an(n[0] - e[0]) > Ht) {
    var s = n[0] < e[0] ? $t : -$t;
    (r = (t * s) / 2), i.point(-s, r), i.point(0, r), i.point(s, r);
  } else i.point(e[0], e[1]);
}
function J6(n) {
  var e = Dt(n),
    t = 6 * Tt,
    i = e > 0,
    r = an(e) > Ht;
  function s(g, _, x, M) {
    X6(M, n, t, x, g, _);
  }
  function u(g, _) {
    return Dt(g) * Dt(_) > e;
  }
  function c(g) {
    var _, x, M, E, C;
    return {
      lineStart: function () {
        (E = M = !1), (C = 1);
      },
      point: function (S, b) {
        var L = [S, b],
          T,
          R = u(S, b),
          U = i ? (R ? 0 : p(S, b)) : R ? p(S + (S < 0 ? $t : -$t), b) : 0;
        if (
          (!_ && (E = M = R) && g.lineStart(),
          R !== M &&
            ((T = d(_, L)), (!T || el(_, T) || el(L, T)) && (L[2] = 1)),
          R !== M)
        )
          (C = 0),
            R
              ? (g.lineStart(), (T = d(L, _)), g.point(T[0], T[1]))
              : ((T = d(_, L)), g.point(T[0], T[1], 2), g.lineEnd()),
            (_ = T);
        else if (r && _ && i ^ R) {
          var q;
          !(U & x) &&
            (q = d(L, _, !0)) &&
            ((C = 0),
            i
              ? (g.lineStart(),
                g.point(q[0][0], q[0][1]),
                g.point(q[1][0], q[1][1]),
                g.lineEnd())
              : (g.point(q[1][0], q[1][1]),
                g.lineEnd(),
                g.lineStart(),
                g.point(q[0][0], q[0][1], 3)));
        }
        R && (!_ || !el(_, L)) && g.point(L[0], L[1]),
          (_ = L),
          (M = R),
          (x = U);
      },
      lineEnd: function () {
        M && g.lineEnd(), (_ = null);
      },
      clean: function () {
        return C | ((E && M) << 1);
      },
    };
  }
  function d(g, _, x) {
    var M = ks(g),
      E = ks(_),
      C = [1, 0, 0],
      S = Uo(M, E),
      b = OA(S, S),
      L = S[0],
      T = b - L * L;
    if (!T) return !x && g;
    var R = (e * b) / T,
      U = (-e * L) / T,
      q = Uo(C, S),
      I = UA(C, R),
      N = UA(S, U);
    nu(I, N);
    var D = q,
      O = OA(I, D),
      F = OA(D, D),
      $ = O * O - F * (OA(I, I) - 1);
    if (!($ < 0)) {
      var V = kr($),
        Q = UA(D, (-O - V) / F);
      if ((nu(Q, I), (Q = dl(Q)), !x)) return Q;
      var k = g[0],
        te = _[0],
        ee = g[1],
        se = _[1],
        pe;
      te < k && ((pe = k), (k = te), (te = pe));
      var de = te - k,
        oe = an(de - $t) < Ht,
        he = oe || de < Ht;
      if (
        (!oe && se < ee && ((pe = ee), (ee = se), (se = pe)),
        he
          ? oe
            ? (ee + se > 0) ^ (Q[1] < (an(Q[0] - k) < Ht ? ee : se))
            : ee <= Q[1] && Q[1] <= se
          : (de > $t) ^ (k <= Q[0] && Q[0] <= te))
      ) {
        var Te = UA(D, (-O + V) / F);
        return nu(Te, I), [Q, dl(Te)];
      }
    }
  }
  function p(g, _) {
    var x = i ? n : $t - n,
      M = 0;
    return (
      g < -x ? (M |= 1) : g > x && (M |= 2),
      _ < -x ? (M |= 4) : _ > x && (M |= 8),
      M
    );
  }
  return c2(u, c, s, i ? [0, -n] : [-$t, n - $t]);
}
function eb(n, e, t, i, r, s) {
  var u = n[0],
    c = n[1],
    d = e[0],
    p = e[1],
    g = 0,
    _ = 1,
    x = d - u,
    M = p - c,
    E;
  if (((E = t - u), !(!x && E > 0))) {
    if (((E /= x), x < 0)) {
      if (E < g) return;
      E < _ && (_ = E);
    } else if (x > 0) {
      if (E > _) return;
      E > g && (g = E);
    }
    if (((E = r - u), !(!x && E < 0))) {
      if (((E /= x), x < 0)) {
        if (E > _) return;
        E > g && (g = E);
      } else if (x > 0) {
        if (E < g) return;
        E < _ && (_ = E);
      }
      if (((E = i - c), !(!M && E > 0))) {
        if (((E /= M), M < 0)) {
          if (E < g) return;
          E < _ && (_ = E);
        } else if (M > 0) {
          if (E > _) return;
          E > g && (g = E);
        }
        if (((E = s - c), !(!M && E < 0))) {
          if (((E /= M), M < 0)) {
            if (E > _) return;
            E > g && (g = E);
          } else if (M > 0) {
            if (E < g) return;
            E < _ && (_ = E);
          }
          return (
            g > 0 && ((n[0] = u + g * x), (n[1] = c + g * M)),
            _ < 1 && ((e[0] = u + _ * x), (e[1] = c + _ * M)),
            !0
          );
        }
      }
    }
  }
}
var pa = 1e9,
  BA = -pa;
function tb(n, e, t, i) {
  function r(p, g) {
    return n <= p && p <= t && e <= g && g <= i;
  }
  function s(p, g, _, x) {
    var M = 0,
      E = 0;
    if (p == null || (M = u(p, _)) !== (E = u(g, _)) || (d(p, g) < 0) ^ (_ > 0))
      do x.point(M === 0 || M === 3 ? n : t, M > 1 ? i : e);
      while ((M = (M + _ + 4) % 4) !== E);
    else x.point(g[0], g[1]);
  }
  function u(p, g) {
    return an(p[0] - n) < Ht
      ? g > 0
        ? 0
        : 3
      : an(p[0] - t) < Ht
      ? g > 0
        ? 2
        : 1
      : an(p[1] - e) < Ht
      ? g > 0
        ? 1
        : 0
      : g > 0
      ? 3
      : 2;
  }
  function c(p, g) {
    return d(p.x, g.x);
  }
  function d(p, g) {
    var _ = u(p, 1),
      x = u(g, 1);
    return _ !== x
      ? _ - x
      : _ === 0
      ? g[1] - p[1]
      : _ === 1
      ? p[0] - g[0]
      : _ === 2
      ? p[1] - g[1]
      : g[0] - p[0];
  }
  return function (p) {
    var g = p,
      _ = A2(),
      x,
      M,
      E,
      C,
      S,
      b,
      L,
      T,
      R,
      U,
      q,
      I = {
        point: N,
        lineStart: $,
        lineEnd: V,
        polygonStart: O,
        polygonEnd: F,
      };
    function N(k, te) {
      r(k, te) && g.point(k, te);
    }
    function D() {
      for (var k = 0, te = 0, ee = M.length; te < ee; ++te)
        for (
          var se = M[te],
            pe = 1,
            de = se.length,
            oe = se[0],
            he,
            Te,
            Pe = oe[0],
            Oe = oe[1];
          pe < de;
          ++pe
        )
          (he = Pe),
            (Te = Oe),
            (oe = se[pe]),
            (Pe = oe[0]),
            (Oe = oe[1]),
            Te <= i
              ? Oe > i && (Pe - he) * (i - Te) > (Oe - Te) * (n - he) && ++k
              : Oe <= i && (Pe - he) * (i - Te) < (Oe - Te) * (n - he) && --k;
      return k;
    }
    function O() {
      (g = _), (x = []), (M = []), (q = !0);
    }
    function F() {
      var k = D(),
        te = q && k,
        ee = (x = Ua(x)).length;
      (te || ee) &&
        (p.polygonStart(),
        te && (p.lineStart(), s(null, null, 1, p), p.lineEnd()),
        ee && l2(x, c, k, s, p),
        p.polygonEnd()),
        (g = p),
        (x = M = E = null);
    }
    function $() {
      (I.point = Q), M && M.push((E = [])), (U = !0), (R = !1), (L = T = NaN);
    }
    function V() {
      x && (Q(C, S), b && R && _.rejoin(), x.push(_.result())),
        (I.point = N),
        R && g.lineEnd();
    }
    function Q(k, te) {
      var ee = r(k, te);
      if ((M && E.push([k, te]), U))
        (C = k),
          (S = te),
          (b = ee),
          (U = !1),
          ee && (g.lineStart(), g.point(k, te));
      else if (ee && R) g.point(k, te);
      else {
        var se = [
            (L = Math.max(BA, Math.min(pa, L))),
            (T = Math.max(BA, Math.min(pa, T))),
          ],
          pe = [
            (k = Math.max(BA, Math.min(pa, k))),
            (te = Math.max(BA, Math.min(pa, te))),
          ];
        eb(se, pe, n, e, t, i)
          ? (R || (g.lineStart(), g.point(se[0], se[1])),
            g.point(pe[0], pe[1]),
            ee || g.lineEnd(),
            (q = !1))
          : ee && (g.lineStart(), g.point(k, te), (q = !1));
      }
      (L = k), (T = te), (R = ee);
    }
    return I;
  };
}
var Hu,
  Vu,
  tl,
  nl,
  qo = {
    sphere: Yn,
    point: Yn,
    lineStart: nb,
    lineEnd: Yn,
    polygonStart: Yn,
    polygonEnd: Yn,
  };
function nb() {
  (qo.point = rb), (qo.lineEnd = ib);
}
function ib() {
  qo.point = qo.lineEnd = Yn;
}
function rb(n, e) {
  (n *= Tt), (e *= Tt), (Vu = n), (tl = vt(e)), (nl = Dt(e)), (qo.point = sb);
}
function sb(n, e) {
  (n *= Tt), (e *= Tt);
  var t = vt(e),
    i = Dt(e),
    r = an(n - Vu),
    s = Dt(r),
    u = vt(r),
    c = i * u,
    d = nl * t - tl * i * s,
    p = tl * t + nl * i * s;
  Hu.add(ji(kr(c * c + d * d), p)), (Vu = n), (tl = t), (nl = i);
}
function ob(n) {
  return (Hu = new Nr()), Jl(n, qo), +Hu;
}
var Wu = [null, null],
  ab = { type: "LineString", coordinates: Wu };
function fs(n, e) {
  return (Wu[0] = n), (Wu[1] = e), ob(ab);
}
var Id = {
    Feature: function (n, e) {
      return Ml(n.geometry, e);
    },
    FeatureCollection: function (n, e) {
      for (var t = n.features, i = -1, r = t.length; ++i < r; )
        if (Ml(t[i].geometry, e)) return !0;
      return !1;
    },
  },
  Od = {
    Sphere: function () {
      return !0;
    },
    Point: function (n, e) {
      return Ud(n.coordinates, e);
    },
    MultiPoint: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (Ud(t[i], e)) return !0;
      return !1;
    },
    LineString: function (n, e) {
      return qd(n.coordinates, e);
    },
    MultiLineString: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (qd(t[i], e)) return !0;
      return !1;
    },
    Polygon: function (n, e) {
      return Bd(n.coordinates, e);
    },
    MultiPolygon: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (Bd(t[i], e)) return !0;
      return !1;
    },
    GeometryCollection: function (n, e) {
      for (var t = n.geometries, i = -1, r = t.length; ++i < r; )
        if (Ml(t[i], e)) return !0;
      return !1;
    },
  };
function Ml(n, e) {
  return n && Od.hasOwnProperty(n.type) ? Od[n.type](n, e) : !1;
}
function Ud(n, e) {
  return fs(n, e) === 0;
}
function qd(n, e) {
  for (var t, i, r, s = 0, u = n.length; s < u; s++) {
    if (
      ((i = fs(n[s], e)),
      i === 0 ||
        (s > 0 &&
          ((r = fs(n[s], n[s - 1])),
          r > 0 &&
            t <= r &&
            i <= r &&
            (t + i - r) * (1 - Math.pow((t - i) / r, 2)) < ul * r)))
    )
      return !0;
    t = i;
  }
  return !1;
}
function Bd(n, e) {
  return !!u2(n.map(Ab), f2(e));
}
function Ab(n) {
  return (n = n.map(f2)), n.pop(), n;
}
function f2(n) {
  return [n[0] * Tt, n[1] * Tt];
}
function lb(n, e) {
  return (n && Id.hasOwnProperty(n.type) ? Id[n.type] : Ml)(n, e);
}
function Nd(n, e, t) {
  var i = Mo(n, e - Ht, t).concat(e);
  return function (r) {
    return i.map(function (s) {
      return [r, s];
    });
  };
}
function Fd(n, e, t) {
  var i = Mo(n, e - Ht, t).concat(e);
  return function (r) {
    return i.map(function (s) {
      return [s, r];
    });
  };
}
function ub() {
  var n,
    e,
    t,
    i,
    r,
    s,
    u,
    c,
    d = 10,
    p = d,
    g = 90,
    _ = 360,
    x,
    M,
    E,
    C,
    S = 2.5;
  function b() {
    return { type: "MultiLineString", coordinates: L() };
  }
  function L() {
    return Mo(IA(i / g) * g, t, g)
      .map(E)
      .concat(Mo(IA(c / _) * _, u, _).map(C))
      .concat(
        Mo(IA(e / d) * d, n, d)
          .filter(function (T) {
            return an(T % g) > Ht;
          })
          .map(x)
      )
      .concat(
        Mo(IA(s / p) * p, r, p)
          .filter(function (T) {
            return an(T % _) > Ht;
          })
          .map(M)
      );
  }
  return (
    (b.lines = function () {
      return L().map(function (T) {
        return { type: "LineString", coordinates: T };
      });
    }),
    (b.outline = function () {
      return {
        type: "Polygon",
        coordinates: [
          E(i).concat(
            C(u).slice(1),
            E(t).reverse().slice(1),
            C(c).reverse().slice(1)
          ),
        ],
      };
    }),
    (b.extent = function (T) {
      return arguments.length
        ? b.extentMajor(T).extentMinor(T)
        : b.extentMinor();
    }),
    (b.extentMajor = function (T) {
      return arguments.length
        ? ((i = +T[0][0]),
          (t = +T[1][0]),
          (c = +T[0][1]),
          (u = +T[1][1]),
          i > t && ((T = i), (i = t), (t = T)),
          c > u && ((T = c), (c = u), (u = T)),
          b.precision(S))
        : [
            [i, c],
            [t, u],
          ];
    }),
    (b.extentMinor = function (T) {
      return arguments.length
        ? ((e = +T[0][0]),
          (n = +T[1][0]),
          (s = +T[0][1]),
          (r = +T[1][1]),
          e > n && ((T = e), (e = n), (n = T)),
          s > r && ((T = s), (s = r), (r = T)),
          b.precision(S))
        : [
            [e, s],
            [n, r],
          ];
    }),
    (b.step = function (T) {
      return arguments.length ? b.stepMajor(T).stepMinor(T) : b.stepMinor();
    }),
    (b.stepMajor = function (T) {
      return arguments.length ? ((g = +T[0]), (_ = +T[1]), b) : [g, _];
    }),
    (b.stepMinor = function (T) {
      return arguments.length ? ((d = +T[0]), (p = +T[1]), b) : [d, p];
    }),
    (b.precision = function (T) {
      return arguments.length
        ? ((S = +T),
          (x = Nd(s, r, 90)),
          (M = Fd(e, n, S)),
          (E = Nd(c, u, 90)),
          (C = Fd(i, t, S)),
          b)
        : S;
    }),
    b
      .extentMajor([
        [-180, -90 + Ht],
        [180, 90 - Ht],
      ])
      .extentMinor([
        [-180, -80 - Ht],
        [180, 80 + Ht],
      ])
  );
}
function cb() {
  return ub()();
}
function Cc(n, e) {
  var t = n[0] * Tt,
    i = n[1] * Tt,
    r = e[0] * Tt,
    s = e[1] * Tt,
    u = Dt(i),
    c = vt(i),
    d = Dt(s),
    p = vt(s),
    g = u * Dt(t),
    _ = u * vt(t),
    x = d * Dt(r),
    M = d * vt(r),
    E = 2 * zr(kr(md(s - i) + u * d * md(r - t))),
    C = vt(E),
    S = E
      ? function (b) {
          var L = vt((b *= E)) / C,
            T = vt(E - b) / C,
            R = T * g + L * x,
            U = T * _ + L * M,
            q = T * c + L * p;
          return [ji(U, R) * Sn, ji(q, kr(R * R + U * U)) * Sn];
        }
      : function () {
          return [t * Sn, i * Sn];
        };
  return (S.distance = E), S;
}
const kd = (n) => n;
var Bo = 1 / 0,
  Sl = Bo,
  qa = -Bo,
  El = qa,
  fb = {
    point: hb,
    lineStart: Yn,
    lineEnd: Yn,
    polygonStart: Yn,
    polygonEnd: Yn,
    result: function () {
      var n = [
        [Bo, Sl],
        [qa, El],
      ];
      return (qa = El = -(Sl = Bo = 1 / 0)), n;
    },
  };
function hb(n, e) {
  n < Bo && (Bo = n),
    n > qa && (qa = n),
    e < Sl && (Sl = e),
    e > El && (El = e);
}
const zd = fb;
function Rc(n) {
  return function (e) {
    var t = new ju();
    for (var i in n) t[i] = n[i];
    return (t.stream = e), t;
  };
}
function ju() {}
ju.prototype = {
  constructor: ju,
  point: function (n, e) {
    this.stream.point(n, e);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  },
};
function Pc(n, e, t) {
  var i = n.clipExtent && n.clipExtent();
  return (
    n.scale(150).translate([0, 0]),
    i != null && n.clipExtent(null),
    Jl(t, n.stream(zd)),
    e(zd.result()),
    i != null && n.clipExtent(i),
    n
  );
}
function h2(n, e, t) {
  return Pc(
    n,
    function (i) {
      var r = e[1][0] - e[0][0],
        s = e[1][1] - e[0][1],
        u = Math.min(r / (i[1][0] - i[0][0]), s / (i[1][1] - i[0][1])),
        c = +e[0][0] + (r - u * (i[1][0] + i[0][0])) / 2,
        d = +e[0][1] + (s - u * (i[1][1] + i[0][1])) / 2;
      n.scale(150 * u).translate([c, d]);
    },
    t
  );
}
function db(n, e, t) {
  return h2(n, [[0, 0], e], t);
}
function pb(n, e, t) {
  return Pc(
    n,
    function (i) {
      var r = +e,
        s = r / (i[1][0] - i[0][0]),
        u = (r - s * (i[1][0] + i[0][0])) / 2,
        c = -s * i[0][1];
      n.scale(150 * s).translate([u, c]);
    },
    t
  );
}
function mb(n, e, t) {
  return Pc(
    n,
    function (i) {
      var r = +e,
        s = r / (i[1][1] - i[0][1]),
        u = -s * i[0][0],
        c = (r - s * (i[1][1] + i[0][1])) / 2;
      n.scale(150 * s).translate([u, c]);
    },
    t
  );
}
var Gd = 16,
  gb = Dt(30 * Tt);
function Hd(n, e) {
  return +e ? vb(n, e) : _b(n);
}
function _b(n) {
  return Rc({
    point: function (e, t) {
      (e = n(e, t)), this.stream.point(e[0], e[1]);
    },
  });
}
function vb(n, e) {
  function t(i, r, s, u, c, d, p, g, _, x, M, E, C, S) {
    var b = p - i,
      L = g - r,
      T = b * b + L * L;
    if (T > 4 * e && C--) {
      var R = u + x,
        U = c + M,
        q = d + E,
        I = kr(R * R + U * U + q * q),
        N = zr((q /= I)),
        D = an(an(q) - 1) < Ht || an(s - _) < Ht ? (s + _) / 2 : ji(U, R),
        O = n(D, N),
        F = O[0],
        $ = O[1],
        V = F - i,
        Q = $ - r,
        k = L * V - b * Q;
      ((k * k) / T > e ||
        an((b * V + L * Q) / T - 0.5) > 0.3 ||
        u * x + c * M + d * E < gb) &&
        (t(i, r, s, u, c, d, F, $, D, (R /= I), (U /= I), q, C, S),
        S.point(F, $),
        t(F, $, D, R, U, q, p, g, _, x, M, E, C, S));
    }
  }
  return function (i) {
    var r,
      s,
      u,
      c,
      d,
      p,
      g,
      _,
      x,
      M,
      E,
      C,
      S = {
        point: b,
        lineStart: L,
        lineEnd: R,
        polygonStart: function () {
          i.polygonStart(), (S.lineStart = U);
        },
        polygonEnd: function () {
          i.polygonEnd(), (S.lineStart = L);
        },
      };
    function b(N, D) {
      (N = n(N, D)), i.point(N[0], N[1]);
    }
    function L() {
      (_ = NaN), (S.point = T), i.lineStart();
    }
    function T(N, D) {
      var O = ks([N, D]),
        F = n(N, D);
      t(
        _,
        x,
        g,
        M,
        E,
        C,
        (_ = F[0]),
        (x = F[1]),
        (g = N),
        (M = O[0]),
        (E = O[1]),
        (C = O[2]),
        Gd,
        i
      ),
        i.point(_, x);
    }
    function R() {
      (S.point = b), i.lineEnd();
    }
    function U() {
      L(), (S.point = q), (S.lineEnd = I);
    }
    function q(N, D) {
      T((r = N), D), (s = _), (u = x), (c = M), (d = E), (p = C), (S.point = T);
    }
    function I() {
      t(_, x, g, M, E, C, s, u, r, c, d, p, Gd, i), (S.lineEnd = R), R();
    }
    return S;
  };
}
var xb = Rc({
  point: function (n, e) {
    this.stream.point(n * Tt, e * Tt);
  },
});
function yb(n) {
  return Rc({
    point: function (e, t) {
      var i = n(e, t);
      return this.stream.point(i[0], i[1]);
    },
  });
}
function bb(n, e, t, i, r) {
  function s(u, c) {
    return (u *= i), (c *= r), [e + n * u, t - n * c];
  }
  return (
    (s.invert = function (u, c) {
      return [((u - e) / n) * i, ((t - c) / n) * r];
    }),
    s
  );
}
function Vd(n, e, t, i, r, s) {
  if (!s) return bb(n, e, t, i, r);
  var u = Dt(s),
    c = vt(s),
    d = u * n,
    p = c * n,
    g = u / n,
    _ = c / n,
    x = (c * t - u * e) / n,
    M = (c * e + u * t) / n;
  function E(C, S) {
    return (C *= i), (S *= r), [d * C - p * S + e, t - p * C - d * S];
  }
  return (
    (E.invert = function (C, S) {
      return [i * (g * C - _ * S + x), r * (M - _ * C - g * S)];
    }),
    E
  );
}
function Mb(n) {
  return Sb(function () {
    return n;
  })();
}
function Sb(n) {
  var e,
    t = 150,
    i = 480,
    r = 250,
    s = 0,
    u = 0,
    c = 0,
    d = 0,
    p = 0,
    g,
    _ = 0,
    x = 1,
    M = 1,
    E = null,
    C = Dd,
    S = null,
    b,
    L,
    T,
    R = kd,
    U = 0.5,
    q,
    I,
    N,
    D,
    O;
  function F(k) {
    return N(k[0] * Tt, k[1] * Tt);
  }
  function $(k) {
    return (k = N.invert(k[0], k[1])), k && [k[0] * Sn, k[1] * Sn];
  }
  (F.stream = function (k) {
    return D && O === k ? D : (D = xb(yb(g)(C(q(R((O = k)))))));
  }),
    (F.preclip = function (k) {
      return arguments.length ? ((C = k), (E = void 0), Q()) : C;
    }),
    (F.postclip = function (k) {
      return arguments.length ? ((R = k), (S = b = L = T = null), Q()) : R;
    }),
    (F.clipAngle = function (k) {
      return arguments.length
        ? ((C = +k ? J6((E = k * Tt)) : ((E = null), Dd)), Q())
        : E * Sn;
    }),
    (F.clipExtent = function (k) {
      return arguments.length
        ? ((R =
            k == null
              ? ((S = b = L = T = null), kd)
              : tb(
                  (S = +k[0][0]),
                  (b = +k[0][1]),
                  (L = +k[1][0]),
                  (T = +k[1][1])
                )),
          Q())
        : S == null
        ? null
        : [
            [S, b],
            [L, T],
          ];
    }),
    (F.scale = function (k) {
      return arguments.length ? ((t = +k), V()) : t;
    }),
    (F.translate = function (k) {
      return arguments.length ? ((i = +k[0]), (r = +k[1]), V()) : [i, r];
    }),
    (F.center = function (k) {
      return arguments.length
        ? ((s = (k[0] % 360) * Tt), (u = (k[1] % 360) * Tt), V())
        : [s * Sn, u * Sn];
    }),
    (F.rotate = function (k) {
      return arguments.length
        ? ((c = (k[0] % 360) * Tt),
          (d = (k[1] % 360) * Tt),
          (p = k.length > 2 ? (k[2] % 360) * Tt : 0),
          V())
        : [c * Sn, d * Sn, p * Sn];
    }),
    (F.angle = function (k) {
      return arguments.length ? ((_ = (k % 360) * Tt), V()) : _ * Sn;
    }),
    (F.reflectX = function (k) {
      return arguments.length ? ((x = k ? -1 : 1), V()) : x < 0;
    }),
    (F.reflectY = function (k) {
      return arguments.length ? ((M = k ? -1 : 1), V()) : M < 0;
    }),
    (F.precision = function (k) {
      return arguments.length ? ((q = Hd(I, (U = k * k))), Q()) : kr(U);
    }),
    (F.fitExtent = function (k, te) {
      return h2(F, k, te);
    }),
    (F.fitSize = function (k, te) {
      return db(F, k, te);
    }),
    (F.fitWidth = function (k, te) {
      return pb(F, k, te);
    }),
    (F.fitHeight = function (k, te) {
      return mb(F, k, te);
    });
  function V() {
    var k = Vd(t, 0, 0, x, M, _).apply(null, e(s, u)),
      te = Vd(t, i - k[0], r - k[1], x, M, _);
    return (
      (g = a2(c, d, p)), (I = zu(e, te)), (N = zu(g, I)), (q = Hd(I, U)), Q()
    );
  }
  function Q() {
    return (D = O = null), F;
  }
  return function () {
    return (e = n.apply(this, arguments)), (F.invert = e.invert && $), V();
  };
}
function Eb(n) {
  return function (e, t) {
    var i = kr(e * e + t * t),
      r = n(i),
      s = vt(r),
      u = Dt(r);
    return [ji(e * s, i * u), zr(i && (t * s) / i)];
  };
}
function d2(n, e) {
  var t = Dt(e),
    i = 1 + Dt(n) * t;
  return [(t * vt(n)) / i, vt(e) / i];
}
d2.invert = Eb(function (n) {
  return 2 * $1(n);
});
function wb() {
  return Mb(d2).scale(250).clipAngle(142);
}
function Tb(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function Cb(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Wd(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, Fb(i.key), i);
  }
}
function Rb(n, e, t) {
  return (
    e && Wd(n.prototype, e),
    t && Wd(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function Pb(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && Xu(n, e);
}
function wl(n) {
  return (
    (wl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    wl(n)
  );
}
function Xu(n, e) {
  return (
    (Xu = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    Xu(n, e)
  );
}
function Lb() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Db(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function Ib(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return Db(n);
}
function Ob(n) {
  var e = Lb();
  return function () {
    var i = wl(n),
      r;
    if (e) {
      var s = wl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return Ib(this, r);
  };
}
function aa(n, e) {
  return Ub(n) || Tb(n, e) || p2(n, e) || qb();
}
function Ub(n) {
  if (Array.isArray(n)) return n;
}
function p2(n, e) {
  if (n) {
    if (typeof n == "string") return jd(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return jd(n, e);
  }
}
function jd(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function qb() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Bb(n, e) {
  var t = (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (!t) {
    if (
      Array.isArray(n) ||
      (t = p2(n)) ||
      (e && n && typeof n.length == "number")
    ) {
      t && (n = t);
      var i = 0,
        r = function () {};
      return {
        s: r,
        n: function () {
          return i >= n.length ? { done: !0 } : { done: !1, value: n[i++] };
        },
        e: function (d) {
          throw d;
        },
        f: r,
      };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var s = !0,
    u = !1,
    c;
  return {
    s: function () {
      t = t.call(n);
    },
    n: function () {
      var d = t.next();
      return (s = d.done), d;
    },
    e: function (d) {
      (u = !0), (c = d);
    },
    f: function () {
      try {
        !s && t.return != null && t.return();
      } finally {
        if (u) throw c;
      }
    },
  };
}
function Nb(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function Fb(n) {
  var e = Nb(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var Xd = function () {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
      t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1,
      i = [],
      r = null;
    return (
      e.forEach(function (s) {
        if (r) {
          var u = (fs(s, r) * 180) / Math.PI;
          if (u > t)
            for (var c = Cc(r, s), d = 1 / Math.ceil(u / t), p = d; p < 1; )
              i.push(c(p)), (p += d);
        }
        i.push((r = s));
      }),
      i
    );
  },
  Qu =
    typeof window < "u" && window.THREE
      ? window.THREE
      : { BufferGeometry: cn, Float32BufferAttribute: Kt },
  kb = new Qu.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  m2 = (function (n) {
    Pb(t, n);
    var e = Ob(t);
    function t(i) {
      var r,
        s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1,
        u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5;
      Cb(this, t),
        (r = e.call(this)),
        (r.type = "GeoJsonGeometry"),
        (r.parameters = { geoJson: i, radius: s, resolution: u });
      var c = (
          {
            Point: _,
            MultiPoint: x,
            LineString: M,
            MultiLineString: E,
            Polygon: C,
            MultiPolygon: S,
          }[i.type] ||
          function () {
            return [];
          }
        )(i.coordinates, s),
        d = [],
        p = [],
        g = 0;
      c.forEach(function (b) {
        var L = d.length;
        Aa({ indices: d, vertices: p }, b), r.addGroup(L, d.length - L, g++);
      }),
        d.length && r.setIndex(d),
        p.length && r[kb]("position", new Qu.Float32BufferAttribute(p, 3));
      function _(b, L) {
        var T = ru(b[1], b[0], L),
          R = [];
        return [{ vertices: T, indices: R }];
      }
      function x(b, L) {
        var T = { vertices: [], indices: [] };
        return (
          b
            .map(function (R) {
              return _(R, L);
            })
            .forEach(function (R) {
              var U = aa(R, 1),
                q = U[0];
              Aa(T, q);
            }),
          [T]
        );
      }
      function M(b, L) {
        for (
          var T = Xd(b, u).map(function (D) {
              var O = aa(D, 2),
                F = O[0],
                $ = O[1];
              return ru($, F, L);
            }),
            R = Oa.flatten([T]),
            U = R.vertices,
            q = Math.round(U.length / 3),
            I = [],
            N = 1;
          N < q;
          N++
        )
          I.push(N - 1, N);
        return [{ vertices: U, indices: I }];
      }
      function E(b, L) {
        var T = { vertices: [], indices: [] };
        return (
          b
            .map(function (R) {
              return M(R, L);
            })
            .forEach(function (R) {
              var U = aa(R, 1),
                q = U[0];
              Aa(T, q);
            }),
          [T]
        );
      }
      function C(b, L) {
        for (
          var T = b.map(function (te) {
              return Xd(te, u).map(function (ee) {
                var se = aa(ee, 2),
                  pe = se[0],
                  de = se[1];
                return ru(de, pe, L);
              });
            }),
            R = Oa.flatten(T),
            U = R.vertices,
            q = R.holes,
            I = q[0] || 1 / 0,
            N = U.slice(0, I * 3),
            D = U.slice(I * 3),
            O = new Set(q),
            F = Math.round(U.length / 3),
            $ = [],
            V = [],
            Q = 1;
          Q < F;
          Q++
        )
          O.has(Q) || (Q < I ? $.push(Q - 1, Q) : V.push(Q - 1 - I, Q - I));
        var k = [{ indices: $, vertices: N }];
        return q.length && k.push({ indices: V, vertices: D }), k;
      }
      function S(b, L) {
        var T = { vertices: [], indices: [] },
          R = { vertices: [], indices: [] };
        b.map(function (q) {
          return C(q, L);
        }).forEach(function (q) {
          var I = aa(q, 2),
            N = I[0],
            D = I[1];
          Aa(T, N), D && Aa(R, D);
        });
        var U = [T];
        return R.vertices.length && U.push(R), U;
      }
      return r;
    }
    return Rb(t);
  })(Qu.BufferGeometry);
function Aa(n, e) {
  var t = Math.round(n.vertices.length / 3);
  Qd(n.vertices, e.vertices),
    Qd(
      n.indices,
      e.indices.map(function (i) {
        return i + t;
      })
    );
}
function Qd(n, e) {
  var t = Bb(e),
    i;
  try {
    for (t.s(); !(i = t.n()).done; ) {
      var r = i.value;
      n.push(r);
    }
  } catch (s) {
    t.e(s);
  } finally {
    t.f();
  }
}
function ru(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180;
  return [
    t * Math.sin(i) * Math.cos(r),
    t * Math.cos(i),
    t * Math.sin(i) * Math.sin(r),
  ];
}
function zb(n, e, t = !0) {
  if (!e || !e.isReady)
    throw new Error(
      "BufferGeometryUtils: Initialized MikkTSpace library required."
    );
  if (
    !n.hasAttribute("position") ||
    !n.hasAttribute("normal") ||
    !n.hasAttribute("uv")
  )
    throw new Error(
      'BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.'
    );
  function i(u) {
    if (u.normalized || u.isInterleavedBufferAttribute) {
      const c = new Float32Array(u.count * u.itemSize);
      for (let d = 0, p = 0; d < u.count; d++)
        (c[p++] = u.getX(d)),
          (c[p++] = u.getY(d)),
          u.itemSize > 2 && (c[p++] = u.getZ(d));
      return c;
    }
    return u.array instanceof Float32Array
      ? u.array
      : new Float32Array(u.array);
  }
  const r = n.index ? n.toNonIndexed() : n,
    s = e.generateTangents(
      i(r.attributes.position),
      i(r.attributes.normal),
      i(r.attributes.uv)
    );
  if (t) for (let u = 3; u < s.length; u += 4) s[u] *= -1;
  return r.setAttribute("tangent", new mn(s, 4)), n !== r && n.copy(r), n;
}
function g2(n, e = !1) {
  const t = n[0].index !== null,
    i = new Set(Object.keys(n[0].attributes)),
    r = new Set(Object.keys(n[0].morphAttributes)),
    s = {},
    u = {},
    c = n[0].morphTargetsRelative,
    d = new cn();
  let p = 0;
  for (let g = 0; g < n.length; ++g) {
    const _ = n[g];
    let x = 0;
    if (t !== (_.index !== null))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."
        ),
        null
      );
    for (const M in _.attributes) {
      if (!i.has(M))
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              '. All geometries must have compatible attributes; make sure "' +
              M +
              '" attribute exists among all geometries, or in none of them.'
          ),
          null
        );
      s[M] === void 0 && (s[M] = []), s[M].push(_.attributes[M]), x++;
    }
    if (x !== i.size)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". Make sure all geometries have the same number of attributes."
        ),
        null
      );
    if (c !== _.morphTargetsRelative)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". .morphTargetsRelative must be consistent throughout all geometries."
        ),
        null
      );
    for (const M in _.morphAttributes) {
      if (!r.has(M))
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              ".  .morphAttributes must be consistent throughout all geometries."
          ),
          null
        );
      u[M] === void 0 && (u[M] = []), u[M].push(_.morphAttributes[M]);
    }
    if (e) {
      let M;
      if (t) M = _.index.count;
      else if (_.attributes.position !== void 0)
        M = _.attributes.position.count;
      else
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              ". The geometry must have either an index or a position attribute"
          ),
          null
        );
      d.addGroup(p, M, g), (p += M);
    }
  }
  if (t) {
    let g = 0;
    const _ = [];
    for (let x = 0; x < n.length; ++x) {
      const M = n[x].index;
      for (let E = 0; E < M.count; ++E) _.push(M.getX(E) + g);
      g += n[x].attributes.position.count;
    }
    d.setIndex(_);
  }
  for (const g in s) {
    const _ = Tl(s[g]);
    if (!_)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the " +
            g +
            " attribute."
        ),
        null
      );
    d.setAttribute(g, _);
  }
  for (const g in u) {
    const _ = u[g][0].length;
    if (_ === 0) break;
    (d.morphAttributes = d.morphAttributes || {}), (d.morphAttributes[g] = []);
    for (let x = 0; x < _; ++x) {
      const M = [];
      for (let C = 0; C < u[g].length; ++C) M.push(u[g][C][x]);
      const E = Tl(M);
      if (!E)
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the " +
              g +
              " morphAttribute."
          ),
          null
        );
      d.morphAttributes[g].push(E);
    }
  }
  return d;
}
function Tl(n) {
  let e,
    t,
    i,
    r = -1,
    s = 0;
  for (let p = 0; p < n.length; ++p) {
    const g = n[p];
    if (g.isInterleavedBufferAttribute)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported."
        ),
        null
      );
    if ((e === void 0 && (e = g.array.constructor), e !== g.array.constructor))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."
        ),
        null
      );
    if ((t === void 0 && (t = g.itemSize), t !== g.itemSize))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."
        ),
        null
      );
    if ((i === void 0 && (i = g.normalized), i !== g.normalized))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."
        ),
        null
      );
    if ((r === -1 && (r = g.gpuType), r !== g.gpuType))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."
        ),
        null
      );
    s += g.array.length;
  }
  const u = new e(s);
  let c = 0;
  for (let p = 0; p < n.length; ++p)
    u.set(n[p].array, c), (c += n[p].array.length);
  const d = new mn(u, t, i);
  return r !== void 0 && (d.gpuType = r), d;
}
function Gb(n) {
  return n.isInstancedInterleavedBufferAttribute ||
    n.isInterleavedBufferAttribute
    ? Cl(n)
    : n.isInstancedBufferAttribute
    ? new L1().copy(n)
    : new mn().copy(n);
}
function Hb(n) {
  let e,
    t = 0,
    i = 0;
  for (let p = 0, g = n.length; p < g; ++p) {
    const _ = n[p];
    if ((e === void 0 && (e = _.array.constructor), e !== _.array.constructor))
      return (
        console.error(
          "AttributeBuffers of different types cannot be interleaved"
        ),
        null
      );
    (t += _.array.length), (i += _.itemSize);
  }
  const r = new P1(new e(t), i);
  let s = 0;
  const u = [],
    c = ["getX", "getY", "getZ", "getW"],
    d = ["setX", "setY", "setZ", "setW"];
  for (let p = 0, g = n.length; p < g; p++) {
    const _ = n[p],
      x = _.itemSize,
      M = _.count,
      E = new ja(r, x, s, _.normalized);
    u.push(E), (s += x);
    for (let C = 0; C < M; C++)
      for (let S = 0; S < x; S++) E[d[S]](C, _[c[S]](C));
  }
  return u;
}
function Cl(n) {
  const e = n.data.array.constructor,
    t = n.count,
    i = n.itemSize,
    r = n.normalized,
    s = new e(t * i);
  let u;
  n.isInstancedInterleavedBufferAttribute
    ? (u = new L1(s, i, r, n.meshPerAttribute))
    : (u = new mn(s, i, r));
  for (let c = 0; c < t; c++)
    u.setX(c, n.getX(c)),
      i >= 2 && u.setY(c, n.getY(c)),
      i >= 3 && u.setZ(c, n.getZ(c)),
      i >= 4 && u.setW(c, n.getW(c));
  return u;
}
function Vb(n) {
  const e = n.attributes,
    t = n.morphTargets,
    i = new Map();
  for (const r in e) {
    const s = e[r];
    s.isInterleavedBufferAttribute &&
      (i.has(s) || i.set(s, Cl(s)), (e[r] = i.get(s)));
  }
  for (const r in t) {
    const s = t[r];
    s.isInterleavedBufferAttribute &&
      (i.has(s) || i.set(s, Cl(s)), (t[r] = i.get(s)));
  }
}
function Wb(n) {
  let e = 0;
  for (const i in n.attributes) {
    const r = n.getAttribute(i);
    e += r.count * r.itemSize * r.array.BYTES_PER_ELEMENT;
  }
  const t = n.getIndex();
  return (e += t ? t.count * t.itemSize * t.array.BYTES_PER_ELEMENT : 0), e;
}
function jb(n, e = 1e-4) {
  e = Math.max(e, Number.EPSILON);
  const t = {},
    i = n.getIndex(),
    r = n.getAttribute("position"),
    s = i ? i.count : r.count;
  let u = 0;
  const c = Object.keys(n.attributes),
    d = {},
    p = {},
    g = [],
    _ = ["getX", "getY", "getZ", "getW"],
    x = ["setX", "setY", "setZ", "setW"];
  for (let S = 0, b = c.length; S < b; S++) {
    const L = c[S],
      T = n.attributes[L];
    d[L] = new mn(
      new T.array.constructor(T.count * T.itemSize),
      T.itemSize,
      T.normalized
    );
    const R = n.morphAttributes[L];
    R &&
      (p[L] = new mn(
        new R.array.constructor(R.count * R.itemSize),
        R.itemSize,
        R.normalized
      ));
  }
  const M = Math.log10(1 / e),
    E = Math.pow(10, M);
  for (let S = 0; S < s; S++) {
    const b = i ? i.getX(S) : S;
    let L = "";
    for (let T = 0, R = c.length; T < R; T++) {
      const U = c[T],
        q = n.getAttribute(U),
        I = q.itemSize;
      for (let N = 0; N < I; N++) L += `${~~(q[_[N]](b) * E)},`;
    }
    if (L in t) g.push(t[L]);
    else {
      for (let T = 0, R = c.length; T < R; T++) {
        const U = c[T],
          q = n.getAttribute(U),
          I = n.morphAttributes[U],
          N = q.itemSize,
          D = d[U],
          O = p[U];
        for (let F = 0; F < N; F++) {
          const $ = _[F],
            V = x[F];
          if ((D[V](u, q[$](b)), I))
            for (let Q = 0, k = I.length; Q < k; Q++) O[Q][V](u, I[Q][$](b));
        }
      }
      (t[L] = u), g.push(u), u++;
    }
  }
  const C = n.clone();
  for (const S in n.attributes) {
    const b = d[S];
    if (
      (C.setAttribute(
        S,
        new mn(b.array.slice(0, u * b.itemSize), b.itemSize, b.normalized)
      ),
      S in p)
    )
      for (let L = 0; L < p[S].length; L++) {
        const T = p[S][L];
        C.morphAttributes[S][L] = new mn(
          T.array.slice(0, u * T.itemSize),
          T.itemSize,
          T.normalized
        );
      }
  }
  return C.setIndex(g), C;
}
function Xb(n, e) {
  if (e === H3)
    return (
      console.warn(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."
      ),
      n
    );
  if (e === lh || e === V3) {
    let t = n.getIndex();
    if (t === null) {
      const u = [],
        c = n.getAttribute("position");
      if (c !== void 0) {
        for (let d = 0; d < c.count; d++) u.push(d);
        n.setIndex(u), (t = n.getIndex());
      } else
        return (
          console.error(
            "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."
          ),
          n
        );
    }
    const i = t.count - 2,
      r = [];
    if (e === lh)
      for (let u = 1; u <= i; u++)
        r.push(t.getX(0)), r.push(t.getX(u)), r.push(t.getX(u + 1));
    else
      for (let u = 0; u < i; u++)
        u % 2 === 0
          ? (r.push(t.getX(u)), r.push(t.getX(u + 1)), r.push(t.getX(u + 2)))
          : (r.push(t.getX(u + 2)), r.push(t.getX(u + 1)), r.push(t.getX(u)));
    r.length / 3 !== i &&
      console.error(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles."
      );
    const s = n.clone();
    return s.setIndex(r), s.clearGroups(), s;
  } else
    return (
      console.error(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",
        e
      ),
      n
    );
}
function Qb(n) {
  const e = new J(),
    t = new J(),
    i = new J(),
    r = new J(),
    s = new J(),
    u = new J(),
    c = new J(),
    d = new J(),
    p = new J();
  function g(pe, de, oe, he, Te, Pe, Oe, Je) {
    e.fromBufferAttribute(de, Te),
      t.fromBufferAttribute(de, Pe),
      i.fromBufferAttribute(de, Oe);
    const rt = pe.morphTargetInfluences;
    if (oe && rt) {
      c.set(0, 0, 0), d.set(0, 0, 0), p.set(0, 0, 0);
      for (let ot = 0, Rt = oe.length; ot < Rt; ot++) {
        const It = rt[ot],
          ft = oe[ot];
        It !== 0 &&
          (r.fromBufferAttribute(ft, Te),
          s.fromBufferAttribute(ft, Pe),
          u.fromBufferAttribute(ft, Oe),
          he
            ? (c.addScaledVector(r, It),
              d.addScaledVector(s, It),
              p.addScaledVector(u, It))
            : (c.addScaledVector(r.sub(e), It),
              d.addScaledVector(s.sub(t), It),
              p.addScaledVector(u.sub(i), It)));
      }
      e.add(c), t.add(d), i.add(p);
    }
    pe.isSkinnedMesh &&
      (pe.applyBoneTransform(Te, e),
      pe.applyBoneTransform(Pe, t),
      pe.applyBoneTransform(Oe, i)),
      (Je[Te * 3 + 0] = e.x),
      (Je[Te * 3 + 1] = e.y),
      (Je[Te * 3 + 2] = e.z),
      (Je[Pe * 3 + 0] = t.x),
      (Je[Pe * 3 + 1] = t.y),
      (Je[Pe * 3 + 2] = t.z),
      (Je[Oe * 3 + 0] = i.x),
      (Je[Oe * 3 + 1] = i.y),
      (Je[Oe * 3 + 2] = i.z);
  }
  const _ = n.geometry,
    x = n.material;
  let M, E, C;
  const S = _.index,
    b = _.attributes.position,
    L = _.morphAttributes.position,
    T = _.morphTargetsRelative,
    R = _.attributes.normal,
    U = _.morphAttributes.position,
    q = _.groups,
    I = _.drawRange;
  let N, D, O, F, $, V, Q;
  const k = new Float32Array(b.count * b.itemSize),
    te = new Float32Array(R.count * R.itemSize);
  if (S !== null)
    if (Array.isArray(x))
      for (N = 0, O = q.length; N < O; N++)
        for (
          $ = q[N],
            V = Math.max($.start, I.start),
            Q = Math.min($.start + $.count, I.start + I.count),
            D = V,
            F = Q;
          D < F;
          D += 3
        )
          (M = S.getX(D)),
            (E = S.getX(D + 1)),
            (C = S.getX(D + 2)),
            g(n, b, L, T, M, E, C, k),
            g(n, R, U, T, M, E, C, te);
    else
      for (
        V = Math.max(0, I.start),
          Q = Math.min(S.count, I.start + I.count),
          N = V,
          O = Q;
        N < O;
        N += 3
      )
        (M = S.getX(N)),
          (E = S.getX(N + 1)),
          (C = S.getX(N + 2)),
          g(n, b, L, T, M, E, C, k),
          g(n, R, U, T, M, E, C, te);
  else if (Array.isArray(x))
    for (N = 0, O = q.length; N < O; N++)
      for (
        $ = q[N],
          V = Math.max($.start, I.start),
          Q = Math.min($.start + $.count, I.start + I.count),
          D = V,
          F = Q;
        D < F;
        D += 3
      )
        (M = D),
          (E = D + 1),
          (C = D + 2),
          g(n, b, L, T, M, E, C, k),
          g(n, R, U, T, M, E, C, te);
  else
    for (
      V = Math.max(0, I.start),
        Q = Math.min(b.count, I.start + I.count),
        N = V,
        O = Q;
      N < O;
      N += 3
    )
      (M = N),
        (E = N + 1),
        (C = N + 2),
        g(n, b, L, T, M, E, C, k),
        g(n, R, U, T, M, E, C, te);
  const ee = new Kt(k, 3),
    se = new Kt(te, 3);
  return {
    positionAttribute: b,
    normalAttribute: R,
    morphedPositionAttribute: ee,
    morphedNormalAttribute: se,
  };
}
function $b(n) {
  if (n.groups.length === 0)
    return (
      console.warn(
        "THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."
      ),
      n
    );
  let e = n.groups;
  if (
    ((e = e.sort((u, c) =>
      u.materialIndex !== c.materialIndex
        ? u.materialIndex - c.materialIndex
        : u.start - c.start
    )),
    n.getIndex() === null)
  ) {
    const u = n.getAttribute("position"),
      c = [];
    for (let d = 0; d < u.count; d += 3) c.push(d, d + 1, d + 2);
    n.setIndex(c);
  }
  const t = n.getIndex(),
    i = [];
  for (let u = 0; u < e.length; u++) {
    const c = e[u],
      d = c.start,
      p = d + c.count;
    for (let g = d; g < p; g++) i.push(t.getX(g));
  }
  n.dispose(), n.setIndex(i);
  let r = 0;
  for (let u = 0; u < e.length; u++) {
    const c = e[u];
    (c.start = r), (r += c.count);
  }
  let s = e[0];
  n.groups = [s];
  for (let u = 1; u < e.length; u++) {
    const c = e[u];
    s.materialIndex === c.materialIndex
      ? (s.count += c.count)
      : ((s = c), n.groups.push(s));
  }
  return n;
}
function Yb(n, e = Math.PI / 3) {
  const t = Math.cos(e),
    i = (1 + 1e-10) * 100,
    r = [new J(), new J(), new J()],
    s = new J(),
    u = new J(),
    c = new J(),
    d = new J();
  function p(C) {
    const S = ~~(C.x * i),
      b = ~~(C.y * i),
      L = ~~(C.z * i);
    return `${S},${b},${L}`;
  }
  const g = n.index ? n.toNonIndexed() : n,
    _ = g.attributes.position,
    x = {};
  for (let C = 0, S = _.count / 3; C < S; C++) {
    const b = 3 * C,
      L = r[0].fromBufferAttribute(_, b + 0),
      T = r[1].fromBufferAttribute(_, b + 1),
      R = r[2].fromBufferAttribute(_, b + 2);
    s.subVectors(R, T), u.subVectors(L, T);
    const U = new J().crossVectors(s, u).normalize();
    for (let q = 0; q < 3; q++) {
      const I = r[q],
        N = p(I);
      N in x || (x[N] = []), x[N].push(U);
    }
  }
  const M = new Float32Array(_.count * 3),
    E = new mn(M, 3, !1);
  for (let C = 0, S = _.count / 3; C < S; C++) {
    const b = 3 * C,
      L = r[0].fromBufferAttribute(_, b + 0),
      T = r[1].fromBufferAttribute(_, b + 1),
      R = r[2].fromBufferAttribute(_, b + 2);
    s.subVectors(R, T), u.subVectors(L, T), c.crossVectors(s, u).normalize();
    for (let U = 0; U < 3; U++) {
      const q = r[U],
        I = p(q),
        N = x[I];
      d.set(0, 0, 0);
      for (let D = 0, O = N.length; D < O; D++) {
        const F = N[D];
        c.dot(F) > t && d.add(F);
      }
      d.normalize(), E.setXYZ(b + U, d.x, d.y, d.z);
    }
  }
  return g.setAttribute("normal", E), g;
}
function Zb(n, e = !1) {
  return (
    console.warn(
      "THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries()."
    ),
    g2(n, e)
  );
}
function Kb(n) {
  return (
    console.warn(
      "THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes()."
    ),
    Tl(n)
  );
}
const Lc = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      computeMikkTSpaceTangents: zb,
      computeMorphedAttributes: Qb,
      deepCloneAttribute: Gb,
      deinterleaveAttribute: Cl,
      deinterleaveGeometry: Vb,
      estimateBytesUsed: Wb,
      interleaveAttributes: Hb,
      mergeAttributes: Tl,
      mergeBufferAttributes: Kb,
      mergeBufferGeometries: Zb,
      mergeGeometries: g2,
      mergeGroups: $b,
      mergeVertices: jb,
      toCreasedNormals: Yb,
      toTrianglesDrawMode: Xb,
    },
    Symbol.toStringTag,
    { value: "Module" }
  )
);
var Ve = function (n) {
  return typeof n == "function"
    ? n
    : typeof n == "string"
    ? function (e) {
        return e[n];
      }
    : function (e) {
        return n;
      };
};
function Rl(n) {
  "@babel/helpers - typeof";
  return (
    (Rl =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Rl(n)
  );
}
var Jb = /^\s+/,
  eM = /\s+$/;
function ct(n, e) {
  if (((n = n || ""), (e = e || {}), n instanceof ct)) return n;
  if (!(this instanceof ct)) return new ct(n, e);
  var t = tM(n);
  (this._originalInput = n),
    (this._r = t.r),
    (this._g = t.g),
    (this._b = t.b),
    (this._a = t.a),
    (this._roundA = Math.round(100 * this._a) / 100),
    (this._format = e.format || t.format),
    (this._gradientType = e.gradientType),
    this._r < 1 && (this._r = Math.round(this._r)),
    this._g < 1 && (this._g = Math.round(this._g)),
    this._b < 1 && (this._b = Math.round(this._b)),
    (this._ok = t.ok);
}
ct.prototype = {
  isDark: function () {
    return this.getBrightness() < 128;
  },
  isLight: function () {
    return !this.isDark();
  },
  isValid: function () {
    return this._ok;
  },
  getOriginalInput: function () {
    return this._originalInput;
  },
  getFormat: function () {
    return this._format;
  },
  getAlpha: function () {
    return this._a;
  },
  getBrightness: function () {
    var e = this.toRgb();
    return (e.r * 299 + e.g * 587 + e.b * 114) / 1e3;
  },
  getLuminance: function () {
    var e = this.toRgb(),
      t,
      i,
      r,
      s,
      u,
      c;
    return (
      (t = e.r / 255),
      (i = e.g / 255),
      (r = e.b / 255),
      t <= 0.03928 ? (s = t / 12.92) : (s = Math.pow((t + 0.055) / 1.055, 2.4)),
      i <= 0.03928 ? (u = i / 12.92) : (u = Math.pow((i + 0.055) / 1.055, 2.4)),
      r <= 0.03928 ? (c = r / 12.92) : (c = Math.pow((r + 0.055) / 1.055, 2.4)),
      0.2126 * s + 0.7152 * u + 0.0722 * c
    );
  },
  setAlpha: function (e) {
    return (
      (this._a = _2(e)), (this._roundA = Math.round(100 * this._a) / 100), this
    );
  },
  toHsv: function () {
    var e = Yd(this._r, this._g, this._b);
    return { h: e.h * 360, s: e.s, v: e.v, a: this._a };
  },
  toHsvString: function () {
    var e = Yd(this._r, this._g, this._b),
      t = Math.round(e.h * 360),
      i = Math.round(e.s * 100),
      r = Math.round(e.v * 100);
    return this._a == 1
      ? "hsv(" + t + ", " + i + "%, " + r + "%)"
      : "hsva(" + t + ", " + i + "%, " + r + "%, " + this._roundA + ")";
  },
  toHsl: function () {
    var e = $d(this._r, this._g, this._b);
    return { h: e.h * 360, s: e.s, l: e.l, a: this._a };
  },
  toHslString: function () {
    var e = $d(this._r, this._g, this._b),
      t = Math.round(e.h * 360),
      i = Math.round(e.s * 100),
      r = Math.round(e.l * 100);
    return this._a == 1
      ? "hsl(" + t + ", " + i + "%, " + r + "%)"
      : "hsla(" + t + ", " + i + "%, " + r + "%, " + this._roundA + ")";
  },
  toHex: function (e) {
    return Zd(this._r, this._g, this._b, e);
  },
  toHexString: function (e) {
    return "#" + this.toHex(e);
  },
  toHex8: function (e) {
    return sM(this._r, this._g, this._b, this._a, e);
  },
  toHex8String: function (e) {
    return "#" + this.toHex8(e);
  },
  toRgb: function () {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a,
    };
  },
  toRgbString: function () {
    return this._a == 1
      ? "rgb(" +
          Math.round(this._r) +
          ", " +
          Math.round(this._g) +
          ", " +
          Math.round(this._b) +
          ")"
      : "rgba(" +
          Math.round(this._r) +
          ", " +
          Math.round(this._g) +
          ", " +
          Math.round(this._b) +
          ", " +
          this._roundA +
          ")";
  },
  toPercentageRgb: function () {
    return {
      r: Math.round(pn(this._r, 255) * 100) + "%",
      g: Math.round(pn(this._g, 255) * 100) + "%",
      b: Math.round(pn(this._b, 255) * 100) + "%",
      a: this._a,
    };
  },
  toPercentageRgbString: function () {
    return this._a == 1
      ? "rgb(" +
          Math.round(pn(this._r, 255) * 100) +
          "%, " +
          Math.round(pn(this._g, 255) * 100) +
          "%, " +
          Math.round(pn(this._b, 255) * 100) +
          "%)"
      : "rgba(" +
          Math.round(pn(this._r, 255) * 100) +
          "%, " +
          Math.round(pn(this._g, 255) * 100) +
          "%, " +
          Math.round(pn(this._b, 255) * 100) +
          "%, " +
          this._roundA +
          ")";
  },
  toName: function () {
    return this._a === 0
      ? "transparent"
      : this._a < 1
      ? !1
      : gM[Zd(this._r, this._g, this._b, !0)] || !1;
  },
  toFilter: function (e) {
    var t = "#" + Kd(this._r, this._g, this._b, this._a),
      i = t,
      r = this._gradientType ? "GradientType = 1, " : "";
    if (e) {
      var s = ct(e);
      i = "#" + Kd(s._r, s._g, s._b, s._a);
    }
    return (
      "progid:DXImageTransform.Microsoft.gradient(" +
      r +
      "startColorstr=" +
      t +
      ",endColorstr=" +
      i +
      ")"
    );
  },
  toString: function (e) {
    var t = !!e;
    e = e || this._format;
    var i = !1,
      r = this._a < 1 && this._a >= 0,
      s =
        !t &&
        r &&
        (e === "hex" ||
          e === "hex6" ||
          e === "hex3" ||
          e === "hex4" ||
          e === "hex8" ||
          e === "name");
    return s
      ? e === "name" && this._a === 0
        ? this.toName()
        : this.toRgbString()
      : (e === "rgb" && (i = this.toRgbString()),
        e === "prgb" && (i = this.toPercentageRgbString()),
        (e === "hex" || e === "hex6") && (i = this.toHexString()),
        e === "hex3" && (i = this.toHexString(!0)),
        e === "hex4" && (i = this.toHex8String(!0)),
        e === "hex8" && (i = this.toHex8String()),
        e === "name" && (i = this.toName()),
        e === "hsl" && (i = this.toHslString()),
        e === "hsv" && (i = this.toHsvString()),
        i || this.toHexString());
  },
  clone: function () {
    return ct(this.toString());
  },
  _applyModification: function (e, t) {
    var i = e.apply(null, [this].concat([].slice.call(t)));
    return (
      (this._r = i._r),
      (this._g = i._g),
      (this._b = i._b),
      this.setAlpha(i._a),
      this
    );
  },
  lighten: function () {
    return this._applyModification(lM, arguments);
  },
  brighten: function () {
    return this._applyModification(uM, arguments);
  },
  darken: function () {
    return this._applyModification(cM, arguments);
  },
  desaturate: function () {
    return this._applyModification(oM, arguments);
  },
  saturate: function () {
    return this._applyModification(aM, arguments);
  },
  greyscale: function () {
    return this._applyModification(AM, arguments);
  },
  spin: function () {
    return this._applyModification(fM, arguments);
  },
  _applyCombination: function (e, t) {
    return e.apply(null, [this].concat([].slice.call(t)));
  },
  analogous: function () {
    return this._applyCombination(pM, arguments);
  },
  complement: function () {
    return this._applyCombination(hM, arguments);
  },
  monochromatic: function () {
    return this._applyCombination(mM, arguments);
  },
  splitcomplement: function () {
    return this._applyCombination(dM, arguments);
  },
  triad: function () {
    return this._applyCombination(Jd, [3]);
  },
  tetrad: function () {
    return this._applyCombination(Jd, [4]);
  },
};
ct.fromRatio = function (n, e) {
  if (Rl(n) == "object") {
    var t = {};
    for (var i in n)
      n.hasOwnProperty(i) && (i === "a" ? (t[i] = n[i]) : (t[i] = ma(n[i])));
    n = t;
  }
  return ct(n, e);
};
function tM(n) {
  var e = { r: 0, g: 0, b: 0 },
    t = 1,
    i = null,
    r = null,
    s = null,
    u = !1,
    c = !1;
  return (
    typeof n == "string" && (n = yM(n)),
    Rl(n) == "object" &&
      (Lr(n.r) && Lr(n.g) && Lr(n.b)
        ? ((e = nM(n.r, n.g, n.b)),
          (u = !0),
          (c = String(n.r).substr(-1) === "%" ? "prgb" : "rgb"))
        : Lr(n.h) && Lr(n.s) && Lr(n.v)
        ? ((i = ma(n.s)),
          (r = ma(n.v)),
          (e = rM(n.h, i, r)),
          (u = !0),
          (c = "hsv"))
        : Lr(n.h) &&
          Lr(n.s) &&
          Lr(n.l) &&
          ((i = ma(n.s)),
          (s = ma(n.l)),
          (e = iM(n.h, i, s)),
          (u = !0),
          (c = "hsl")),
      n.hasOwnProperty("a") && (t = n.a)),
    (t = _2(t)),
    {
      ok: u,
      format: n.format || c,
      r: Math.min(255, Math.max(e.r, 0)),
      g: Math.min(255, Math.max(e.g, 0)),
      b: Math.min(255, Math.max(e.b, 0)),
      a: t,
    }
  );
}
function nM(n, e, t) {
  return { r: pn(n, 255) * 255, g: pn(e, 255) * 255, b: pn(t, 255) * 255 };
}
function $d(n, e, t) {
  (n = pn(n, 255)), (e = pn(e, 255)), (t = pn(t, 255));
  var i = Math.max(n, e, t),
    r = Math.min(n, e, t),
    s,
    u,
    c = (i + r) / 2;
  if (i == r) s = u = 0;
  else {
    var d = i - r;
    switch (((u = c > 0.5 ? d / (2 - i - r) : d / (i + r)), i)) {
      case n:
        s = (e - t) / d + (e < t ? 6 : 0);
        break;
      case e:
        s = (t - n) / d + 2;
        break;
      case t:
        s = (n - e) / d + 4;
        break;
    }
    s /= 6;
  }
  return { h: s, s: u, l: c };
}
function iM(n, e, t) {
  var i, r, s;
  (n = pn(n, 360)), (e = pn(e, 100)), (t = pn(t, 100));
  function u(p, g, _) {
    return (
      _ < 0 && (_ += 1),
      _ > 1 && (_ -= 1),
      _ < 1 / 6
        ? p + (g - p) * 6 * _
        : _ < 1 / 2
        ? g
        : _ < 2 / 3
        ? p + (g - p) * (2 / 3 - _) * 6
        : p
    );
  }
  if (e === 0) i = r = s = t;
  else {
    var c = t < 0.5 ? t * (1 + e) : t + e - t * e,
      d = 2 * t - c;
    (i = u(d, c, n + 1 / 3)), (r = u(d, c, n)), (s = u(d, c, n - 1 / 3));
  }
  return { r: i * 255, g: r * 255, b: s * 255 };
}
function Yd(n, e, t) {
  (n = pn(n, 255)), (e = pn(e, 255)), (t = pn(t, 255));
  var i = Math.max(n, e, t),
    r = Math.min(n, e, t),
    s,
    u,
    c = i,
    d = i - r;
  if (((u = i === 0 ? 0 : d / i), i == r)) s = 0;
  else {
    switch (i) {
      case n:
        s = (e - t) / d + (e < t ? 6 : 0);
        break;
      case e:
        s = (t - n) / d + 2;
        break;
      case t:
        s = (n - e) / d + 4;
        break;
    }
    s /= 6;
  }
  return { h: s, s: u, v: c };
}
function rM(n, e, t) {
  (n = pn(n, 360) * 6), (e = pn(e, 100)), (t = pn(t, 100));
  var i = Math.floor(n),
    r = n - i,
    s = t * (1 - e),
    u = t * (1 - r * e),
    c = t * (1 - (1 - r) * e),
    d = i % 6,
    p = [t, u, s, s, c, t][d],
    g = [c, t, t, u, s, s][d],
    _ = [s, s, c, t, t, u][d];
  return { r: p * 255, g: g * 255, b: _ * 255 };
}
function Zd(n, e, t, i) {
  var r = [
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
  ];
  return i &&
    r[0].charAt(0) == r[0].charAt(1) &&
    r[1].charAt(0) == r[1].charAt(1) &&
    r[2].charAt(0) == r[2].charAt(1)
    ? r[0].charAt(0) + r[1].charAt(0) + r[2].charAt(0)
    : r.join("");
}
function sM(n, e, t, i, r) {
  var s = [
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
    sr(v2(i)),
  ];
  return r &&
    s[0].charAt(0) == s[0].charAt(1) &&
    s[1].charAt(0) == s[1].charAt(1) &&
    s[2].charAt(0) == s[2].charAt(1) &&
    s[3].charAt(0) == s[3].charAt(1)
    ? s[0].charAt(0) + s[1].charAt(0) + s[2].charAt(0) + s[3].charAt(0)
    : s.join("");
}
function Kd(n, e, t, i) {
  var r = [
    sr(v2(i)),
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
  ];
  return r.join("");
}
ct.equals = function (n, e) {
  return !n || !e ? !1 : ct(n).toRgbString() == ct(e).toRgbString();
};
ct.random = function () {
  return ct.fromRatio({ r: Math.random(), g: Math.random(), b: Math.random() });
};
function oM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = ct(n).toHsl();
  return (t.s -= e / 100), (t.s = e0(t.s)), ct(t);
}
function aM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = ct(n).toHsl();
  return (t.s += e / 100), (t.s = e0(t.s)), ct(t);
}
function AM(n) {
  return ct(n).desaturate(100);
}
function lM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = ct(n).toHsl();
  return (t.l += e / 100), (t.l = e0(t.l)), ct(t);
}
function uM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = ct(n).toRgb();
  return (
    (t.r = Math.max(0, Math.min(255, t.r - Math.round(255 * -(e / 100))))),
    (t.g = Math.max(0, Math.min(255, t.g - Math.round(255 * -(e / 100))))),
    (t.b = Math.max(0, Math.min(255, t.b - Math.round(255 * -(e / 100))))),
    ct(t)
  );
}
function cM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = ct(n).toHsl();
  return (t.l -= e / 100), (t.l = e0(t.l)), ct(t);
}
function fM(n, e) {
  var t = ct(n).toHsl(),
    i = (t.h + e) % 360;
  return (t.h = i < 0 ? 360 + i : i), ct(t);
}
function hM(n) {
  var e = ct(n).toHsl();
  return (e.h = (e.h + 180) % 360), ct(e);
}
function Jd(n, e) {
  if (isNaN(e) || e <= 0)
    throw new Error("Argument to polyad must be a positive number");
  for (var t = ct(n).toHsl(), i = [ct(n)], r = 360 / e, s = 1; s < e; s++)
    i.push(ct({ h: (t.h + s * r) % 360, s: t.s, l: t.l }));
  return i;
}
function dM(n) {
  var e = ct(n).toHsl(),
    t = e.h;
  return [
    ct(n),
    ct({ h: (t + 72) % 360, s: e.s, l: e.l }),
    ct({ h: (t + 216) % 360, s: e.s, l: e.l }),
  ];
}
function pM(n, e, t) {
  (e = e || 6), (t = t || 30);
  var i = ct(n).toHsl(),
    r = 360 / t,
    s = [ct(n)];
  for (i.h = (i.h - ((r * e) >> 1) + 720) % 360; --e; )
    (i.h = (i.h + r) % 360), s.push(ct(i));
  return s;
}
function mM(n, e) {
  e = e || 6;
  for (
    var t = ct(n).toHsv(), i = t.h, r = t.s, s = t.v, u = [], c = 1 / e;
    e--;

  )
    u.push(ct({ h: i, s: r, v: s })), (s = (s + c) % 1);
  return u;
}
ct.mix = function (n, e, t) {
  t = t === 0 ? 0 : t || 50;
  var i = ct(n).toRgb(),
    r = ct(e).toRgb(),
    s = t / 100,
    u = {
      r: (r.r - i.r) * s + i.r,
      g: (r.g - i.g) * s + i.g,
      b: (r.b - i.b) * s + i.b,
      a: (r.a - i.a) * s + i.a,
    };
  return ct(u);
};
ct.readability = function (n, e) {
  var t = ct(n),
    i = ct(e);
  return (
    (Math.max(t.getLuminance(), i.getLuminance()) + 0.05) /
    (Math.min(t.getLuminance(), i.getLuminance()) + 0.05)
  );
};
ct.isReadable = function (n, e, t) {
  var i = ct.readability(n, e),
    r,
    s;
  switch (((s = !1), (r = bM(t)), r.level + r.size)) {
    case "AAsmall":
    case "AAAlarge":
      s = i >= 4.5;
      break;
    case "AAlarge":
      s = i >= 3;
      break;
    case "AAAsmall":
      s = i >= 7;
      break;
  }
  return s;
};
ct.mostReadable = function (n, e, t) {
  var i = null,
    r = 0,
    s,
    u,
    c,
    d;
  (t = t || {}), (u = t.includeFallbackColors), (c = t.level), (d = t.size);
  for (var p = 0; p < e.length; p++)
    (s = ct.readability(n, e[p])), s > r && ((r = s), (i = ct(e[p])));
  return ct.isReadable(n, i, { level: c, size: d }) || !u
    ? i
    : ((t.includeFallbackColors = !1), ct.mostReadable(n, ["#fff", "#000"], t));
};
var $u = (ct.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32",
  }),
  gM = (ct.hexNames = _M($u));
function _M(n) {
  var e = {};
  for (var t in n) n.hasOwnProperty(t) && (e[n[t]] = t);
  return e;
}
function _2(n) {
  return (n = parseFloat(n)), (isNaN(n) || n < 0 || n > 1) && (n = 1), n;
}
function pn(n, e) {
  vM(n) && (n = "100%");
  var t = xM(n);
  return (
    (n = Math.min(e, Math.max(0, parseFloat(n)))),
    t && (n = parseInt(n * e, 10) / 100),
    Math.abs(n - e) < 1e-6 ? 1 : (n % e) / parseFloat(e)
  );
}
function e0(n) {
  return Math.min(1, Math.max(0, n));
}
function Ti(n) {
  return parseInt(n, 16);
}
function vM(n) {
  return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
}
function xM(n) {
  return typeof n == "string" && n.indexOf("%") != -1;
}
function sr(n) {
  return n.length == 1 ? "0" + n : "" + n;
}
function ma(n) {
  return n <= 1 && (n = n * 100 + "%"), n;
}
function v2(n) {
  return Math.round(parseFloat(n) * 255).toString(16);
}
function ep(n) {
  return Ti(n) / 255;
}
var Ki = (function () {
  var n = "[-\\+]?\\d+%?",
    e = "[-\\+]?\\d*\\.\\d+%?",
    t = "(?:" + e + ")|(?:" + n + ")",
    i = "[\\s|\\(]+(" + t + ")[,|\\s]+(" + t + ")[,|\\s]+(" + t + ")\\s*\\)?",
    r =
      "[\\s|\\(]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(t),
    rgb: new RegExp("rgb" + i),
    rgba: new RegExp("rgba" + r),
    hsl: new RegExp("hsl" + i),
    hsla: new RegExp("hsla" + r),
    hsv: new RegExp("hsv" + i),
    hsva: new RegExp("hsva" + r),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  };
})();
function Lr(n) {
  return !!Ki.CSS_UNIT.exec(n);
}
function yM(n) {
  n = n.replace(Jb, "").replace(eM, "").toLowerCase();
  var e = !1;
  if ($u[n]) (n = $u[n]), (e = !0);
  else if (n == "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var t;
  return (t = Ki.rgb.exec(n))
    ? { r: t[1], g: t[2], b: t[3] }
    : (t = Ki.rgba.exec(n))
    ? { r: t[1], g: t[2], b: t[3], a: t[4] }
    : (t = Ki.hsl.exec(n))
    ? { h: t[1], s: t[2], l: t[3] }
    : (t = Ki.hsla.exec(n))
    ? { h: t[1], s: t[2], l: t[3], a: t[4] }
    : (t = Ki.hsv.exec(n))
    ? { h: t[1], s: t[2], v: t[3] }
    : (t = Ki.hsva.exec(n))
    ? { h: t[1], s: t[2], v: t[3], a: t[4] }
    : (t = Ki.hex8.exec(n))
    ? {
        r: Ti(t[1]),
        g: Ti(t[2]),
        b: Ti(t[3]),
        a: ep(t[4]),
        format: e ? "name" : "hex8",
      }
    : (t = Ki.hex6.exec(n))
    ? { r: Ti(t[1]), g: Ti(t[2]), b: Ti(t[3]), format: e ? "name" : "hex" }
    : (t = Ki.hex4.exec(n))
    ? {
        r: Ti(t[1] + "" + t[1]),
        g: Ti(t[2] + "" + t[2]),
        b: Ti(t[3] + "" + t[3]),
        a: ep(t[4] + "" + t[4]),
        format: e ? "name" : "hex8",
      }
    : (t = Ki.hex3.exec(n))
    ? {
        r: Ti(t[1] + "" + t[1]),
        g: Ti(t[2] + "" + t[2]),
        b: Ti(t[3] + "" + t[3]),
        format: e ? "name" : "hex",
      }
    : !1;
}
function bM(n) {
  var e, t;
  return (
    (n = n || { level: "AA", size: "small" }),
    (e = (n.level || "AA").toUpperCase()),
    (t = (n.size || "small").toLowerCase()),
    e !== "AA" && e !== "AAA" && (e = "AA"),
    t !== "small" && t !== "large" && (t = "small"),
    { level: e, size: t }
  );
}
function MM(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function SM(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function EM(n, e) {
  if (n == null) return {};
  var t = SM(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function wM(n, e) {
  return RM(n) || MM(n, e) || x2(n, e) || DM();
}
function TM(n) {
  return CM(n) || PM(n) || x2(n) || LM();
}
function CM(n) {
  if (Array.isArray(n)) return Yu(n);
}
function RM(n) {
  if (Array.isArray(n)) return n;
}
function PM(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function x2(n, e) {
  if (n) {
    if (typeof n == "string") return Yu(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return Yu(n, e);
  }
}
function Yu(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function LM() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function DM() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function IM(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function OM(n) {
  var e = IM(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var Zu = function () {
  var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
    e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
    t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
    i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1,
    r = (e instanceof Array ? (e.length ? e : [void 0]) : [e]).map(function (
      c
    ) {
      return { keyAccessor: c, isProp: !(c instanceof Function) };
    }),
    s = n.reduce(function (c, d) {
      var p = c,
        g = d;
      return (
        r.forEach(function (_, x) {
          var M = _.keyAccessor,
            E = _.isProp,
            C;
          if (E) {
            var S = g,
              b = S[M],
              L = EM(S, [M].map(OM));
            (C = b), (g = L);
          } else C = M(g, x);
          x + 1 < r.length
            ? (p.hasOwnProperty(C) || (p[C] = {}), (p = p[C]))
            : t
            ? (p.hasOwnProperty(C) || (p[C] = []), p[C].push(g))
            : (p[C] = g);
        }),
        c
      );
    }, {});
  t instanceof Function &&
    (function c(d) {
      var p =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      p === r.length
        ? Object.keys(d).forEach(function (g) {
            return (d[g] = t(d[g]));
          })
        : Object.values(d).forEach(function (g) {
            return c(g, p + 1);
          });
    })(s);
  var u = s;
  return (
    i &&
      ((u = []),
      (function c(d) {
        var p =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        p.length === r.length
          ? u.push({ keys: p, vals: d })
          : Object.entries(d).forEach(function (g) {
              var _ = wM(g, 2),
                x = _[0],
                M = _[1];
              return c(M, [].concat(TM(p), [x]));
            });
      })(s),
      e instanceof Array &&
        e.length === 0 &&
        u.length === 1 &&
        (u[0].keys = [])),
    u
  );
};
function UM(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function tp(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(n);
    e &&
      (i = i.filter(function (r) {
        return Object.getOwnPropertyDescriptor(n, r).enumerable;
      })),
      t.push.apply(t, i);
  }
  return t;
}
function qM(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? tp(Object(t), !0).forEach(function (i) {
          y2(n, i, t[i]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t))
      : tp(Object(t)).forEach(function (i) {
          Object.defineProperty(n, i, Object.getOwnPropertyDescriptor(t, i));
        });
  }
  return n;
}
function y2(n, e, t) {
  return (
    (e = WM(e)),
    e in n
      ? Object.defineProperty(n, e, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (n[e] = t),
    n
  );
}
function BM(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function NM(n, e) {
  if (n == null) return {};
  var t = BM(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function b2(n, e) {
  return kM(n) || UM(n, e) || M2(n, e) || HM();
}
function Pl(n) {
  return FM(n) || zM(n) || M2(n) || GM();
}
function FM(n) {
  if (Array.isArray(n)) return Ku(n);
}
function kM(n) {
  if (Array.isArray(n)) return n;
}
function zM(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function M2(n, e) {
  if (n) {
    if (typeof n == "string") return Ku(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return Ku(n, e);
  }
}
function Ku(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function GM() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function HM() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function VM(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function WM(n) {
  var e = VM(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var jM = ["createObj", "updateObj", "exitObj", "objBindAttr", "dataBindAttr"];
function XM(n, e, t) {
  var i = { enter: [], update: [], exit: [] };
  if (t) {
    var u = Zu(n, t, !1),
      c = Zu(e, t, !1),
      d = Object.assign({}, u, c);
    Object.entries(d).forEach(function (p) {
      var g = b2(p, 2),
        _ = g[0],
        x = g[1],
        M = u.hasOwnProperty(_)
          ? c.hasOwnProperty(_)
            ? "update"
            : "exit"
          : "enter";
      i[M].push(M === "update" ? [u[_], c[_]] : x);
    });
  } else {
    var r = new Set(n),
      s = new Set(e);
    new Set([].concat(Pl(r), Pl(s))).forEach(function (p) {
      var g = r.has(p) ? (s.has(p) ? "update" : "exit") : "enter";
      i[g].push(g === "update" ? [p, p] : p);
    });
  }
  return i;
}
function QM(n, e, t) {
  var i = t.objBindAttr,
    r = i === void 0 ? "__obj" : i,
    s = t.dataBindAttr,
    u = s === void 0 ? "__data" : s,
    c = t.idAccessor,
    d = t.purge,
    p = d === void 0 ? !1 : d,
    g = function (S) {
      return S.hasOwnProperty(u);
    },
    _ = e.filter(function (C) {
      return !g(C);
    }),
    x = e.filter(g).map(function (C) {
      return C[u];
    }),
    M = n,
    E = p ? { enter: M, exit: x, update: [] } : XM(x, M, c);
  return (
    (E.update = E.update.map(function (C) {
      var S = b2(C, 2),
        b = S[0],
        L = S[1];
      return b !== L && ((L[r] = b[r]), (L[r][u] = L)), L;
    })),
    (E.exit = E.exit.concat(
      _.map(function (C) {
        return y2({}, r, C);
      })
    )),
    E
  );
}
function $M(n, e, t, i, r) {
  var s = r.createObj,
    u =
      s === void 0
        ? function (N) {
            return {};
          }
        : s,
    c = r.updateObj,
    d = c === void 0 ? function (N, D) {} : c,
    p = r.exitObj,
    g = p === void 0 ? function (N) {} : p,
    _ = r.objBindAttr,
    x = _ === void 0 ? "__obj" : _,
    M = r.dataBindAttr,
    E = M === void 0 ? "__data" : M,
    C = NM(r, jM),
    S = QM(n, e, qM({ objBindAttr: x, dataBindAttr: E }, C)),
    b = S.enter,
    L = S.update,
    T = S.exit;
  T.forEach(function (N) {
    var D = N[x];
    delete N[x], g(D), i(D);
  });
  var R = q(b),
    U = [].concat(Pl(b), Pl(L));
  I(U), R.forEach(t);
  function q(N) {
    var D = [];
    return (
      N.forEach(function (O) {
        var F = u(O);
        F && ((F[E] = O), (O[x] = F), D.push(F));
      }),
      D
    );
  }
  function I(N) {
    N.forEach(function (D) {
      var O = D[x];
      O && ((O[E] = D), d(O, D));
    });
  }
}
var S2 = { exports: {} };
(function (n, e) {
  (function (t, i) {
    n.exports = i();
  })(i6, function () {
    return (function (t) {
      function i(s) {
        if (r[s]) return r[s].exports;
        var u = (r[s] = { exports: {}, id: s, loaded: !1 });
        return (
          t[s].call(u.exports, u, u.exports, i), (u.loaded = !0), u.exports
        );
      }
      var r = {};
      return (i.m = t), (i.c = r), (i.p = ""), i(0);
    })([
      function (t, i, r) {
        var s = r(1),
          u = (function () {
            function c(d, p, g) {
              d === void 0 && (d = NaN),
                p === void 0 && (p = NaN),
                g === void 0 && (g = !1),
                (this._minFPS = p),
                (this._maxFPS = d),
                (this._timeScale = 1),
                (this._currentTick = 0),
                (this._currentTime = 0),
                (this._tickDeltaTime = 0),
                (this._isRunning = !1),
                (this._maxInterval = isNaN(this._minFPS)
                  ? NaN
                  : 1e3 / this._minFPS),
                (this._minInterval = isNaN(this._maxFPS)
                  ? NaN
                  : 1e3 / this._maxFPS),
                (this._onResume = new s.default()),
                (this._onPause = new s.default()),
                (this._onTick = new s.default()),
                (this._onTickOncePerFrame = new s.default()),
                g || this.resume();
            }
            return (
              (c.prototype.updateOnce = function (d) {
                d(
                  this.currentTimeSeconds,
                  this.tickDeltaTimeSeconds,
                  this.currentTick
                );
              }),
              (c.prototype.resume = function () {
                this._isRunning ||
                  ((this._isRunning = !0),
                  (this._lastTimeUpdated = this.getTimer()),
                  this._onResume.dispatch(),
                  this.animateOnce());
              }),
              (c.prototype.pause = function () {
                this._isRunning &&
                  ((this._isRunning = !1),
                  this._onPause.dispatch(),
                  window.cancelAnimationFrame(this._animationFrameHandle));
              }),
              (c.prototype.dispose = function () {
                this.pause(),
                  this._onResume.removeAll(),
                  this._onPause.removeAll(),
                  this._onTick.removeAll();
              }),
              Object.defineProperty(c.prototype, "currentTick", {
                get: function () {
                  return this._currentTick;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "currentTimeSeconds", {
                get: function () {
                  return this._currentTime / 1e3;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "tickDeltaTimeSeconds", {
                get: function () {
                  return this._tickDeltaTime / 1e3;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "timeScale", {
                get: function () {
                  return this._timeScale;
                },
                set: function (d) {
                  this._timeScale !== d && (this._timeScale = d);
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onResume", {
                get: function () {
                  return this._onResume;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onPause", {
                get: function () {
                  return this._onPause;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onTick", {
                get: function () {
                  return this._onTick;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onTickOncePerFrame", {
                get: function () {
                  return this._onTickOncePerFrame;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "isRunning", {
                get: function () {
                  return this._isRunning;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (c.prototype.animateOnce = function () {
                var d = this;
                this._animationFrameHandle = window.requestAnimationFrame(
                  function () {
                    return d.onFrame();
                  }
                );
              }),
              (c.prototype.onFrame = function () {
                if (
                  ((this._now = this.getTimer()),
                  (this._frameDeltaTime = this._now - this._lastTimeUpdated),
                  isNaN(this._minInterval) ||
                    this._frameDeltaTime >= this._minInterval)
                )
                  if (isNaN(this._maxInterval))
                    this.update(this._frameDeltaTime * this._timeScale, !0),
                      (this._lastTimeUpdated = this._now);
                  else
                    for (
                      this._interval = Math.min(
                        this._frameDeltaTime,
                        this._maxInterval
                      );
                      this._now >= this._lastTimeUpdated + this._interval;

                    )
                      this.update(
                        this._interval * this._timeScale,
                        this._now <=
                          this._lastTimeUpdated + 2 * this._maxInterval
                      ),
                        (this._lastTimeUpdated += this._interval);
                this._isRunning && this.animateOnce();
              }),
              (c.prototype.update = function (d, p) {
                p === void 0 && (p = !0),
                  this._currentTick++,
                  (this._currentTime += d),
                  (this._tickDeltaTime = d),
                  this._onTick.dispatch(
                    this.currentTimeSeconds,
                    this.tickDeltaTimeSeconds,
                    this.currentTick
                  ),
                  p &&
                    this._onTickOncePerFrame.dispatch(
                      this.currentTimeSeconds,
                      this.tickDeltaTimeSeconds,
                      this.currentTick
                    );
              }),
              (c.prototype.getTimer = function () {
                return Date.now();
              }),
              c
            );
          })();
        Object.defineProperty(i, "__esModule", { value: !0 }), (i.default = u);
      },
      function (t, i, r) {
        (function (s, u) {
          t.exports = u();
        })(this, function () {
          return (function (s) {
            function u(d) {
              if (c[d]) return c[d].exports;
              var p = (c[d] = { exports: {}, id: d, loaded: !1 });
              return (
                s[d].call(p.exports, p, p.exports, u),
                (p.loaded = !0),
                p.exports
              );
            }
            var c = {};
            return (u.m = s), (u.c = c), (u.p = ""), u(0);
          })([
            function (s, u) {
              var c = (function () {
                function d() {
                  this.functions = [];
                }
                return (
                  (d.prototype.add = function (p) {
                    return (
                      this.functions.indexOf(p) === -1 &&
                      (this.functions.push(p), !0)
                    );
                  }),
                  (d.prototype.remove = function (p) {
                    var g = this.functions.indexOf(p);
                    return g > -1 && (this.functions.splice(g, 1), !0);
                  }),
                  (d.prototype.removeAll = function () {
                    return (
                      this.functions.length > 0 &&
                      ((this.functions.length = 0), !0)
                    );
                  }),
                  (d.prototype.dispatch = function () {
                    for (var p = [], g = 0; g < arguments.length; g++)
                      p[g] = arguments[g];
                    var _ = this.functions.concat();
                    _.forEach(function (x) {
                      x.apply(void 0, p);
                    });
                  }),
                  Object.defineProperty(d.prototype, "numItems", {
                    get: function () {
                      return this.functions.length;
                    },
                    enumerable: !0,
                    configurable: !0,
                  }),
                  d
                );
              })();
              Object.defineProperty(u, "__esModule", { value: !0 }),
                (u.default = c);
            },
          ]);
        });
      },
    ]);
  });
})(S2);
var YM = S2.exports;
const No = V1(YM);
function ZM(n, e) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(n);
      break;
    default:
      this.range(e).domain(n);
      break;
  }
  return this;
}
function Dc(n, e, t) {
  (n.prototype = e.prototype = t), (t.constructor = n);
}
function E2(n, e) {
  var t = Object.create(n.prototype);
  for (var i in e) t[i] = e[i];
  return t;
}
function $a() {}
var Ba = 0.7,
  Ll = 1 / Ba,
  Po = "\\s*([+-]?\\d+)\\s*",
  Na = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
  gr = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
  KM = /^#([0-9a-f]{3,8})$/,
  JM = new RegExp(`^rgb\\(${Po},${Po},${Po}\\)$`),
  eS = new RegExp(`^rgb\\(${gr},${gr},${gr}\\)$`),
  tS = new RegExp(`^rgba\\(${Po},${Po},${Po},${Na}\\)$`),
  nS = new RegExp(`^rgba\\(${gr},${gr},${gr},${Na}\\)$`),
  iS = new RegExp(`^hsl\\(${Na},${gr},${gr}\\)$`),
  rS = new RegExp(`^hsla\\(${Na},${gr},${gr},${Na}\\)$`),
  np = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  };
Dc($a, Fa, {
  copy(n) {
    return Object.assign(new this.constructor(), this, n);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: ip,
  formatHex: ip,
  formatHex8: sS,
  formatHsl: oS,
  formatRgb: rp,
  toString: rp,
});
function ip() {
  return this.rgb().formatHex();
}
function sS() {
  return this.rgb().formatHex8();
}
function oS() {
  return w2(this).formatHsl();
}
function rp() {
  return this.rgb().formatRgb();
}
function Fa(n) {
  var e, t;
  return (
    (n = (n + "").trim().toLowerCase()),
    (e = KM.exec(n))
      ? ((t = e[1].length),
        (e = parseInt(e[1], 16)),
        t === 6
          ? sp(e)
          : t === 3
          ? new _i(
              ((e >> 8) & 15) | ((e >> 4) & 240),
              ((e >> 4) & 15) | (e & 240),
              ((e & 15) << 4) | (e & 15),
              1
            )
          : t === 8
          ? NA(
              (e >> 24) & 255,
              (e >> 16) & 255,
              (e >> 8) & 255,
              (e & 255) / 255
            )
          : t === 4
          ? NA(
              ((e >> 12) & 15) | ((e >> 8) & 240),
              ((e >> 8) & 15) | ((e >> 4) & 240),
              ((e >> 4) & 15) | (e & 240),
              (((e & 15) << 4) | (e & 15)) / 255
            )
          : null)
      : (e = JM.exec(n))
      ? new _i(e[1], e[2], e[3], 1)
      : (e = eS.exec(n))
      ? new _i((e[1] * 255) / 100, (e[2] * 255) / 100, (e[3] * 255) / 100, 1)
      : (e = tS.exec(n))
      ? NA(e[1], e[2], e[3], e[4])
      : (e = nS.exec(n))
      ? NA((e[1] * 255) / 100, (e[2] * 255) / 100, (e[3] * 255) / 100, e[4])
      : (e = iS.exec(n))
      ? Ap(e[1], e[2] / 100, e[3] / 100, 1)
      : (e = rS.exec(n))
      ? Ap(e[1], e[2] / 100, e[3] / 100, e[4])
      : np.hasOwnProperty(n)
      ? sp(np[n])
      : n === "transparent"
      ? new _i(NaN, NaN, NaN, 0)
      : null
  );
}
function sp(n) {
  return new _i((n >> 16) & 255, (n >> 8) & 255, n & 255, 1);
}
function NA(n, e, t, i) {
  return i <= 0 && (n = e = t = NaN), new _i(n, e, t, i);
}
function aS(n) {
  return (
    n instanceof $a || (n = Fa(n)),
    n ? ((n = n.rgb()), new _i(n.r, n.g, n.b, n.opacity)) : new _i()
  );
}
function Ju(n, e, t, i) {
  return arguments.length === 1 ? aS(n) : new _i(n, e, t, i ?? 1);
}
function _i(n, e, t, i) {
  (this.r = +n), (this.g = +e), (this.b = +t), (this.opacity = +i);
}
Dc(
  _i,
  Ju,
  E2($a, {
    brighter(n) {
      return (
        (n = n == null ? Ll : Math.pow(Ll, n)),
        new _i(this.r * n, this.g * n, this.b * n, this.opacity)
      );
    },
    darker(n) {
      return (
        (n = n == null ? Ba : Math.pow(Ba, n)),
        new _i(this.r * n, this.g * n, this.b * n, this.opacity)
      );
    },
    rgb() {
      return this;
    },
    clamp() {
      return new _i(Us(this.r), Us(this.g), Us(this.b), Dl(this.opacity));
    },
    displayable() {
      return (
        -0.5 <= this.r &&
        this.r < 255.5 &&
        -0.5 <= this.g &&
        this.g < 255.5 &&
        -0.5 <= this.b &&
        this.b < 255.5 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    hex: op,
    formatHex: op,
    formatHex8: AS,
    formatRgb: ap,
    toString: ap,
  })
);
function op() {
  return `#${Rs(this.r)}${Rs(this.g)}${Rs(this.b)}`;
}
function AS() {
  return `#${Rs(this.r)}${Rs(this.g)}${Rs(this.b)}${Rs(
    (isNaN(this.opacity) ? 1 : this.opacity) * 255
  )}`;
}
function ap() {
  const n = Dl(this.opacity);
  return `${n === 1 ? "rgb(" : "rgba("}${Us(this.r)}, ${Us(this.g)}, ${Us(
    this.b
  )}${n === 1 ? ")" : `, ${n})`}`;
}
function Dl(n) {
  return isNaN(n) ? 1 : Math.max(0, Math.min(1, n));
}
function Us(n) {
  return Math.max(0, Math.min(255, Math.round(n) || 0));
}
function Rs(n) {
  return (n = Us(n)), (n < 16 ? "0" : "") + n.toString(16);
}
function Ap(n, e, t, i) {
  return (
    i <= 0
      ? (n = e = t = NaN)
      : t <= 0 || t >= 1
      ? (n = e = NaN)
      : e <= 0 && (n = NaN),
    new ir(n, e, t, i)
  );
}
function w2(n) {
  if (n instanceof ir) return new ir(n.h, n.s, n.l, n.opacity);
  if ((n instanceof $a || (n = Fa(n)), !n)) return new ir();
  if (n instanceof ir) return n;
  n = n.rgb();
  var e = n.r / 255,
    t = n.g / 255,
    i = n.b / 255,
    r = Math.min(e, t, i),
    s = Math.max(e, t, i),
    u = NaN,
    c = s - r,
    d = (s + r) / 2;
  return (
    c
      ? (e === s
          ? (u = (t - i) / c + (t < i) * 6)
          : t === s
          ? (u = (i - e) / c + 2)
          : (u = (e - t) / c + 4),
        (c /= d < 0.5 ? s + r : 2 - s - r),
        (u *= 60))
      : (c = d > 0 && d < 1 ? 0 : u),
    new ir(u, c, d, n.opacity)
  );
}
function lS(n, e, t, i) {
  return arguments.length === 1 ? w2(n) : new ir(n, e, t, i ?? 1);
}
function ir(n, e, t, i) {
  (this.h = +n), (this.s = +e), (this.l = +t), (this.opacity = +i);
}
Dc(
  ir,
  lS,
  E2($a, {
    brighter(n) {
      return (
        (n = n == null ? Ll : Math.pow(Ll, n)),
        new ir(this.h, this.s, this.l * n, this.opacity)
      );
    },
    darker(n) {
      return (
        (n = n == null ? Ba : Math.pow(Ba, n)),
        new ir(this.h, this.s, this.l * n, this.opacity)
      );
    },
    rgb() {
      var n = (this.h % 360) + (this.h < 0) * 360,
        e = isNaN(n) || isNaN(this.s) ? 0 : this.s,
        t = this.l,
        i = t + (t < 0.5 ? t : 1 - t) * e,
        r = 2 * t - i;
      return new _i(
        su(n >= 240 ? n - 240 : n + 120, r, i),
        su(n, r, i),
        su(n < 120 ? n + 240 : n - 120, r, i),
        this.opacity
      );
    },
    clamp() {
      return new ir(lp(this.h), FA(this.s), FA(this.l), Dl(this.opacity));
    },
    displayable() {
      return (
        ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
        0 <= this.l &&
        this.l <= 1 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    formatHsl() {
      const n = Dl(this.opacity);
      return `${n === 1 ? "hsl(" : "hsla("}${lp(this.h)}, ${
        FA(this.s) * 100
      }%, ${FA(this.l) * 100}%${n === 1 ? ")" : `, ${n})`}`;
    },
  })
);
function lp(n) {
  return (n = (n || 0) % 360), n < 0 ? n + 360 : n;
}
function FA(n) {
  return Math.max(0, Math.min(1, n || 0));
}
function su(n, e, t) {
  return (
    (n < 60
      ? e + ((t - e) * n) / 60
      : n < 180
      ? t
      : n < 240
      ? e + ((t - e) * (240 - n)) / 60
      : e) * 255
  );
}
const Ic = (n) => () => n;
function uS(n, e) {
  return function (t) {
    return n + t * e;
  };
}
function cS(n, e, t) {
  return (
    (n = Math.pow(n, t)),
    (e = Math.pow(e, t) - n),
    (t = 1 / t),
    function (i) {
      return Math.pow(n + i * e, t);
    }
  );
}
function fS(n) {
  return (n = +n) == 1
    ? T2
    : function (e, t) {
        return t - e ? cS(e, t, n) : Ic(isNaN(e) ? t : e);
      };
}
function T2(n, e) {
  var t = e - n;
  return t ? uS(n, t) : Ic(isNaN(n) ? e : n);
}
const up = (function n(e) {
  var t = fS(e);
  function i(r, s) {
    var u = t((r = Ju(r)).r, (s = Ju(s)).r),
      c = t(r.g, s.g),
      d = t(r.b, s.b),
      p = T2(r.opacity, s.opacity);
    return function (g) {
      return (
        (r.r = u(g)), (r.g = c(g)), (r.b = d(g)), (r.opacity = p(g)), r + ""
      );
    };
  }
  return (i.gamma = n), i;
})(1);
function C2(n, e) {
  e || (e = []);
  var t = n ? Math.min(e.length, n.length) : 0,
    i = e.slice(),
    r;
  return function (s) {
    for (r = 0; r < t; ++r) i[r] = n[r] * (1 - s) + e[r] * s;
    return i;
  };
}
function R2(n) {
  return ArrayBuffer.isView(n) && !(n instanceof DataView);
}
function hS(n, e) {
  return (R2(e) ? C2 : P2)(n, e);
}
function P2(n, e) {
  var t = e ? e.length : 0,
    i = n ? Math.min(t, n.length) : 0,
    r = new Array(i),
    s = new Array(t),
    u;
  for (u = 0; u < i; ++u) r[u] = Oc(n[u], e[u]);
  for (; u < t; ++u) s[u] = e[u];
  return function (c) {
    for (u = 0; u < i; ++u) s[u] = r[u](c);
    return s;
  };
}
function dS(n, e) {
  var t = new Date();
  return (
    (n = +n),
    (e = +e),
    function (i) {
      return t.setTime(n * (1 - i) + e * i), t;
    }
  );
}
function Il(n, e) {
  return (
    (n = +n),
    (e = +e),
    function (t) {
      return n * (1 - t) + e * t;
    }
  );
}
function pS(n, e) {
  var t = {},
    i = {},
    r;
  (n === null || typeof n != "object") && (n = {}),
    (e === null || typeof e != "object") && (e = {});
  for (r in e) r in n ? (t[r] = Oc(n[r], e[r])) : (i[r] = e[r]);
  return function (s) {
    for (r in t) i[r] = t[r](s);
    return i;
  };
}
var ec = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
  ou = new RegExp(ec.source, "g");
function mS(n) {
  return function () {
    return n;
  };
}
function gS(n) {
  return function (e) {
    return n(e) + "";
  };
}
function _S(n, e) {
  var t = (ec.lastIndex = ou.lastIndex = 0),
    i,
    r,
    s,
    u = -1,
    c = [],
    d = [];
  for (n = n + "", e = e + ""; (i = ec.exec(n)) && (r = ou.exec(e)); )
    (s = r.index) > t &&
      ((s = e.slice(t, s)), c[u] ? (c[u] += s) : (c[++u] = s)),
      (i = i[0]) === (r = r[0])
        ? c[u]
          ? (c[u] += r)
          : (c[++u] = r)
        : ((c[++u] = null), d.push({ i: u, x: Il(i, r) })),
      (t = ou.lastIndex);
  return (
    t < e.length && ((s = e.slice(t)), c[u] ? (c[u] += s) : (c[++u] = s)),
    c.length < 2
      ? d[0]
        ? gS(d[0].x)
        : mS(e)
      : ((e = d.length),
        function (p) {
          for (var g = 0, _; g < e; ++g) c[(_ = d[g]).i] = _.x(p);
          return c.join("");
        })
  );
}
function Oc(n, e) {
  var t = typeof e,
    i;
  return e == null || t === "boolean"
    ? Ic(e)
    : (t === "number"
        ? Il
        : t === "string"
        ? (i = Fa(e))
          ? ((e = i), up)
          : _S
        : e instanceof Fa
        ? up
        : e instanceof Date
        ? dS
        : R2(e)
        ? C2
        : Array.isArray(e)
        ? P2
        : (typeof e.valueOf != "function" && typeof e.toString != "function") ||
          isNaN(e)
        ? pS
        : Il)(n, e);
}
function vS(n, e) {
  return (
    (n = +n),
    (e = +e),
    function (t) {
      return Math.round(n * (1 - t) + e * t);
    }
  );
}
function xS(n) {
  return function () {
    return n;
  };
}
function yS(n) {
  return +n;
}
var cp = [0, 1];
function So(n) {
  return n;
}
function tc(n, e) {
  return (e -= n = +n)
    ? function (t) {
        return (t - n) / e;
      }
    : xS(isNaN(e) ? NaN : 0.5);
}
function bS(n, e) {
  var t;
  return (
    n > e && ((t = n), (n = e), (e = t)),
    function (i) {
      return Math.max(n, Math.min(e, i));
    }
  );
}
function MS(n, e, t) {
  var i = n[0],
    r = n[1],
    s = e[0],
    u = e[1];
  return (
    r < i ? ((i = tc(r, i)), (s = t(u, s))) : ((i = tc(i, r)), (s = t(s, u))),
    function (c) {
      return s(i(c));
    }
  );
}
function SS(n, e, t) {
  var i = Math.min(n.length, e.length) - 1,
    r = new Array(i),
    s = new Array(i),
    u = -1;
  for (
    n[i] < n[0] && ((n = n.slice().reverse()), (e = e.slice().reverse()));
    ++u < i;

  )
    (r[u] = tc(n[u], n[u + 1])), (s[u] = t(e[u], e[u + 1]));
  return function (c) {
    var d = E6(n, c, 1, i) - 1;
    return s[d](r[d](c));
  };
}
function ES(n, e) {
  return e
    .domain(n.domain())
    .range(n.range())
    .interpolate(n.interpolate())
    .clamp(n.clamp())
    .unknown(n.unknown());
}
function wS() {
  var n = cp,
    e = cp,
    t = Oc,
    i,
    r,
    s,
    u = So,
    c,
    d,
    p;
  function g() {
    var x = Math.min(n.length, e.length);
    return (
      u !== So && (u = bS(n[0], n[x - 1])),
      (c = x > 2 ? SS : MS),
      (d = p = null),
      _
    );
  }
  function _(x) {
    return x == null || isNaN((x = +x))
      ? s
      : (d || (d = c(n.map(i), e, t)))(i(u(x)));
  }
  return (
    (_.invert = function (x) {
      return u(r((p || (p = c(e, n.map(i), Il)))(x)));
    }),
    (_.domain = function (x) {
      return arguments.length ? ((n = Array.from(x, yS)), g()) : n.slice();
    }),
    (_.range = function (x) {
      return arguments.length ? ((e = Array.from(x)), g()) : e.slice();
    }),
    (_.rangeRound = function (x) {
      return (e = Array.from(x)), (t = vS), g();
    }),
    (_.clamp = function (x) {
      return arguments.length ? ((u = x ? !0 : So), g()) : u !== So;
    }),
    (_.interpolate = function (x) {
      return arguments.length ? ((t = x), g()) : t;
    }),
    (_.unknown = function (x) {
      return arguments.length ? ((s = x), _) : s;
    }),
    function (x, M) {
      return (i = x), (r = M), g();
    }
  );
}
function TS() {
  return wS()(So, So);
}
function CS(n) {
  return Math.abs((n = Math.round(n))) >= 1e21
    ? n.toLocaleString("en").replace(/,/g, "")
    : n.toString(10);
}
function Ol(n, e) {
  if (
    (t = (n = e ? n.toExponential(e - 1) : n.toExponential()).indexOf("e")) < 0
  )
    return null;
  var t,
    i = n.slice(0, t);
  return [i.length > 1 ? i[0] + i.slice(2) : i, +n.slice(t + 1)];
}
function Fo(n) {
  return (n = Ol(Math.abs(n))), n ? n[1] : NaN;
}
function RS(n, e) {
  return function (t, i) {
    for (
      var r = t.length, s = [], u = 0, c = n[0], d = 0;
      r > 0 &&
      c > 0 &&
      (d + c + 1 > i && (c = Math.max(1, i - d)),
      s.push(t.substring((r -= c), r + c)),
      !((d += c + 1) > i));

    )
      c = n[(u = (u + 1) % n.length)];
    return s.reverse().join(e);
  };
}
function PS(n) {
  return function (e) {
    return e.replace(/[0-9]/g, function (t) {
      return n[+t];
    });
  };
}
var LS =
  /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function Ul(n) {
  if (!(e = LS.exec(n))) throw new Error("invalid format: " + n);
  var e;
  return new Uc({
    fill: e[1],
    align: e[2],
    sign: e[3],
    symbol: e[4],
    zero: e[5],
    width: e[6],
    comma: e[7],
    precision: e[8] && e[8].slice(1),
    trim: e[9],
    type: e[10],
  });
}
Ul.prototype = Uc.prototype;
function Uc(n) {
  (this.fill = n.fill === void 0 ? " " : n.fill + ""),
    (this.align = n.align === void 0 ? ">" : n.align + ""),
    (this.sign = n.sign === void 0 ? "-" : n.sign + ""),
    (this.symbol = n.symbol === void 0 ? "" : n.symbol + ""),
    (this.zero = !!n.zero),
    (this.width = n.width === void 0 ? void 0 : +n.width),
    (this.comma = !!n.comma),
    (this.precision = n.precision === void 0 ? void 0 : +n.precision),
    (this.trim = !!n.trim),
    (this.type = n.type === void 0 ? "" : n.type + "");
}
Uc.prototype.toString = function () {
  return (
    this.fill +
    this.align +
    this.sign +
    this.symbol +
    (this.zero ? "0" : "") +
    (this.width === void 0 ? "" : Math.max(1, this.width | 0)) +
    (this.comma ? "," : "") +
    (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) +
    (this.trim ? "~" : "") +
    this.type
  );
};
function DS(n) {
  e: for (var e = n.length, t = 1, i = -1, r; t < e; ++t)
    switch (n[t]) {
      case ".":
        i = r = t;
        break;
      case "0":
        i === 0 && (i = t), (r = t);
        break;
      default:
        if (!+n[t]) break e;
        i > 0 && (i = 0);
        break;
    }
  return i > 0 ? n.slice(0, i) + n.slice(r + 1) : n;
}
var L2;
function IS(n, e) {
  var t = Ol(n, e);
  if (!t) return n + "";
  var i = t[0],
    r = t[1],
    s = r - (L2 = Math.max(-8, Math.min(8, Math.floor(r / 3))) * 3) + 1,
    u = i.length;
  return s === u
    ? i
    : s > u
    ? i + new Array(s - u + 1).join("0")
    : s > 0
    ? i.slice(0, s) + "." + i.slice(s)
    : "0." + new Array(1 - s).join("0") + Ol(n, Math.max(0, e + s - 1))[0];
}
function fp(n, e) {
  var t = Ol(n, e);
  if (!t) return n + "";
  var i = t[0],
    r = t[1];
  return r < 0
    ? "0." + new Array(-r).join("0") + i
    : i.length > r + 1
    ? i.slice(0, r + 1) + "." + i.slice(r + 1)
    : i + new Array(r - i.length + 2).join("0");
}
const hp = {
  "%": (n, e) => (n * 100).toFixed(e),
  b: (n) => Math.round(n).toString(2),
  c: (n) => n + "",
  d: CS,
  e: (n, e) => n.toExponential(e),
  f: (n, e) => n.toFixed(e),
  g: (n, e) => n.toPrecision(e),
  o: (n) => Math.round(n).toString(8),
  p: (n, e) => fp(n * 100, e),
  r: fp,
  s: IS,
  X: (n) => Math.round(n).toString(16).toUpperCase(),
  x: (n) => Math.round(n).toString(16),
};
function dp(n) {
  return n;
}
var pp = Array.prototype.map,
  mp = [
    "y",
    "z",
    "a",
    "f",
    "p",
    "n",
    "µ",
    "m",
    "",
    "k",
    "M",
    "G",
    "T",
    "P",
    "E",
    "Z",
    "Y",
  ];
function OS(n) {
  var e =
      n.grouping === void 0 || n.thousands === void 0
        ? dp
        : RS(pp.call(n.grouping, Number), n.thousands + ""),
    t = n.currency === void 0 ? "" : n.currency[0] + "",
    i = n.currency === void 0 ? "" : n.currency[1] + "",
    r = n.decimal === void 0 ? "." : n.decimal + "",
    s = n.numerals === void 0 ? dp : PS(pp.call(n.numerals, String)),
    u = n.percent === void 0 ? "%" : n.percent + "",
    c = n.minus === void 0 ? "−" : n.minus + "",
    d = n.nan === void 0 ? "NaN" : n.nan + "";
  function p(_) {
    _ = Ul(_);
    var x = _.fill,
      M = _.align,
      E = _.sign,
      C = _.symbol,
      S = _.zero,
      b = _.width,
      L = _.comma,
      T = _.precision,
      R = _.trim,
      U = _.type;
    U === "n"
      ? ((L = !0), (U = "g"))
      : hp[U] || (T === void 0 && (T = 12), (R = !0), (U = "g")),
      (S || (x === "0" && M === "=")) && ((S = !0), (x = "0"), (M = "="));
    var q =
        C === "$"
          ? t
          : C === "#" && /[boxX]/.test(U)
          ? "0" + U.toLowerCase()
          : "",
      I = C === "$" ? i : /[%p]/.test(U) ? u : "",
      N = hp[U],
      D = /[defgprs%]/.test(U);
    T =
      T === void 0
        ? 6
        : /[gprs]/.test(U)
        ? Math.max(1, Math.min(21, T))
        : Math.max(0, Math.min(20, T));
    function O(F) {
      var $ = q,
        V = I,
        Q,
        k,
        te;
      if (U === "c") (V = N(F) + V), (F = "");
      else {
        F = +F;
        var ee = F < 0 || 1 / F < 0;
        if (
          ((F = isNaN(F) ? d : N(Math.abs(F), T)),
          R && (F = DS(F)),
          ee && +F == 0 && E !== "+" && (ee = !1),
          ($ =
            (ee ? (E === "(" ? E : c) : E === "-" || E === "(" ? "" : E) + $),
          (V =
            (U === "s" ? mp[8 + L2 / 3] : "") +
            V +
            (ee && E === "(" ? ")" : "")),
          D)
        ) {
          for (Q = -1, k = F.length; ++Q < k; )
            if (((te = F.charCodeAt(Q)), 48 > te || te > 57)) {
              (V = (te === 46 ? r + F.slice(Q + 1) : F.slice(Q)) + V),
                (F = F.slice(0, Q));
              break;
            }
        }
      }
      L && !S && (F = e(F, 1 / 0));
      var se = $.length + F.length + V.length,
        pe = se < b ? new Array(b - se + 1).join(x) : "";
      switch (
        (L &&
          S &&
          ((F = e(pe + F, pe.length ? b - V.length : 1 / 0)), (pe = "")),
        M)
      ) {
        case "<":
          F = $ + F + V + pe;
          break;
        case "=":
          F = $ + pe + F + V;
          break;
        case "^":
          F = pe.slice(0, (se = pe.length >> 1)) + $ + F + V + pe.slice(se);
          break;
        default:
          F = pe + $ + F + V;
          break;
      }
      return s(F);
    }
    return (
      (O.toString = function () {
        return _ + "";
      }),
      O
    );
  }
  function g(_, x) {
    var M = p(((_ = Ul(_)), (_.type = "f"), _)),
      E = Math.max(-8, Math.min(8, Math.floor(Fo(x) / 3))) * 3,
      C = Math.pow(10, -E),
      S = mp[8 + E / 3];
    return function (b) {
      return M(C * b) + S;
    };
  }
  return { format: p, formatPrefix: g };
}
var kA, D2, I2;
US({ thousands: ",", grouping: [3], currency: ["$", ""] });
function US(n) {
  return (kA = OS(n)), (D2 = kA.format), (I2 = kA.formatPrefix), kA;
}
function qS(n) {
  return Math.max(0, -Fo(Math.abs(n)));
}
function BS(n, e) {
  return Math.max(
    0,
    Math.max(-8, Math.min(8, Math.floor(Fo(e) / 3))) * 3 - Fo(Math.abs(n))
  );
}
function NS(n, e) {
  return (
    (n = Math.abs(n)), (e = Math.abs(e) - n), Math.max(0, Fo(e) - Fo(n)) + 1
  );
}
function FS(n, e, t, i) {
  var r = P6(n, e, t),
    s;
  switch (((i = Ul(i ?? ",f")), i.type)) {
    case "s": {
      var u = Math.max(Math.abs(n), Math.abs(e));
      return (
        i.precision == null && !isNaN((s = BS(r, u))) && (i.precision = s),
        I2(i, u)
      );
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      i.precision == null &&
        !isNaN((s = NS(r, Math.max(Math.abs(n), Math.abs(e))))) &&
        (i.precision = s - (i.type === "e"));
      break;
    }
    case "f":
    case "%": {
      i.precision == null &&
        !isNaN((s = qS(r))) &&
        (i.precision = s - (i.type === "%") * 2);
      break;
    }
  }
  return D2(i);
}
function kS(n) {
  var e = n.domain;
  return (
    (n.ticks = function (t) {
      var i = e();
      return R6(i[0], i[i.length - 1], t ?? 10);
    }),
    (n.tickFormat = function (t, i) {
      var r = e();
      return FS(r[0], r[r.length - 1], t ?? 10, i);
    }),
    (n.nice = function (t) {
      t == null && (t = 10);
      var i = e(),
        r = 0,
        s = i.length - 1,
        u = i[r],
        c = i[s],
        d,
        p,
        g = 10;
      for (
        c < u && ((p = u), (u = c), (c = p), (p = r), (r = s), (s = p));
        g-- > 0;

      ) {
        if (((p = Lu(u, c, t)), p === d)) return (i[r] = u), (i[s] = c), e(i);
        if (p > 0) (u = Math.floor(u / p) * p), (c = Math.ceil(c / p) * p);
        else if (p < 0) (u = Math.ceil(u * p) / p), (c = Math.floor(c * p) / p);
        else break;
        d = p;
      }
      return n;
    }),
    n
  );
}
function ko() {
  var n = TS();
  return (
    (n.copy = function () {
      return ES(n, ko());
    }),
    ZM.apply(n, arguments),
    kS(n)
  );
}
const Fr = 11102230246251565e-32,
  Qn = 134217729,
  zS = (3 + 8 * Fr) * Fr;
function au(n, e, t, i, r) {
  let s,
    u,
    c,
    d,
    p = e[0],
    g = i[0],
    _ = 0,
    x = 0;
  g > p == g > -p ? ((s = p), (p = e[++_])) : ((s = g), (g = i[++x]));
  let M = 0;
  if (_ < n && x < t)
    for (
      g > p == g > -p
        ? ((u = p + s), (c = s - (u - p)), (p = e[++_]))
        : ((u = g + s), (c = s - (u - g)), (g = i[++x])),
        s = u,
        c !== 0 && (r[M++] = c);
      _ < n && x < t;

    )
      g > p == g > -p
        ? ((u = s + p), (d = u - s), (c = s - (u - d) + (p - d)), (p = e[++_]))
        : ((u = s + g), (d = u - s), (c = s - (u - d) + (g - d)), (g = i[++x])),
        (s = u),
        c !== 0 && (r[M++] = c);
  for (; _ < n; )
    (u = s + p),
      (d = u - s),
      (c = s - (u - d) + (p - d)),
      (p = e[++_]),
      (s = u),
      c !== 0 && (r[M++] = c);
  for (; x < t; )
    (u = s + g),
      (d = u - s),
      (c = s - (u - d) + (g - d)),
      (g = i[++x]),
      (s = u),
      c !== 0 && (r[M++] = c);
  return (s !== 0 || M === 0) && (r[M++] = s), M;
}
function GS(n, e) {
  let t = e[0];
  for (let i = 1; i < n; i++) t += e[i];
  return t;
}
function Ya(n) {
  return new Float64Array(n);
}
const HS = (3 + 16 * Fr) * Fr,
  VS = (2 + 12 * Fr) * Fr,
  WS = (9 + 64 * Fr) * Fr * Fr,
  fo = Ya(4),
  gp = Ya(8),
  _p = Ya(12),
  vp = Ya(16),
  ii = Ya(4);
function jS(n, e, t, i, r, s, u) {
  let c, d, p, g, _, x, M, E, C, S, b, L, T, R, U, q, I, N;
  const D = n - r,
    O = t - r,
    F = e - s,
    $ = i - s;
  (R = D * $),
    (x = Qn * D),
    (M = x - (x - D)),
    (E = D - M),
    (x = Qn * $),
    (C = x - (x - $)),
    (S = $ - C),
    (U = E * S - (R - M * C - E * C - M * S)),
    (q = F * O),
    (x = Qn * F),
    (M = x - (x - F)),
    (E = F - M),
    (x = Qn * O),
    (C = x - (x - O)),
    (S = O - C),
    (I = E * S - (q - M * C - E * C - M * S)),
    (b = U - I),
    (_ = U - b),
    (fo[0] = U - (b + _) + (_ - I)),
    (L = R + b),
    (_ = L - R),
    (T = R - (L - _) + (b - _)),
    (b = T - q),
    (_ = T - b),
    (fo[1] = T - (b + _) + (_ - q)),
    (N = L + b),
    (_ = N - L),
    (fo[2] = L - (N - _) + (b - _)),
    (fo[3] = N);
  let V = GS(4, fo),
    Q = VS * u;
  if (
    V >= Q ||
    -V >= Q ||
    ((_ = n - D),
    (c = n - (D + _) + (_ - r)),
    (_ = t - O),
    (p = t - (O + _) + (_ - r)),
    (_ = e - F),
    (d = e - (F + _) + (_ - s)),
    (_ = i - $),
    (g = i - ($ + _) + (_ - s)),
    c === 0 && d === 0 && p === 0 && g === 0) ||
    ((Q = WS * u + zS * Math.abs(V)),
    (V += D * g + $ * c - (F * p + O * d)),
    V >= Q || -V >= Q)
  )
    return V;
  (R = c * $),
    (x = Qn * c),
    (M = x - (x - c)),
    (E = c - M),
    (x = Qn * $),
    (C = x - (x - $)),
    (S = $ - C),
    (U = E * S - (R - M * C - E * C - M * S)),
    (q = d * O),
    (x = Qn * d),
    (M = x - (x - d)),
    (E = d - M),
    (x = Qn * O),
    (C = x - (x - O)),
    (S = O - C),
    (I = E * S - (q - M * C - E * C - M * S)),
    (b = U - I),
    (_ = U - b),
    (ii[0] = U - (b + _) + (_ - I)),
    (L = R + b),
    (_ = L - R),
    (T = R - (L - _) + (b - _)),
    (b = T - q),
    (_ = T - b),
    (ii[1] = T - (b + _) + (_ - q)),
    (N = L + b),
    (_ = N - L),
    (ii[2] = L - (N - _) + (b - _)),
    (ii[3] = N);
  const k = au(4, fo, 4, ii, gp);
  (R = D * g),
    (x = Qn * D),
    (M = x - (x - D)),
    (E = D - M),
    (x = Qn * g),
    (C = x - (x - g)),
    (S = g - C),
    (U = E * S - (R - M * C - E * C - M * S)),
    (q = F * p),
    (x = Qn * F),
    (M = x - (x - F)),
    (E = F - M),
    (x = Qn * p),
    (C = x - (x - p)),
    (S = p - C),
    (I = E * S - (q - M * C - E * C - M * S)),
    (b = U - I),
    (_ = U - b),
    (ii[0] = U - (b + _) + (_ - I)),
    (L = R + b),
    (_ = L - R),
    (T = R - (L - _) + (b - _)),
    (b = T - q),
    (_ = T - b),
    (ii[1] = T - (b + _) + (_ - q)),
    (N = L + b),
    (_ = N - L),
    (ii[2] = L - (N - _) + (b - _)),
    (ii[3] = N);
  const te = au(k, gp, 4, ii, _p);
  (R = c * g),
    (x = Qn * c),
    (M = x - (x - c)),
    (E = c - M),
    (x = Qn * g),
    (C = x - (x - g)),
    (S = g - C),
    (U = E * S - (R - M * C - E * C - M * S)),
    (q = d * p),
    (x = Qn * d),
    (M = x - (x - d)),
    (E = d - M),
    (x = Qn * p),
    (C = x - (x - p)),
    (S = p - C),
    (I = E * S - (q - M * C - E * C - M * S)),
    (b = U - I),
    (_ = U - b),
    (ii[0] = U - (b + _) + (_ - I)),
    (L = R + b),
    (_ = L - R),
    (T = R - (L - _) + (b - _)),
    (b = T - q),
    (_ = T - b),
    (ii[1] = T - (b + _) + (_ - q)),
    (N = L + b),
    (_ = N - L),
    (ii[2] = L - (N - _) + (b - _)),
    (ii[3] = N);
  const ee = au(te, _p, 4, ii, vp);
  return vp[ee - 1];
}
function zA(n, e, t, i, r, s) {
  const u = (e - s) * (t - r),
    c = (n - r) * (i - s),
    d = u - c,
    p = Math.abs(u + c);
  return Math.abs(d) >= HS * p ? d : -jS(n, e, t, i, r, s, p);
}
const xp = Math.pow(2, -52),
  GA = new Uint32Array(512);
class ka {
  static from(e, t = ZS, i = KS) {
    const r = e.length,
      s = new Float64Array(r * 2);
    for (let u = 0; u < r; u++) {
      const c = e[u];
      (s[2 * u] = t(c)), (s[2 * u + 1] = i(c));
    }
    return new ka(s);
  }
  constructor(e) {
    const t = e.length >> 1;
    if (t > 0 && typeof e[0] != "number")
      throw new Error("Expected coords to contain numbers.");
    this.coords = e;
    const i = Math.max(2 * t - 5, 0);
    (this._triangles = new Uint32Array(i * 3)),
      (this._halfedges = new Int32Array(i * 3)),
      (this._hashSize = Math.ceil(Math.sqrt(t))),
      (this._hullPrev = new Uint32Array(t)),
      (this._hullNext = new Uint32Array(t)),
      (this._hullTri = new Uint32Array(t)),
      (this._hullHash = new Int32Array(this._hashSize).fill(-1)),
      (this._ids = new Uint32Array(t)),
      (this._dists = new Float64Array(t)),
      this.update();
  }
  update() {
    const {
        coords: e,
        _hullPrev: t,
        _hullNext: i,
        _hullTri: r,
        _hullHash: s,
      } = this,
      u = e.length >> 1;
    let c = 1 / 0,
      d = 1 / 0,
      p = -1 / 0,
      g = -1 / 0;
    for (let O = 0; O < u; O++) {
      const F = e[2 * O],
        $ = e[2 * O + 1];
      F < c && (c = F),
        $ < d && (d = $),
        F > p && (p = F),
        $ > g && (g = $),
        (this._ids[O] = O);
    }
    const _ = (c + p) / 2,
      x = (d + g) / 2;
    let M = 1 / 0,
      E,
      C,
      S;
    for (let O = 0; O < u; O++) {
      const F = Au(_, x, e[2 * O], e[2 * O + 1]);
      F < M && ((E = O), (M = F));
    }
    const b = e[2 * E],
      L = e[2 * E + 1];
    M = 1 / 0;
    for (let O = 0; O < u; O++) {
      if (O === E) continue;
      const F = Au(b, L, e[2 * O], e[2 * O + 1]);
      F < M && F > 0 && ((C = O), (M = F));
    }
    let T = e[2 * C],
      R = e[2 * C + 1],
      U = 1 / 0;
    for (let O = 0; O < u; O++) {
      if (O === E || O === C) continue;
      const F = $S(b, L, T, R, e[2 * O], e[2 * O + 1]);
      F < U && ((S = O), (U = F));
    }
    let q = e[2 * S],
      I = e[2 * S + 1];
    if (U === 1 / 0) {
      for (let $ = 0; $ < u; $++)
        this._dists[$] = e[2 * $] - e[0] || e[2 * $ + 1] - e[1];
      Eo(this._ids, this._dists, 0, u - 1);
      const O = new Uint32Array(u);
      let F = 0;
      for (let $ = 0, V = -1 / 0; $ < u; $++) {
        const Q = this._ids[$];
        this._dists[Q] > V && ((O[F++] = Q), (V = this._dists[Q]));
      }
      (this.hull = O.subarray(0, F)),
        (this.triangles = new Uint32Array(0)),
        (this.halfedges = new Uint32Array(0));
      return;
    }
    if (zA(b, L, T, R, q, I) < 0) {
      const O = C,
        F = T,
        $ = R;
      (C = S), (T = q), (R = I), (S = O), (q = F), (I = $);
    }
    const N = YS(b, L, T, R, q, I);
    (this._cx = N.x), (this._cy = N.y);
    for (let O = 0; O < u; O++)
      this._dists[O] = Au(e[2 * O], e[2 * O + 1], N.x, N.y);
    Eo(this._ids, this._dists, 0, u - 1), (this._hullStart = E);
    let D = 3;
    (i[E] = t[S] = C),
      (i[C] = t[E] = S),
      (i[S] = t[C] = E),
      (r[E] = 0),
      (r[C] = 1),
      (r[S] = 2),
      s.fill(-1),
      (s[this._hashKey(b, L)] = E),
      (s[this._hashKey(T, R)] = C),
      (s[this._hashKey(q, I)] = S),
      (this.trianglesLen = 0),
      this._addTriangle(E, C, S, -1, -1, -1);
    for (let O = 0, F, $; O < this._ids.length; O++) {
      const V = this._ids[O],
        Q = e[2 * V],
        k = e[2 * V + 1];
      if (
        (O > 0 && Math.abs(Q - F) <= xp && Math.abs(k - $) <= xp) ||
        ((F = Q), ($ = k), V === E || V === C || V === S)
      )
        continue;
      let te = 0;
      for (
        let oe = 0, he = this._hashKey(Q, k);
        oe < this._hashSize &&
        ((te = s[(he + oe) % this._hashSize]), !(te !== -1 && te !== i[te]));
        oe++
      );
      te = t[te];
      let ee = te,
        se;
      for (
        ;
        (se = i[ee]),
          zA(Q, k, e[2 * ee], e[2 * ee + 1], e[2 * se], e[2 * se + 1]) >= 0;

      )
        if (((ee = se), ee === te)) {
          ee = -1;
          break;
        }
      if (ee === -1) continue;
      let pe = this._addTriangle(ee, V, i[ee], -1, -1, r[ee]);
      (r[V] = this._legalize(pe + 2)), (r[ee] = pe), D++;
      let de = i[ee];
      for (
        ;
        (se = i[de]),
          zA(Q, k, e[2 * de], e[2 * de + 1], e[2 * se], e[2 * se + 1]) < 0;

      )
        (pe = this._addTriangle(de, V, se, r[V], -1, r[de])),
          (r[V] = this._legalize(pe + 2)),
          (i[de] = de),
          D--,
          (de = se);
      if (ee === te)
        for (
          ;
          (se = t[ee]),
            zA(Q, k, e[2 * se], e[2 * se + 1], e[2 * ee], e[2 * ee + 1]) < 0;

        )
          (pe = this._addTriangle(se, V, ee, -1, r[ee], r[se])),
            this._legalize(pe + 2),
            (r[se] = pe),
            (i[ee] = ee),
            D--,
            (ee = se);
      (this._hullStart = t[V] = ee),
        (i[ee] = t[de] = V),
        (i[V] = de),
        (s[this._hashKey(Q, k)] = V),
        (s[this._hashKey(e[2 * ee], e[2 * ee + 1])] = ee);
    }
    this.hull = new Uint32Array(D);
    for (let O = 0, F = this._hullStart; O < D; O++)
      (this.hull[O] = F), (F = i[F]);
    (this.triangles = this._triangles.subarray(0, this.trianglesLen)),
      (this.halfedges = this._halfedges.subarray(0, this.trianglesLen));
  }
  _hashKey(e, t) {
    return (
      Math.floor(XS(e - this._cx, t - this._cy) * this._hashSize) %
      this._hashSize
    );
  }
  _legalize(e) {
    const { _triangles: t, _halfedges: i, coords: r } = this;
    let s = 0,
      u = 0;
    for (;;) {
      const c = i[e],
        d = e - (e % 3);
      if (((u = d + ((e + 2) % 3)), c === -1)) {
        if (s === 0) break;
        e = GA[--s];
        continue;
      }
      const p = c - (c % 3),
        g = d + ((e + 1) % 3),
        _ = p + ((c + 2) % 3),
        x = t[u],
        M = t[e],
        E = t[g],
        C = t[_];
      if (
        QS(
          r[2 * x],
          r[2 * x + 1],
          r[2 * M],
          r[2 * M + 1],
          r[2 * E],
          r[2 * E + 1],
          r[2 * C],
          r[2 * C + 1]
        )
      ) {
        (t[e] = C), (t[c] = x);
        const b = i[_];
        if (b === -1) {
          let T = this._hullStart;
          do {
            if (this._hullTri[T] === _) {
              this._hullTri[T] = e;
              break;
            }
            T = this._hullPrev[T];
          } while (T !== this._hullStart);
        }
        this._link(e, b), this._link(c, i[u]), this._link(u, _);
        const L = p + ((c + 1) % 3);
        s < GA.length && (GA[s++] = L);
      } else {
        if (s === 0) break;
        e = GA[--s];
      }
    }
    return u;
  }
  _link(e, t) {
    (this._halfedges[e] = t), t !== -1 && (this._halfedges[t] = e);
  }
  _addTriangle(e, t, i, r, s, u) {
    const c = this.trianglesLen;
    return (
      (this._triangles[c] = e),
      (this._triangles[c + 1] = t),
      (this._triangles[c + 2] = i),
      this._link(c, r),
      this._link(c + 1, s),
      this._link(c + 2, u),
      (this.trianglesLen += 3),
      c
    );
  }
}
function XS(n, e) {
  const t = n / (Math.abs(n) + Math.abs(e));
  return (e > 0 ? 3 - t : 1 + t) / 4;
}
function Au(n, e, t, i) {
  const r = n - t,
    s = e - i;
  return r * r + s * s;
}
function QS(n, e, t, i, r, s, u, c) {
  const d = n - u,
    p = e - c,
    g = t - u,
    _ = i - c,
    x = r - u,
    M = s - c,
    E = d * d + p * p,
    C = g * g + _ * _,
    S = x * x + M * M;
  return d * (_ * S - C * M) - p * (g * S - C * x) + E * (g * M - _ * x) < 0;
}
function $S(n, e, t, i, r, s) {
  const u = t - n,
    c = i - e,
    d = r - n,
    p = s - e,
    g = u * u + c * c,
    _ = d * d + p * p,
    x = 0.5 / (u * p - c * d),
    M = (p * g - c * _) * x,
    E = (u * _ - d * g) * x;
  return M * M + E * E;
}
function YS(n, e, t, i, r, s) {
  const u = t - n,
    c = i - e,
    d = r - n,
    p = s - e,
    g = u * u + c * c,
    _ = d * d + p * p,
    x = 0.5 / (u * p - c * d),
    M = n + (p * g - c * _) * x,
    E = e + (u * _ - d * g) * x;
  return { x: M, y: E };
}
function Eo(n, e, t, i) {
  if (i - t <= 20)
    for (let r = t + 1; r <= i; r++) {
      const s = n[r],
        u = e[s];
      let c = r - 1;
      for (; c >= t && e[n[c]] > u; ) n[c + 1] = n[c--];
      n[c + 1] = s;
    }
  else {
    const r = (t + i) >> 1;
    let s = t + 1,
      u = i;
    la(n, r, s),
      e[n[t]] > e[n[i]] && la(n, t, i),
      e[n[s]] > e[n[i]] && la(n, s, i),
      e[n[t]] > e[n[s]] && la(n, t, s);
    const c = n[s],
      d = e[c];
    for (;;) {
      do s++;
      while (e[n[s]] < d);
      do u--;
      while (e[n[u]] > d);
      if (u < s) break;
      la(n, s, u);
    }
    (n[t + 1] = n[u]),
      (n[u] = c),
      i - s + 1 >= u - t
        ? (Eo(n, e, s, i), Eo(n, e, t, u - 1))
        : (Eo(n, e, t, u - 1), Eo(n, e, s, i));
  }
}
function la(n, e, t) {
  const i = n[e];
  (n[e] = n[t]), (n[t] = i);
}
function ZS(n) {
  return n[0];
}
function KS(n) {
  return n[1];
}
function JS(n) {
  if (!n) throw new Error("coord is required");
  if (!Array.isArray(n)) {
    if (
      n.type === "Feature" &&
      n.geometry !== null &&
      n.geometry.type === "Point"
    )
      return n.geometry.coordinates;
    if (n.type === "Point") return n.coordinates;
  }
  if (
    Array.isArray(n) &&
    n.length >= 2 &&
    !Array.isArray(n[0]) &&
    !Array.isArray(n[1])
  )
    return n;
  throw new Error("coord must be GeoJSON Point or an Array of numbers");
}
function eE(n) {
  return n.type === "Feature" ? n.geometry : n;
}
function tE(n, e, t) {
  if ((t === void 0 && (t = {}), !n)) throw new Error("point is required");
  if (!e) throw new Error("polygon is required");
  var i = JS(n),
    r = eE(e),
    s = r.type,
    u = e.bbox,
    c = r.coordinates;
  if (u && nE(i, u) === !1) return !1;
  s === "Polygon" && (c = [c]);
  for (var d = !1, p = 0; p < c.length && !d; p++)
    if (yp(i, c[p][0], t.ignoreBoundary)) {
      for (var g = !1, _ = 1; _ < c[p].length && !g; )
        yp(i, c[p][_], !t.ignoreBoundary) && (g = !0), _++;
      g || (d = !0);
    }
  return d;
}
function yp(n, e, t) {
  var i = !1;
  e[0][0] === e[e.length - 1][0] &&
    e[0][1] === e[e.length - 1][1] &&
    (e = e.slice(0, e.length - 1));
  for (var r = 0, s = e.length - 1; r < e.length; s = r++) {
    var u = e[r][0],
      c = e[r][1],
      d = e[s][0],
      p = e[s][1],
      g =
        n[1] * (u - d) + c * (d - n[0]) + p * (n[0] - u) === 0 &&
        (u - n[0]) * (d - n[0]) <= 0 &&
        (c - n[1]) * (p - n[1]) <= 0;
    if (g) return !t;
    var _ = c > n[1] != p > n[1] && n[0] < ((d - u) * (n[1] - c)) / (p - c) + u;
    _ && (i = !i);
  }
  return i;
}
function nE(n, e) {
  return e[0] <= n[0] && e[1] <= n[1] && e[2] >= n[0] && e[3] >= n[1];
}
const bp = 1e-6;
class Ps {
  constructor() {
    (this._x0 = this._y0 = this._x1 = this._y1 = null), (this._ = "");
  }
  moveTo(e, t) {
    this._ += `M${(this._x0 = this._x1 = +e)},${(this._y0 = this._y1 = +t)}`;
  }
  closePath() {
    this._x1 !== null &&
      ((this._x1 = this._x0), (this._y1 = this._y0), (this._ += "Z"));
  }
  lineTo(e, t) {
    this._ += `L${(this._x1 = +e)},${(this._y1 = +t)}`;
  }
  arc(e, t, i) {
    (e = +e), (t = +t), (i = +i);
    const r = e + i,
      s = t;
    if (i < 0) throw new Error("negative radius");
    this._x1 === null
      ? (this._ += `M${r},${s}`)
      : (Math.abs(this._x1 - r) > bp || Math.abs(this._y1 - s) > bp) &&
        (this._ += "L" + r + "," + s),
      i &&
        (this._ += `A${i},${i},0,1,1,${e - i},${t}A${i},${i},0,1,1,${(this._x1 =
          r)},${(this._y1 = s)}`);
  }
  rect(e, t, i, r) {
    this._ += `M${(this._x0 = this._x1 = +e)},${(this._y0 = this._y1 =
      +t)}h${+i}v${+r}h${-i}Z`;
  }
  value() {
    return this._ || null;
  }
}
class nc {
  constructor() {
    this._ = [];
  }
  moveTo(e, t) {
    this._.push([e, t]);
  }
  closePath() {
    this._.push(this._[0].slice());
  }
  lineTo(e, t) {
    this._.push([e, t]);
  }
  value() {
    return this._.length ? this._ : null;
  }
}
class iE {
  constructor(e, [t, i, r, s] = [0, 0, 960, 500]) {
    if (!((r = +r) >= (t = +t)) || !((s = +s) >= (i = +i)))
      throw new Error("invalid bounds");
    (this.delaunay = e),
      (this._circumcenters = new Float64Array(e.points.length * 2)),
      (this.vectors = new Float64Array(e.points.length * 2)),
      (this.xmax = r),
      (this.xmin = t),
      (this.ymax = s),
      (this.ymin = i),
      this._init();
  }
  update() {
    return this.delaunay.update(), this._init(), this;
  }
  _init() {
    const {
      delaunay: { points: e, hull: t, triangles: i },
      vectors: r,
    } = this;
    let s, u;
    const c = (this.circumcenters = this._circumcenters.subarray(
      0,
      (i.length / 3) * 2
    ));
    for (let C = 0, S = 0, b = i.length, L, T; C < b; C += 3, S += 2) {
      const R = i[C] * 2,
        U = i[C + 1] * 2,
        q = i[C + 2] * 2,
        I = e[R],
        N = e[R + 1],
        D = e[U],
        O = e[U + 1],
        F = e[q],
        $ = e[q + 1],
        V = D - I,
        Q = O - N,
        k = F - I,
        te = $ - N,
        ee = (V * te - Q * k) * 2;
      if (Math.abs(ee) < 1e-9) {
        if (s === void 0) {
          s = u = 0;
          for (const pe of t) (s += e[pe * 2]), (u += e[pe * 2 + 1]);
          (s /= t.length), (u /= t.length);
        }
        const se = 1e9 * Math.sign((s - I) * te - (u - N) * k);
        (L = (I + F) / 2 - se * te), (T = (N + $) / 2 + se * k);
      } else {
        const se = 1 / ee,
          pe = V * V + Q * Q,
          de = k * k + te * te;
        (L = I + (te * pe - Q * de) * se), (T = N + (V * de - k * pe) * se);
      }
      (c[S] = L), (c[S + 1] = T);
    }
    let d = t[t.length - 1],
      p,
      g = d * 4,
      _,
      x = e[2 * d],
      M,
      E = e[2 * d + 1];
    r.fill(0);
    for (let C = 0; C < t.length; ++C)
      (d = t[C]),
        (p = g),
        (_ = x),
        (M = E),
        (g = d * 4),
        (x = e[2 * d]),
        (E = e[2 * d + 1]),
        (r[p + 2] = r[g] = M - E),
        (r[p + 3] = r[g + 1] = x - _);
  }
  render(e) {
    const t = e == null ? (e = new Ps()) : void 0,
      {
        delaunay: { halfedges: i, inedges: r, hull: s },
        circumcenters: u,
        vectors: c,
      } = this;
    if (s.length <= 1) return null;
    for (let g = 0, _ = i.length; g < _; ++g) {
      const x = i[g];
      if (x < g) continue;
      const M = Math.floor(g / 3) * 2,
        E = Math.floor(x / 3) * 2,
        C = u[M],
        S = u[M + 1],
        b = u[E],
        L = u[E + 1];
      this._renderSegment(C, S, b, L, e);
    }
    let d,
      p = s[s.length - 1];
    for (let g = 0; g < s.length; ++g) {
      (d = p), (p = s[g]);
      const _ = Math.floor(r[p] / 3) * 2,
        x = u[_],
        M = u[_ + 1],
        E = d * 4,
        C = this._project(x, M, c[E + 2], c[E + 3]);
      C && this._renderSegment(x, M, C[0], C[1], e);
    }
    return t && t.value();
  }
  renderBounds(e) {
    const t = e == null ? (e = new Ps()) : void 0;
    return (
      e.rect(
        this.xmin,
        this.ymin,
        this.xmax - this.xmin,
        this.ymax - this.ymin
      ),
      t && t.value()
    );
  }
  renderCell(e, t) {
    const i = t == null ? (t = new Ps()) : void 0,
      r = this._clip(e);
    if (r === null || !r.length) return;
    t.moveTo(r[0], r[1]);
    let s = r.length;
    for (; r[0] === r[s - 2] && r[1] === r[s - 1] && s > 1; ) s -= 2;
    for (let u = 2; u < s; u += 2)
      (r[u] !== r[u - 2] || r[u + 1] !== r[u - 1]) && t.lineTo(r[u], r[u + 1]);
    return t.closePath(), i && i.value();
  }
  *cellPolygons() {
    const {
      delaunay: { points: e },
    } = this;
    for (let t = 0, i = e.length / 2; t < i; ++t) {
      const r = this.cellPolygon(t);
      r && ((r.index = t), yield r);
    }
  }
  cellPolygon(e) {
    const t = new nc();
    return this.renderCell(e, t), t.value();
  }
  _renderSegment(e, t, i, r, s) {
    let u;
    const c = this._regioncode(e, t),
      d = this._regioncode(i, r);
    c === 0 && d === 0
      ? (s.moveTo(e, t), s.lineTo(i, r))
      : (u = this._clipSegment(e, t, i, r, c, d)) &&
        (s.moveTo(u[0], u[1]), s.lineTo(u[2], u[3]));
  }
  contains(e, t, i) {
    return (
      (t = +t),
      t !== t || ((i = +i), i !== i) ? !1 : this.delaunay._step(e, t, i) === e
    );
  }
  *neighbors(e) {
    const t = this._clip(e);
    if (t)
      for (const i of this.delaunay.neighbors(e)) {
        const r = this._clip(i);
        if (r) {
          e: for (let s = 0, u = t.length; s < u; s += 2)
            for (let c = 0, d = r.length; c < d; c += 2)
              if (
                t[s] === r[c] &&
                t[s + 1] === r[c + 1] &&
                t[(s + 2) % u] === r[(c + d - 2) % d] &&
                t[(s + 3) % u] === r[(c + d - 1) % d]
              ) {
                yield i;
                break e;
              }
        }
      }
  }
  _cell(e) {
    const {
        circumcenters: t,
        delaunay: { inedges: i, halfedges: r, triangles: s },
      } = this,
      u = i[e];
    if (u === -1) return null;
    const c = [];
    let d = u;
    do {
      const p = Math.floor(d / 3);
      if (
        (c.push(t[p * 2], t[p * 2 + 1]),
        (d = d % 3 === 2 ? d - 2 : d + 1),
        s[d] !== e)
      )
        break;
      d = r[d];
    } while (d !== u && d !== -1);
    return c;
  }
  _clip(e) {
    if (e === 0 && this.delaunay.hull.length === 1)
      return [
        this.xmax,
        this.ymin,
        this.xmax,
        this.ymax,
        this.xmin,
        this.ymax,
        this.xmin,
        this.ymin,
      ];
    const t = this._cell(e);
    if (t === null) return null;
    const { vectors: i } = this,
      r = e * 4;
    return this._simplify(
      i[r] || i[r + 1]
        ? this._clipInfinite(e, t, i[r], i[r + 1], i[r + 2], i[r + 3])
        : this._clipFinite(e, t)
    );
  }
  _clipFinite(e, t) {
    const i = t.length;
    let r = null,
      s,
      u,
      c = t[i - 2],
      d = t[i - 1],
      p,
      g = this._regioncode(c, d),
      _,
      x = 0;
    for (let M = 0; M < i; M += 2)
      if (
        ((s = c),
        (u = d),
        (c = t[M]),
        (d = t[M + 1]),
        (p = g),
        (g = this._regioncode(c, d)),
        p === 0 && g === 0)
      )
        (_ = x), (x = 0), r ? r.push(c, d) : (r = [c, d]);
      else {
        let E, C, S, b, L;
        if (p === 0) {
          if ((E = this._clipSegment(s, u, c, d, p, g)) === null) continue;
          [C, S, b, L] = E;
        } else {
          if ((E = this._clipSegment(c, d, s, u, g, p)) === null) continue;
          ([b, L, C, S] = E),
            (_ = x),
            (x = this._edgecode(C, S)),
            _ && x && this._edge(e, _, x, r, r.length),
            r ? r.push(C, S) : (r = [C, S]);
        }
        (_ = x),
          (x = this._edgecode(b, L)),
          _ && x && this._edge(e, _, x, r, r.length),
          r ? r.push(b, L) : (r = [b, L]);
      }
    if (r)
      (_ = x),
        (x = this._edgecode(r[0], r[1])),
        _ && x && this._edge(e, _, x, r, r.length);
    else if (
      this.contains(e, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)
    )
      return [
        this.xmax,
        this.ymin,
        this.xmax,
        this.ymax,
        this.xmin,
        this.ymax,
        this.xmin,
        this.ymin,
      ];
    return r;
  }
  _clipSegment(e, t, i, r, s, u) {
    const c = s < u;
    for (c && ([e, t, i, r, s, u] = [i, r, e, t, u, s]); ; ) {
      if (s === 0 && u === 0) return c ? [i, r, e, t] : [e, t, i, r];
      if (s & u) return null;
      let d,
        p,
        g = s || u;
      g & 8
        ? ((d = e + ((i - e) * (this.ymax - t)) / (r - t)), (p = this.ymax))
        : g & 4
        ? ((d = e + ((i - e) * (this.ymin - t)) / (r - t)), (p = this.ymin))
        : g & 2
        ? ((p = t + ((r - t) * (this.xmax - e)) / (i - e)), (d = this.xmax))
        : ((p = t + ((r - t) * (this.xmin - e)) / (i - e)), (d = this.xmin)),
        s
          ? ((e = d), (t = p), (s = this._regioncode(e, t)))
          : ((i = d), (r = p), (u = this._regioncode(i, r)));
    }
  }
  _clipInfinite(e, t, i, r, s, u) {
    let c = Array.from(t),
      d;
    if (
      ((d = this._project(c[0], c[1], i, r)) && c.unshift(d[0], d[1]),
      (d = this._project(c[c.length - 2], c[c.length - 1], s, u)) &&
        c.push(d[0], d[1]),
      (c = this._clipFinite(e, c)))
    )
      for (
        let p = 0, g = c.length, _, x = this._edgecode(c[g - 2], c[g - 1]);
        p < g;
        p += 2
      )
        (_ = x),
          (x = this._edgecode(c[p], c[p + 1])),
          _ && x && ((p = this._edge(e, _, x, c, p)), (g = c.length));
    else
      this.contains(
        e,
        (this.xmin + this.xmax) / 2,
        (this.ymin + this.ymax) / 2
      ) &&
        (c = [
          this.xmin,
          this.ymin,
          this.xmax,
          this.ymin,
          this.xmax,
          this.ymax,
          this.xmin,
          this.ymax,
        ]);
    return c;
  }
  _edge(e, t, i, r, s) {
    for (; t !== i; ) {
      let u, c;
      switch (t) {
        case 5:
          t = 4;
          continue;
        case 4:
          (t = 6), (u = this.xmax), (c = this.ymin);
          break;
        case 6:
          t = 2;
          continue;
        case 2:
          (t = 10), (u = this.xmax), (c = this.ymax);
          break;
        case 10:
          t = 8;
          continue;
        case 8:
          (t = 9), (u = this.xmin), (c = this.ymax);
          break;
        case 9:
          t = 1;
          continue;
        case 1:
          (t = 5), (u = this.xmin), (c = this.ymin);
          break;
      }
      (r[s] !== u || r[s + 1] !== c) &&
        this.contains(e, u, c) &&
        (r.splice(s, 0, u, c), (s += 2));
    }
    return s;
  }
  _project(e, t, i, r) {
    let s = 1 / 0,
      u,
      c,
      d;
    if (r < 0) {
      if (t <= this.ymin) return null;
      (u = (this.ymin - t) / r) < s && ((d = this.ymin), (c = e + (s = u) * i));
    } else if (r > 0) {
      if (t >= this.ymax) return null;
      (u = (this.ymax - t) / r) < s && ((d = this.ymax), (c = e + (s = u) * i));
    }
    if (i > 0) {
      if (e >= this.xmax) return null;
      (u = (this.xmax - e) / i) < s && ((c = this.xmax), (d = t + (s = u) * r));
    } else if (i < 0) {
      if (e <= this.xmin) return null;
      (u = (this.xmin - e) / i) < s && ((c = this.xmin), (d = t + (s = u) * r));
    }
    return [c, d];
  }
  _edgecode(e, t) {
    return (
      (e === this.xmin ? 1 : e === this.xmax ? 2 : 0) |
      (t === this.ymin ? 4 : t === this.ymax ? 8 : 0)
    );
  }
  _regioncode(e, t) {
    return (
      (e < this.xmin ? 1 : e > this.xmax ? 2 : 0) |
      (t < this.ymin ? 4 : t > this.ymax ? 8 : 0)
    );
  }
  _simplify(e) {
    if (e && e.length > 4) {
      for (let t = 0; t < e.length; t += 2) {
        const i = (t + 2) % e.length,
          r = (t + 4) % e.length;
        ((e[t] === e[i] && e[i] === e[r]) ||
          (e[t + 1] === e[i + 1] && e[i + 1] === e[r + 1])) &&
          (e.splice(i, 2), (t -= 2));
      }
      e.length || (e = null);
    }
    return e;
  }
}
const rE = 2 * Math.PI,
  ho = Math.pow;
function sE(n) {
  return n[0];
}
function oE(n) {
  return n[1];
}
function aE(n) {
  const { triangles: e, coords: t } = n;
  for (let i = 0; i < e.length; i += 3) {
    const r = 2 * e[i],
      s = 2 * e[i + 1],
      u = 2 * e[i + 2];
    if (
      (t[u] - t[r]) * (t[s + 1] - t[r + 1]) -
        (t[s] - t[r]) * (t[u + 1] - t[r + 1]) >
      1e-10
    )
      return !1;
  }
  return !0;
}
function AE(n, e, t) {
  return [n + Math.sin(n + e) * t, e + Math.cos(n - e) * t];
}
class qc {
  static from(e, t = sE, i = oE, r) {
    return new qc(
      "length" in e ? lE(e, t, i, r) : Float64Array.from(uE(e, t, i, r))
    );
  }
  constructor(e) {
    (this._delaunator = new ka(e)),
      (this.inedges = new Int32Array(e.length / 2)),
      (this._hullIndex = new Int32Array(e.length / 2)),
      (this.points = this._delaunator.coords),
      this._init();
  }
  update() {
    return this._delaunator.update(), this._init(), this;
  }
  _init() {
    const e = this._delaunator,
      t = this.points;
    if (e.hull && e.hull.length > 2 && aE(e)) {
      this.collinear = Int32Array.from(
        { length: t.length / 2 },
        (x, M) => M
      ).sort((x, M) => t[2 * x] - t[2 * M] || t[2 * x + 1] - t[2 * M + 1]);
      const d = this.collinear[0],
        p = this.collinear[this.collinear.length - 1],
        g = [t[2 * d], t[2 * d + 1], t[2 * p], t[2 * p + 1]],
        _ = 1e-8 * Math.hypot(g[3] - g[1], g[2] - g[0]);
      for (let x = 0, M = t.length / 2; x < M; ++x) {
        const E = AE(t[2 * x], t[2 * x + 1], _);
        (t[2 * x] = E[0]), (t[2 * x + 1] = E[1]);
      }
      this._delaunator = new ka(t);
    } else delete this.collinear;
    const i = (this.halfedges = this._delaunator.halfedges),
      r = (this.hull = this._delaunator.hull),
      s = (this.triangles = this._delaunator.triangles),
      u = this.inedges.fill(-1),
      c = this._hullIndex.fill(-1);
    for (let d = 0, p = i.length; d < p; ++d) {
      const g = s[d % 3 === 2 ? d - 2 : d + 1];
      (i[d] === -1 || u[g] === -1) && (u[g] = d);
    }
    for (let d = 0, p = r.length; d < p; ++d) c[r[d]] = d;
    r.length <= 2 &&
      r.length > 0 &&
      ((this.triangles = new Int32Array(3).fill(-1)),
      (this.halfedges = new Int32Array(3).fill(-1)),
      (this.triangles[0] = r[0]),
      (u[r[0]] = 1),
      r.length === 2 &&
        ((u[r[1]] = 0),
        (this.triangles[1] = r[1]),
        (this.triangles[2] = r[1])));
  }
  voronoi(e) {
    return new iE(this, e);
  }
  *neighbors(e) {
    const {
      inedges: t,
      hull: i,
      _hullIndex: r,
      halfedges: s,
      triangles: u,
      collinear: c,
    } = this;
    if (c) {
      const _ = c.indexOf(e);
      _ > 0 && (yield c[_ - 1]), _ < c.length - 1 && (yield c[_ + 1]);
      return;
    }
    const d = t[e];
    if (d === -1) return;
    let p = d,
      g = -1;
    do {
      if ((yield (g = u[p]), (p = p % 3 === 2 ? p - 2 : p + 1), u[p] !== e))
        return;
      if (((p = s[p]), p === -1)) {
        const _ = i[(r[e] + 1) % i.length];
        _ !== g && (yield _);
        return;
      }
    } while (p !== d);
  }
  find(e, t, i = 0) {
    if (((e = +e), e !== e || ((t = +t), t !== t))) return -1;
    const r = i;
    let s;
    for (; (s = this._step(i, e, t)) >= 0 && s !== i && s !== r; ) i = s;
    return s;
  }
  _step(e, t, i) {
    const {
      inedges: r,
      hull: s,
      _hullIndex: u,
      halfedges: c,
      triangles: d,
      points: p,
    } = this;
    if (r[e] === -1 || !p.length) return (e + 1) % (p.length >> 1);
    let g = e,
      _ = ho(t - p[e * 2], 2) + ho(i - p[e * 2 + 1], 2);
    const x = r[e];
    let M = x;
    do {
      let E = d[M];
      const C = ho(t - p[E * 2], 2) + ho(i - p[E * 2 + 1], 2);
      if (
        (C < _ && ((_ = C), (g = E)),
        (M = M % 3 === 2 ? M - 2 : M + 1),
        d[M] !== e)
      )
        break;
      if (((M = c[M]), M === -1)) {
        if (
          ((M = s[(u[e] + 1) % s.length]),
          M !== E && ho(t - p[M * 2], 2) + ho(i - p[M * 2 + 1], 2) < _)
        )
          return M;
        break;
      }
    } while (M !== x);
    return g;
  }
  render(e) {
    const t = e == null ? (e = new Ps()) : void 0,
      { points: i, halfedges: r, triangles: s } = this;
    for (let u = 0, c = r.length; u < c; ++u) {
      const d = r[u];
      if (d < u) continue;
      const p = s[u] * 2,
        g = s[d] * 2;
      e.moveTo(i[p], i[p + 1]), e.lineTo(i[g], i[g + 1]);
    }
    return this.renderHull(e), t && t.value();
  }
  renderPoints(e, t) {
    t === void 0 &&
      (!e || typeof e.moveTo != "function") &&
      ((t = e), (e = null)),
      (t = t == null ? 2 : +t);
    const i = e == null ? (e = new Ps()) : void 0,
      { points: r } = this;
    for (let s = 0, u = r.length; s < u; s += 2) {
      const c = r[s],
        d = r[s + 1];
      e.moveTo(c + t, d), e.arc(c, d, t, 0, rE);
    }
    return i && i.value();
  }
  renderHull(e) {
    const t = e == null ? (e = new Ps()) : void 0,
      { hull: i, points: r } = this,
      s = i[0] * 2,
      u = i.length;
    e.moveTo(r[s], r[s + 1]);
    for (let c = 1; c < u; ++c) {
      const d = 2 * i[c];
      e.lineTo(r[d], r[d + 1]);
    }
    return e.closePath(), t && t.value();
  }
  hullPolygon() {
    const e = new nc();
    return this.renderHull(e), e.value();
  }
  renderTriangle(e, t) {
    const i = t == null ? (t = new Ps()) : void 0,
      { points: r, triangles: s } = this,
      u = s[(e *= 3)] * 2,
      c = s[e + 1] * 2,
      d = s[e + 2] * 2;
    return (
      t.moveTo(r[u], r[u + 1]),
      t.lineTo(r[c], r[c + 1]),
      t.lineTo(r[d], r[d + 1]),
      t.closePath(),
      i && i.value()
    );
  }
  *trianglePolygons() {
    const { triangles: e } = this;
    for (let t = 0, i = e.length / 3; t < i; ++t) yield this.trianglePolygon(t);
  }
  trianglePolygon(e) {
    const t = new nc();
    return this.renderTriangle(e, t), t.value();
  }
}
function lE(n, e, t, i) {
  const r = n.length,
    s = new Float64Array(r * 2);
  for (let u = 0; u < r; ++u) {
    const c = n[u];
    (s[u * 2] = e.call(i, c, u, n)), (s[u * 2 + 1] = t.call(i, c, u, n));
  }
  return s;
}
function* uE(n, e, t, i) {
  let r = 0;
  for (const s of n) yield e.call(i, s, r, n), yield t.call(i, s, r, n), ++r;
}
const Bc = Math.PI,
  Mp = Bc / 2,
  Sp = 180 / Bc,
  Ep = Bc / 180,
  cE = Math.atan2,
  wp = Math.cos,
  fE = Math.max,
  hE = Math.min,
  Tp = Math.sin,
  dE =
    Math.sign ||
    function (n) {
      return n > 0 ? 1 : n < 0 ? -1 : 0;
    },
  O2 = Math.sqrt;
function pE(n) {
  return n > 1 ? Mp : n < -1 ? -Mp : Math.asin(n);
}
function U2(n, e) {
  return n[0] * e[0] + n[1] * e[1] + n[2] * e[2];
}
function Pi(n, e) {
  return [
    n[1] * e[2] - n[2] * e[1],
    n[2] * e[0] - n[0] * e[2],
    n[0] * e[1] - n[1] * e[0],
  ];
}
function ql(n, e) {
  return [n[0] + e[0], n[1] + e[1], n[2] + e[2]];
}
function Bl(n) {
  var e = O2(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);
  return [n[0] / e, n[1] / e, n[2] / e];
}
function Nc(n) {
  return [cE(n[1], n[0]) * Sp, pE(fE(-1, hE(1, n[2]))) * Sp];
}
function _r(n) {
  const e = n[0] * Ep,
    t = n[1] * Ep,
    i = wp(t);
  return [i * wp(e), i * Tp(e), Tp(t)];
}
function Fc(n) {
  return (n = n.map((e) => _r(e))), U2(n[0], Pi(n[2], n[1]));
}
function mE(n) {
  const e = _E(n),
    t = xE(e),
    i = vE(t, n),
    r = bE(t, n.length),
    s = gE(r, n),
    u = yE(t, n),
    { polygons: c, centers: d } = ME(u, t, n),
    p = SE(c),
    g = wE(t, n),
    _ = EE(i, t);
  return {
    delaunay: e,
    edges: i,
    triangles: t,
    centers: d,
    neighbors: r,
    polygons: c,
    mesh: p,
    hull: g,
    urquhart: _,
    find: s,
  };
}
function gE(n, e) {
  function t(i, r) {
    let s = i[0] - r[0],
      u = i[1] - r[1],
      c = i[2] - r[2];
    return s * s + u * u + c * c;
  }
  return function (r, s, u) {
    u === void 0 && (u = 0);
    let c,
      d,
      p = u;
    const g = _r([r, s]);
    do
      (c = u),
        (u = null),
        (d = t(g, _r(e[c]))),
        n[c].forEach((_) => {
          let x = t(g, _r(e[_]));
          if (x < d) {
            (d = x), (u = _), (p = _);
            return;
          }
        });
    while (u !== null);
    return p;
  };
}
function _E(n) {
  if (n.length < 2) return {};
  let e = 0;
  for (; isNaN(n[e][0] + n[e][1]) && e++ < n.length; );
  const t = j6(n[e]),
    i = wb()
      .translate([0, 0])
      .scale(1)
      .rotate(t.invert([180, 0]));
  n = n.map(i);
  const r = [];
  let s = 1;
  for (let _ = 0, x = n.length; _ < x; _++) {
    let M = n[_][0] ** 2 + n[_][1] ** 2;
    !isFinite(M) || M > 1e32 ? r.push(_) : M > s && (s = M);
  }
  const u = 1e6 * O2(s);
  r.forEach((_) => (n[_] = [u, 0])),
    n.push([0, u]),
    n.push([-u, 0]),
    n.push([0, -u]);
  const c = qc.from(n);
  c.projection = i;
  const { triangles: d, halfedges: p, inedges: g } = c;
  for (let _ = 0, x = p.length; _ < x; _++)
    if (p[_] < 0) {
      const M = _ % 3 == 2 ? _ - 2 : _ + 1,
        E = _ % 3 == 0 ? _ + 2 : _ - 1,
        C = p[M],
        S = p[E];
      (p[C] = S),
        (p[S] = C),
        (p[M] = p[E] = -1),
        (d[_] = d[M] = d[E] = e),
        (g[d[C]] = C % 3 == 0 ? C + 2 : C - 1),
        (g[d[S]] = S % 3 == 0 ? S + 2 : S - 1),
        (_ += 2 - (_ % 3));
    } else d[_] > n.length - 3 - 1 && (d[_] = e);
  return c;
}
function vE(n, e) {
  const t = new Set();
  return e.length === 2
    ? [[0, 1]]
    : (n.forEach((i) => {
        if (i[0] !== i[1] && !(Fc(i.map((r) => e[r])) < 0))
          for (let r = 0, s; r < 3; r++)
            (s = (r + 1) % 3), t.add(Al([i[r], i[s]]).join("-"));
      }),
      Array.from(t, (i) => i.split("-").map(Number)));
}
function xE(n) {
  const { triangles: e } = n;
  if (!e) return [];
  const t = [];
  for (let i = 0, r = e.length / 3; i < r; i++) {
    const s = e[3 * i],
      u = e[3 * i + 1],
      c = e[3 * i + 2];
    s !== u && u !== c && t.push([s, c, u]);
  }
  return t;
}
function yE(n, e) {
  return n.map((t) => {
    const i = t.map((s) => e[s]).map(_r),
      r = ql(ql(Pi(i[1], i[0]), Pi(i[2], i[1])), Pi(i[0], i[2]));
    return Nc(Bl(r));
  });
}
function bE(n, e) {
  const t = [];
  return (
    n.forEach((i) => {
      for (let r = 0; r < 3; r++) {
        const s = i[r],
          u = i[(r + 1) % 3];
        (t[s] = t[s] || []), t[s].push(u);
      }
    }),
    n.length === 0 &&
      (e === 2 ? ((t[0] = [1]), (t[1] = [0])) : e === 1 && (t[0] = [])),
    t
  );
}
function ME(n, e, t) {
  const i = [],
    r = n.slice();
  if (e.length === 0) {
    if (t.length < 2) return { polygons: i, centers: r };
    if (t.length === 2) {
      const c = _r(t[0]),
        d = _r(t[1]),
        p = Bl(ql(c, d)),
        g = Bl(Pi(c, d)),
        _ = Pi(p, g),
        x = [p, Pi(p, _), Pi(Pi(p, _), _), Pi(Pi(Pi(p, _), _), _)]
          .map(Nc)
          .map(u);
      return (
        i.push(x), i.push(x.slice().reverse()), { polygons: i, centers: r }
      );
    }
  }
  e.forEach((c, d) => {
    for (let p = 0; p < 3; p++) {
      const g = c[p],
        _ = c[(p + 1) % 3],
        x = c[(p + 2) % 3];
      (i[g] = i[g] || []), i[g].push([_, x, d, [g, _, x]]);
    }
  });
  const s = i.map((c) => {
    const d = [c[0][2]];
    let p = c[0][1];
    for (let g = 1; g < c.length; g++)
      for (let _ = 0; _ < c.length; _++)
        if (c[_][0] == p) {
          (p = c[_][1]), d.push(c[_][2]);
          break;
        }
    if (d.length > 2) return d;
    if (d.length == 2) {
      const g = Cp(t[c[0][3][0]], t[c[0][3][1]], r[d[0]]),
        _ = Cp(t[c[0][3][2]], t[c[0][3][0]], r[d[0]]),
        x = u(g),
        M = u(_);
      return [d[0], M, d[1], x];
    }
  });
  function u(c) {
    let d = -1;
    return (
      r.slice(e.length, 1 / 0).forEach((p, g) => {
        p[0] === c[0] && p[1] === c[1] && (d = g + e.length);
      }),
      d < 0 && ((d = r.length), r.push(c)),
      d
    );
  }
  return { polygons: s, centers: r };
}
function Cp(n, e, t) {
  (n = _r(n)), (e = _r(e)), (t = _r(t));
  const i = dE(U2(Pi(e, n), t));
  return Nc(Bl(ql(n, e)).map((r) => i * r));
}
function SE(n) {
  const e = [];
  return (
    n.forEach((t) => {
      if (!t) return;
      let i = t[t.length - 1];
      for (let r of t) r > i && e.push([i, r]), (i = r);
    }),
    e
  );
}
function EE(n, e) {
  return function (t) {
    const i = new Map(),
      r = new Map();
    return (
      n.forEach((s, u) => {
        const c = s.join("-");
        i.set(c, t[u]), r.set(c, !0);
      }),
      e.forEach((s) => {
        let u = 0,
          c = -1;
        for (let d = 0; d < 3; d++) {
          let p = Al([s[d], s[(d + 1) % 3]]).join("-");
          i.get(p) > u && ((u = i.get(p)), (c = p));
        }
        r.set(c, !1);
      }),
      n.map((s) => r.get(s.join("-")))
    );
  };
}
function wE(n, e) {
  const t = new Set(),
    i = [];
  n.map((c) => {
    if (!(Fc(c.map((d) => e[d > e.length ? 0 : d])) > 1e-12))
      for (let d = 0; d < 3; d++) {
        let p = [c[d], c[(d + 1) % 3]],
          g = `${p[0]}-${p[1]}`;
        t.has(g) ? t.delete(g) : t.add(`${p[1]}-${p[0]}`);
      }
  });
  const r = new Map();
  let s;
  if (
    (t.forEach((c) => {
      (c = c.split("-").map(Number)), r.set(c[0], c[1]), (s = c[0]);
    }),
    s === void 0)
  )
    return i;
  let u = s;
  do {
    i.push(u);
    let c = r.get(u);
    r.set(u, -1), (u = c);
  } while (u > -1 && u !== s);
  return i;
}
function TE(n) {
  const e = function (t) {
    if (
      ((e.delaunay = null),
      (e._data = t),
      typeof e._data == "object" &&
        e._data.type === "FeatureCollection" &&
        (e._data = e._data.features),
      typeof e._data == "object")
    ) {
      const i = e._data
        .map((r) => [e._vx(r), e._vy(r), r])
        .filter((r) => isFinite(r[0] + r[1]));
      (e.points = i.map((r) => [r[0], r[1]])),
        (e.valid = i.map((r) => r[2])),
        (e.delaunay = mE(e.points));
    }
    return e;
  };
  return (
    (e._vx = function (t) {
      if (typeof t == "object" && "type" in t) return wd(t)[0];
      if (0 in t) return t[0];
    }),
    (e._vy = function (t) {
      if (typeof t == "object" && "type" in t) return wd(t)[1];
      if (1 in t) return t[1];
    }),
    (e.x = function (t) {
      return t ? ((e._vx = t), e) : e._vx;
    }),
    (e.y = function (t) {
      return t ? ((e._vy = t), e) : e._vy;
    }),
    (e.polygons = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const i = { type: "FeatureCollection", features: [] };
      return (
        e.valid.length === 0 ||
          (e.delaunay.polygons.forEach((r, s) =>
            i.features.push({
              type: "Feature",
              geometry: r
                ? {
                    type: "Polygon",
                    coordinates: [
                      [...r, r[0]].map((u) => e.delaunay.centers[u]),
                    ],
                  }
                : null,
              properties: {
                site: e.valid[s],
                sitecoordinates: e.points[s],
                neighbours: e.delaunay.neighbors[s],
              },
            })
          ),
          e.valid.length === 1 &&
            i.features.push({
              type: "Feature",
              geometry: { type: "Sphere" },
              properties: {
                site: e.valid[0],
                sitecoordinates: e.points[0],
                neighbours: [],
              },
            })),
        i
      );
    }),
    (e.triangles = function (t) {
      return (
        t !== void 0 && e(t),
        e.delaunay
          ? {
              type: "FeatureCollection",
              features: e.delaunay.triangles
                .map(
                  (i, r) => (
                    (i = i.map((s) => e.points[s])),
                    (i.center = e.delaunay.centers[r]),
                    i
                  )
                )
                .filter((i) => Fc(i) > 0)
                .map((i) => ({
                  type: "Feature",
                  properties: { circumcenter: i.center },
                  geometry: { type: "Polygon", coordinates: [[...i, i[0]]] },
                })),
            }
          : !1
      );
    }),
    (e.links = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const i = e.delaunay.edges.map((s) => fs(e.points[s[0]], e.points[s[1]])),
        r = e.delaunay.urquhart(i);
      return {
        type: "FeatureCollection",
        features: e.delaunay.edges.map((s, u) => ({
          type: "Feature",
          properties: {
            source: e.valid[s[0]],
            target: e.valid[s[1]],
            length: i[u],
            urquhart: !!r[u],
          },
          geometry: {
            type: "LineString",
            coordinates: [e.points[s[0]], e.points[s[1]]],
          },
        })),
      };
    }),
    (e.mesh = function (t) {
      return (
        t !== void 0 && e(t),
        e.delaunay
          ? {
              type: "MultiLineString",
              coordinates: e.delaunay.edges.map((i) => [
                e.points[i[0]],
                e.points[i[1]],
              ]),
            }
          : !1
      );
    }),
    (e.cellMesh = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const { centers: i, polygons: r } = e.delaunay,
        s = [];
      for (const u of r)
        if (u)
          for (
            let c = u.length, d = u[c - 1], p = u[0], g = 0;
            g < c;
            d = p, p = u[++g]
          )
            p > d && s.push([i[d], i[p]]);
      return { type: "MultiLineString", coordinates: s };
    }),
    (e._found = void 0),
    (e.find = function (t, i, r) {
      if (
        ((e._found = e.delaunay.find(t, i, e._found)),
        !r || fs([t, i], e.points[e._found]) < r)
      )
        return e._found;
    }),
    (e.hull = function (t) {
      t !== void 0 && e(t);
      const i = e.delaunay.hull,
        r = e.points;
      return i.length === 0
        ? null
        : { type: "Polygon", coordinates: [[...i.map((s) => r[s]), r[i[0]]]] };
    }),
    n ? e(n) : e
  );
}
function CE(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function RE(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Rp(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, GE(i.key), i);
  }
}
function PE(n, e, t) {
  return (
    e && Rp(n.prototype, e),
    t && Rp(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function LE(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && ic(n, e);
}
function Nl(n) {
  return (
    (Nl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    Nl(n)
  );
}
function ic(n, e) {
  return (
    (ic = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    ic(n, e)
  );
}
function DE() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function IE(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function OE(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return IE(n);
}
function UE(n) {
  var e = DE();
  return function () {
    var i = Nl(n),
      r;
    if (e) {
      var s = Nl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return OE(this, r);
  };
}
function dr(n, e) {
  return BE(n) || CE(n, e) || q2(n, e) || kE();
}
function lu(n) {
  return qE(n) || NE(n) || q2(n) || FE();
}
function qE(n) {
  if (Array.isArray(n)) return rc(n);
}
function BE(n) {
  if (Array.isArray(n)) return n;
}
function NE(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function q2(n, e) {
  if (n) {
    if (typeof n == "string") return rc(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return rc(n, e);
  }
}
function rc(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function FE() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function kE() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function zE(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function GE(n) {
  var e = zE(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
function HE(n) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    t = e.resolution,
    i = t === void 0 ? 1 / 0 : t,
    r = VE(n, i),
    s = Ua(r),
    u = WE(n, i),
    c = [].concat(lu(s), lu(u)),
    d = { type: "Polygon", coordinates: n },
    p = i2(d),
    g = dr(p, 2),
    _ = dr(g[0], 2),
    x = _[0],
    M = _[1],
    E = dr(g[1], 2),
    C = E[0],
    S = E[1],
    b = x > C || S >= 89 || M <= -89,
    L = [];
  if (b) {
    var T = TE(c).triangles(),
      R = new Map(
        c.map(function (se, pe) {
          var de = dr(se, 2),
            oe = de[0],
            he = de[1];
          return ["".concat(oe, "-").concat(he), pe];
        })
      );
    T.features.forEach(function (se) {
      var pe,
        de = se.geometry.coordinates[0].slice(0, 3).reverse(),
        oe = [];
      if (
        (de.forEach(function (Te) {
          var Pe = dr(Te, 2),
            Oe = Pe[0],
            Je = Pe[1],
            rt = "".concat(Oe, "-").concat(Je);
          R.has(rt) && oe.push(R.get(rt));
        }),
        oe.length === 3)
      ) {
        if (
          oe.some(function (Te) {
            return Te < s.length;
          })
        ) {
          var he = se.properties.circumcenter;
          if (!sc(he, d, b)) return;
        }
        (pe = L).push.apply(pe, oe);
      }
    });
  } else if (u.length)
    for (
      var D = ka.from(c),
        O = function (pe) {
          var de,
            oe = [2, 1, 0].map(function (Pe) {
              return D.triangles[pe + Pe];
            }),
            he = oe.map(function (Pe) {
              return c[Pe];
            });
          if (
            oe.some(function (Pe) {
              return Pe < s.length;
            })
          ) {
            var Te = [0, 1].map(function (Pe) {
              return L6(he, function (Oe) {
                return Oe[Pe];
              });
            });
            if (!sc(Te, d, b)) return "continue";
          }
          (de = L).push.apply(de, lu(oe));
        },
        F = 0,
        $ = D.triangles.length;
      F < $;
      F += 3
    )
      var V = O(F);
  else {
    var U = Oa.flatten(r),
      q = U.vertices,
      I = U.holes,
      N = I === void 0 ? [] : I;
    L = Oa(q, N, 2);
  }
  var Q = ko(
      Al(c, function (se) {
        return se[0];
      }),
      [0, 1]
    ),
    k = ko(
      Al(c, function (se) {
        return se[1];
      }),
      [0, 1]
    ),
    te = c.map(function (se) {
      var pe = dr(se, 2),
        de = pe[0],
        oe = pe[1];
      return [Q(de), k(oe)];
    }),
    ee = { points: c, indices: L, uvs: te };
  return { contour: r, triangles: ee };
}
function VE(n, e) {
  return n.map(function (t) {
    var i = [],
      r;
    return (
      t.forEach(function (s) {
        if (r) {
          var u = (fs(s, r) * 180) / Math.PI;
          if (u > e)
            for (var c = Cc(r, s), d = 1 / Math.ceil(u / e), p = d; p < 1; )
              i.push(c(p)), (p += d);
        }
        i.push((r = s));
      }),
      i
    );
  });
}
function WE(n, e) {
  var t = { type: "Polygon", coordinates: n },
    i = i2(t),
    r = dr(i, 2),
    s = dr(r[0], 2),
    u = s[0],
    c = s[1],
    d = dr(r[1], 2),
    p = d[0],
    g = d[1];
  if (Math.min(Math.abs(p - u), Math.abs(g - c)) < e) return [];
  var _ = u > p || g >= 89 || c <= -89;
  return jE(e, { minLng: u, maxLng: p, minLat: c, maxLat: g }).filter(function (
    x
  ) {
    return sc(x, t, _);
  });
}
function jE(n) {
  for (
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      t = e.minLng,
      i = e.maxLng,
      r = e.minLat,
      s = e.maxLat,
      u = Math.round(Math.pow(360 / n, 2) / Math.PI),
      c = (1 + Math.sqrt(5)) / 2,
      d = function (b) {
        return (((b / c) * 360) % 360) - 180;
      },
      p = function (b) {
        return (Math.acos((2 * b) / u - 1) / Math.PI) * 180 - 90;
      },
      g = function (b) {
        return (u * (Math.cos(((b + 90) * Math.PI) / 180) + 1)) / 2;
      },
      _ = [
        s !== void 0 ? Math.ceil(g(s)) : 0,
        r !== void 0 ? Math.floor(g(r)) : u - 1,
      ],
      x =
        t === void 0 && i === void 0
          ? function () {
              return !0;
            }
          : t === void 0
          ? function (S) {
              return S <= i;
            }
          : i === void 0
          ? function (S) {
              return S >= t;
            }
          : i >= t
          ? function (S) {
              return S >= t && S <= i;
            }
          : function (S) {
              return S >= t || S <= i;
            },
      M = [],
      E = _[0];
    E <= _[1];
    E++
  ) {
    var C = d(E);
    x(C) && M.push([C, p(E)]);
  }
  return M;
}
function sc(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return t ? lb(e, n) : tE(n, e);
}
var il = window.THREE
    ? window.THREE
    : { BufferGeometry: cn, Float32BufferAttribute: Kt },
  Pp = new il.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  kc = (function (n) {
    LE(t, n);
    var e = UE(t);
    function t(i, r, s, u, c, d, p) {
      var g;
      RE(this, t),
        (g = e.call(this)),
        (g.type = "ConicPolygonBufferGeometry"),
        (g.parameters = {
          polygonGeoJson: i,
          startHeight: r,
          endHeight: s,
          closedBottom: u,
          closedTop: c,
          includeSides: d,
          curvatureResolution: p,
        }),
        (r = r || 0),
        (s = s || 1),
        (u = u !== void 0 ? u : !0),
        (c = c !== void 0 ? c : !0),
        (d = d !== void 0 ? d : !0),
        (p = p || 5);
      var _ = HE(i, { resolution: p }),
        x = _.contour,
        M = _.triangles,
        E = Ua(M.uvs),
        C = [],
        S = [],
        b = [],
        L = 0,
        T = function (N) {
          var D = Math.round(C.length / 3),
            O = b.length;
          (C = C.concat(N.vertices)),
            (S = S.concat(N.uvs)),
            (b = b.concat(
              D
                ? N.indices.map(function (F) {
                    return F + D;
                  })
                : N.indices
            )),
            g.addGroup(O, b.length - O, L++);
        };
      d && T(U()),
        u && T(q(r, !1)),
        c && T(q(s, !0)),
        g.setIndex(b),
        g[Pp]("position", new il.Float32BufferAttribute(C, 3)),
        g[Pp]("uv", new il.Float32BufferAttribute(S, 2)),
        g.computeVertexNormals();
      function R(I, N) {
        var D = I.map(function (O) {
          return O.map(function (F) {
            var $ = dr(F, 2),
              V = $[0],
              Q = $[1];
            return XE(Q, V, N);
          });
        });
        return Oa.flatten(D);
      }
      function U() {
        for (
          var I = R(x, r),
            N = I.vertices,
            D = I.holes,
            O = R(x, s),
            F = O.vertices,
            $ = Ua([F, N]),
            V = Math.round(F.length / 3),
            Q = new Set(D),
            k = 0,
            te = [],
            ee = 0;
          ee < V;
          ee++
        ) {
          var se = ee + 1;
          if (se === V) se = k;
          else if (Q.has(se)) {
            var pe = se;
            (se = k), (k = pe);
          }
          te.push(ee, ee + V, se + V), te.push(se + V, se, ee);
        }
        for (var de = [], oe = 1; oe >= 0; oe--)
          for (var he = 0; he < V; he += 1) de.push(he / (V - 1), oe);
        return { indices: te, vertices: $, uvs: de };
      }
      function q(I) {
        var N =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        return {
          indices: N ? M.indices : M.indices.slice().reverse(),
          vertices: R([M.points], I).vertices,
          uvs: E,
        };
      }
      return g;
    }
    return PE(t);
  })(il.BufferGeometry);
function XE(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180;
  return [
    t * Math.sin(i) * Math.cos(r),
    t * Math.cos(i),
    t * Math.sin(i) * Math.sin(r),
  ];
}
var Wt = (function (n) {
    n = n || {};
    var e = typeof n < "u" ? n : {},
      t = {},
      i;
    for (i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
    var r = "";
    function s(me) {
      return e.locateFile ? e.locateFile(me, r) : r + me;
    }
    var u;
    typeof document < "u" &&
      document.currentScript &&
      (r = document.currentScript.src),
      r.indexOf("blob:") !== 0
        ? (r = r.substr(0, r.lastIndexOf("/") + 1))
        : (r = ""),
      (u = function (we, We, pt) {
        var A = new XMLHttpRequest();
        A.open("GET", we, !0),
          (A.responseType = "arraybuffer"),
          (A.onload = function () {
            if (A.status == 200 || (A.status == 0 && A.response)) {
              We(A.response);
              return;
            }
            var X = $e(we);
            if (X) {
              We(X.buffer);
              return;
            }
            pt();
          }),
          (A.onerror = pt),
          A.send(null);
      });
    var c = e.print || console.log.bind(console),
      d = e.printErr || console.warn.bind(console);
    for (i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
    (t = null), e.arguments && e.arguments;
    var p = 0,
      g = function (me) {
        p = me;
      },
      _ = function () {
        return p;
      },
      x = 8;
    function M(me, we, We, pt) {
      switch (
        ((We = We || "i8"),
        We.charAt(We.length - 1) === "*" && (We = "i32"),
        We)
      ) {
        case "i1":
          $[me >> 0] = we;
          break;
        case "i8":
          $[me >> 0] = we;
          break;
        case "i16":
          Q[me >> 1] = we;
          break;
        case "i32":
          k[me >> 2] = we;
          break;
        case "i64":
          (xe = [
            we >>> 0,
            ((G = we),
            +ze(G) >= 1
              ? G > 0
                ? (Le(+Ne(G / 4294967296), 4294967295) | 0) >>> 0
                : ~~+Ce((G - +(~~G >>> 0)) / 4294967296) >>> 0
              : 0),
          ]),
            (k[me >> 2] = xe[0]),
            (k[(me + 4) >> 2] = xe[1]);
          break;
        case "float":
          te[me >> 2] = we;
          break;
        case "double":
          ee[me >> 3] = we;
          break;
        default:
          Oi("invalid type for setValue: " + We);
      }
    }
    function E(me, we, We) {
      switch (
        ((we = we || "i8"),
        we.charAt(we.length - 1) === "*" && (we = "i32"),
        we)
      ) {
        case "i1":
          return $[me >> 0];
        case "i8":
          return $[me >> 0];
        case "i16":
          return Q[me >> 1];
        case "i32":
          return k[me >> 2];
        case "i64":
          return k[me >> 2];
        case "float":
          return te[me >> 2];
        case "double":
          return ee[me >> 3];
        default:
          Oi("invalid type for getValue: " + we);
      }
      return null;
    }
    var C = !1;
    function S(me, we) {
      me || Oi("Assertion failed: " + we);
    }
    function b(me) {
      var we = e["_" + me];
      return (
        S(
          we,
          "Cannot call unknown function " + me + ", make sure it is exported"
        ),
        we
      );
    }
    function L(me, we, We, pt, A) {
      var H = {
        string: function (Ge) {
          var ht = 0;
          if (Ge != null && Ge !== 0) {
            var Bt = (Ge.length << 2) + 1;
            (ht = Yt(Bt)), N(Ge, ht, Bt);
          }
          return ht;
        },
        array: function (Ge) {
          var ht = Yt(Ge.length);
          return D(Ge, ht), ht;
        },
      };
      function X(Ge) {
        return we === "string" ? q(Ge) : we === "boolean" ? !!Ge : Ge;
      }
      var le = b(me),
        ye = [],
        Ae = 0;
      if (pt)
        for (var ge = 0; ge < pt.length; ge++) {
          var it = H[We[ge]];
          it
            ? (Ae === 0 && (Ae = Kn()), (ye[ge] = it(pt[ge])))
            : (ye[ge] = pt[ge]);
        }
      var Qe = le.apply(null, ye);
      return (Qe = X(Qe)), Ae !== 0 && rn(Ae), Qe;
    }
    function T(me, we, We, pt) {
      We = We || [];
      var A = We.every(function (X) {
          return X === "number";
        }),
        H = we !== "string";
      return H && A && !pt
        ? b(me)
        : function () {
            return L(me, we, We, arguments);
          };
    }
    var R = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
    function U(me, we, We) {
      for (var pt = we + We, A = we; me[A] && !(A >= pt); ) ++A;
      if (A - we > 16 && me.subarray && R) return R.decode(me.subarray(we, A));
      for (var H = ""; we < A; ) {
        var X = me[we++];
        if (!(X & 128)) {
          H += String.fromCharCode(X);
          continue;
        }
        var le = me[we++] & 63;
        if ((X & 224) == 192) {
          H += String.fromCharCode(((X & 31) << 6) | le);
          continue;
        }
        var ye = me[we++] & 63;
        if (
          ((X & 240) == 224
            ? (X = ((X & 15) << 12) | (le << 6) | ye)
            : (X = ((X & 7) << 18) | (le << 12) | (ye << 6) | (me[we++] & 63)),
          X < 65536)
        )
          H += String.fromCharCode(X);
        else {
          var Ae = X - 65536;
          H += String.fromCharCode(55296 | (Ae >> 10), 56320 | (Ae & 1023));
        }
      }
      return H;
    }
    function q(me, we) {
      return me ? U(V, me, we) : "";
    }
    function I(me, we, We, pt) {
      if (!(pt > 0)) return 0;
      for (var A = We, H = We + pt - 1, X = 0; X < me.length; ++X) {
        var le = me.charCodeAt(X);
        if (le >= 55296 && le <= 57343) {
          var ye = me.charCodeAt(++X);
          le = (65536 + ((le & 1023) << 10)) | (ye & 1023);
        }
        if (le <= 127) {
          if (We >= H) break;
          we[We++] = le;
        } else if (le <= 2047) {
          if (We + 1 >= H) break;
          (we[We++] = 192 | (le >> 6)), (we[We++] = 128 | (le & 63));
        } else if (le <= 65535) {
          if (We + 2 >= H) break;
          (we[We++] = 224 | (le >> 12)),
            (we[We++] = 128 | ((le >> 6) & 63)),
            (we[We++] = 128 | (le & 63));
        } else {
          if (We + 3 >= H) break;
          (we[We++] = 240 | (le >> 18)),
            (we[We++] = 128 | ((le >> 12) & 63)),
            (we[We++] = 128 | ((le >> 6) & 63)),
            (we[We++] = 128 | (le & 63));
        }
      }
      return (we[We] = 0), We - A;
    }
    function N(me, we, We) {
      return I(me, V, we, We);
    }
    typeof TextDecoder < "u" && new TextDecoder("utf-16le");
    function D(me, we) {
      $.set(me, we);
    }
    function O(me, we) {
      return me % we > 0 && (me += we - (me % we)), me;
    }
    var F, $, V, Q, k, te, ee;
    function se(me) {
      (F = me),
        (e.HEAP8 = $ = new Int8Array(me)),
        (e.HEAP16 = Q = new Int16Array(me)),
        (e.HEAP32 = k = new Int32Array(me)),
        (e.HEAPU8 = V = new Uint8Array(me)),
        (e.HEAPU16 = new Uint16Array(me)),
        (e.HEAPU32 = new Uint32Array(me)),
        (e.HEAPF32 = te = new Float32Array(me)),
        (e.HEAPF64 = ee = new Float64Array(me));
    }
    var pe = 5267040,
      de = 24128,
      oe = e.TOTAL_MEMORY || 33554432;
    e.buffer ? (F = e.buffer) : (F = new ArrayBuffer(oe)),
      (oe = F.byteLength),
      se(F),
      (k[de >> 2] = pe);
    function he(me) {
      for (; me.length > 0; ) {
        var we = me.shift();
        if (typeof we == "function") {
          we();
          continue;
        }
        var We = we.func;
        typeof We == "number"
          ? we.arg === void 0
            ? e.dynCall_v(We)
            : e.dynCall_vi(We, we.arg)
          : We(we.arg === void 0 ? null : we.arg);
      }
    }
    var Te = [],
      Pe = [],
      Oe = [],
      Je = [];
    function rt() {
      if (e.preRun)
        for (
          typeof e.preRun == "function" && (e.preRun = [e.preRun]);
          e.preRun.length;

        )
          ft(e.preRun.shift());
      he(Te);
    }
    function ot() {
      he(Pe);
    }
    function Rt() {
      he(Oe);
    }
    function It() {
      if (e.postRun)
        for (
          typeof e.postRun == "function" && (e.postRun = [e.postRun]);
          e.postRun.length;

        )
          ne(e.postRun.shift());
      he(Je);
    }
    function ft(me) {
      Te.unshift(me);
    }
    function ne(me) {
      Je.unshift(me);
    }
    var ze = Math.abs,
      Ce = Math.ceil,
      Ne = Math.floor,
      Le = Math.min,
      At = 0,
      nt = null;
    function at(me) {
      At++, e.monitorRunDependencies && e.monitorRunDependencies(At);
    }
    function mt(me) {
      if (
        (At--,
        e.monitorRunDependencies && e.monitorRunDependencies(At),
        At == 0 && nt)
      ) {
        var we = nt;
        (nt = null), we();
      }
    }
    (e.preloadedImages = {}), (e.preloadedAudios = {});
    var xt = null,
      nn = "data:application/octet-stream;base64,";
    function Y(me) {
      return String.prototype.startsWith
        ? me.startsWith(nn)
        : me.indexOf(nn) === 0;
    }
    var G, xe;
    xt =
      "data:application/octet-stream;base64,";
    var qe = 24144;
    function Ie(me) {
      return me;
    }
    function Be(me) {
      var we = /\b__Z[\w\d_]+/g;
      return me.replace(we, function (We) {
        var pt = We;
        return We === pt ? We : pt + " [" + We + "]";
      });
    }
    function ut() {
      var me = new Error();
      if (!me.stack) {
        try {
          throw new Error(0);
        } catch (we) {
          me = we;
        }
        if (!me.stack) return "(no stack trace available)";
      }
      return me.stack.toString();
    }
    function Fe() {
      var me = ut();
      return (
        e.extraStackTrace &&
          (me +=
            `
` + e.extraStackTrace()),
        Be(me)
      );
    }
    function be(me, we, We, pt) {
      Oi(
        "Assertion failed: " +
          q(me) +
          ", at: " +
          [we ? q(we) : "unknown filename", We, pt ? q(pt) : "unknown function"]
      );
    }
    function ie() {
      return $.length;
    }
    function Re(me, we, We) {
      V.set(V.subarray(we, we + We), me);
    }
    function tt(me) {
      return e.___errno_location && (k[e.___errno_location() >> 2] = me), me;
    }
    function Xe(me) {
      Oi("OOM");
    }
    function et(me) {
      try {
        var we = new ArrayBuffer(me);
        return we.byteLength != me
          ? void 0
          : (new Int8Array(we).set($), kt(we), se(we), 1);
      } catch {}
    }
    function Et(me) {
      var we = ie(),
        We = 16777216,
        pt = 2147483648 - We;
      if (me > pt) return !1;
      for (var A = 16777216, H = Math.max(we, A); H < me; )
        H <= 536870912
          ? (H = O(2 * H, We))
          : (H = Math.min(O((3 * H + 2147483648) / 4, We), pt));
      var X = et(H);
      return !!X;
    }
    var Vt =
      typeof atob == "function"
        ? atob
        : function (me) {
            var we =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
              We = "",
              pt,
              A,
              H,
              X,
              le,
              ye,
              Ae,
              ge = 0;
            me = me.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do
              (X = we.indexOf(me.charAt(ge++))),
                (le = we.indexOf(me.charAt(ge++))),
                (ye = we.indexOf(me.charAt(ge++))),
                (Ae = we.indexOf(me.charAt(ge++))),
                (pt = (X << 2) | (le >> 4)),
                (A = ((le & 15) << 4) | (ye >> 2)),
                (H = ((ye & 3) << 6) | Ae),
                (We = We + String.fromCharCode(pt)),
                ye !== 64 && (We = We + String.fromCharCode(A)),
                Ae !== 64 && (We = We + String.fromCharCode(H));
            while (ge < me.length);
            return We;
          };
    function ae(me) {
      try {
        for (
          var we = Vt(me), We = new Uint8Array(we.length), pt = 0;
          pt < we.length;
          ++pt
        )
          We[pt] = we.charCodeAt(pt);
        return We;
      } catch {
        throw new Error("Converting base64 string to bytes failed.");
      }
    }
    function $e(me) {
      if (Y(me)) return ae(me.slice(nn.length));
    }
    var Me = {
        Math,
        Int8Array,
        Int32Array,
        Uint8Array,
        Float32Array,
        Float64Array,
      },
      Ue = {
        a: Oi,
        b: g,
        c: _,
        d: be,
        e: tt,
        f: ie,
        g: Re,
        h: Et,
        i: Xe,
        j: Ie,
        k: Be,
        l: et,
        m: ut,
        n: Fe,
        o: qe,
        p: de,
      },
      fe = (function (me, we, We) {
        "almost asm";
        var pt = new me.Int8Array(We),
          A = new me.Int32Array(We);
        new me.Uint8Array(We), new me.Float32Array(We);
        var H = new me.Float64Array(We),
          X = we.o | 0,
          le = we.p | 0,
          ye = me.Math.floor,
          Ae = me.Math.abs,
          ge = me.Math.sqrt,
          it = me.Math.pow,
          Qe = me.Math.cos,
          Ge = me.Math.sin,
          ht = me.Math.tan,
          Bt = me.Math.acos,
          _t = me.Math.asin,
          Pt = me.Math.atan,
          jt = me.Math.atan2,
          sn = me.Math.ceil,
          gn = me.Math.imul,
          Si = me.Math.min,
          bn = me.Math.max,
          Lt = me.Math.clz32,
          wt = we.b,
          W = we.c,
          dt = we.d,
          Xo = we.e,
          ps = we.f,
          Qo = we.g,
          Fn = we.h,
          br = we.i,
          z = 24160;
        function Jn(a) {
          return (
            (pt = new Int8Array(a)),
            (A = new Int32Array(a)),
            (H = new Float64Array(a)),
            (We = a),
            !0
          );
        }
        function $o(a) {
          a = a | 0;
          var o = 0;
          return (o = z), (z = (z + a) | 0), (z = (z + 15) & -16), o | 0;
        }
        function i0() {
          return z | 0;
        }
        function Za(a) {
          (a = a | 0), (z = a);
        }
        function bm(a, o) {
          (a = a | 0), (z = a);
        }
        function Mm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          return (a | 0) < 0
            ? ((o = 2), o | 0)
            : (a | 0) > 13780509
            ? ((o = _0(15, o) | 0), o | 0)
            : ((l = (((a | 0) < 0) << 31) >> 31),
              (h = Wn(a | 0, l | 0, 3, 0) | 0),
              (f = W() | 0),
              (l = zt(a | 0, l | 0, 1, 0) | 0),
              (l = Wn(h | 0, f | 0, l | 0, W() | 0) | 0),
              (l = zt(l | 0, W() | 0, 1, 0) | 0),
              (a = W() | 0),
              (A[o >> 2] = l),
              (A[(o + 4) >> 2] = a),
              (o = 0),
              o | 0);
        }
        function Vc(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            Wc(a, o, l, f, 0) | 0
          );
        }
        function Wc(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          if (((w = z), (z = (z + 16) | 0), (v = w), !(jc(a, o, l, f, h) | 0)))
            return (f = 0), (z = w), f | 0;
          do
            if ((l | 0) >= 0) {
              if ((l | 0) > 13780509) {
                if (((m = _0(15, v) | 0), m | 0)) break;
                (y = v), (v = A[y >> 2] | 0), (y = A[(y + 4) >> 2] | 0);
              } else
                (m = (((l | 0) < 0) << 31) >> 31),
                  (P = Wn(l | 0, m | 0, 3, 0) | 0),
                  (y = W() | 0),
                  (m = zt(l | 0, m | 0, 1, 0) | 0),
                  (m = Wn(P | 0, y | 0, m | 0, W() | 0) | 0),
                  (m = zt(m | 0, W() | 0, 1, 0) | 0),
                  (y = W() | 0),
                  (A[v >> 2] = m),
                  (A[(v + 4) >> 2] = y),
                  (v = m);
              if ((ys(f | 0, 0, (v << 3) | 0) | 0, h | 0)) {
                ys(h | 0, 0, (v << 2) | 0) | 0,
                  (m = Mr(a, o, l, f, h, v, y, 0) | 0);
                break;
              }
              (m = lr(v, 4) | 0),
                m
                  ? ((P = Mr(a, o, l, f, m, v, y, 0) | 0), yt(m), (m = P))
                  : (m = 13);
            } else m = 2;
          while (0);
          return (P = m), (z = w), P | 0;
        }
        function jc(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0;
          if (
            ((ce = z),
            (z = (z + 16) | 0),
            (re = ce),
            (Z = (ce + 8) | 0),
            (K = re),
            (A[K >> 2] = a),
            (A[(K + 4) >> 2] = o),
            (l | 0) < 0)
          )
            return (Z = 2), (z = ce), Z | 0;
          if (
            ((m = f),
            (A[m >> 2] = a),
            (A[(m + 4) >> 2] = o),
            (m = (h | 0) != 0),
            m && (A[h >> 2] = 0),
            un(a, o) | 0)
          )
            return (Z = 9), (z = ce), Z | 0;
          A[Z >> 2] = 0;
          e: do
            if ((l | 0) >= 1)
              if (m)
                for (B = 1, P = 0, j = 0, K = 1, m = a; ; ) {
                  if (!(P | j)) {
                    if (((m = qn(m, o, 4, Z, re) | 0), m | 0)) break e;
                    if (
                      ((o = re),
                      (m = A[o >> 2] | 0),
                      (o = A[(o + 4) >> 2] | 0),
                      un(m, o) | 0)
                    ) {
                      m = 9;
                      break e;
                    }
                  }
                  if (
                    ((m = qn(m, o, A[(22384 + (j << 2)) >> 2] | 0, Z, re) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    ((o = re),
                    (m = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (a = (f + (B << 3)) | 0),
                    (A[a >> 2] = m),
                    (A[(a + 4) >> 2] = o),
                    (A[(h + (B << 2)) >> 2] = K),
                    (a = (P + 1) | 0),
                    (v = (a | 0) == (K | 0)),
                    (y = (j + 1) | 0),
                    (w = (y | 0) == 6),
                    un(m, o) | 0)
                  ) {
                    m = 9;
                    break e;
                  }
                  if (((K = (K + (w & v & 1)) | 0), (K | 0) > (l | 0))) {
                    m = 0;
                    break;
                  } else
                    (B = (B + 1) | 0),
                      (P = v ? 0 : a),
                      (j = v ? (w ? 0 : y) : j);
                }
              else
                for (B = 1, P = 0, j = 0, K = 1, m = a; ; ) {
                  if (!(P | j)) {
                    if (((m = qn(m, o, 4, Z, re) | 0), m | 0)) break e;
                    if (
                      ((o = re),
                      (m = A[o >> 2] | 0),
                      (o = A[(o + 4) >> 2] | 0),
                      un(m, o) | 0)
                    ) {
                      m = 9;
                      break e;
                    }
                  }
                  if (
                    ((m = qn(m, o, A[(22384 + (j << 2)) >> 2] | 0, Z, re) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    ((o = re),
                    (m = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (a = (f + (B << 3)) | 0),
                    (A[a >> 2] = m),
                    (A[(a + 4) >> 2] = o),
                    (a = (P + 1) | 0),
                    (v = (a | 0) == (K | 0)),
                    (y = (j + 1) | 0),
                    (w = (y | 0) == 6),
                    un(m, o) | 0)
                  ) {
                    m = 9;
                    break e;
                  }
                  if (((K = (K + (w & v & 1)) | 0), (K | 0) > (l | 0))) {
                    m = 0;
                    break;
                  } else
                    (B = (B + 1) | 0),
                      (P = v ? 0 : a),
                      (j = v ? (w ? 0 : y) : j);
                }
            else m = 0;
          while (0);
          return (Z = m), (z = ce), Z | 0;
        }
        function Mr(a, o, l, f, h, m, v, y) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (m = m | 0),
            (v = v | 0),
            (y = y | 0);
          var w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0;
          if (
            ((ce = z),
            (z = (z + 16) | 0),
            (re = (ce + 8) | 0),
            (Z = ce),
            (w = Xs(a | 0, o | 0, m | 0, v | 0) | 0),
            (B = W() | 0),
            (j = (f + (w << 3)) | 0),
            (Ee = j),
            (Se = A[Ee >> 2] | 0),
            (Ee = A[(Ee + 4) >> 2] | 0),
            (P = ((Se | 0) == (a | 0)) & ((Ee | 0) == (o | 0))),
            !((((Se | 0) == 0) & ((Ee | 0) == 0)) | P))
          )
            do
              (w = zt(w | 0, B | 0, 1, 0) | 0),
                (w = iA(w | 0, W() | 0, m | 0, v | 0) | 0),
                (B = W() | 0),
                (j = (f + (w << 3)) | 0),
                (Se = j),
                (Ee = A[Se >> 2] | 0),
                (Se = A[(Se + 4) >> 2] | 0),
                (P = ((Ee | 0) == (a | 0)) & ((Se | 0) == (o | 0)));
            while (!((((Ee | 0) == 0) & ((Se | 0) == 0)) | P));
          if (
            ((w = (h + (w << 2)) | 0),
            (P && (A[w >> 2] | 0) <= (y | 0)) ||
              ((Se = j),
              (A[Se >> 2] = a),
              (A[(Se + 4) >> 2] = o),
              (A[w >> 2] = y),
              (y | 0) >= (l | 0)))
          )
            return (Se = 0), (z = ce), Se | 0;
          switch (
            ((P = (y + 1) | 0),
            (A[re >> 2] = 0),
            (w = qn(a, o, 2, re, Z) | 0),
            w | 0)
          ) {
            case 9: {
              K = 9;
              break;
            }
            case 0: {
              (w = Z),
                (w =
                  Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) | 0),
                w || (K = 9);
              break;
            }
          }
          e: do
            if ((K | 0) == 9) {
              switch (((A[re >> 2] = 0), (w = qn(a, o, 3, re, Z) | 0), w | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((w = Z),
                    (w =
                      Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) |
                      0),
                    w | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[re >> 2] = 0), (w = qn(a, o, 1, re, Z) | 0), w | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((w = Z),
                    (w =
                      Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) |
                      0),
                    w | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[re >> 2] = 0), (w = qn(a, o, 5, re, Z) | 0), w | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((w = Z),
                    (w =
                      Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) |
                      0),
                    w | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[re >> 2] = 0), (w = qn(a, o, 4, re, Z) | 0), w | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((w = Z),
                    (w =
                      Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) |
                      0),
                    w | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[re >> 2] = 0), (w = qn(a, o, 6, re, Z) | 0), w | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((w = Z),
                    (w =
                      Mr(A[w >> 2] | 0, A[(w + 4) >> 2] | 0, l, f, h, m, v, P) |
                      0),
                    w | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              return (Se = 0), (z = ce), Se | 0;
            }
          while (0);
          return (Se = w), (z = ce), Se | 0;
        }
        function qn(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0;
          if (l >>> 0 > 6) return (h = 1), h | 0;
          if (((j = (A[f >> 2] | 0) % 6 | 0), (A[f >> 2] = j), (j | 0) > 0)) {
            m = 0;
            do (l = _s(l) | 0), (m = (m + 1) | 0);
            while ((m | 0) < (A[f >> 2] | 0));
          }
          if (
            ((j = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (B = j & 127),
            B >>> 0 > 121)
          )
            return (h = 5), h | 0;
          (w = hi(a, o) | 0),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15);
          e: do
            if (!m) P = 8;
            else {
              for (;;) {
                if (
                  ((v = (((15 - m) | 0) * 3) | 0),
                  (y = De(a | 0, o | 0, v | 0) | 0),
                  W() | 0,
                  (y = y & 7),
                  (y | 0) == 7)
                ) {
                  o = 5;
                  break;
                }
                if (
                  ((Z = (Ui(m) | 0) == 0),
                  (m = (m + -1) | 0),
                  (K = je(7, 0, v | 0) | 0),
                  (o = o & ~(W() | 0)),
                  (re =
                    je(
                      A[((Z ? 432 : 16) + ((y * 28) | 0) + (l << 2)) >> 2] | 0,
                      0,
                      v | 0
                    ) | 0),
                  (v = W() | 0),
                  (l =
                    A[((Z ? 640 : 224) + ((y * 28) | 0) + (l << 2)) >> 2] | 0),
                  (a = re | (a & ~K)),
                  (o = v | o),
                  !l)
                ) {
                  l = 0;
                  break e;
                }
                if (!m) {
                  P = 8;
                  break e;
                }
              }
              return o | 0;
            }
          while (0);
          (P | 0) == 8 &&
            ((Z = A[(848 + ((B * 28) | 0) + (l << 2)) >> 2] | 0),
            (re = je(Z | 0, 0, 45) | 0),
            (a = re | a),
            (o = W() | 0 | (o & -1040385)),
            (l = A[(4272 + ((B * 28) | 0) + (l << 2)) >> 2] | 0),
            ((Z & 127) | 0) == 127 &&
              ((Z = je(A[(848 + ((B * 28) | 0) + 20) >> 2] | 0, 0, 45) | 0),
              (o = W() | 0 | (o & -1040385)),
              (l = A[(4272 + ((B * 28) | 0) + 20) >> 2] | 0),
              (a = vs(Z | a, o) | 0),
              (o = W() | 0),
              (A[f >> 2] = (A[f >> 2] | 0) + 1))),
            (y = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (y = y & 127);
          e: do
            if (ln(y) | 0) {
              t: do
                if ((hi(a, o) | 0) == 1) {
                  if ((B | 0) != (y | 0))
                    if ($c(y, A[(7696 + ((B * 28) | 0)) >> 2] | 0) | 0) {
                      (a = p0(a, o) | 0), (v = 1), (o = W() | 0);
                      break;
                    } else dt(23313, 22416, 436, 22424);
                  switch (w | 0) {
                    case 3: {
                      (a = vs(a, o) | 0),
                        (o = W() | 0),
                        (A[f >> 2] = (A[f >> 2] | 0) + 1),
                        (v = 0);
                      break t;
                    }
                    case 5: {
                      (a = p0(a, o) | 0),
                        (o = W() | 0),
                        (A[f >> 2] = (A[f >> 2] | 0) + 5),
                        (v = 0);
                      break t;
                    }
                    case 0:
                      return (Z = 9), Z | 0;
                    default:
                      return (Z = 1), Z | 0;
                  }
                } else v = 0;
              while (0);
              if ((l | 0) > 0) {
                m = 0;
                do (a = d0(a, o) | 0), (o = W() | 0), (m = (m + 1) | 0);
                while ((m | 0) != (l | 0));
              }
              if ((B | 0) != (y | 0)) {
                if (!(s0(y) | 0)) {
                  if (((v | 0) != 0) | ((hi(a, o) | 0) != 5)) break;
                  A[f >> 2] = (A[f >> 2] | 0) + 1;
                  break;
                }
                switch (j & 127) {
                  case 8:
                  case 118:
                    break e;
                }
                (hi(a, o) | 0) != 3 && (A[f >> 2] = (A[f >> 2] | 0) + 1);
              }
            } else if ((l | 0) > 0) {
              m = 0;
              do (a = vs(a, o) | 0), (o = W() | 0), (m = (m + 1) | 0);
              while ((m | 0) != (l | 0));
            }
          while (0);
          return (
            (A[f >> 2] = (((A[f >> 2] | 0) + l) | 0) % 6 | 0),
            (Z = h),
            (A[Z >> 2] = a),
            (A[(Z + 4) >> 2] = o),
            (Z = 0),
            Z | 0
          );
        }
        function r0(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          for (
            y = z,
              z = (z + 16) | 0,
              m = y,
              v = (y + 8) | 0,
              h = (un(a, o) | 0) == 0,
              h = h ? 1 : 2;
            ;

          ) {
            if (
              ((A[v >> 2] = 0),
              (P = (qn(a, o, h, v, m) | 0) == 0),
              (w = m),
              P &
                ((A[w >> 2] | 0) == (l | 0)
                  ? (A[(w + 4) >> 2] | 0) == (f | 0)
                  : 0))
            ) {
              a = 4;
              break;
            }
            if (((h = (h + 1) | 0), h >>> 0 >= 7)) {
              (h = 7), (a = 4);
              break;
            }
          }
          return (a | 0) == 4 ? ((z = y), h | 0) : 0;
        }
        function Sm(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0;
          if (
            ((Z = z),
            (z = (z + 16) | 0),
            (K = Z),
            (re = (Z + 8) | 0),
            (j = K),
            (A[j >> 2] = a),
            (A[(j + 4) >> 2] = o),
            !l)
          )
            return (
              (re = f),
              (A[re >> 2] = a),
              (A[(re + 4) >> 2] = o),
              (re = 0),
              (z = Z),
              re | 0
            );
          A[re >> 2] = 0;
          e: do
            if (un(a, o) | 0) a = 9;
            else {
              if (((m = (l | 0) > 0), m)) {
                (h = 0), (j = a);
                do {
                  if (((a = qn(j, o, 4, re, K) | 0), a | 0)) break e;
                  if (
                    ((o = K),
                    (j = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (h = (h + 1) | 0),
                    un(j, o) | 0)
                  ) {
                    a = 9;
                    break e;
                  }
                } while ((h | 0) < (l | 0));
                if (
                  ((B = f),
                  (A[B >> 2] = j),
                  (A[(B + 4) >> 2] = o),
                  (B = (l + -1) | 0),
                  m)
                ) {
                  (P = 0), (a = 1);
                  do {
                    if (((h = (22384 + (P << 2)) | 0), (P | 0) == 5))
                      for (v = A[h >> 2] | 0, m = 0, h = a; ; ) {
                        if (
                          ((a = K),
                          (a =
                            qn(A[a >> 2] | 0, A[(a + 4) >> 2] | 0, v, re, K) |
                            0),
                          a | 0)
                        )
                          break e;
                        if ((m | 0) != (B | 0))
                          if (
                            ((w = K),
                            (y = A[w >> 2] | 0),
                            (w = A[(w + 4) >> 2] | 0),
                            (a = (f + (h << 3)) | 0),
                            (A[a >> 2] = y),
                            (A[(a + 4) >> 2] = w),
                            !(un(y, w) | 0))
                          )
                            a = (h + 1) | 0;
                          else {
                            a = 9;
                            break e;
                          }
                        else a = h;
                        if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break;
                        h = a;
                      }
                    else
                      for (
                        v = K,
                          w = A[h >> 2] | 0,
                          y = 0,
                          h = a,
                          m = A[v >> 2] | 0,
                          v = A[(v + 4) >> 2] | 0;
                        ;

                      ) {
                        if (((a = qn(m, v, w, re, K) | 0), a | 0)) break e;
                        if (
                          ((v = K),
                          (m = A[v >> 2] | 0),
                          (v = A[(v + 4) >> 2] | 0),
                          (a = (f + (h << 3)) | 0),
                          (A[a >> 2] = m),
                          (A[(a + 4) >> 2] = v),
                          (a = (h + 1) | 0),
                          un(m, v) | 0)
                        ) {
                          a = 9;
                          break e;
                        }
                        if (((y = (y + 1) | 0), (y | 0) >= (l | 0))) break;
                        h = a;
                      }
                    P = (P + 1) | 0;
                  } while (P >>> 0 < 6);
                  (a = K),
                    (v = j),
                    (h = A[a >> 2] | 0),
                    (m = o),
                    (a = A[(a + 4) >> 2] | 0);
                } else (v = j), (h = j), (m = o), (a = o);
              } else
                (v = f),
                  (A[v >> 2] = a),
                  (A[(v + 4) >> 2] = o),
                  (v = a),
                  (h = a),
                  (m = o),
                  (a = o);
              a = ((v | 0) == (h | 0)) & ((m | 0) == (a | 0)) ? 0 : 9;
            }
          while (0);
          return (re = a), (z = Z), re | 0;
        }
        function Em(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          if (
            ((y = z),
            (z = (z + 48) | 0),
            (h = (y + 16) | 0),
            (m = (y + 8) | 0),
            (v = y),
            l | 0)
          )
            return (v = 15), (z = y), v | 0;
          if (
            ((P = a),
            (w = A[(P + 4) >> 2] | 0),
            (l = m),
            (A[l >> 2] = A[P >> 2]),
            (A[(l + 4) >> 2] = w),
            vf(m, h),
            (o = Kc(h, o, v) | 0),
            !o)
          ) {
            if (((l = A[m >> 2] | 0), (m = A[(a + 8) >> 2] | 0), (m | 0) > 0)) {
              (h = A[(a + 12) >> 2] | 0), (o = 0);
              do
                (l = ((A[(h + (o << 3)) >> 2] | 0) + l) | 0), (o = (o + 1) | 0);
              while ((o | 0) < (m | 0));
            }
            (o = v),
              (h = A[o >> 2] | 0),
              (o = A[(o + 4) >> 2] | 0),
              (m = (((l | 0) < 0) << 31) >> 31),
              ((o | 0) < (m | 0)) | (((o | 0) == (m | 0)) & (h >>> 0 < l >>> 0))
                ? ((o = v), (A[o >> 2] = l), (A[(o + 4) >> 2] = m), (o = m))
                : (l = h),
              (w = zt(l | 0, o | 0, 12, 0) | 0),
              (P = W() | 0),
              (o = v),
              (A[o >> 2] = w),
              (A[(o + 4) >> 2] = P),
              (o = f),
              (A[o >> 2] = w),
              (A[(o + 4) >> 2] = P),
              (o = 0);
          }
          return (P = o), (z = y), P | 0;
        }
        function Xc(a, o, l, f, h, m, v) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (m = m | 0),
            (v = v | 0);
          var y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            Ot = 0,
            Ct = 0,
            Ut = 0,
            en = 0,
            bt = 0,
            An = 0,
            ti = 0,
            Pf = 0;
          if (
            ((en = z),
            (z = (z + 64) | 0),
            (Qt = (en + 48) | 0),
            (Ot = (en + 32) | 0),
            (Ct = (en + 24) | 0),
            (Ye = (en + 8) | 0),
            (st = en),
            (w = A[a >> 2] | 0),
            (w | 0) <= 0)
          )
            return (Ut = 0), (z = en), Ut | 0;
          for (
            He = (a + 4) | 0,
              Ze = (Qt + 8) | 0,
              Zt = (Ot + 8) | 0,
              Xt = (Ye + 8) | 0,
              y = 0,
              ve = 0;
            ;

          ) {
            (P = A[He >> 2] | 0),
              (_e = (P + (ve << 4)) | 0),
              (A[Qt >> 2] = A[_e >> 2]),
              (A[(Qt + 4) >> 2] = A[(_e + 4) >> 2]),
              (A[(Qt + 8) >> 2] = A[(_e + 8) >> 2]),
              (A[(Qt + 12) >> 2] = A[(_e + 12) >> 2]),
              (ve | 0) == ((w + -1) | 0)
                ? ((A[Ot >> 2] = A[P >> 2]),
                  (A[(Ot + 4) >> 2] = A[(P + 4) >> 2]),
                  (A[(Ot + 8) >> 2] = A[(P + 8) >> 2]),
                  (A[(Ot + 12) >> 2] = A[(P + 12) >> 2]))
                : ((_e = (P + ((ve + 1) << 4)) | 0),
                  (A[Ot >> 2] = A[_e >> 2]),
                  (A[(Ot + 4) >> 2] = A[(_e + 4) >> 2]),
                  (A[(Ot + 8) >> 2] = A[(_e + 8) >> 2]),
                  (A[(Ot + 12) >> 2] = A[(_e + 12) >> 2])),
              (w = Om(Qt, Ot, f, Ct) | 0);
            e: do
              if (w) (P = 0), (y = w);
              else if (
                ((P = Ct),
                (w = A[P >> 2] | 0),
                (P = A[(P + 4) >> 2] | 0),
                ((P | 0) > 0) | (((P | 0) == 0) & (w >>> 0 > 0)))
              ) {
                (Se = 0), (_e = 0);
                t: for (;;) {
                  if (
                    ((Pf = +H[Qt >> 3]),
                    (Ee = Vn(w | 0, P | 0, Se | 0, _e | 0) | 0),
                    (ti = +(Ee >>> 0) + 4294967296 * +(W() | 0)),
                    (bt = +(w >>> 0) + 4294967296 * +(P | 0)),
                    (An = +(Se >>> 0) + 4294967296 * +(_e | 0)),
                    (H[Ye >> 3] = (Pf * ti) / bt + (+H[Ot >> 3] * An) / bt),
                    (H[Xt >> 3] =
                      (+H[Ze >> 3] * ti) / bt + (+H[Zt >> 3] * An) / bt),
                    (w = uf(Ye, f, st) | 0),
                    w | 0)
                  ) {
                    y = w;
                    break;
                  }
                  (Ee = st),
                    (ce = A[Ee >> 2] | 0),
                    (Ee = A[(Ee + 4) >> 2] | 0),
                    (K = Xs(ce | 0, Ee | 0, o | 0, l | 0) | 0),
                    (B = W() | 0),
                    (w = (v + (K << 3)) | 0),
                    (j = w),
                    (P = A[j >> 2] | 0),
                    (j = A[(j + 4) >> 2] | 0);
                  n: do
                    if (((P | 0) == 0) & ((j | 0) == 0)) (ue = w), (Ut = 16);
                    else
                      for (re = 0, Z = 0; ; ) {
                        if (
                          ((re | 0) > (l | 0)) |
                          (((re | 0) == (l | 0)) & (Z >>> 0 > o >>> 0))
                        ) {
                          y = 1;
                          break t;
                        }
                        if (((P | 0) == (ce | 0)) & ((j | 0) == (Ee | 0)))
                          break n;
                        if (
                          ((w = zt(K | 0, B | 0, 1, 0) | 0),
                          (K = iA(w | 0, W() | 0, o | 0, l | 0) | 0),
                          (B = W() | 0),
                          (Z = zt(Z | 0, re | 0, 1, 0) | 0),
                          (re = W() | 0),
                          (w = (v + (K << 3)) | 0),
                          (j = w),
                          (P = A[j >> 2] | 0),
                          (j = A[(j + 4) >> 2] | 0),
                          ((P | 0) == 0) & ((j | 0) == 0))
                        ) {
                          (ue = w), (Ut = 16);
                          break;
                        }
                      }
                  while (0);
                  if (
                    ((Ut | 0) == 16 &&
                      ((Ut = 0), !(((ce | 0) == 0) & ((Ee | 0) == 0))) &&
                      ((Z = ue),
                      (A[Z >> 2] = ce),
                      (A[(Z + 4) >> 2] = Ee),
                      (Z = (m + (A[h >> 2] << 3)) | 0),
                      (A[Z >> 2] = ce),
                      (A[(Z + 4) >> 2] = Ee),
                      (Z = h),
                      (Z = zt(A[Z >> 2] | 0, A[(Z + 4) >> 2] | 0, 1, 0) | 0),
                      (ce = W() | 0),
                      (Ee = h),
                      (A[Ee >> 2] = Z),
                      (A[(Ee + 4) >> 2] = ce)),
                    (Se = zt(Se | 0, _e | 0, 1, 0) | 0),
                    (_e = W() | 0),
                    (P = Ct),
                    (w = A[P >> 2] | 0),
                    (P = A[(P + 4) >> 2] | 0),
                    !(
                      ((P | 0) > (_e | 0)) |
                      (((P | 0) == (_e | 0)) & (w >>> 0 > Se >>> 0))
                    ))
                  ) {
                    P = 1;
                    break e;
                  }
                }
                P = 0;
              } else P = 1;
            while (0);
            if (((ve = (ve + 1) | 0), !P)) {
              Ut = 21;
              break;
            }
            if (((w = A[a >> 2] | 0), (ve | 0) >= (w | 0))) {
              (y = 0), (Ut = 21);
              break;
            }
          }
          return (Ut | 0) == 21 ? ((z = en), y | 0) : 0;
        }
        function wm(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            Ot = 0,
            Ct = 0,
            Ut = 0,
            en = 0,
            bt = 0,
            An = 0,
            ti = 0;
          if (
            ((ti = z),
            (z = (z + 112) | 0),
            (Ut = (ti + 80) | 0),
            (w = (ti + 72) | 0),
            (en = ti),
            (bt = (ti + 56) | 0),
            l | 0)
          )
            return (An = 15), (z = ti), An | 0;
          if (
            ((P = (a + 8) | 0), (An = Ar(((A[P >> 2] << 5) + 32) | 0) | 0), !An)
          )
            return (An = 13), (z = ti), An | 0;
          if (
            (qg(a, An),
            (Ot = a),
            (Ct = A[(Ot + 4) >> 2] | 0),
            (l = w),
            (A[l >> 2] = A[Ot >> 2]),
            (A[(l + 4) >> 2] = Ct),
            vf(w, Ut),
            (l = Kc(Ut, o, en) | 0),
            l)
          )
            (Ot = 0), (Ct = 0);
          else {
            if (((l = A[w >> 2] | 0), (m = A[P >> 2] | 0), (m | 0) > 0)) {
              (v = A[(a + 12) >> 2] | 0), (h = 0);
              do
                (l = ((A[(v + (h << 3)) >> 2] | 0) + l) | 0), (h = (h + 1) | 0);
              while ((h | 0) != (m | 0));
              h = l;
            } else h = l;
            (l = en),
              (m = A[l >> 2] | 0),
              (l = A[(l + 4) >> 2] | 0),
              (v = (((h | 0) < 0) << 31) >> 31),
              ((l | 0) < (v | 0)) | (((l | 0) == (v | 0)) & (m >>> 0 < h >>> 0))
                ? ((l = en), (A[l >> 2] = h), (A[(l + 4) >> 2] = v), (l = v))
                : (h = m),
              (Ot = zt(h | 0, l | 0, 12, 0) | 0),
              (Ct = W() | 0),
              (l = en),
              (A[l >> 2] = Ot),
              (A[(l + 4) >> 2] = Ct),
              (l = 0);
          }
          if (l | 0) return yt(An), (An = l), (z = ti), An | 0;
          if (((h = lr(Ot, 8) | 0), !h))
            return yt(An), (An = 13), (z = ti), An | 0;
          if (((y = lr(Ot, 8) | 0), !y))
            return yt(An), yt(h), (An = 13), (z = ti), An | 0;
          (Xt = Ut),
            (A[Xt >> 2] = 0),
            (A[(Xt + 4) >> 2] = 0),
            (Xt = a),
            (Qt = A[(Xt + 4) >> 2] | 0),
            (l = w),
            (A[l >> 2] = A[Xt >> 2]),
            (A[(l + 4) >> 2] = Qt),
            (l = Xc(w, Ot, Ct, o, Ut, h, y) | 0);
          e: do
            if (l) yt(h), yt(y), yt(An);
            else {
              t: do
                if ((A[P >> 2] | 0) > 0) {
                  for (
                    v = (a + 12) | 0, m = 0;
                    (l =
                      Xc(
                        ((A[v >> 2] | 0) + (m << 3)) | 0,
                        Ot,
                        Ct,
                        o,
                        Ut,
                        h,
                        y
                      ) | 0),
                      (m = (m + 1) | 0),
                      !(l | 0);

                  )
                    if ((m | 0) >= (A[P >> 2] | 0)) break t;
                  yt(h), yt(y), yt(An);
                  break e;
                }
              while (0);
              ((Ct | 0) > 0) | (((Ct | 0) == 0) & (Ot >>> 0 > 0)) &&
                ys(y | 0, 0, (Ot << 3) | 0) | 0,
                (Qt = Ut),
                (Xt = A[(Qt + 4) >> 2] | 0);
              t: do
                if (
                  ((Xt | 0) > 0) |
                  (((Xt | 0) == 0) & ((A[Qt >> 2] | 0) >>> 0 > 0))
                ) {
                  (He = h),
                    (Ze = y),
                    (Zt = h),
                    (Xt = y),
                    (Qt = h),
                    (l = h),
                    (ue = h),
                    (Ye = y),
                    (st = y),
                    (h = y);
                  n: for (;;) {
                    for (Ee = 0, Se = 0, _e = 0, ve = 0, m = 0, v = 0; ; ) {
                      (y = en), (w = (y + 56) | 0);
                      do (A[y >> 2] = 0), (y = (y + 4) | 0);
                      while ((y | 0) < (w | 0));
                      if (
                        ((o = (He + (Ee << 3)) | 0),
                        (P = A[o >> 2] | 0),
                        (o = A[(o + 4) >> 2] | 0),
                        jc(P, o, 1, en, 0) | 0)
                      ) {
                        (y = en), (w = (y + 56) | 0);
                        do (A[y >> 2] = 0), (y = (y + 4) | 0);
                        while ((y | 0) < (w | 0));
                        (y = lr(7, 4) | 0),
                          y | 0 && (Mr(P, o, 1, en, y, 7, 0, 0) | 0, yt(y));
                      }
                      for (ce = 0; ; ) {
                        (Z = (en + (ce << 3)) | 0),
                          (re = A[Z >> 2] | 0),
                          (Z = A[(Z + 4) >> 2] | 0);
                        i: do
                          if (((re | 0) == 0) & ((Z | 0) == 0))
                            (y = m), (w = v);
                          else {
                            if (
                              ((B = Xs(re | 0, Z | 0, Ot | 0, Ct | 0) | 0),
                              (P = W() | 0),
                              (y = (f + (B << 3)) | 0),
                              (o = y),
                              (w = A[o >> 2] | 0),
                              (o = A[(o + 4) >> 2] | 0),
                              !(((w | 0) == 0) & ((o | 0) == 0)))
                            ) {
                              (j = 0), (K = 0);
                              do {
                                if (
                                  ((j | 0) > (Ct | 0)) |
                                  (((j | 0) == (Ct | 0)) & (K >>> 0 > Ot >>> 0))
                                )
                                  break n;
                                if (
                                  ((w | 0) == (re | 0)) &
                                  ((o | 0) == (Z | 0))
                                ) {
                                  (y = m), (w = v);
                                  break i;
                                }
                                (y = zt(B | 0, P | 0, 1, 0) | 0),
                                  (B = iA(y | 0, W() | 0, Ot | 0, Ct | 0) | 0),
                                  (P = W() | 0),
                                  (K = zt(K | 0, j | 0, 1, 0) | 0),
                                  (j = W() | 0),
                                  (y = (f + (B << 3)) | 0),
                                  (o = y),
                                  (w = A[o >> 2] | 0),
                                  (o = A[(o + 4) >> 2] | 0);
                              } while (!(((w | 0) == 0) & ((o | 0) == 0)));
                            }
                            ((re | 0) == 0) & ((Z | 0) == 0)
                              ? ((y = m), (w = v))
                              : (Zo(re, Z, bt) | 0,
                                Bg(a, An, bt) | 0 &&
                                  ((K = zt(m | 0, v | 0, 1, 0) | 0),
                                  (v = W() | 0),
                                  (j = y),
                                  (A[j >> 2] = re),
                                  (A[(j + 4) >> 2] = Z),
                                  (m = (Ze + (m << 3)) | 0),
                                  (A[m >> 2] = re),
                                  (A[(m + 4) >> 2] = Z),
                                  (m = K)),
                                (y = m),
                                (w = v));
                          }
                        while (0);
                        if (((ce = (ce + 1) | 0), ce >>> 0 >= 7)) break;
                        (m = y), (v = w);
                      }
                      if (
                        ((Ee = zt(Ee | 0, Se | 0, 1, 0) | 0),
                        (Se = W() | 0),
                        (_e = zt(_e | 0, ve | 0, 1, 0) | 0),
                        (ve = W() | 0),
                        (v = Ut),
                        (m = A[v >> 2] | 0),
                        (v = A[(v + 4) >> 2] | 0),
                        ((ve | 0) < (v | 0)) |
                          (((ve | 0) == (v | 0)) & (_e >>> 0 < m >>> 0)))
                      )
                        (m = y), (v = w);
                      else break;
                    }
                    if (((v | 0) > 0) | (((v | 0) == 0) & (m >>> 0 > 0))) {
                      (m = 0), (v = 0);
                      do
                        (ve = (He + (m << 3)) | 0),
                          (A[ve >> 2] = 0),
                          (A[(ve + 4) >> 2] = 0),
                          (m = zt(m | 0, v | 0, 1, 0) | 0),
                          (v = W() | 0),
                          (ve = Ut),
                          (_e = A[(ve + 4) >> 2] | 0);
                      while (
                        ((v | 0) < (_e | 0)) |
                        ((v | 0) == (_e | 0)
                          ? m >>> 0 < (A[ve >> 2] | 0) >>> 0
                          : 0)
                      );
                    }
                    if (
                      ((ve = Ut),
                      (A[ve >> 2] = y),
                      (A[(ve + 4) >> 2] = w),
                      ((w | 0) > 0) | (((w | 0) == 0) & (y >>> 0 > 0)))
                    )
                      (ce = h),
                        (Ee = st),
                        (Se = Qt),
                        (_e = Ye),
                        (ve = Ze),
                        (h = ue),
                        (st = l),
                        (Ye = Zt),
                        (ue = ce),
                        (l = Ee),
                        (Qt = Xt),
                        (Xt = Se),
                        (Zt = _e),
                        (Ze = He),
                        (He = ve);
                    else break t;
                  }
                  yt(Zt), yt(Xt), yt(An), (l = 1);
                  break e;
                } else l = y;
              while (0);
              yt(An), yt(h), yt(l), (l = 0);
            }
          while (0);
          return (An = l), (z = ti), An | 0;
        }
        function Tm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (((B = z), (z = (z + 176) | 0), (w = B), (o | 0) < 1))
            return bf(l, 0, 0), (P = 0), (z = B), P | 0;
          for (
            y = a,
              y = De(A[y >> 2] | 0, A[(y + 4) >> 2] | 0, 52) | 0,
              W() | 0,
              bf(l, (o | 0) > 6 ? o : 6, y & 15),
              y = 0;
            (f = (a + (y << 3)) | 0),
              (f = Ko(A[f >> 2] | 0, A[(f + 4) >> 2] | 0, w) | 0),
              !(f | 0);

          ) {
            if (((f = A[w >> 2] | 0), (f | 0) > 0)) {
              v = 0;
              do
                (m = (w + 8 + (v << 4)) | 0),
                  (v = (v + 1) | 0),
                  (f = (w + 8 + (((v | 0) % (f | 0) | 0) << 4)) | 0),
                  (h = Jg(l, f, m) | 0),
                  h ? Ef(l, h) | 0 : Kg(l, m, f) | 0,
                  (f = A[w >> 2] | 0);
              while ((v | 0) < (f | 0));
            }
            if (((y = (y + 1) | 0), (y | 0) >= (o | 0))) {
              (f = 0), (P = 13);
              break;
            }
          }
          return (P | 0) == 13
            ? ((z = B), f | 0)
            : (Mf(l), (P = f), (z = B), P | 0);
        }
        function Cm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          if (
            ((m = z),
            (z = (z + 32) | 0),
            (f = m),
            (h = (m + 16) | 0),
            (a = Tm(a, o, h) | 0),
            a | 0)
          )
            return (l = a), (z = m), l | 0;
          if (
            ((A[l >> 2] = 0),
            (A[(l + 4) >> 2] = 0),
            (A[(l + 8) >> 2] = 0),
            (a = Sf(h) | 0),
            a | 0)
          )
            do {
              o = Cg(l) | 0;
              do
                Rg(o, a) | 0,
                  (v = (a + 16) | 0),
                  (A[f >> 2] = A[v >> 2]),
                  (A[(f + 4) >> 2] = A[(v + 4) >> 2]),
                  (A[(f + 8) >> 2] = A[(v + 8) >> 2]),
                  (A[(f + 12) >> 2] = A[(v + 12) >> 2]),
                  Ef(h, a) | 0,
                  (a = e3(h, f) | 0);
              while (a | 0);
              a = Sf(h) | 0;
            } while (a | 0);
          return (
            Mf(h),
            (a = Pg(l) | 0),
            a ? (pf(l), (v = a), (z = m), v | 0) : ((v = 0), (z = m), v | 0)
          );
        }
        function ln(a) {
          return (
            (a = a | 0),
            a >>> 0 > 121
              ? ((a = 0), a | 0)
              : ((a = A[(7696 + ((a * 28) | 0) + 16) >> 2] | 0), a | 0)
          );
        }
        function s0(a) {
          return (a = a | 0), ((a | 0) == 4) | ((a | 0) == 117) | 0;
        }
        function Qc(a) {
          return (
            (a = a | 0),
            A[
              (11120 +
                (((A[a >> 2] | 0) * 216) | 0) +
                (((A[(a + 4) >> 2] | 0) * 72) | 0) +
                (((A[(a + 8) >> 2] | 0) * 24) | 0) +
                (A[(a + 12) >> 2] << 3)) >>
                2
            ] | 0
          );
        }
        function Rm(a) {
          return (
            (a = a | 0),
            A[
              (11120 +
                (((A[a >> 2] | 0) * 216) | 0) +
                (((A[(a + 4) >> 2] | 0) * 72) | 0) +
                (((A[(a + 8) >> 2] | 0) * 24) | 0) +
                (A[(a + 12) >> 2] << 3) +
                4) >>
                2
            ] | 0
          );
        }
        function Pm(a, o) {
          (a = a | 0),
            (o = o | 0),
            (a = (7696 + ((a * 28) | 0)) | 0),
            (A[o >> 2] = A[a >> 2]),
            (A[(o + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(o + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(o + 12) >> 2] = A[(a + 12) >> 2]);
        }
        function Lm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          if (o >>> 0 > 20) return (o = -1), o | 0;
          do
            if ((A[(11120 + ((o * 216) | 0)) >> 2] | 0) != (a | 0))
              if ((A[(11120 + ((o * 216) | 0) + 8) >> 2] | 0) != (a | 0))
                if ((A[(11120 + ((o * 216) | 0) + 16) >> 2] | 0) != (a | 0))
                  if ((A[(11120 + ((o * 216) | 0) + 24) >> 2] | 0) != (a | 0))
                    if ((A[(11120 + ((o * 216) | 0) + 32) >> 2] | 0) != (a | 0))
                      if (
                        (A[(11120 + ((o * 216) | 0) + 40) >> 2] | 0) !=
                        (a | 0)
                      )
                        if (
                          (A[(11120 + ((o * 216) | 0) + 48) >> 2] | 0) !=
                          (a | 0)
                        )
                          if (
                            (A[(11120 + ((o * 216) | 0) + 56) >> 2] | 0) !=
                            (a | 0)
                          )
                            if (
                              (A[(11120 + ((o * 216) | 0) + 64) >> 2] | 0) !=
                              (a | 0)
                            )
                              if (
                                (A[(11120 + ((o * 216) | 0) + 72) >> 2] | 0) !=
                                (a | 0)
                              )
                                if (
                                  (A[(11120 + ((o * 216) | 0) + 80) >> 2] |
                                    0) !=
                                  (a | 0)
                                )
                                  if (
                                    (A[(11120 + ((o * 216) | 0) + 88) >> 2] |
                                      0) !=
                                    (a | 0)
                                  )
                                    if (
                                      (A[(11120 + ((o * 216) | 0) + 96) >> 2] |
                                        0) !=
                                      (a | 0)
                                    )
                                      if (
                                        (A[
                                          (11120 + ((o * 216) | 0) + 104) >> 2
                                        ] |
                                          0) !=
                                        (a | 0)
                                      )
                                        if (
                                          (A[
                                            (11120 + ((o * 216) | 0) + 112) >> 2
                                          ] |
                                            0) !=
                                          (a | 0)
                                        )
                                          if (
                                            (A[
                                              (11120 + ((o * 216) | 0) + 120) >>
                                                2
                                            ] |
                                              0) !=
                                            (a | 0)
                                          )
                                            if (
                                              (A[
                                                (11120 +
                                                  ((o * 216) | 0) +
                                                  128) >>
                                                  2
                                              ] |
                                                0) !=
                                              (a | 0)
                                            )
                                              if (
                                                (A[
                                                  (11120 +
                                                    ((o * 216) | 0) +
                                                    136) >>
                                                    2
                                                ] |
                                                  0) ==
                                                (a | 0)
                                              )
                                                (a = 2), (l = 1), (f = 2);
                                              else {
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      144) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      152) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      160) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 2);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      168) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      176) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      184) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 2);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      192) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      200) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      208) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 2);
                                                  break;
                                                } else a = -1;
                                                return a | 0;
                                              }
                                            else (a = 2), (l = 1), (f = 1);
                                          else (a = 2), (l = 1), (f = 0);
                                        else (a = 1), (l = 1), (f = 2);
                                      else (a = 1), (l = 1), (f = 1);
                                    else (a = 1), (l = 1), (f = 0);
                                  else (a = 0), (l = 1), (f = 2);
                                else (a = 0), (l = 1), (f = 1);
                              else (a = 0), (l = 1), (f = 0);
                            else (a = 2), (l = 0), (f = 2);
                          else (a = 2), (l = 0), (f = 1);
                        else (a = 2), (l = 0), (f = 0);
                      else (a = 1), (l = 0), (f = 2);
                    else (a = 1), (l = 0), (f = 1);
                  else (a = 1), (l = 0), (f = 0);
                else (a = 0), (l = 0), (f = 2);
              else (a = 0), (l = 0), (f = 1);
            else (a = 0), (l = 0), (f = 0);
          while (0);
          return (
            (o =
              A[
                (11120 +
                  ((o * 216) | 0) +
                  ((l * 72) | 0) +
                  ((a * 24) | 0) +
                  (f << 3) +
                  4) >>
                  2
              ] | 0),
            o | 0
          );
        }
        function $c(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (A[(7696 + ((a * 28) | 0) + 20) >> 2] | 0) == (o | 0)
              ? ((o = 1), o | 0)
              : ((o = (A[(7696 + ((a * 28) | 0) + 24) >> 2] | 0) == (o | 0)),
                o | 0)
          );
        }
        function o0(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            A[(848 + ((a * 28) | 0) + (o << 2)) >> 2] | 0
          );
        }
        function a0(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (A[(848 + ((a * 28) | 0)) >> 2] | 0) == (o | 0)
              ? ((o = 0), o | 0)
              : (A[(848 + ((a * 28) | 0) + 4) >> 2] | 0) == (o | 0)
              ? ((o = 1), o | 0)
              : (A[(848 + ((a * 28) | 0) + 8) >> 2] | 0) == (o | 0)
              ? ((o = 2), o | 0)
              : (A[(848 + ((a * 28) | 0) + 12) >> 2] | 0) == (o | 0)
              ? ((o = 3), o | 0)
              : (A[(848 + ((a * 28) | 0) + 16) >> 2] | 0) == (o | 0)
              ? ((o = 4), o | 0)
              : (A[(848 + ((a * 28) | 0) + 20) >> 2] | 0) == (o | 0)
              ? ((o = 5), o | 0)
              : ((A[(848 + ((a * 28) | 0) + 24) >> 2] | 0) == (o | 0) ? 6 : 7) |
                0
          );
        }
        function Dm() {
          return 122;
        }
        function Im(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          o = 0;
          do
            je(o | 0, 0, 45) | 0,
              (f = W() | 0 | 134225919),
              (l = (a + (o << 3)) | 0),
              (A[l >> 2] = -1),
              (A[(l + 4) >> 2] = f),
              (o = (o + 1) | 0);
          while ((o | 0) != 122);
          return 0;
        }
        function Yc(a) {
          return (a = a | 0), (+H[(a + 16) >> 3] < +H[(a + 24) >> 3]) | 0;
        }
        function Zc(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          return (
            (l = +H[o >> 3]),
            !(l >= +H[(a + 8) >> 3]) || !(l <= +H[a >> 3])
              ? ((o = 0), o | 0)
              : ((f = +H[(a + 16) >> 3]),
                (l = +H[(a + 24) >> 3]),
                (h = +H[(o + 8) >> 3]),
                (o = h >= l),
                (a = (h <= f) & 1),
                f < l ? o && (a = 1) : o || (a = 0),
                (o = (a | 0) != 0),
                o | 0)
          );
        }
        function Kc(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0;
          (Z = z),
            (z = (z + 288) | 0),
            (B = (Z + 264) | 0),
            (j = (Z + 96) | 0),
            (P = Z),
            (y = P),
            (w = (y + 96) | 0);
          do (A[y >> 2] = 0), (y = (y + 4) | 0);
          while ((y | 0) < (w | 0));
          return (
            (o = g0(o, P) | 0),
            o | 0
              ? ((re = o), (z = Z), re | 0)
              : ((w = P),
                (P = A[w >> 2] | 0),
                (w = A[(w + 4) >> 2] | 0),
                Zo(P, w, B) | 0,
                Ko(P, w, j) | 0,
                (v = +ea(B, (j + 8) | 0)),
                (H[B >> 3] = +H[a >> 3]),
                (w = (B + 8) | 0),
                (H[w >> 3] = +H[(a + 16) >> 3]),
                (H[j >> 3] = +H[(a + 8) >> 3]),
                (P = (j + 8) | 0),
                (H[P >> 3] = +H[(a + 24) >> 3]),
                (h = +ea(B, j)),
                (Ee = +H[w >> 3] - +H[P >> 3]),
                (m = +Ae(+Ee)),
                (ce = +H[B >> 3] - +H[j >> 3]),
                (f = +Ae(+ce)),
                !((Ee == 0) | (ce == 0)) &&
                ((Ee = +Cf(+m, +f)),
                (Ee = +sn(
                  +(
                    (h * h) /
                    +y0(+(Ee / +y0(+m, +f)), 3) /
                    (v * (v * 2.59807621135) * 0.8)
                  )
                )),
                (H[X >> 3] = Ee),
                (K = ~~Ee >>> 0),
                (re =
                  +Ae(Ee) >= 1
                    ? Ee > 0
                      ? ~~+Si(+ye(Ee / 4294967296), 4294967295) >>> 0
                      : ~~+sn((Ee - +(~~Ee >>> 0)) / 4294967296) >>> 0
                    : 0),
                ((A[(X + 4) >> 2] & 2146435072) | 0) != 2146435072)
                  ? ((j = ((K | 0) == 0) & ((re | 0) == 0)),
                    (o = l),
                    (A[o >> 2] = j ? 1 : K),
                    (A[(o + 4) >> 2] = j ? 0 : re),
                    (o = 0))
                  : (o = 1),
                (re = o),
                (z = Z),
                re | 0)
          );
        }
        function Om(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          (P = z),
            (z = (z + 288) | 0),
            (v = (P + 264) | 0),
            (y = (P + 96) | 0),
            (w = P),
            (h = w),
            (m = (h + 96) | 0);
          do (A[h >> 2] = 0), (h = (h + 4) | 0);
          while ((h | 0) < (m | 0));
          return (
            (l = g0(l, w) | 0),
            l | 0
              ? ((f = l), (z = P), f | 0)
              : ((l = w),
                (h = A[l >> 2] | 0),
                (l = A[(l + 4) >> 2] | 0),
                Zo(h, l, v) | 0,
                Ko(h, l, y) | 0,
                (B = +ea(v, (y + 8) | 0)),
                (B = +sn(+(+ea(a, o) / (B * 2)))),
                (H[X >> 3] = B),
                (l = ~~B >>> 0),
                (h =
                  +Ae(B) >= 1
                    ? B > 0
                      ? ~~+Si(+ye(B / 4294967296), 4294967295) >>> 0
                      : ~~+sn((B - +(~~B >>> 0)) / 4294967296) >>> 0
                    : 0),
                ((A[(X + 4) >> 2] & 2146435072) | 0) == 2146435072
                  ? ((f = 1), (z = P), f | 0)
                  : ((w = ((l | 0) == 0) & ((h | 0) == 0)),
                    (A[f >> 2] = w ? 1 : l),
                    (A[(f + 4) >> 2] = w ? 0 : h),
                    (f = 0),
                    (z = P),
                    f | 0))
          );
        }
        function Um(a, o, l, f) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (A[a >> 2] = o),
            (A[(a + 4) >> 2] = l),
            (A[(a + 8) >> 2] = f);
        }
        function qm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0;
          (j = (o + 8) | 0),
            (A[j >> 2] = 0),
            (w = +H[a >> 3]),
            (v = +Ae(+w)),
            (P = +H[(a + 8) >> 3]),
            (y = +Ae(+P) / 0.8660254037844386),
            (v = v + y * 0.5),
            (l = ~~v),
            (a = ~~y),
            (v = v - +(l | 0)),
            (y = y - +(a | 0));
          do
            if (v < 0.5)
              if (v < 0.3333333333333333)
                if (((A[o >> 2] = l), y < (v + 1) * 0.5)) {
                  A[(o + 4) >> 2] = a;
                  break;
                } else {
                  (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
                  break;
                }
              else if (
                ((K = 1 - v),
                (a = ((!(y < K) & 1) + a) | 0),
                (A[(o + 4) >> 2] = a),
                (K <= y) & (y < v * 2))
              ) {
                (l = (l + 1) | 0), (A[o >> 2] = l);
                break;
              } else {
                A[o >> 2] = l;
                break;
              }
            else {
              if (!(v < 0.6666666666666666))
                if (((l = (l + 1) | 0), (A[o >> 2] = l), y < v * 0.5)) {
                  A[(o + 4) >> 2] = a;
                  break;
                } else {
                  (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
                  break;
                }
              if (y < 1 - v) {
                if (((A[(o + 4) >> 2] = a), v * 2 + -1 < y)) {
                  A[o >> 2] = l;
                  break;
                }
              } else (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
              (l = (l + 1) | 0), (A[o >> 2] = l);
            }
          while (0);
          do
            if (w < 0)
              if (a & 1) {
                (B = (((a + 1) | 0) / 2) | 0),
                  (B =
                    Vn(
                      l | 0,
                      ((((l | 0) < 0) << 31) >> 31) | 0,
                      B | 0,
                      ((((B | 0) < 0) << 31) >> 31) | 0
                    ) | 0),
                  (l = ~~(
                    +(l | 0) -
                    ((+(B >>> 0) + 4294967296 * +(W() | 0)) * 2 + 1)
                  )),
                  (A[o >> 2] = l);
                break;
              } else {
                (B = ((a | 0) / 2) | 0),
                  (B =
                    Vn(
                      l | 0,
                      ((((l | 0) < 0) << 31) >> 31) | 0,
                      B | 0,
                      ((((B | 0) < 0) << 31) >> 31) | 0
                    ) | 0),
                  (l = ~~(
                    +(l | 0) -
                    (+(B >>> 0) + 4294967296 * +(W() | 0)) * 2
                  )),
                  (A[o >> 2] = l);
                break;
              }
          while (0);
          (B = (o + 4) | 0),
            P < 0 &&
              ((l = (l - ((((a << 1) | 1 | 0) / 2) | 0)) | 0),
              (A[o >> 2] = l),
              (a = (0 - a) | 0),
              (A[B >> 2] = a)),
            (f = (a - l) | 0),
            (l | 0) < 0
              ? ((h = (0 - l) | 0),
                (A[B >> 2] = f),
                (A[j >> 2] = h),
                (A[o >> 2] = 0),
                (a = f),
                (l = 0))
              : (h = 0),
            (a | 0) < 0 &&
              ((l = (l - a) | 0),
              (A[o >> 2] = l),
              (h = (h - a) | 0),
              (A[j >> 2] = h),
              (A[B >> 2] = 0),
              (a = 0)),
            (m = (l - h) | 0),
            (f = (a - h) | 0),
            (h | 0) < 0 &&
              ((A[o >> 2] = m),
              (A[B >> 2] = f),
              (A[j >> 2] = 0),
              (a = f),
              (l = m),
              (h = 0)),
            (f = (a | 0) < (l | 0) ? a : l),
            (f = (h | 0) < (f | 0) ? h : f),
            !((f | 0) <= 0) &&
              ((A[o >> 2] = l - f), (A[B >> 2] = a - f), (A[j >> 2] = h - f));
        }
        function Hn(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0;
          (o = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (l = A[v >> 2] | 0),
            (o | 0) < 0 &&
              ((l = (l - o) | 0),
              (A[v >> 2] = l),
              (m = (a + 8) | 0),
              (A[m >> 2] = (A[m >> 2] | 0) - o),
              (A[a >> 2] = 0),
              (o = 0)),
            (l | 0) < 0
              ? ((o = (o - l) | 0),
                (A[a >> 2] = o),
                (m = (a + 8) | 0),
                (h = ((A[m >> 2] | 0) - l) | 0),
                (A[m >> 2] = h),
                (A[v >> 2] = 0),
                (l = 0))
              : ((h = (a + 8) | 0), (m = h), (h = A[h >> 2] | 0)),
            (h | 0) < 0 &&
              ((o = (o - h) | 0),
              (A[a >> 2] = o),
              (l = (l - h) | 0),
              (A[v >> 2] = l),
              (A[m >> 2] = 0),
              (h = 0)),
            (f = (l | 0) < (o | 0) ? l : o),
            (f = (h | 0) < (f | 0) ? h : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = o - f), (A[v >> 2] = l - f), (A[m >> 2] = h - f));
        }
        function ms(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          (f = A[(a + 8) >> 2] | 0),
            (l = +(((A[(a + 4) >> 2] | 0) - f) | 0)),
            (H[o >> 3] = +(((A[a >> 2] | 0) - f) | 0) - l * 0.5),
            (H[(o + 8) >> 3] = l * 0.8660254037844386);
        }
        function ei(a, o, l) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (A[l >> 2] = (A[o >> 2] | 0) + (A[a >> 2] | 0)),
            (A[(l + 4) >> 2] = (A[(o + 4) >> 2] | 0) + (A[(a + 4) >> 2] | 0)),
            (A[(l + 8) >> 2] = (A[(o + 8) >> 2] | 0) + (A[(a + 8) >> 2] | 0));
        }
        function A0(a, o, l) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (A[l >> 2] = (A[a >> 2] | 0) - (A[o >> 2] | 0)),
            (A[(l + 4) >> 2] = (A[(a + 4) >> 2] | 0) - (A[(o + 4) >> 2] | 0)),
            (A[(l + 8) >> 2] = (A[(a + 8) >> 2] | 0) - (A[(o + 8) >> 2] | 0));
        }
        function Jc(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          (l = gn(A[a >> 2] | 0, o) | 0),
            (A[a >> 2] = l),
            (l = (a + 4) | 0),
            (f = gn(A[l >> 2] | 0, o) | 0),
            (A[l >> 2] = f),
            (a = (a + 8) | 0),
            (o = gn(A[a >> 2] | 0, o) | 0),
            (A[a >> 2] = o);
        }
        function Ka(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (v = A[a >> 2] | 0),
            (y = (v | 0) < 0),
            (f = ((A[(a + 4) >> 2] | 0) - (y ? v : 0)) | 0),
            (m = (f | 0) < 0),
            (h =
              ((m ? (0 - f) | 0 : 0) + ((A[(a + 8) >> 2] | 0) - (y ? v : 0))) |
              0),
            (l = (h | 0) < 0),
            (a = l ? 0 : h),
            (o = ((m ? 0 : f) - (l ? h : 0)) | 0),
            (h = ((y ? 0 : v) - (m ? f : 0) - (l ? h : 0)) | 0),
            (l = (o | 0) < (h | 0) ? o : h),
            (l = (a | 0) < (l | 0) ? a : l),
            (f = (l | 0) > 0),
            (a = (a - (f ? l : 0)) | 0),
            (o = (o - (f ? l : 0)) | 0);
          e: do
            switch ((h - (f ? l : 0)) | 0) {
              case 0:
                switch (o | 0) {
                  case 0:
                    return (y = a | 0 ? ((a | 0) == 1 ? 1 : 7) : 0), y | 0;
                  case 1:
                    return (y = a | 0 ? ((a | 0) == 1 ? 3 : 7) : 2), y | 0;
                  default:
                    break e;
                }
              case 1:
                switch (o | 0) {
                  case 0:
                    return (y = a | 0 ? ((a | 0) == 1 ? 5 : 7) : 4), y | 0;
                  case 1: {
                    if (!a) a = 6;
                    else break e;
                    return a | 0;
                  }
                  default:
                    break e;
                }
            }
          while (0);
          return (y = 7), y | 0;
        }
        function Bm(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (v = (a + 8) | 0),
            (h = A[v >> 2] | 0),
            (m = ((A[a >> 2] | 0) - h) | 0),
            (y = (a + 4) | 0),
            (h = ((A[y >> 2] | 0) - h) | 0);
          do
            if ((m >>> 0 > 715827881) | (h >>> 0 > 715827881)) {
              if (((l = (m | 0) > 0), l)) {
                if (
                  ((2147483647 - m) | 0) < (m | 0) ||
                  ((2147483647 - (m << 1)) | 0) < (m | 0)
                )
                  return (y = 1), y | 0;
              } else if (
                ((-2147483648 - m) | 0) > (m | 0) ||
                ((-2147483648 - (m << 1)) | 0) > (m | 0)
              )
                return (y = 1), y | 0;
              if (((o = (m * 3) | 0), (h | 0) > 0)) {
                if (((2147483647 - h) | 0) < (h | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - h) | 0) > (h | 0))
                return (y = 1), y | 0;
              if (((f = h << 1), (m | 0) > -1)) {
                if ((o | -2147483648 | 0) >= (h | 0)) return (y = 1), y | 0;
              } else if (((o ^ -2147483648) | 0) < (h | 0))
                return (y = 1), y | 0;
              if (l) {
                if (((2147483647 - m) | 0) < (f | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              } else {
                if (((-2147483648 - m) | 0) > (f | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              }
            } else (l = h << 1), (o = (m * 3) | 0);
          while (0);
          (f = Xr(+((o - h) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (h = Xr(+((l + m) | 0) / 7) | 0),
            (A[y >> 2] = h),
            (A[v >> 2] = 0),
            (l = (h | 0) < (f | 0)),
            (o = l ? f : h),
            (l = l ? h : f);
          do
            if ((l | 0) < 0) {
              if ((o | 0) > 0) {
                if (
                  ((o | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - o) | 0) >= (l | 0)))
                )
                  break;
                dt(23313, 22444, 355, 22455);
              }
              if (
                (((l | 0) == -2147483648) |
                  (((-2147483648 - o) | 0) > (l | 0)) &&
                  dt(23313, 22444, 355, 22455),
                (o | 0) > -1)
              ) {
                if ((o | -2147483648 | 0) < (l | 0)) break;
                dt(23313, 22444, 355, 22455);
              } else {
                if (((o ^ -2147483648) | 0) >= (l | 0)) break;
                dt(23313, 22444, 355, 22455);
              }
            }
          while (0);
          return (
            (o = (h - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[y >> 2] = o),
                (A[v >> 2] = l),
                (A[a >> 2] = 0),
                (f = 0))
              : ((o = h), (l = 0)),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[v >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (h = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = h),
                (A[v >> 2] = 0),
                (o = h),
                (h = m),
                (l = 0))
              : (h = f),
            (f = (o | 0) < (h | 0) ? o : h),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((y = 0), y | 0)
              : ((A[a >> 2] = h - f),
                (A[y >> 2] = o - f),
                (A[v >> 2] = l - f),
                (y = 0),
                y | 0)
          );
        }
        function Nm(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (v = (a + 8) | 0),
            (h = A[v >> 2] | 0),
            (m = ((A[a >> 2] | 0) - h) | 0),
            (y = (a + 4) | 0),
            (h = ((A[y >> 2] | 0) - h) | 0);
          do
            if ((m >>> 0 > 715827881) | (h >>> 0 > 715827881)) {
              if (((l = (m | 0) > 0), l)) {
                if (((2147483647 - m) | 0) < (m | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - m) | 0) > (m | 0))
                return (y = 1), y | 0;
              if (((o = m << 1), (h | 0) > 0)) {
                if (
                  ((2147483647 - h) | 0) < (h | 0) ||
                  ((2147483647 - (h << 1)) | 0) < (h | 0)
                )
                  return (y = 1), y | 0;
              } else if (
                ((-2147483648 - h) | 0) > (h | 0) ||
                ((-2147483648 - (h << 1)) | 0) > (h | 0)
              )
                return (y = 1), y | 0;
              if (((f = (h * 3) | 0), l)) {
                if (((2147483647 - o) | 0) < (h | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - o) | 0) > (h | 0))
                return (y = 1), y | 0;
              if ((h | 0) > -1) {
                if ((f | -2147483648 | 0) < (m | 0)) {
                  l = f;
                  break;
                } else o = 1;
                return o | 0;
              } else {
                if (((f ^ -2147483648) | 0) < (m | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              }
            } else (l = (h * 3) | 0), (o = m << 1);
          while (0);
          (f = Xr(+((o + h) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (h = Xr(+((l - m) | 0) / 7) | 0),
            (A[y >> 2] = h),
            (A[v >> 2] = 0),
            (l = (h | 0) < (f | 0)),
            (o = l ? f : h),
            (l = l ? h : f);
          do
            if ((l | 0) < 0) {
              if ((o | 0) > 0) {
                if (
                  ((o | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - o) | 0) >= (l | 0)))
                )
                  break;
                dt(23313, 22444, 404, 22469);
              }
              if (
                (((l | 0) == -2147483648) |
                  (((-2147483648 - o) | 0) > (l | 0)) &&
                  dt(23313, 22444, 404, 22469),
                (o | 0) > -1)
              ) {
                if ((o | -2147483648 | 0) < (l | 0)) break;
                dt(23313, 22444, 404, 22469);
              } else {
                if (((o ^ -2147483648) | 0) >= (l | 0)) break;
                dt(23313, 22444, 404, 22469);
              }
            }
          while (0);
          return (
            (o = (h - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[y >> 2] = o),
                (A[v >> 2] = l),
                (A[a >> 2] = 0),
                (f = 0))
              : ((o = h), (l = 0)),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[v >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (h = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = h),
                (A[v >> 2] = 0),
                (o = h),
                (h = m),
                (l = 0))
              : (h = f),
            (f = (o | 0) < (h | 0) ? o : h),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((y = 0), y | 0)
              : ((A[a >> 2] = h - f),
                (A[y >> 2] = o - f),
                (A[v >> 2] = l - f),
                (y = 0),
                y | 0)
          );
        }
        function Fm(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (v = (a + 8) | 0),
            (l = A[v >> 2] | 0),
            (o = ((A[a >> 2] | 0) - l) | 0),
            (y = (a + 4) | 0),
            (l = ((A[y >> 2] | 0) - l) | 0),
            (f = Xr(+((((o * 3) | 0) - l) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (o = Xr(+(((l << 1) + o) | 0) / 7) | 0),
            (A[y >> 2] = o),
            (A[v >> 2] = 0),
            (l = (o - f) | 0),
            (f | 0) < 0
              ? ((m = (0 - f) | 0),
                (A[y >> 2] = l),
                (A[v >> 2] = m),
                (A[a >> 2] = 0),
                (o = l),
                (f = 0),
                (l = m))
              : (l = 0),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[v >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (h = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = h),
                (A[v >> 2] = 0),
                (o = h),
                (h = m),
                (l = 0))
              : (h = f),
            (f = (o | 0) < (h | 0) ? o : h),
            (f = (l | 0) < (f | 0) ? l : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = h - f), (A[y >> 2] = o - f), (A[v >> 2] = l - f));
        }
        function ef(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (v = (a + 8) | 0),
            (l = A[v >> 2] | 0),
            (o = ((A[a >> 2] | 0) - l) | 0),
            (y = (a + 4) | 0),
            (l = ((A[y >> 2] | 0) - l) | 0),
            (f = Xr(+(((o << 1) + l) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (o = Xr(+((((l * 3) | 0) - o) | 0) / 7) | 0),
            (A[y >> 2] = o),
            (A[v >> 2] = 0),
            (l = (o - f) | 0),
            (f | 0) < 0
              ? ((m = (0 - f) | 0),
                (A[y >> 2] = l),
                (A[v >> 2] = m),
                (A[a >> 2] = 0),
                (o = l),
                (f = 0),
                (l = m))
              : (l = 0),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[v >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (h = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = h),
                (A[v >> 2] = 0),
                (o = h),
                (h = m),
                (l = 0))
              : (h = f),
            (f = (o | 0) < (h | 0) ? o : h),
            (f = (l | 0) < (f | 0) ? l : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = h - f), (A[y >> 2] = o - f), (A[v >> 2] = l - f));
        }
        function Ja(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (l = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (f = A[y >> 2] | 0),
            (h = (l + ((o * 3) | 0)) | 0),
            (A[a >> 2] = h),
            (l = (f + ((l * 3) | 0)) | 0),
            (A[v >> 2] = l),
            (o = (((f * 3) | 0) + o) | 0),
            (A[y >> 2] = o),
            (f = (l - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = f),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (l = f),
                (f = 0))
              : (f = h),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (h = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = h),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (h = l),
            (l = (h | 0) < (f | 0) ? h : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[v >> 2] = h - l), (A[y >> 2] = o - l));
        }
        function gs(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (h = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (o = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = (((o * 3) | 0) + h) | 0),
            (h = (l + ((h * 3) | 0)) | 0),
            (A[a >> 2] = h),
            (A[v >> 2] = f),
            (o = (((l * 3) | 0) + o) | 0),
            (A[y >> 2] = o),
            (l = (f - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (h = 0))
              : (l = f),
            (l | 0) < 0 &&
              ((h = (h - l) | 0),
              (A[a >> 2] = h),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (h - o) | 0),
            (f = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = f),
                (A[y >> 2] = 0),
                (h = m),
                (o = 0))
              : (f = l),
            (l = (f | 0) < (h | 0) ? f : h),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = h - l), (A[v >> 2] = f - l), (A[y >> 2] = o - l));
        }
        function tf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          ((o + -1) | 0) >>> 0 >= 6 ||
            ((h =
              ((A[(15440 + ((o * 12) | 0)) >> 2] | 0) + (A[a >> 2] | 0)) | 0),
            (A[a >> 2] = h),
            (y = (a + 4) | 0),
            (f =
              ((A[(15440 + ((o * 12) | 0) + 4) >> 2] | 0) + (A[y >> 2] | 0)) |
              0),
            (A[y >> 2] = f),
            (v = (a + 8) | 0),
            (o =
              ((A[(15440 + ((o * 12) | 0) + 8) >> 2] | 0) + (A[v >> 2] | 0)) |
              0),
            (A[v >> 2] = o),
            (l = (f - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[y >> 2] = l),
                (A[v >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = h)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[v >> 2] = o),
              (A[y >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (h = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = h),
                (A[v >> 2] = 0),
                (f = m),
                (o = 0))
              : (h = l),
            (l = (h | 0) < (f | 0) ? h : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[y >> 2] = h - l), (A[v >> 2] = o - l)));
        }
        function nf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (h = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (o = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = (o + h) | 0),
            (h = (l + h) | 0),
            (A[a >> 2] = h),
            (A[v >> 2] = f),
            (o = (l + o) | 0),
            (A[y >> 2] = o),
            (l = (f - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = h)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (h = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = h),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (h = l),
            (l = (h | 0) < (f | 0) ? h : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[v >> 2] = h - l), (A[y >> 2] = o - l));
        }
        function eA(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (f = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (h = (f + o) | 0),
            (A[a >> 2] = h),
            (f = (l + f) | 0),
            (A[v >> 2] = f),
            (o = (l + o) | 0),
            (A[y >> 2] = o),
            (l = (f - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = h)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (h = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = h),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (h = l),
            (l = (h | 0) < (f | 0) ? h : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[v >> 2] = h - l), (A[y >> 2] = o - l));
        }
        function _s(a) {
          switch (((a = a | 0), a | 0)) {
            case 1: {
              a = 5;
              break;
            }
            case 5: {
              a = 4;
              break;
            }
            case 4: {
              a = 6;
              break;
            }
            case 6: {
              a = 2;
              break;
            }
            case 2: {
              a = 3;
              break;
            }
            case 3: {
              a = 1;
              break;
            }
          }
          return a | 0;
        }
        function Wr(a) {
          switch (((a = a | 0), a | 0)) {
            case 1: {
              a = 3;
              break;
            }
            case 3: {
              a = 2;
              break;
            }
            case 2: {
              a = 6;
              break;
            }
            case 6: {
              a = 4;
              break;
            }
            case 4: {
              a = 5;
              break;
            }
            case 5: {
              a = 1;
              break;
            }
          }
          return a | 0;
        }
        function rf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (l = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (f = A[y >> 2] | 0),
            (h = (l + (o << 1)) | 0),
            (A[a >> 2] = h),
            (l = (f + (l << 1)) | 0),
            (A[v >> 2] = l),
            (o = ((f << 1) + o) | 0),
            (A[y >> 2] = o),
            (f = (l - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = f),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (l = f),
                (f = 0))
              : (f = h),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (h = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = h),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (h = l),
            (l = (h | 0) < (f | 0) ? h : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[v >> 2] = h - l), (A[y >> 2] = o - l));
        }
        function sf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (h = A[a >> 2] | 0),
            (v = (a + 4) | 0),
            (o = A[v >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = ((o << 1) + h) | 0),
            (h = (l + (h << 1)) | 0),
            (A[a >> 2] = h),
            (A[v >> 2] = f),
            (o = ((l << 1) + o) | 0),
            (A[y >> 2] = o),
            (l = (f - h) | 0),
            (h | 0) < 0
              ? ((o = (o - h) | 0),
                (A[v >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (h = 0))
              : (l = f),
            (l | 0) < 0 &&
              ((h = (h - l) | 0),
              (A[a >> 2] = h),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[v >> 2] = 0),
              (l = 0)),
            (m = (h - o) | 0),
            (f = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[v >> 2] = f),
                (A[y >> 2] = 0),
                (h = m),
                (o = 0))
              : (f = l),
            (l = (f | 0) < (h | 0) ? f : h),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = h - l), (A[v >> 2] = f - l), (A[y >> 2] = o - l));
        }
        function l0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          return (
            (v = ((A[a >> 2] | 0) - (A[o >> 2] | 0)) | 0),
            (y = (v | 0) < 0),
            (f =
              ((A[(a + 4) >> 2] | 0) - (A[(o + 4) >> 2] | 0) - (y ? v : 0)) |
              0),
            (m = (f | 0) < 0),
            (h =
              ((y ? (0 - v) | 0 : 0) +
                (A[(a + 8) >> 2] | 0) -
                (A[(o + 8) >> 2] | 0) +
                (m ? (0 - f) | 0 : 0)) |
              0),
            (a = (h | 0) < 0),
            (o = a ? 0 : h),
            (l = ((m ? 0 : f) - (a ? h : 0)) | 0),
            (h = ((y ? 0 : v) - (m ? f : 0) - (a ? h : 0)) | 0),
            (a = (l | 0) < (h | 0) ? l : h),
            (a = (o | 0) < (a | 0) ? o : a),
            (f = (a | 0) > 0),
            (o = (o - (f ? a : 0)) | 0),
            (l = (l - (f ? a : 0)) | 0),
            (a = (h - (f ? a : 0)) | 0),
            (a = (a | 0) > -1 ? a : (0 - a) | 0),
            (l = (l | 0) > -1 ? l : (0 - l) | 0),
            (o = (o | 0) > -1 ? o : (0 - o) | 0),
            (o = (l | 0) > (o | 0) ? l : o),
            ((a | 0) > (o | 0) ? a : o) | 0
          );
        }
        function km(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          (l = A[(a + 8) >> 2] | 0),
            (A[o >> 2] = (A[a >> 2] | 0) - l),
            (A[(o + 4) >> 2] = (A[(a + 4) >> 2] | 0) - l);
        }
        function zm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (f = A[a >> 2] | 0),
            (A[o >> 2] = f),
            (h = A[(a + 4) >> 2] | 0),
            (v = (o + 4) | 0),
            (A[v >> 2] = h),
            (y = (o + 8) | 0),
            (A[y >> 2] = 0),
            (l = (h | 0) < (f | 0)),
            (a = l ? f : h),
            (l = l ? h : f);
          do
            if ((l | 0) < 0) {
              if ((a | 0) > 0) {
                if (
                  ((a | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - a) | 0) >= (l | 0)))
                )
                  break;
                return (a = 1), a | 0;
              }
              if (
                ((l | 0) == -2147483648) |
                (((-2147483648 - a) | 0) > (l | 0))
              )
                return (o = 1), o | 0;
              if ((a | 0) > -1) {
                if ((a | -2147483648 | 0) < (l | 0)) break;
                return (a = 1), a | 0;
              } else {
                if (((a ^ -2147483648) | 0) < (l | 0)) a = 1;
                else break;
                return a | 0;
              }
            }
          while (0);
          return (
            (a = (h - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[v >> 2] = a),
                (A[y >> 2] = l),
                (A[o >> 2] = 0),
                (f = 0))
              : ((a = h), (l = 0)),
            (a | 0) < 0 &&
              ((f = (f - a) | 0),
              (A[o >> 2] = f),
              (l = (l - a) | 0),
              (A[y >> 2] = l),
              (A[v >> 2] = 0),
              (a = 0)),
            (m = (f - l) | 0),
            (h = (a - l) | 0),
            (l | 0) < 0
              ? ((A[o >> 2] = m),
                (A[v >> 2] = h),
                (A[y >> 2] = 0),
                (a = h),
                (h = m),
                (l = 0))
              : (h = f),
            (f = (a | 0) < (h | 0) ? a : h),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((o = 0), o | 0)
              : ((A[o >> 2] = h - f),
                (A[v >> 2] = a - f),
                (A[y >> 2] = l - f),
                (o = 0),
                o | 0)
          );
        }
        function of(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0;
          (o = (a + 8) | 0),
            (h = A[o >> 2] | 0),
            (l = (h - (A[a >> 2] | 0)) | 0),
            (A[a >> 2] = l),
            (f = (a + 4) | 0),
            (a = ((A[f >> 2] | 0) - h) | 0),
            (A[f >> 2] = a),
            (A[o >> 2] = 0 - (a + l));
        }
        function Gm(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (l = A[a >> 2] | 0),
            (o = (0 - l) | 0),
            (A[a >> 2] = o),
            (v = (a + 8) | 0),
            (A[v >> 2] = 0),
            (y = (a + 4) | 0),
            (f = A[y >> 2] | 0),
            (h = (f + l) | 0),
            (l | 0) > 0
              ? ((A[y >> 2] = h),
                (A[v >> 2] = l),
                (A[a >> 2] = 0),
                (o = 0),
                (f = h))
              : (l = 0),
            (f | 0) < 0
              ? ((m = (o - f) | 0),
                (A[a >> 2] = m),
                (l = (l - f) | 0),
                (A[v >> 2] = l),
                (A[y >> 2] = 0),
                (h = (m - l) | 0),
                (o = (0 - l) | 0),
                (l | 0) < 0
                  ? ((A[a >> 2] = h),
                    (A[y >> 2] = o),
                    (A[v >> 2] = 0),
                    (f = o),
                    (l = 0))
                  : ((f = 0), (h = m)))
              : (h = o),
            (o = (f | 0) < (h | 0) ? f : h),
            (o = (l | 0) < (o | 0) ? l : o),
            !((o | 0) <= 0) &&
              ((A[a >> 2] = h - o), (A[y >> 2] = f - o), (A[v >> 2] = l - o));
        }
        function Hm(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0;
          if (
            ((j = z),
            (z = (z + 64) | 0),
            (B = j),
            (y = (j + 56) | 0),
            !(
              !0 &
              (((o & 2013265920) | 0) == 134217728) &
              (!0 & (((f & 2013265920) | 0) == 134217728))
            ))
          )
            return (h = 5), (z = j), h | 0;
          if (((a | 0) == (l | 0)) & ((o | 0) == (f | 0)))
            return (A[h >> 2] = 0), (h = 0), (z = j), h | 0;
          if (
            ((v = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (v = v & 15),
            (P = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (v | 0) != ((P & 15) | 0))
          )
            return (h = 12), (z = j), h | 0;
          if (((m = (v + -1) | 0), v >>> 0 > 1)) {
            h0(a, o, m, B) | 0,
              h0(l, f, m, y) | 0,
              (P = B),
              (w = A[P >> 2] | 0),
              (P = A[(P + 4) >> 2] | 0);
            e: do
              if (
                (w | 0) == (A[y >> 2] | 0) &&
                (P | 0) == (A[(y + 4) >> 2] | 0)
              ) {
                (v = ((v ^ 15) * 3) | 0),
                  (m = De(a | 0, o | 0, v | 0) | 0),
                  W() | 0,
                  (m = m & 7),
                  (v = De(l | 0, f | 0, v | 0) | 0),
                  W() | 0,
                  (v = v & 7);
                do
                  if (((m | 0) == 0) | ((v | 0) == 0)) (A[h >> 2] = 1), (m = 0);
                  else if ((m | 0) == 7) m = 5;
                  else {
                    if (((m | 0) == 1) | ((v | 0) == 1) && un(w, P) | 0) {
                      m = 5;
                      break;
                    }
                    if (
                      (A[(15536 + (m << 2)) >> 2] | 0) != (v | 0) &&
                      (A[(15568 + (m << 2)) >> 2] | 0) != (v | 0)
                    )
                      break e;
                    (A[h >> 2] = 1), (m = 0);
                  }
                while (0);
                return (h = m), (z = j), h | 0;
              }
            while (0);
          }
          (m = B), (v = (m + 56) | 0);
          do (A[m >> 2] = 0), (m = (m + 4) | 0);
          while ((m | 0) < (v | 0));
          return (
            Vc(a, o, 1, B) | 0,
            (o = B),
            !((A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)) &&
            ((o = (B + 8) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 16) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 24) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 32) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 40) | 0),
            !((A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)))
              ? ((m = (B + 48) | 0),
                (m =
                  ((A[m >> 2] | 0) == (l | 0)
                    ? (A[(m + 4) >> 2] | 0) == (f | 0)
                    : 0) & 1))
              : (m = 1),
            (A[h >> 2] = m),
            (h = 0),
            (z = j),
            h | 0
          );
        }
        function Vm(a, o, l, f, h) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (l = r0(a, o, l, f) | 0),
            (l | 0) == 7
              ? ((h = 11), h | 0)
              : ((f = je(l | 0, 0, 56) | 0),
                (o = (o & -2130706433) | (W() | 0) | 268435456),
                (A[h >> 2] = a | f),
                (A[(h + 4) >> 2] = o),
                (h = 0),
                h | 0)
          );
        }
        function Wm(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((A[l >> 2] = a),
                (A[(l + 4) >> 2] = (o & -2130706433) | 134217728),
                (l = 0),
                l | 0)
              : ((l = 6), l | 0)
          );
        }
        function jm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          return (
            (h = z),
            (z = (z + 16) | 0),
            (f = h),
            (A[f >> 2] = 0),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((m = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = qn(a, (o & -2130706433) | 134217728, m & 7, f, l) | 0),
                (z = h),
                f | 0)
              : ((f = 6), (z = h), f | 0)
          );
        }
        function Xm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          switch (((l = De(a | 0, o | 0, 56) | 0), W() | 0, l & 7)) {
            case 0:
            case 7:
              return (l = 0), l | 0;
          }
          return (
            (l = (o & -2130706433) | 134217728),
            !(!0 & (((o & 2013265920) | 0) == 268435456)) ||
            !0 & (((o & 117440512) | 0) == 16777216) & ((un(a, l) | 0) != 0)
              ? ((l = 0), l | 0)
              : ((l = f0(a, l) | 0), l | 0)
          );
        }
        function Qm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          return (
            (h = z),
            (z = (z + 16) | 0),
            (f = h),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((m = (o & -2130706433) | 134217728),
                (v = l),
                (A[v >> 2] = a),
                (A[(v + 4) >> 2] = m),
                (A[f >> 2] = 0),
                (o = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = qn(a, m, o & 7, f, (l + 8) | 0) | 0),
                (z = h),
                f | 0)
              : ((f = 6), (z = h), f | 0)
          );
        }
        function $m(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0;
          return (
            (h = (un(a, o) | 0) == 0),
            (o = o & -2130706433),
            (f = l),
            (A[f >> 2] = h ? a : 0),
            (A[(f + 4) >> 2] = h ? o | 285212672 : 0),
            (f = (l + 8) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 301989888),
            (f = (l + 16) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 318767104),
            (f = (l + 24) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 335544320),
            (f = (l + 32) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 352321536),
            (l = (l + 40) | 0),
            (A[l >> 2] = a),
            (A[(l + 4) >> 2] = o | 369098752),
            0
          );
        }
        function tA(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          return (
            (v = z),
            (z = (z + 16) | 0),
            (h = v),
            (m = (o & -2130706433) | 134217728),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((f = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = Qg(a, m, f & 7) | 0),
                (f | 0) == -1
                  ? ((A[l >> 2] = 0), (m = 6), (z = v), m | 0)
                  : (Ws(a, m, h) | 0 && dt(23313, 22484, 282, 22499),
                    (o = De(a | 0, o | 0, 52) | 0),
                    W() | 0,
                    (o = o & 15),
                    un(a, m) | 0 ? u0(h, o, f, 2, l) : c0(h, o, f, 2, l),
                    (m = 0),
                    (z = v),
                    m | 0))
              : ((m = 6), (z = v), m | 0)
          );
        }
        function Ym(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0;
          (f = z),
            (z = (z + 16) | 0),
            (h = f),
            Zm(a, o, l, h),
            qm(h, (l + 4) | 0),
            (z = f);
        }
        function Zm(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          if (
            ((y = z),
            (z = (z + 16) | 0),
            (w = y),
            Km(a, l, w),
            (m = +Bt(+(1 - +H[w >> 3] * 0.5))),
            m < 1e-16)
          ) {
            (A[f >> 2] = 0),
              (A[(f + 4) >> 2] = 0),
              (A[(f + 8) >> 2] = 0),
              (A[(f + 12) >> 2] = 0),
              (z = y);
            return;
          }
          if (
            ((w = A[l >> 2] | 0),
            (h = +H[(15920 + ((w * 24) | 0)) >> 3]),
            (h = +Jo(h - +Jo(+gg((15600 + (w << 4)) | 0, a)))),
            Ui(o) | 0 ? (v = +Jo(h + -0.3334731722518321)) : (v = h),
            (h = +ht(+m) / 0.381966011250105),
            (o | 0) > 0)
          ) {
            a = 0;
            do (h = h * 2.6457513110645907), (a = (a + 1) | 0);
            while ((a | 0) != (o | 0));
          }
          (m = +Qe(+v) * h),
            (H[f >> 3] = m),
            (v = +Ge(+v) * h),
            (H[(f + 8) >> 3] = v),
            (z = y);
        }
        function Km(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          if (
            ((m = z),
            (z = (z + 32) | 0),
            (h = m),
            Xg(a, h),
            (A[o >> 2] = 0),
            (H[l >> 3] = 5),
            (f = +En(16400, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 0), (H[l >> 3] = f)),
            (f = +En(16424, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 1), (H[l >> 3] = f)),
            (f = +En(16448, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 2), (H[l >> 3] = f)),
            (f = +En(16472, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 3), (H[l >> 3] = f)),
            (f = +En(16496, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 4), (H[l >> 3] = f)),
            (f = +En(16520, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 5), (H[l >> 3] = f)),
            (f = +En(16544, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 6), (H[l >> 3] = f)),
            (f = +En(16568, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 7), (H[l >> 3] = f)),
            (f = +En(16592, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 8), (H[l >> 3] = f)),
            (f = +En(16616, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 9), (H[l >> 3] = f)),
            (f = +En(16640, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 10), (H[l >> 3] = f)),
            (f = +En(16664, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 11), (H[l >> 3] = f)),
            (f = +En(16688, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 12), (H[l >> 3] = f)),
            (f = +En(16712, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 13), (H[l >> 3] = f)),
            (f = +En(16736, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 14), (H[l >> 3] = f)),
            (f = +En(16760, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 15), (H[l >> 3] = f)),
            (f = +En(16784, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 16), (H[l >> 3] = f)),
            (f = +En(16808, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 17), (H[l >> 3] = f)),
            (f = +En(16832, h)),
            f < +H[l >> 3] && ((A[o >> 2] = 18), (H[l >> 3] = f)),
            (f = +En(16856, h)),
            !(f < +H[l >> 3]))
          ) {
            z = m;
            return;
          }
          (A[o >> 2] = 19), (H[l >> 3] = f), (z = m);
        }
        function Yo(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0;
          if (((m = +jg(a)), m < 1e-16)) {
            (o = (15600 + (o << 4)) | 0),
              (A[h >> 2] = A[o >> 2]),
              (A[(h + 4) >> 2] = A[(o + 4) >> 2]),
              (A[(h + 8) >> 2] = A[(o + 8) >> 2]),
              (A[(h + 12) >> 2] = A[(o + 12) >> 2]);
            return;
          }
          if (((v = +jt(+(+H[(a + 8) >> 3]), +(+H[a >> 3]))), (l | 0) > 0)) {
            a = 0;
            do (m = m / 2.6457513110645907), (a = (a + 1) | 0);
            while ((a | 0) != (l | 0));
          }
          f
            ? ((m = m / 3),
              (l = (Ui(l) | 0) == 0),
              (m = +Pt(
                +((l ? m : m / 2.6457513110645907) * 0.381966011250105)
              )))
            : ((m = +Pt(+(m * 0.381966011250105))),
              Ui(l) | 0 && (v = +Jo(v + 0.3334731722518321))),
            _g(
              (15600 + (o << 4)) | 0,
              +Jo(+H[(15920 + ((o * 24) | 0)) >> 3] - v),
              m,
              h
            );
        }
        function Jm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0;
          (f = z),
            (z = (z + 16) | 0),
            (h = f),
            ms((a + 4) | 0, h),
            Yo(h, A[a >> 2] | 0, o, 0, l),
            (z = f);
        }
        function u0(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            Ot = 0,
            Ct = 0,
            Ut = 0,
            en = 0,
            bt = 0;
          if (
            ((Ut = z),
            (z = (z + 272) | 0),
            (m = (Ut + 256) | 0),
            (_e = (Ut + 240) | 0),
            (Qt = Ut),
            (Ot = (Ut + 224) | 0),
            (Ct = (Ut + 208) | 0),
            (ve = (Ut + 176) | 0),
            (ue = (Ut + 160) | 0),
            (Ye = (Ut + 192) | 0),
            (st = (Ut + 144) | 0),
            (He = (Ut + 128) | 0),
            (Ze = (Ut + 112) | 0),
            (Zt = (Ut + 96) | 0),
            (Xt = (Ut + 80) | 0),
            (A[m >> 2] = o),
            (A[_e >> 2] = A[a >> 2]),
            (A[(_e + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(_e + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(_e + 12) >> 2] = A[(a + 12) >> 2]),
            af(_e, m, Qt),
            (A[h >> 2] = 0),
            (_e = (f + l + (((f | 0) == 5) & 1)) | 0),
            (_e | 0) <= (l | 0))
          ) {
            z = Ut;
            return;
          }
          (w = A[m >> 2] | 0),
            (P = (Ot + 4) | 0),
            (B = (ve + 4) | 0),
            (j = (l + 5) | 0),
            (K = (16880 + (w << 2)) | 0),
            (re = (16960 + (w << 2)) | 0),
            (Z = (He + 8) | 0),
            (ce = (Ze + 8) | 0),
            (Ee = (Zt + 8) | 0),
            (Se = (Ct + 4) | 0),
            (y = l);
          e: for (;;) {
            (v = (Qt + (((y | 0) % 5 | 0) << 4)) | 0),
              (A[Ct >> 2] = A[v >> 2]),
              (A[(Ct + 4) >> 2] = A[(v + 4) >> 2]),
              (A[(Ct + 8) >> 2] = A[(v + 8) >> 2]),
              (A[(Ct + 12) >> 2] = A[(v + 12) >> 2]);
            do;
            while ((Vs(Ct, w, 0, 1) | 0) == 2);
            if (((y | 0) > (l | 0)) & ((Ui(o) | 0) != 0)) {
              if (
                ((A[ve >> 2] = A[Ct >> 2]),
                (A[(ve + 4) >> 2] = A[(Ct + 4) >> 2]),
                (A[(ve + 8) >> 2] = A[(Ct + 8) >> 2]),
                (A[(ve + 12) >> 2] = A[(Ct + 12) >> 2]),
                ms(P, ue),
                (f = A[ve >> 2] | 0),
                (m = A[(17040 + ((f * 80) | 0) + (A[Ot >> 2] << 2)) >> 2] | 0),
                (A[ve >> 2] =
                  A[(18640 + ((f * 80) | 0) + ((m * 20) | 0)) >> 2]),
                (v =
                  A[(18640 + ((f * 80) | 0) + ((m * 20) | 0) + 16) >> 2] | 0),
                (v | 0) > 0)
              ) {
                a = 0;
                do nf(B), (a = (a + 1) | 0);
                while ((a | 0) < (v | 0));
              }
              switch (
                ((v = (18640 + ((f * 80) | 0) + ((m * 20) | 0) + 4) | 0),
                (A[Ye >> 2] = A[v >> 2]),
                (A[(Ye + 4) >> 2] = A[(v + 4) >> 2]),
                (A[(Ye + 8) >> 2] = A[(v + 8) >> 2]),
                Jc(Ye, ((A[K >> 2] | 0) * 3) | 0),
                ei(B, Ye, B),
                Hn(B),
                ms(B, st),
                (en = +(A[re >> 2] | 0)),
                (H[He >> 3] = en * 3),
                (H[Z >> 3] = 0),
                (bt = en * -1.5),
                (H[Ze >> 3] = bt),
                (H[ce >> 3] = en * 2.598076211353316),
                (H[Zt >> 3] = bt),
                (H[Ee >> 3] = en * -2.598076211353316),
                A[
                  (17040 + (((A[ve >> 2] | 0) * 80) | 0) + (A[Ct >> 2] << 2)) >>
                    2
                ] | 0)
              ) {
                case 1: {
                  (a = Ze), (f = He);
                  break;
                }
                case 3: {
                  (a = Zt), (f = Ze);
                  break;
                }
                case 2: {
                  (a = He), (f = Zt);
                  break;
                }
                default: {
                  a = 12;
                  break e;
                }
              }
              xf(ue, st, f, a, Xt),
                Yo(Xt, A[ve >> 2] | 0, w, 1, (h + 8 + (A[h >> 2] << 4)) | 0),
                (A[h >> 2] = (A[h >> 2] | 0) + 1);
            }
            if (
              ((y | 0) < (j | 0) &&
                (ms(Se, ve),
                Yo(ve, A[Ct >> 2] | 0, w, 1, (h + 8 + (A[h >> 2] << 4)) | 0),
                (A[h >> 2] = (A[h >> 2] | 0) + 1)),
              (A[Ot >> 2] = A[Ct >> 2]),
              (A[(Ot + 4) >> 2] = A[(Ct + 4) >> 2]),
              (A[(Ot + 8) >> 2] = A[(Ct + 8) >> 2]),
              (A[(Ot + 12) >> 2] = A[(Ct + 12) >> 2]),
              (y = (y + 1) | 0),
              (y | 0) >= (_e | 0))
            ) {
              a = 3;
              break;
            }
          }
          if ((a | 0) == 3) {
            z = Ut;
            return;
          } else (a | 0) == 12 && dt(22522, 22569, 571, 22579);
        }
        function af(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          (w = z),
            (z = (z + 128) | 0),
            (f = (w + 64) | 0),
            (h = w),
            (m = f),
            (v = 20240),
            (y = (m + 60) | 0);
          do (A[m >> 2] = A[v >> 2]), (m = (m + 4) | 0), (v = (v + 4) | 0);
          while ((m | 0) < (y | 0));
          (m = h), (v = 20304), (y = (m + 60) | 0);
          do (A[m >> 2] = A[v >> 2]), (m = (m + 4) | 0), (v = (v + 4) | 0);
          while ((m | 0) < (y | 0));
          (y = (Ui(A[o >> 2] | 0) | 0) == 0),
            (f = y ? f : h),
            (h = (a + 4) | 0),
            rf(h),
            sf(h),
            Ui(A[o >> 2] | 0) | 0 && (gs(h), (A[o >> 2] = (A[o >> 2] | 0) + 1)),
            (A[l >> 2] = A[a >> 2]),
            (o = (l + 4) | 0),
            ei(h, f, o),
            Hn(o),
            (A[(l + 16) >> 2] = A[a >> 2]),
            (o = (l + 20) | 0),
            ei(h, (f + 12) | 0, o),
            Hn(o),
            (A[(l + 32) >> 2] = A[a >> 2]),
            (o = (l + 36) | 0),
            ei(h, (f + 24) | 0, o),
            Hn(o),
            (A[(l + 48) >> 2] = A[a >> 2]),
            (o = (l + 52) | 0),
            ei(h, (f + 36) | 0, o),
            Hn(o),
            (A[(l + 64) >> 2] = A[a >> 2]),
            (l = (l + 68) | 0),
            ei(h, (f + 48) | 0, l),
            Hn(l),
            (z = w);
        }
        function Vs(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0;
          if (
            ((Z = z),
            (z = (z + 32) | 0),
            (K = (Z + 12) | 0),
            (y = Z),
            (re = (a + 4) | 0),
            (j = A[(16960 + (o << 2)) >> 2] | 0),
            (B = (f | 0) != 0),
            (j = B ? (j * 3) | 0 : j),
            (h = A[re >> 2] | 0),
            (P = (a + 8) | 0),
            (v = A[P >> 2] | 0),
            B)
          ) {
            if (
              ((m = (a + 12) | 0),
              (f = A[m >> 2] | 0),
              (h = (v + h + f) | 0),
              (h | 0) == (j | 0))
            )
              return (re = 1), (z = Z), re | 0;
            w = m;
          } else (w = (a + 12) | 0), (f = A[w >> 2] | 0), (h = (v + h + f) | 0);
          if ((h | 0) <= (j | 0)) return (re = 0), (z = Z), re | 0;
          do
            if ((f | 0) > 0) {
              if (((f = A[a >> 2] | 0), (v | 0) > 0)) {
                (m = (18640 + ((f * 80) | 0) + 60) | 0), (f = a);
                break;
              }
              (f = (18640 + ((f * 80) | 0) + 40) | 0),
                l
                  ? (Um(K, j, 0, 0),
                    A0(re, K, y),
                    eA(y),
                    ei(y, K, re),
                    (m = f),
                    (f = a))
                  : ((m = f), (f = a));
            } else
              (m = (18640 + (((A[a >> 2] | 0) * 80) | 0) + 20) | 0), (f = a);
          while (0);
          if (
            ((A[f >> 2] = A[m >> 2]), (h = (m + 16) | 0), (A[h >> 2] | 0) > 0)
          ) {
            f = 0;
            do nf(re), (f = (f + 1) | 0);
            while ((f | 0) < (A[h >> 2] | 0));
          }
          return (
            (a = (m + 4) | 0),
            (A[K >> 2] = A[a >> 2]),
            (A[(K + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(K + 8) >> 2] = A[(a + 8) >> 2]),
            (o = A[(16880 + (o << 2)) >> 2] | 0),
            Jc(K, B ? (o * 3) | 0 : o),
            ei(re, K, re),
            Hn(re),
            B
              ? (f =
                  (((A[P >> 2] | 0) + (A[re >> 2] | 0) + (A[w >> 2] | 0)) |
                    0) ==
                  (j | 0)
                    ? 1
                    : 2)
              : (f = 2),
            (re = f),
            (z = Z),
            re | 0
          );
        }
        function eg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          do l = Vs(a, o, 0, 1) | 0;
          while ((l | 0) == 2);
          return l | 0;
        }
        function c0(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0;
          if (
            ((Zt = z),
            (z = (z + 240) | 0),
            (m = (Zt + 224) | 0),
            (Ye = (Zt + 208) | 0),
            (st = Zt),
            (He = (Zt + 192) | 0),
            (Ze = (Zt + 176) | 0),
            (Ee = (Zt + 160) | 0),
            (Se = (Zt + 144) | 0),
            (_e = (Zt + 128) | 0),
            (ve = (Zt + 112) | 0),
            (ue = (Zt + 96) | 0),
            (A[m >> 2] = o),
            (A[Ye >> 2] = A[a >> 2]),
            (A[(Ye + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(Ye + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(Ye + 12) >> 2] = A[(a + 12) >> 2]),
            Af(Ye, m, st),
            (A[h >> 2] = 0),
            (ce = (f + l + (((f | 0) == 6) & 1)) | 0),
            (ce | 0) <= (l | 0))
          ) {
            z = Zt;
            return;
          }
          (w = A[m >> 2] | 0),
            (P = (l + 6) | 0),
            (B = (16960 + (w << 2)) | 0),
            (j = (Se + 8) | 0),
            (K = (_e + 8) | 0),
            (re = (ve + 8) | 0),
            (Z = (He + 4) | 0),
            (v = 0),
            (y = l),
            (f = -1);
          e: for (;;) {
            if (
              ((m = (y | 0) % 6 | 0),
              (a = (st + (m << 4)) | 0),
              (A[He >> 2] = A[a >> 2]),
              (A[(He + 4) >> 2] = A[(a + 4) >> 2]),
              (A[(He + 8) >> 2] = A[(a + 8) >> 2]),
              (A[(He + 12) >> 2] = A[(a + 12) >> 2]),
              (a = v),
              (v = Vs(He, w, 0, 1) | 0),
              ((y | 0) > (l | 0)) & ((Ui(o) | 0) != 0) &&
                (a | 0) != 1 &&
                (A[He >> 2] | 0) != (f | 0))
            ) {
              switch (
                (ms((st + ((((m + 5) | 0) % 6 | 0) << 4) + 4) | 0, Ze),
                ms((st + (m << 4) + 4) | 0, Ee),
                (Xt = +(A[B >> 2] | 0)),
                (H[Se >> 3] = Xt * 3),
                (H[j >> 3] = 0),
                (Qt = Xt * -1.5),
                (H[_e >> 3] = Qt),
                (H[K >> 3] = Xt * 2.598076211353316),
                (H[ve >> 3] = Qt),
                (H[re >> 3] = Xt * -2.598076211353316),
                (m = A[Ye >> 2] | 0),
                A[
                  (17040 +
                    ((m * 80) | 0) +
                    (((f | 0) == (m | 0) ? A[He >> 2] | 0 : f) << 2)) >>
                    2
                ] | 0)
              ) {
                case 1: {
                  (a = _e), (f = Se);
                  break;
                }
                case 3: {
                  (a = ve), (f = _e);
                  break;
                }
                case 2: {
                  (a = Se), (f = ve);
                  break;
                }
                default: {
                  a = 8;
                  break e;
                }
              }
              xf(Ze, Ee, f, a, ue),
                !(yf(Ze, ue) | 0) &&
                  !(yf(Ee, ue) | 0) &&
                  (Yo(ue, A[Ye >> 2] | 0, w, 1, (h + 8 + (A[h >> 2] << 4)) | 0),
                  (A[h >> 2] = (A[h >> 2] | 0) + 1));
            }
            if (
              ((y | 0) < (P | 0) &&
                (ms(Z, Ze),
                Yo(Ze, A[He >> 2] | 0, w, 1, (h + 8 + (A[h >> 2] << 4)) | 0),
                (A[h >> 2] = (A[h >> 2] | 0) + 1)),
              (y = (y + 1) | 0),
              (y | 0) >= (ce | 0))
            ) {
              a = 3;
              break;
            } else f = A[He >> 2] | 0;
          }
          if ((a | 0) == 3) {
            z = Zt;
            return;
          } else (a | 0) == 8 && dt(22606, 22569, 736, 22651);
        }
        function Af(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          (w = z),
            (z = (z + 160) | 0),
            (f = (w + 80) | 0),
            (h = w),
            (m = f),
            (v = 20368),
            (y = (m + 72) | 0);
          do (A[m >> 2] = A[v >> 2]), (m = (m + 4) | 0), (v = (v + 4) | 0);
          while ((m | 0) < (y | 0));
          (m = h), (v = 20448), (y = (m + 72) | 0);
          do (A[m >> 2] = A[v >> 2]), (m = (m + 4) | 0), (v = (v + 4) | 0);
          while ((m | 0) < (y | 0));
          (y = (Ui(A[o >> 2] | 0) | 0) == 0),
            (f = y ? f : h),
            (h = (a + 4) | 0),
            rf(h),
            sf(h),
            Ui(A[o >> 2] | 0) | 0 && (gs(h), (A[o >> 2] = (A[o >> 2] | 0) + 1)),
            (A[l >> 2] = A[a >> 2]),
            (o = (l + 4) | 0),
            ei(h, f, o),
            Hn(o),
            (A[(l + 16) >> 2] = A[a >> 2]),
            (o = (l + 20) | 0),
            ei(h, (f + 12) | 0, o),
            Hn(o),
            (A[(l + 32) >> 2] = A[a >> 2]),
            (o = (l + 36) | 0),
            ei(h, (f + 24) | 0, o),
            Hn(o),
            (A[(l + 48) >> 2] = A[a >> 2]),
            (o = (l + 52) | 0),
            ei(h, (f + 36) | 0, o),
            Hn(o),
            (A[(l + 64) >> 2] = A[a >> 2]),
            (o = (l + 68) | 0),
            ei(h, (f + 48) | 0, o),
            Hn(o),
            (A[(l + 80) >> 2] = A[a >> 2]),
            (l = (l + 84) | 0),
            ei(h, (f + 60) | 0, l),
            Hn(l),
            (z = w);
        }
        function tg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (o & 15) | 0
          );
        }
        function lf(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (o & 127) | 0
          );
        }
        function f0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          if (
            !(!0 & (((o & -16777216) | 0) == 134217728)) ||
            ((v = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (v = v & 127),
            v >>> 0 > 121)
          )
            return (o = 0), o | 0;
          (l = De(a | 0, o | 0, 52) | 0), W() | 0, (l = l & 15);
          do
            if (l | 0) {
              for (h = 1, f = 0; ; ) {
                if (
                  ((m = De(a | 0, o | 0, (((15 - h) | 0) * 3) | 0) | 0),
                  W() | 0,
                  (m = m & 7),
                  ((m | 0) != 0) & (f ^ 1))
                )
                  if (((m | 0) == 1) & ((ln(v) | 0) != 0)) {
                    (y = 0), (f = 13);
                    break;
                  } else f = 1;
                if ((m | 0) == 7) {
                  (y = 0), (f = 13);
                  break;
                }
                if (h >>> 0 < l >>> 0) h = (h + 1) | 0;
                else {
                  f = 9;
                  break;
                }
              }
              if ((f | 0) == 9) {
                if ((l | 0) == 15) y = 1;
                else break;
                return y | 0;
              } else if ((f | 0) == 13) return y | 0;
            }
          while (0);
          for (;;) {
            if (
              ((y = De(a | 0, o | 0, (((14 - l) | 0) * 3) | 0) | 0),
              W() | 0,
              !((((y & 7) | 0) == 7) & !0))
            ) {
              (y = 0), (f = 13);
              break;
            }
            if (l >>> 0 < 14) l = (l + 1) | 0;
            else {
              (y = 1), (f = 13);
              break;
            }
          }
          return (f | 0) == 13 ? y | 0 : 0;
        }
        function h0(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0;
          if (
            ((m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            l >>> 0 > 15)
          )
            return (f = 4), f | 0;
          if ((m | 0) < (l | 0)) return (f = 12), f | 0;
          if ((m | 0) == (l | 0))
            return (A[f >> 2] = a), (A[(f + 4) >> 2] = o), (f = 0), f | 0;
          if (
            ((h = je(l | 0, 0, 52) | 0),
            (h = h | a),
            (a = W() | 0 | (o & -15728641)),
            (m | 0) > (l | 0))
          )
            do
              (o = je(7, 0, (((14 - l) | 0) * 3) | 0) | 0),
                (l = (l + 1) | 0),
                (h = o | h),
                (a = W() | 0 | a);
            while ((l | 0) < (m | 0));
          return (A[f >> 2] = h), (A[(f + 4) >> 2] = a), (f = 0), f | 0;
        }
        function nA(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0;
          if (
            ((m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            !(((l | 0) < 16) & ((m | 0) <= (l | 0))))
          )
            return (f = 4), f | 0;
          (h = (l - m) | 0), (l = De(a | 0, o | 0, 45) | 0), W() | 0;
          e: do
            if (!(ln(l & 127) | 0))
              (l = jr(7, 0, h, (((h | 0) < 0) << 31) >> 31) | 0), (h = W() | 0);
            else {
              t: do
                if (m | 0) {
                  for (
                    l = 1;
                    (v = je(7, 0, (((15 - l) | 0) * 3) | 0) | 0),
                      !!((((v & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0));

                  )
                    if (l >>> 0 < m >>> 0) l = (l + 1) | 0;
                    else break t;
                  (l = jr(7, 0, h, (((h | 0) < 0) << 31) >> 31) | 0),
                    (h = W() | 0);
                  break e;
                }
              while (0);
              (l = jr(7, 0, h, (((h | 0) < 0) << 31) >> 31) | 0),
                (l = Wn(l | 0, W() | 0, 5, 0) | 0),
                (l = zt(l | 0, W() | 0, -5, -1) | 0),
                (l = xs(l | 0, W() | 0, 6, 0) | 0),
                (l = zt(l | 0, W() | 0, 1, 0) | 0),
                (h = W() | 0);
            }
          while (0);
          return (
            (v = f), (A[v >> 2] = l), (A[(v + 4) >> 2] = h), (v = 0), v | 0
          );
        }
        function un(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          if (((h = De(a | 0, o | 0, 45) | 0), W() | 0, !(ln(h & 127) | 0)))
            return (h = 0), h | 0;
          (h = De(a | 0, o | 0, 52) | 0), W() | 0, (h = h & 15);
          e: do
            if (!h) l = 0;
            else
              for (f = 1; ; ) {
                if (
                  ((l = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
                  W() | 0,
                  (l = l & 7),
                  l | 0)
                )
                  break e;
                if (f >>> 0 < h >>> 0) f = (f + 1) | 0;
                else {
                  l = 0;
                  break;
                }
              }
          while (0);
          return (h = ((l | 0) == 0) & 1), h | 0;
        }
        function ng(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0;
          if (
            ((v = z),
            (z = (z + 16) | 0),
            (m = v),
            ff(m, a, o, l),
            (o = m),
            (a = A[o >> 2] | 0),
            (o = A[(o + 4) >> 2] | 0),
            ((a | 0) == 0) & ((o | 0) == 0))
          )
            return (z = v), 0;
          (h = 0), (l = 0);
          do
            (y = (f + (h << 3)) | 0),
              (A[y >> 2] = a),
              (A[(y + 4) >> 2] = o),
              (h = zt(h | 0, l | 0, 1, 0) | 0),
              (l = W() | 0),
              hf(m),
              (y = m),
              (a = A[y >> 2] | 0),
              (o = A[(y + 4) >> 2] | 0);
          while (!(((a | 0) == 0) & ((o | 0) == 0)));
          return (z = v), 0;
        }
        function ig(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (f | 0) < (l | 0)
              ? ((l = o), (f = a), wt(l | 0), f | 0)
              : ((l = je(-1, -1, (((((f - l) | 0) * 3) | 0) + 3) | 0) | 0),
                (f = je(~l | 0, ~(W() | 0) | 0, (((15 - f) | 0) * 3) | 0) | 0),
                (l = ~(W() | 0) & o),
                (f = ~f & a),
                wt(l | 0),
                f | 0)
          );
        }
        function rg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0;
          return (
            (h = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (h = h & 15),
            ((l | 0) < 16) & ((h | 0) <= (l | 0))
              ? ((h | 0) < (l | 0) &&
                  ((h =
                    je(-1, -1, (((((l + -1 - h) | 0) * 3) | 0) + 3) | 0) | 0),
                  (h =
                    je(~h | 0, ~(W() | 0) | 0, (((15 - l) | 0) * 3) | 0) | 0),
                  (o = ~(W() | 0) & o),
                  (a = ~h & a)),
                (h = je(l | 0, 0, 52) | 0),
                (l = (o & -15728641) | (W() | 0)),
                (A[f >> 2] = a | h),
                (A[(f + 4) >> 2] = l),
                (f = 0),
                f | 0)
              : ((f = 4), f | 0)
          );
        }
        function sg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0;
          if (((l | 0) == 0) & ((f | 0) == 0)) return (He = 0), He | 0;
          if (
            ((h = a),
            (m = A[h >> 2] | 0),
            (h = A[(h + 4) >> 2] | 0),
            !0 & (((h & 15728640) | 0) == 0))
          ) {
            if (
              !(((f | 0) > 0) | (((f | 0) == 0) & (l >>> 0 > 0))) ||
              ((He = o),
              (A[He >> 2] = m),
              (A[(He + 4) >> 2] = h),
              ((l | 0) == 1) & ((f | 0) == 0))
            )
              return (He = 0), He | 0;
            h = 1;
            do
              (Ye = (a + (h << 3)) | 0),
                (st = A[(Ye + 4) >> 2] | 0),
                (He = (o + (h << 3)) | 0),
                (A[He >> 2] = A[Ye >> 2]),
                (A[(He + 4) >> 2] = st),
                (h = (h + 1) | 0);
            while ((0 < (f | 0)) | (((f | 0) == 0) & (h >>> 0 < l >>> 0)));
            return (h = 0), h | 0;
          }
          if (((ue = l << 3), (st = Ar(ue) | 0), !st)) return (He = 13), He | 0;
          if ((sA(st | 0, a | 0, ue | 0) | 0, (Ye = lr(l, 8) | 0), !Ye))
            return yt(st), (He = 13), He | 0;
          e: do
            if (l | 0) {
              t: for (;;) {
                (h = st),
                  (Se = A[h >> 2] | 0),
                  (h = A[(h + 4) >> 2] | 0),
                  (_e = De(Se | 0, h | 0, 52) | 0),
                  W() | 0,
                  (_e = _e & 15),
                  (ve = (_e + -1) | 0),
                  (Ee = (l | 0) > 0);
                n: do
                  if (((_e | 0) != 0) & Ee) {
                    if (
                      ((re = (((l | 0) < 0) << 31) >> 31),
                      (Z = je(ve | 0, 0, 52) | 0),
                      (ce = W() | 0),
                      ve >>> 0 > 15)
                    ) {
                      if (!(((Se | 0) == 0) & ((h | 0) == 0))) {
                        He = 17;
                        break t;
                      }
                      for (m = 0; ; ) {
                        if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break n;
                        if (
                          ((f = (st + (m << 3)) | 0),
                          (ce = A[f >> 2] | 0),
                          (f = A[(f + 4) >> 2] | 0),
                          !(((ce | 0) == 0) & ((f | 0) == 0)))
                        ) {
                          (h = f), (He = 17);
                          break t;
                        }
                      }
                    }
                    for (m = 0, a = Se, f = h; ; ) {
                      if (!(((a | 0) == 0) & ((f | 0) == 0))) {
                        if (!(!0 & (((f & 117440512) | 0) == 0))) {
                          He = 22;
                          break t;
                        }
                        if (
                          ((y = De(a | 0, f | 0, 52) | 0),
                          W() | 0,
                          (y = y & 15),
                          (y | 0) < (ve | 0))
                        ) {
                          (h = 12), (He = 28);
                          break t;
                        }
                        if (
                          (y | 0) != (ve | 0) &&
                          ((a = a | Z),
                          (f = (f & -15728641) | ce),
                          y >>> 0 >= _e >>> 0)
                        ) {
                          v = ve;
                          do
                            (K = je(7, 0, (((14 - v) | 0) * 3) | 0) | 0),
                              (v = (v + 1) | 0),
                              (a = K | a),
                              (f = W() | 0 | f);
                          while (v >>> 0 < y >>> 0);
                        }
                        if (
                          ((v = Xs(a | 0, f | 0, l | 0, re | 0) | 0),
                          W() | 0,
                          (P = (Ye + (v << 3)) | 0),
                          (y = P),
                          (w = A[y >> 2] | 0),
                          (y = A[(y + 4) >> 2] | 0),
                          ((w | 0) == 0) & ((y | 0) == 0))
                        )
                          v = P;
                        else
                          for (K = 0; ; ) {
                            if ((K | 0) > (l | 0)) {
                              He = 32;
                              break t;
                            }
                            if (
                              ((w | 0) == (a | 0)) &
                              (((y & -117440513) | 0) == (f | 0))
                            ) {
                              (B = De(w | 0, y | 0, 56) | 0),
                                W() | 0,
                                (B = B & 7),
                                (j = (B + 1) | 0),
                                (Ze = De(w | 0, y | 0, 45) | 0),
                                W() | 0;
                              i: do
                                if (!(ln(Ze & 127) | 0)) y = 7;
                                else {
                                  if (
                                    ((w = De(w | 0, y | 0, 52) | 0),
                                    W() | 0,
                                    (w = w & 15),
                                    !w)
                                  ) {
                                    y = 6;
                                    break;
                                  }
                                  for (y = 1; ; ) {
                                    if (
                                      ((Ze =
                                        je(7, 0, (((15 - y) | 0) * 3) | 0) | 0),
                                      !(
                                        (((Ze & a) | 0) == 0) &
                                        ((((W() | 0) & f) | 0) == 0)
                                      ))
                                    ) {
                                      y = 7;
                                      break i;
                                    }
                                    if (y >>> 0 < w >>> 0) y = (y + 1) | 0;
                                    else {
                                      y = 6;
                                      break;
                                    }
                                  }
                                }
                              while (0);
                              if (((B + 2) | 0) >>> 0 > y >>> 0) {
                                He = 42;
                                break t;
                              }
                              (Ze = je(j | 0, 0, 56) | 0),
                                (f = W() | 0 | (f & -117440513)),
                                (j = P),
                                (A[j >> 2] = 0),
                                (A[(j + 4) >> 2] = 0),
                                (a = Ze | a);
                            } else v = ((v + 1) | 0) % (l | 0) | 0;
                            if (
                              ((P = (Ye + (v << 3)) | 0),
                              (y = P),
                              (w = A[y >> 2] | 0),
                              (y = A[(y + 4) >> 2] | 0),
                              ((w | 0) == 0) & ((y | 0) == 0))
                            ) {
                              v = P;
                              break;
                            } else K = (K + 1) | 0;
                          }
                        (Ze = v), (A[Ze >> 2] = a), (A[(Ze + 4) >> 2] = f);
                      }
                      if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break n;
                      (f = (st + (m << 3)) | 0),
                        (a = A[f >> 2] | 0),
                        (f = A[(f + 4) >> 2] | 0);
                    }
                  }
                while (0);
                if (((l + 5) | 0) >>> 0 < 11) {
                  He = 85;
                  break;
                }
                if (((ce = lr(((l | 0) / 6) | 0, 8) | 0), !ce)) {
                  He = 49;
                  break;
                }
                n: do
                  if (Ee) {
                    (K = 0), (j = 0);
                    do {
                      if (
                        ((y = (Ye + (K << 3)) | 0),
                        (f = y),
                        (m = A[f >> 2] | 0),
                        (f = A[(f + 4) >> 2] | 0),
                        !(((m | 0) == 0) & ((f | 0) == 0)))
                      ) {
                        (w = De(m | 0, f | 0, 56) | 0),
                          W() | 0,
                          (w = w & 7),
                          (a = (w + 1) | 0),
                          (P = f & -117440513),
                          (Ze = De(m | 0, f | 0, 45) | 0),
                          W() | 0;
                        i: do
                          if (ln(Ze & 127) | 0) {
                            if (
                              ((B = De(m | 0, f | 0, 52) | 0),
                              W() | 0,
                              (B = B & 15),
                              B | 0)
                            )
                              for (v = 1; ; ) {
                                if (
                                  ((Ze =
                                    je(7, 0, (((15 - v) | 0) * 3) | 0) | 0),
                                  !(
                                    (((m & Ze) | 0) == 0) &
                                    (((P & (W() | 0)) | 0) == 0)
                                  ))
                                )
                                  break i;
                                if (v >>> 0 < B >>> 0) v = (v + 1) | 0;
                                else break;
                              }
                            (f = je(a | 0, 0, 56) | 0),
                              (m = f | m),
                              (f = W() | 0 | P),
                              (a = y),
                              (A[a >> 2] = m),
                              (A[(a + 4) >> 2] = f),
                              (a = (w + 2) | 0);
                          }
                        while (0);
                        (a | 0) == 7 &&
                          ((Ze = (ce + (j << 3)) | 0),
                          (A[Ze >> 2] = m),
                          (A[(Ze + 4) >> 2] = f & -117440513),
                          (j = (j + 1) | 0));
                      }
                      K = (K + 1) | 0;
                    } while ((K | 0) != (l | 0));
                    if (Ee) {
                      if (
                        ((K = (((l | 0) < 0) << 31) >> 31),
                        (re = je(ve | 0, 0, 52) | 0),
                        (Z = W() | 0),
                        ve >>> 0 > 15)
                      ) {
                        if (!(((Se | 0) == 0) & ((h | 0) == 0))) {
                          (h = 4), (He = 84);
                          break t;
                        }
                        for (h = 0; ; ) {
                          if (((h = (h + 1) | 0), (h | 0) >= (l | 0))) {
                            (m = 0), (h = j);
                            break n;
                          }
                          if (
                            ((Ze = (st + (h << 3)) | 0),
                            !(
                              ((A[Ze >> 2] | 0) == 0) &
                              ((A[(Ze + 4) >> 2] | 0) == 0)
                            ))
                          ) {
                            (h = 4), (He = 84);
                            break t;
                          }
                        }
                      }
                      for (B = 0, m = 0, P = Se; ; ) {
                        do
                          if (!(((P | 0) == 0) & ((h | 0) == 0))) {
                            if (
                              ((y = De(P | 0, h | 0, 52) | 0),
                              W() | 0,
                              (y = y & 15),
                              (y | 0) < (ve | 0))
                            ) {
                              (h = 12), (He = 84);
                              break t;
                            }
                            do
                              if ((y | 0) == (ve | 0)) (f = P), (y = h);
                              else {
                                if (
                                  ((f = P | re),
                                  (a = (h & -15728641) | Z),
                                  y >>> 0 < _e >>> 0)
                                ) {
                                  y = a;
                                  break;
                                }
                                v = ve;
                                do
                                  (Ze = je(7, 0, (((14 - v) | 0) * 3) | 0) | 0),
                                    (v = (v + 1) | 0),
                                    (f = Ze | f),
                                    (a = W() | 0 | a);
                                while (v >>> 0 < y >>> 0);
                                y = a;
                              }
                            while (0);
                            for (
                              v = Xs(f | 0, y | 0, l | 0, K | 0) | 0,
                                W() | 0,
                                a = 0;
                              ;

                            ) {
                              if ((a | 0) > (l | 0)) {
                                He = 77;
                                break t;
                              }
                              if (
                                ((Ze = (Ye + (v << 3)) | 0),
                                (w = A[(Ze + 4) >> 2] | 0),
                                ((w & -117440513) | 0) == (y | 0) &&
                                  (A[Ze >> 2] | 0) == (f | 0))
                              ) {
                                He = 79;
                                break;
                              }
                              if (
                                ((v = ((v + 1) | 0) % (l | 0) | 0),
                                (Ze = (Ye + (v << 3)) | 0),
                                (A[Ze >> 2] | 0) == (f | 0) &&
                                  (A[(Ze + 4) >> 2] | 0) == (y | 0))
                              )
                                break;
                              a = (a + 1) | 0;
                            }
                            if (
                              (He | 0) == 79 &&
                              ((He = 0),
                              !0 & (((w & 117440512) | 0) == 100663296))
                            )
                              break;
                            (Ze = (o + (m << 3)) | 0),
                              (A[Ze >> 2] = P),
                              (A[(Ze + 4) >> 2] = h),
                              (m = (m + 1) | 0);
                          }
                        while (0);
                        if (((h = (B + 1) | 0), (h | 0) >= (l | 0))) {
                          h = j;
                          break n;
                        }
                        (Ze = (st + (h << 3)) | 0),
                          (B = h),
                          (P = A[Ze >> 2] | 0),
                          (h = A[(Ze + 4) >> 2] | 0);
                      }
                    } else (m = 0), (h = j);
                  } else (m = 0), (h = 0);
                while (0);
                if (
                  (ys(Ye | 0, 0, ue | 0) | 0,
                  sA(st | 0, ce | 0, (h << 3) | 0) | 0,
                  yt(ce),
                  h)
                )
                  (o = (o + (m << 3)) | 0), (l = h);
                else break e;
              }
              if ((He | 0) == 17)
                !0 & (((h & 117440512) | 0) == 0)
                  ? ((h = 4), (He = 28))
                  : (He = 22);
              else if ((He | 0) == 32) dt(23313, 22674, 362, 22684);
              else {
                if ((He | 0) == 42) return yt(st), yt(Ye), (Ze = 10), Ze | 0;
                if ((He | 0) == 49) return yt(st), yt(Ye), (Ze = 13), Ze | 0;
                if ((He | 0) == 77) dt(23313, 22674, 462, 22684);
                else {
                  if ((He | 0) == 84)
                    return yt(ce), yt(st), yt(Ye), (Ze = h), Ze | 0;
                  if ((He | 0) == 85) {
                    sA(o | 0, st | 0, (l << 3) | 0) | 0;
                    break;
                  }
                }
              }
              if ((He | 0) == 22) return yt(st), yt(Ye), (Ze = 5), Ze | 0;
              if ((He | 0) == 28) return yt(st), yt(Ye), (Ze = h), Ze | 0;
            }
          while (0);
          return yt(st), yt(Ye), (Ze = 0), Ze | 0;
        }
        function og(a, o, l, f, h, m, v) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (m = m | 0),
            (v = v | 0);
          var y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0;
          if (
            ((ce = z),
            (z = (z + 16) | 0),
            (Z = ce),
            !(((l | 0) > 0) | (((l | 0) == 0) & (o >>> 0 > 0))))
          )
            return (Z = 0), (z = ce), Z | 0;
          if ((v | 0) >= 16) return (Z = 12), (z = ce), Z | 0;
          (K = 0), (re = 0), (j = 0), (y = 0);
          e: for (;;) {
            if (
              ((P = (a + (K << 3)) | 0),
              (w = A[P >> 2] | 0),
              (P = A[(P + 4) >> 2] | 0),
              (B = De(w | 0, P | 0, 52) | 0),
              W() | 0,
              ((B & 15) | 0) > (v | 0))
            ) {
              (y = 12), (w = 11);
              break;
            }
            if (
              (ff(Z, w, P, v),
              (B = Z),
              (P = A[B >> 2] | 0),
              (B = A[(B + 4) >> 2] | 0),
              ((P | 0) == 0) & ((B | 0) == 0))
            )
              w = j;
            else {
              w = j;
              do {
                if (
                  !(
                    ((y | 0) < (m | 0)) |
                    (((y | 0) == (m | 0)) & (w >>> 0 < h >>> 0))
                  )
                ) {
                  w = 10;
                  break e;
                }
                (j = (f + (w << 3)) | 0),
                  (A[j >> 2] = P),
                  (A[(j + 4) >> 2] = B),
                  (w = zt(w | 0, y | 0, 1, 0) | 0),
                  (y = W() | 0),
                  hf(Z),
                  (j = Z),
                  (P = A[j >> 2] | 0),
                  (B = A[(j + 4) >> 2] | 0);
              } while (!(((P | 0) == 0) & ((B | 0) == 0)));
            }
            if (
              ((K = zt(K | 0, re | 0, 1, 0) | 0),
              (re = W() | 0),
              ((re | 0) < (l | 0)) |
                (((re | 0) == (l | 0)) & (K >>> 0 < o >>> 0)))
            )
              j = w;
            else {
              (y = 0), (w = 11);
              break;
            }
          }
          return (w | 0) == 10
            ? ((Z = 14), (z = ce), Z | 0)
            : (w | 0) == 11
            ? ((z = ce), y | 0)
            : 0;
        }
        function ag(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0;
          (K = z), (z = (z + 16) | 0), (j = K);
          e: do
            if (((l | 0) > 0) | (((l | 0) == 0) & (o >>> 0 > 0))) {
              for (P = 0, v = 0, m = 0, B = 0; ; ) {
                if (
                  ((w = (a + (P << 3)) | 0),
                  (y = A[w >> 2] | 0),
                  (w = A[(w + 4) >> 2] | 0),
                  !(((y | 0) == 0) & ((w | 0) == 0)) &&
                    ((w = (nA(y, w, f, j) | 0) == 0),
                    (y = j),
                    (v =
                      zt(A[y >> 2] | 0, A[(y + 4) >> 2] | 0, v | 0, m | 0) | 0),
                    (m = W() | 0),
                    !w))
                ) {
                  m = 12;
                  break;
                }
                if (
                  ((P = zt(P | 0, B | 0, 1, 0) | 0),
                  (B = W() | 0),
                  !(
                    ((B | 0) < (l | 0)) |
                    (((B | 0) == (l | 0)) & (P >>> 0 < o >>> 0))
                  ))
                )
                  break e;
              }
              return (z = K), m | 0;
            } else (v = 0), (m = 0);
          while (0);
          return (
            (A[h >> 2] = v), (A[(h + 4) >> 2] = m), (h = 0), (z = K), h | 0
          );
        }
        function Ag(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (o & 1) | 0
          );
        }
        function hi(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          if (((h = De(a | 0, o | 0, 52) | 0), W() | 0, (h = h & 15), !h))
            return (h = 0), h | 0;
          for (f = 1; ; ) {
            if (
              ((l = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
              W() | 0,
              (l = l & 7),
              l | 0)
            ) {
              f = 5;
              break;
            }
            if (f >>> 0 < h >>> 0) f = (f + 1) | 0;
            else {
              (l = 0), (f = 5);
              break;
            }
          }
          return (f | 0) == 5 ? l | 0 : 0;
        }
        function d0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          if (((w = De(a | 0, o | 0, 52) | 0), W() | 0, (w = w & 15), !w))
            return (y = o), (w = a), wt(y | 0), w | 0;
          for (y = 1, l = 0; ; ) {
            (m = (((15 - y) | 0) * 3) | 0),
              (f = je(7, 0, m | 0) | 0),
              (h = W() | 0),
              (v = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (m = je(_s(v & 7) | 0, 0, m | 0) | 0),
              (v = W() | 0),
              (a = m | (a & ~f)),
              (o = v | (o & ~h));
            e: do
              if (!l)
                if ((((m & f) | 0) == 0) & (((v & h) | 0) == 0)) l = 0;
                else if (
                  ((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f)
                )
                  l = 1;
                else {
                  l = 1;
                  t: for (;;) {
                    switch (
                      ((v = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      v & 7)
                    ) {
                      case 1:
                        break t;
                      case 0:
                        break;
                      default: {
                        l = 1;
                        break e;
                      }
                    }
                    if (l >>> 0 < f >>> 0) l = (l + 1) | 0;
                    else {
                      l = 1;
                      break e;
                    }
                  }
                  for (l = 1; ; )
                    if (
                      ((v = (((15 - l) | 0) * 3) | 0),
                      (h = De(a | 0, o | 0, v | 0) | 0),
                      W() | 0,
                      (m = je(7, 0, v | 0) | 0),
                      (o = o & ~(W() | 0)),
                      (v = je(_s(h & 7) | 0, 0, v | 0) | 0),
                      (a = (a & ~m) | v),
                      (o = o | (W() | 0)),
                      l >>> 0 < f >>> 0)
                    )
                      l = (l + 1) | 0;
                    else {
                      l = 1;
                      break;
                    }
                }
            while (0);
            if (y >>> 0 < w >>> 0) y = (y + 1) | 0;
            else break;
          }
          return wt(o | 0), a | 0;
        }
        function vs(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0;
          if (((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f))
            return (l = o), (f = a), wt(l | 0), f | 0;
          for (
            l = 1;
            (m = (((15 - l) | 0) * 3) | 0),
              (v = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (h = je(7, 0, m | 0) | 0),
              (o = o & ~(W() | 0)),
              (m = je(_s(v & 7) | 0, 0, m | 0) | 0),
              (a = m | (a & ~h)),
              (o = W() | 0 | o),
              l >>> 0 < f >>> 0;

          )
            l = (l + 1) | 0;
          return wt(o | 0), a | 0;
        }
        function lg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          if (((w = De(a | 0, o | 0, 52) | 0), W() | 0, (w = w & 15), !w))
            return (y = o), (w = a), wt(y | 0), w | 0;
          for (y = 1, l = 0; ; ) {
            (m = (((15 - y) | 0) * 3) | 0),
              (f = je(7, 0, m | 0) | 0),
              (h = W() | 0),
              (v = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (m = je(Wr(v & 7) | 0, 0, m | 0) | 0),
              (v = W() | 0),
              (a = m | (a & ~f)),
              (o = v | (o & ~h));
            e: do
              if (!l)
                if ((((m & f) | 0) == 0) & (((v & h) | 0) == 0)) l = 0;
                else if (
                  ((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f)
                )
                  l = 1;
                else {
                  l = 1;
                  t: for (;;) {
                    switch (
                      ((v = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      v & 7)
                    ) {
                      case 1:
                        break t;
                      case 0:
                        break;
                      default: {
                        l = 1;
                        break e;
                      }
                    }
                    if (l >>> 0 < f >>> 0) l = (l + 1) | 0;
                    else {
                      l = 1;
                      break e;
                    }
                  }
                  for (l = 1; ; )
                    if (
                      ((h = (((15 - l) | 0) * 3) | 0),
                      (m = je(7, 0, h | 0) | 0),
                      (v = o & ~(W() | 0)),
                      (o = De(a | 0, o | 0, h | 0) | 0),
                      W() | 0,
                      (o = je(Wr(o & 7) | 0, 0, h | 0) | 0),
                      (a = (a & ~m) | o),
                      (o = v | (W() | 0)),
                      l >>> 0 < f >>> 0)
                    )
                      l = (l + 1) | 0;
                    else {
                      l = 1;
                      break;
                    }
                }
            while (0);
            if (y >>> 0 < w >>> 0) y = (y + 1) | 0;
            else break;
          }
          return wt(o | 0), a | 0;
        }
        function p0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0;
          if (((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f))
            return (l = o), (f = a), wt(l | 0), f | 0;
          for (
            l = 1;
            (v = (((15 - l) | 0) * 3) | 0),
              (m = je(7, 0, v | 0) | 0),
              (h = o & ~(W() | 0)),
              (o = De(a | 0, o | 0, v | 0) | 0),
              W() | 0,
              (o = je(Wr(o & 7) | 0, 0, v | 0) | 0),
              (a = o | (a & ~m)),
              (o = W() | 0 | h),
              l >>> 0 < f >>> 0;

          )
            l = (l + 1) | 0;
          return wt(o | 0), a | 0;
        }
        function ug(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            ((w = z),
            (z = (z + 64) | 0),
            (y = (w + 40) | 0),
            (f = (w + 24) | 0),
            (h = (w + 12) | 0),
            (m = w),
            je(o | 0, 0, 52) | 0,
            (l = W() | 0 | 134225919),
            !o)
          )
            return (A[(a + 4) >> 2] | 0) > 2 ||
              (A[(a + 8) >> 2] | 0) > 2 ||
              (A[(a + 12) >> 2] | 0) > 2
              ? ((v = 0), (y = 0), wt(v | 0), (z = w), y | 0)
              : (je(Qc(a) | 0, 0, 45) | 0,
                (v = W() | 0 | l),
                (y = -1),
                wt(v | 0),
                (z = w),
                y | 0);
          if (
            ((A[y >> 2] = A[a >> 2]),
            (A[(y + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(y + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(y + 12) >> 2] = A[(a + 12) >> 2]),
            (v = (y + 4) | 0),
            (o | 0) > 0)
          )
            for (
              a = -1;
              (A[f >> 2] = A[v >> 2]),
                (A[(f + 4) >> 2] = A[(v + 4) >> 2]),
                (A[(f + 8) >> 2] = A[(v + 8) >> 2]),
                o & 1
                  ? (Fm(v),
                    (A[h >> 2] = A[v >> 2]),
                    (A[(h + 4) >> 2] = A[(v + 4) >> 2]),
                    (A[(h + 8) >> 2] = A[(v + 8) >> 2]),
                    Ja(h))
                  : (ef(v),
                    (A[h >> 2] = A[v >> 2]),
                    (A[(h + 4) >> 2] = A[(v + 4) >> 2]),
                    (A[(h + 8) >> 2] = A[(v + 8) >> 2]),
                    gs(h)),
                A0(f, h, m),
                Hn(m),
                (B = (((15 - o) | 0) * 3) | 0),
                (P = je(7, 0, B | 0) | 0),
                (l = l & ~(W() | 0)),
                (B = je(Ka(m) | 0, 0, B | 0) | 0),
                (a = B | (a & ~P)),
                (l = W() | 0 | l),
                (o | 0) > 1;

            )
              o = (o + -1) | 0;
          else a = -1;
          e: do
            if (
              (A[v >> 2] | 0) <= 2 &&
              (A[(y + 8) >> 2] | 0) <= 2 &&
              (A[(y + 12) >> 2] | 0) <= 2
            ) {
              if (
                ((f = Qc(y) | 0),
                (o = je(f | 0, 0, 45) | 0),
                (o = o | a),
                (a = W() | 0 | (l & -1040385)),
                (m = Rm(y) | 0),
                !(ln(f) | 0))
              ) {
                if ((m | 0) <= 0) break;
                for (h = 0; ; ) {
                  if (
                    ((f = De(o | 0, a | 0, 52) | 0), W() | 0, (f = f & 15), f)
                  )
                    for (
                      l = 1;
                      (B = (((15 - l) | 0) * 3) | 0),
                        (y = De(o | 0, a | 0, B | 0) | 0),
                        W() | 0,
                        (P = je(7, 0, B | 0) | 0),
                        (a = a & ~(W() | 0)),
                        (B = je(_s(y & 7) | 0, 0, B | 0) | 0),
                        (o = (o & ~P) | B),
                        (a = a | (W() | 0)),
                        l >>> 0 < f >>> 0;

                    )
                      l = (l + 1) | 0;
                  if (((h = (h + 1) | 0), (h | 0) == (m | 0))) break e;
                }
              }
              (h = De(o | 0, a | 0, 52) | 0), W() | 0, (h = h & 15);
              t: do
                if (h) {
                  l = 1;
                  n: for (;;) {
                    switch (
                      ((B = De(o | 0, a | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      B & 7)
                    ) {
                      case 1:
                        break n;
                      case 0:
                        break;
                      default:
                        break t;
                    }
                    if (l >>> 0 < h >>> 0) l = (l + 1) | 0;
                    else break t;
                  }
                  if ($c(f, A[y >> 2] | 0) | 0)
                    for (
                      l = 1;
                      (y = (((15 - l) | 0) * 3) | 0),
                        (P = je(7, 0, y | 0) | 0),
                        (B = a & ~(W() | 0)),
                        (a = De(o | 0, a | 0, y | 0) | 0),
                        W() | 0,
                        (a = je(Wr(a & 7) | 0, 0, y | 0) | 0),
                        (o = (o & ~P) | a),
                        (a = B | (W() | 0)),
                        l >>> 0 < h >>> 0;

                    )
                      l = (l + 1) | 0;
                  else
                    for (
                      l = 1;
                      (B = (((15 - l) | 0) * 3) | 0),
                        (y = De(o | 0, a | 0, B | 0) | 0),
                        W() | 0,
                        (P = je(7, 0, B | 0) | 0),
                        (a = a & ~(W() | 0)),
                        (B = je(_s(y & 7) | 0, 0, B | 0) | 0),
                        (o = (o & ~P) | B),
                        (a = a | (W() | 0)),
                        l >>> 0 < h >>> 0;

                    )
                      l = (l + 1) | 0;
                }
              while (0);
              if ((m | 0) > 0) {
                l = 0;
                do (o = d0(o, a) | 0), (a = W() | 0), (l = (l + 1) | 0);
                while ((l | 0) != (m | 0));
              }
            } else (o = 0), (a = 0);
          while (0);
          return (P = a), (B = o), wt(P | 0), (z = w), B | 0;
        }
        function Ui(a) {
          return (a = a | 0), (a | 0) % 2 | 0 | 0;
        }
        function uf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0;
          return (
            (h = z),
            (z = (z + 16) | 0),
            (f = h),
            o >>> 0 > 15
              ? ((f = 4), (z = h), f | 0)
              : ((A[(a + 4) >> 2] & 2146435072) | 0) == 2146435072 ||
                ((A[(a + 8 + 4) >> 2] & 2146435072) | 0) == 2146435072
              ? ((f = 3), (z = h), f | 0)
              : (Ym(a, o, f),
                (o = ug(f, o) | 0),
                (f = W() | 0),
                (A[l >> 2] = o),
                (A[(l + 4) >> 2] = f),
                ((o | 0) == 0) & ((f | 0) == 0) && dt(23313, 22674, 786, 22697),
                (f = 0),
                (z = h),
                f | 0)
          );
        }
        function m0(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          if (
            ((h = (l + 4) | 0),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            (v = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (f = (m | 0) == 0),
            ln(v & 127) | 0)
          ) {
            if (f) return (v = 1), v | 0;
            f = 1;
          } else {
            if (f) return (v = 0), v | 0;
            !(A[h >> 2] | 0) && !(A[(l + 8) >> 2] | 0)
              ? (f = ((A[(l + 12) >> 2] | 0) != 0) & 1)
              : (f = 1);
          }
          for (
            l = 1;
            l & 1 ? Ja(h) : gs(h),
              (v = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
              W() | 0,
              tf(h, v & 7),
              l >>> 0 < m >>> 0;

          )
            l = (l + 1) | 0;
          return f | 0;
        }
        function Ws(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            ((B = z),
            (z = (z + 16) | 0),
            (w = B),
            (P = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (P = P & 127),
            P >>> 0 > 121)
          )
            return (
              (A[l >> 2] = 0),
              (A[(l + 4) >> 2] = 0),
              (A[(l + 8) >> 2] = 0),
              (A[(l + 12) >> 2] = 0),
              (P = 5),
              (z = B),
              P | 0
            );
          e: do
            if (
              ln(P) | 0 &&
              ((m = De(a | 0, o | 0, 52) | 0),
              W() | 0,
              (m = m & 15),
              (m | 0) != 0)
            ) {
              f = 1;
              t: for (;;) {
                switch (
                  ((y = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
                  W() | 0,
                  y & 7)
                ) {
                  case 5:
                    break t;
                  case 0:
                    break;
                  default: {
                    f = o;
                    break e;
                  }
                }
                if (f >>> 0 < m >>> 0) f = (f + 1) | 0;
                else {
                  f = o;
                  break e;
                }
              }
              for (
                h = 1, f = o;
                (o = (((15 - h) | 0) * 3) | 0),
                  (v = je(7, 0, o | 0) | 0),
                  (y = f & ~(W() | 0)),
                  (f = De(a | 0, f | 0, o | 0) | 0),
                  W() | 0,
                  (f = je(Wr(f & 7) | 0, 0, o | 0) | 0),
                  (a = (a & ~v) | f),
                  (f = y | (W() | 0)),
                  h >>> 0 < m >>> 0;

              )
                h = (h + 1) | 0;
            } else f = o;
          while (0);
          if (
            ((y = (7696 + ((P * 28) | 0)) | 0),
            (A[l >> 2] = A[y >> 2]),
            (A[(l + 4) >> 2] = A[(y + 4) >> 2]),
            (A[(l + 8) >> 2] = A[(y + 8) >> 2]),
            (A[(l + 12) >> 2] = A[(y + 12) >> 2]),
            !(m0(a, f, l) | 0))
          )
            return (P = 0), (z = B), P | 0;
          if (
            ((v = (l + 4) | 0),
            (A[w >> 2] = A[v >> 2]),
            (A[(w + 4) >> 2] = A[(v + 4) >> 2]),
            (A[(w + 8) >> 2] = A[(v + 8) >> 2]),
            (m = De(a | 0, f | 0, 52) | 0),
            W() | 0,
            (y = m & 15),
            m & 1 ? (gs(v), (m = (y + 1) | 0)) : (m = y),
            !(ln(P) | 0))
          )
            f = 0;
          else {
            e: do
              if (!y) f = 0;
              else
                for (o = 1; ; ) {
                  if (
                    ((h = De(a | 0, f | 0, (((15 - o) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (h = h & 7),
                    h | 0)
                  ) {
                    f = h;
                    break e;
                  }
                  if (o >>> 0 < y >>> 0) o = (o + 1) | 0;
                  else {
                    f = 0;
                    break;
                  }
                }
            while (0);
            f = ((f | 0) == 4) & 1;
          }
          if (!(Vs(l, m, f, 0) | 0))
            (m | 0) != (y | 0) &&
              ((A[v >> 2] = A[w >> 2]),
              (A[(v + 4) >> 2] = A[(w + 4) >> 2]),
              (A[(v + 8) >> 2] = A[(w + 8) >> 2]));
          else {
            if (ln(P) | 0)
              do;
              while (Vs(l, m, 0, 0) | 0);
            (m | 0) != (y | 0) && ef(v);
          }
          return (P = 0), (z = B), P | 0;
        }
        function Zo(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          return (
            (m = z),
            (z = (z + 16) | 0),
            (f = m),
            (h = Ws(a, o, f) | 0),
            h | 0
              ? ((z = m), h | 0)
              : ((h = De(a | 0, o | 0, 52) | 0),
                W() | 0,
                Jm(f, h & 15, l),
                (h = 0),
                (z = m),
                h | 0)
          );
        }
        function Ko(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          if (
            ((v = z), (z = (z + 16) | 0), (m = v), (f = Ws(a, o, m) | 0), f | 0)
          )
            return (m = f), (z = v), m | 0;
          (f = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (f = (ln(f & 127) | 0) == 0),
            (h = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (h = h & 15);
          e: do
            if (!f) {
              if (h | 0)
                for (f = 1; ; ) {
                  if (
                    ((y = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                    !((((y & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                  )
                    break e;
                  if (f >>> 0 < h >>> 0) f = (f + 1) | 0;
                  else break;
                }
              return u0(m, h, 0, 5, l), (y = 0), (z = v), y | 0;
            }
          while (0);
          return c0(m, h, 0, 6, l), (y = 0), (z = v), y | 0;
        }
        function cg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          if (((h = De(a | 0, o | 0, 45) | 0), W() | 0, !(ln(h & 127) | 0)))
            return (h = 2), (A[l >> 2] = h), 0;
          if (((h = De(a | 0, o | 0, 52) | 0), W() | 0, (h = h & 15), !h))
            return (h = 5), (A[l >> 2] = h), 0;
          for (f = 1; ; ) {
            if (
              ((m = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
              !((((m & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
            ) {
              (f = 2), (a = 6);
              break;
            }
            if (f >>> 0 < h >>> 0) f = (f + 1) | 0;
            else {
              (f = 5), (a = 6);
              break;
            }
          }
          return (a | 0) == 6 && (A[l >> 2] = f), 0;
        }
        function cf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0;
          (j = z),
            (z = (z + 128) | 0),
            (P = (j + 112) | 0),
            (m = (j + 96) | 0),
            (B = j),
            (h = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (y = h & 15),
            (A[P >> 2] = y),
            (v = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (v = v & 127);
          e: do
            if (ln(v) | 0) {
              if (y | 0)
                for (f = 1; ; ) {
                  if (
                    ((w = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                    !((((w & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                  ) {
                    h = 0;
                    break e;
                  }
                  if (f >>> 0 < y >>> 0) f = (f + 1) | 0;
                  else break;
                }
              if (h & 1) h = 1;
              else
                return (
                  (w = je((y + 1) | 0, 0, 52) | 0),
                  (B = W() | 0 | (o & -15728641)),
                  (P = je(7, 0, (((14 - y) | 0) * 3) | 0) | 0),
                  (B = cf((w | a) & ~P, B & ~(W() | 0), l) | 0),
                  (z = j),
                  B | 0
                );
            } else h = 0;
          while (0);
          if (((f = Ws(a, o, m) | 0), !f)) {
            h ? (af(m, P, B), (w = 5)) : (Af(m, P, B), (w = 6));
            e: do
              if (ln(v) | 0)
                if (!y) a = 5;
                else
                  for (f = 1; ; ) {
                    if (
                      ((v = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                      !((((v & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                    ) {
                      a = 2;
                      break e;
                    }
                    if (f >>> 0 < y >>> 0) f = (f + 1) | 0;
                    else {
                      a = 5;
                      break;
                    }
                  }
              else a = 2;
            while (0);
            ys(l | 0, -1, (a << 2) | 0) | 0;
            e: do
              if (h)
                for (m = 0; ; ) {
                  if (
                    ((v = (B + (m << 4)) | 0),
                    eg(v, A[P >> 2] | 0) | 0,
                    (v = A[v >> 2] | 0),
                    (y = A[l >> 2] | 0),
                    ((y | 0) == -1) | ((y | 0) == (v | 0)))
                  )
                    f = l;
                  else {
                    h = 0;
                    do {
                      if (((h = (h + 1) | 0), h >>> 0 >= a >>> 0)) {
                        f = 1;
                        break e;
                      }
                      (f = (l + (h << 2)) | 0), (y = A[f >> 2] | 0);
                    } while (!(((y | 0) == -1) | ((y | 0) == (v | 0))));
                  }
                  if (
                    ((A[f >> 2] = v), (m = (m + 1) | 0), m >>> 0 >= w >>> 0)
                  ) {
                    f = 0;
                    break;
                  }
                }
              else
                for (m = 0; ; ) {
                  if (
                    ((v = (B + (m << 4)) | 0),
                    Vs(v, A[P >> 2] | 0, 0, 1) | 0,
                    (v = A[v >> 2] | 0),
                    (y = A[l >> 2] | 0),
                    ((y | 0) == -1) | ((y | 0) == (v | 0)))
                  )
                    f = l;
                  else {
                    h = 0;
                    do {
                      if (((h = (h + 1) | 0), h >>> 0 >= a >>> 0)) {
                        f = 1;
                        break e;
                      }
                      (f = (l + (h << 2)) | 0), (y = A[f >> 2] | 0);
                    } while (!(((y | 0) == -1) | ((y | 0) == (v | 0))));
                  }
                  if (
                    ((A[f >> 2] = v), (m = (m + 1) | 0), m >>> 0 >= w >>> 0)
                  ) {
                    f = 0;
                    break;
                  }
                }
            while (0);
          }
          return (B = f), (z = j), B | 0;
        }
        function fg() {
          return 12;
        }
        function g0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          if (a >>> 0 > 15) return (y = 4), y | 0;
          if ((je(a | 0, 0, 52) | 0, (y = W() | 0 | 134225919), !a)) {
            (l = 0), (f = 0);
            do
              ln(f) | 0 &&
                (je(f | 0, 0, 45) | 0,
                (v = y | (W() | 0)),
                (a = (o + (l << 3)) | 0),
                (A[a >> 2] = -1),
                (A[(a + 4) >> 2] = v),
                (l = (l + 1) | 0)),
                (f = (f + 1) | 0);
            while ((f | 0) != 122);
            return (l = 0), l | 0;
          }
          (l = 0), (v = 0);
          do {
            if (ln(v) | 0) {
              for (
                je(v | 0, 0, 45) | 0, f = 1, h = -1, m = y | (W() | 0);
                (w = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                  (h = h & ~w),
                  (m = m & ~(W() | 0)),
                  (f | 0) != (a | 0);

              )
                f = (f + 1) | 0;
              (w = (o + (l << 3)) | 0),
                (A[w >> 2] = h),
                (A[(w + 4) >> 2] = m),
                (l = (l + 1) | 0);
            }
            v = (v + 1) | 0;
          } while ((v | 0) != 122);
          return (l = 0), l | 0;
        }
        function hg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0;
          if (
            ((_e = z),
            (z = (z + 16) | 0),
            (Ee = _e),
            (Se = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (Se = Se & 15),
            l >>> 0 > 15)
          )
            return (Se = 4), (z = _e), Se | 0;
          if ((Se | 0) < (l | 0)) return (Se = 12), (z = _e), Se | 0;
          if ((Se | 0) != (l | 0))
            if (
              ((m = je(l | 0, 0, 52) | 0),
              (m = m | a),
              (y = W() | 0 | (o & -15728641)),
              (Se | 0) > (l | 0))
            ) {
              w = l;
              do
                (ce = je(7, 0, (((14 - w) | 0) * 3) | 0) | 0),
                  (w = (w + 1) | 0),
                  (m = ce | m),
                  (y = W() | 0 | y);
              while ((w | 0) < (Se | 0));
              ce = m;
            } else ce = m;
          else (ce = a), (y = o);
          (Z = De(ce | 0, y | 0, 45) | 0), W() | 0;
          e: do
            if (ln(Z & 127) | 0) {
              if (
                ((w = De(ce | 0, y | 0, 52) | 0), W() | 0, (w = w & 15), w | 0)
              )
                for (m = 1; ; ) {
                  if (
                    ((Z = je(7, 0, (((15 - m) | 0) * 3) | 0) | 0),
                    !((((Z & ce) | 0) == 0) & ((((W() | 0) & y) | 0) == 0)))
                  ) {
                    P = 33;
                    break e;
                  }
                  if (m >>> 0 < w >>> 0) m = (m + 1) | 0;
                  else break;
                }
              if (
                ((Z = f),
                (A[Z >> 2] = 0),
                (A[(Z + 4) >> 2] = 0),
                (Se | 0) > (l | 0))
              ) {
                for (Z = o & -15728641, re = Se; ; ) {
                  if (
                    ((K = re),
                    (re = (re + -1) | 0),
                    (re >>> 0 > 15) | ((Se | 0) < (re | 0)))
                  ) {
                    P = 19;
                    break;
                  }
                  if ((Se | 0) != (re | 0))
                    if (
                      ((m = je(re | 0, 0, 52) | 0),
                      (m = m | a),
                      (w = W() | 0 | Z),
                      (Se | 0) < (K | 0))
                    )
                      j = m;
                    else {
                      P = re;
                      do
                        (j = je(7, 0, (((14 - P) | 0) * 3) | 0) | 0),
                          (P = (P + 1) | 0),
                          (m = j | m),
                          (w = W() | 0 | w);
                      while ((P | 0) < (Se | 0));
                      j = m;
                    }
                  else (j = a), (w = o);
                  if (
                    ((B = De(j | 0, w | 0, 45) | 0),
                    W() | 0,
                    !(ln(B & 127) | 0))
                  )
                    m = 0;
                  else {
                    (B = De(j | 0, w | 0, 52) | 0), W() | 0, (B = B & 15);
                    t: do
                      if (!B) m = 0;
                      else
                        for (P = 1; ; ) {
                          if (
                            ((m =
                              De(j | 0, w | 0, (((15 - P) | 0) * 3) | 0) | 0),
                            W() | 0,
                            (m = m & 7),
                            m | 0)
                          )
                            break t;
                          if (P >>> 0 < B >>> 0) P = (P + 1) | 0;
                          else {
                            m = 0;
                            break;
                          }
                        }
                    while (0);
                    m = ((m | 0) == 0) & 1;
                  }
                  if (
                    ((w = De(a | 0, o | 0, (((15 - K) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (w = w & 7),
                    (w | 0) == 7)
                  ) {
                    (h = 5), (P = 42);
                    break;
                  }
                  if (((m = (m | 0) != 0), ((w | 0) == 1) & m)) {
                    (h = 5), (P = 42);
                    break;
                  }
                  if (
                    ((j = (w + (((((w | 0) != 0) & m) << 31) >> 31)) | 0),
                    j | 0 &&
                      ((P = (Se - K) | 0),
                      (P = jr(7, 0, P, (((P | 0) < 0) << 31) >> 31) | 0),
                      (B = W() | 0),
                      m
                        ? ((m = Wn(P | 0, B | 0, 5, 0) | 0),
                          (m = zt(m | 0, W() | 0, -5, -1) | 0),
                          (m = xs(m | 0, W() | 0, 6, 0) | 0),
                          (m = zt(m | 0, W() | 0, 1, 0) | 0),
                          (w = W() | 0))
                        : ((m = P), (w = B)),
                      (K = (j + -1) | 0),
                      (K =
                        Wn(
                          P | 0,
                          B | 0,
                          K | 0,
                          ((((K | 0) < 0) << 31) >> 31) | 0
                        ) | 0),
                      (K = zt(m | 0, w | 0, K | 0, W() | 0) | 0),
                      (j = W() | 0),
                      (B = f),
                      (B =
                        zt(K | 0, j | 0, A[B >> 2] | 0, A[(B + 4) >> 2] | 0) |
                        0),
                      (j = W() | 0),
                      (K = f),
                      (A[K >> 2] = B),
                      (A[(K + 4) >> 2] = j)),
                    (re | 0) <= (l | 0))
                  ) {
                    P = 37;
                    break;
                  }
                }
                if ((P | 0) == 19) dt(23313, 22674, 1099, 22710);
                else if ((P | 0) == 37) {
                  (v = f), (h = A[(v + 4) >> 2] | 0), (v = A[v >> 2] | 0);
                  break;
                } else if ((P | 0) == 42) return (z = _e), h | 0;
              } else (h = 0), (v = 0);
            } else P = 33;
          while (0);
          e: do
            if ((P | 0) == 33)
              if (
                ((Z = f),
                (A[Z >> 2] = 0),
                (A[(Z + 4) >> 2] = 0),
                (Se | 0) > (l | 0))
              ) {
                for (m = Se; ; ) {
                  if (
                    ((h = De(a | 0, o | 0, (((15 - m) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (h = h & 7),
                    (h | 0) == 7)
                  ) {
                    h = 5;
                    break;
                  }
                  if (
                    ((v = (Se - m) | 0),
                    (v = jr(7, 0, v, (((v | 0) < 0) << 31) >> 31) | 0),
                    (h = Wn(v | 0, W() | 0, h | 0, 0) | 0),
                    (v = W() | 0),
                    (Z = f),
                    (v =
                      zt(A[Z >> 2] | 0, A[(Z + 4) >> 2] | 0, h | 0, v | 0) | 0),
                    (h = W() | 0),
                    (Z = f),
                    (A[Z >> 2] = v),
                    (A[(Z + 4) >> 2] = h),
                    (m = (m + -1) | 0),
                    (m | 0) <= (l | 0))
                  )
                    break e;
                }
                return (z = _e), h | 0;
              } else (h = 0), (v = 0);
          while (0);
          return (
            nA(ce, y, Se, Ee) | 0 && dt(23313, 22674, 1063, 22725),
            (Se = Ee),
            (Ee = A[(Se + 4) >> 2] | 0),
            (((h | 0) > -1) | (((h | 0) == -1) & (v >>> 0 > 4294967295))) &
            (((Ee | 0) > (h | 0)) |
              ((Ee | 0) == (h | 0) ? (A[Se >> 2] | 0) >>> 0 > v >>> 0 : 0))
              ? ((Se = 0), (z = _e), Se | 0)
              : (dt(23313, 22674, 1139, 22710), 0)
          );
        }
        function dg(a, o, l, f, h, m) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (m = m | 0);
          var v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0;
          if (((j = z), (z = (z + 16) | 0), (v = j), h >>> 0 > 15))
            return (m = 4), (z = j), m | 0;
          if (
            ((y = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (y = y & 15),
            (y | 0) > (h | 0))
          )
            return (m = 12), (z = j), m | 0;
          if (
            (nA(l, f, h, v) | 0 && dt(23313, 22674, 1063, 22725),
            (B = v),
            (P = A[(B + 4) >> 2] | 0),
            !(
              (((o | 0) > -1) | (((o | 0) == -1) & (a >>> 0 > 4294967295))) &
              (((P | 0) > (o | 0)) |
                ((P | 0) == (o | 0) ? (A[B >> 2] | 0) >>> 0 > a >>> 0 : 0))
            ))
          )
            return (m = 2), (z = j), m | 0;
          (B = (h - y) | 0),
            (h = je(h | 0, 0, 52) | 0),
            (w = W() | 0 | (f & -15728641)),
            (P = m),
            (A[P >> 2] = h | l),
            (A[(P + 4) >> 2] = w),
            (P = De(l | 0, f | 0, 45) | 0),
            W() | 0;
          e: do
            if (ln(P & 127) | 0) {
              if (y | 0)
                for (v = 1; ; ) {
                  if (
                    ((P = je(7, 0, (((15 - v) | 0) * 3) | 0) | 0),
                    !((((P & l) | 0) == 0) & ((((W() | 0) & f) | 0) == 0)))
                  )
                    break e;
                  if (v >>> 0 < y >>> 0) v = (v + 1) | 0;
                  else break;
                }
              if ((B | 0) < 1) return (m = 0), (z = j), m | 0;
              for (P = y ^ 15, f = -1, w = 1, v = 1; ; ) {
                (y = (B - w) | 0),
                  (y = jr(7, 0, y, (((y | 0) < 0) << 31) >> 31) | 0),
                  (l = W() | 0);
                do
                  if (v)
                    if (
                      ((v = Wn(y | 0, l | 0, 5, 0) | 0),
                      (v = zt(v | 0, W() | 0, -5, -1) | 0),
                      (v = xs(v | 0, W() | 0, 6, 0) | 0),
                      (h = W() | 0),
                      ((o | 0) > (h | 0)) |
                        (((o | 0) == (h | 0)) & (a >>> 0 > v >>> 0)))
                    ) {
                      (o = zt(a | 0, o | 0, -1, -1) | 0),
                        (o = Vn(o | 0, W() | 0, v | 0, h | 0) | 0),
                        (v = W() | 0),
                        (K = m),
                        (Z = A[K >> 2] | 0),
                        (K = A[(K + 4) >> 2] | 0),
                        (ce = (((P + f) | 0) * 3) | 0),
                        (re = je(7, 0, ce | 0) | 0),
                        (K = K & ~(W() | 0)),
                        (f = xs(o | 0, v | 0, y | 0, l | 0) | 0),
                        (a = W() | 0),
                        (h = zt(f | 0, a | 0, 2, 0) | 0),
                        (ce = je(h | 0, W() | 0, ce | 0) | 0),
                        (K = W() | 0 | K),
                        (h = m),
                        (A[h >> 2] = ce | (Z & ~re)),
                        (A[(h + 4) >> 2] = K),
                        (a = Wn(f | 0, a | 0, y | 0, l | 0) | 0),
                        (a = Vn(o | 0, v | 0, a | 0, W() | 0) | 0),
                        (v = 0),
                        (o = W() | 0);
                      break;
                    } else {
                      (ce = m),
                        (re = A[ce >> 2] | 0),
                        (ce = A[(ce + 4) >> 2] | 0),
                        (Z = je(7, 0, (((P + f) | 0) * 3) | 0) | 0),
                        (ce = ce & ~(W() | 0)),
                        (v = m),
                        (A[v >> 2] = re & ~Z),
                        (A[(v + 4) >> 2] = ce),
                        (v = 1);
                      break;
                    }
                  else
                    (re = m),
                      (h = A[re >> 2] | 0),
                      (re = A[(re + 4) >> 2] | 0),
                      (f = (((P + f) | 0) * 3) | 0),
                      (K = je(7, 0, f | 0) | 0),
                      (re = re & ~(W() | 0)),
                      (ce = xs(a | 0, o | 0, y | 0, l | 0) | 0),
                      (v = W() | 0),
                      (f = je(ce | 0, v | 0, f | 0) | 0),
                      (re = W() | 0 | re),
                      (Z = m),
                      (A[Z >> 2] = f | (h & ~K)),
                      (A[(Z + 4) >> 2] = re),
                      (v = Wn(ce | 0, v | 0, y | 0, l | 0) | 0),
                      (a = Vn(a | 0, o | 0, v | 0, W() | 0) | 0),
                      (v = 0),
                      (o = W() | 0);
                while (0);
                if ((B | 0) > (w | 0)) (f = ~w), (w = (w + 1) | 0);
                else {
                  o = 0;
                  break;
                }
              }
              return (z = j), o | 0;
            }
          while (0);
          if ((B | 0) < 1) return (ce = 0), (z = j), ce | 0;
          for (h = y ^ 15, v = 1; ; )
            if (
              ((Z = (B - v) | 0),
              (Z = jr(7, 0, Z, (((Z | 0) < 0) << 31) >> 31) | 0),
              (ce = W() | 0),
              (w = m),
              (l = A[w >> 2] | 0),
              (w = A[(w + 4) >> 2] | 0),
              (y = (((h - v) | 0) * 3) | 0),
              (f = je(7, 0, y | 0) | 0),
              (w = w & ~(W() | 0)),
              (K = xs(a | 0, o | 0, Z | 0, ce | 0) | 0),
              (re = W() | 0),
              (y = je(K | 0, re | 0, y | 0) | 0),
              (w = W() | 0 | w),
              (P = m),
              (A[P >> 2] = y | (l & ~f)),
              (A[(P + 4) >> 2] = w),
              (ce = Wn(K | 0, re | 0, Z | 0, ce | 0) | 0),
              (a = Vn(a | 0, o | 0, ce | 0, W() | 0) | 0),
              (o = W() | 0),
              (B | 0) <= (v | 0))
            ) {
              o = 0;
              break;
            } else v = (v + 1) | 0;
          return (z = j), o | 0;
        }
        function ff(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0;
          (h = De(o | 0, l | 0, 52) | 0),
            W() | 0,
            (h = h & 15),
            (((o | 0) == 0) & ((l | 0) == 0)) |
            (((f | 0) > 15) | ((h | 0) > (f | 0)))
              ? ((f = -1), (h = -1), (o = 0), (l = 0))
              : ((m = ig(o, l, (h + 1) | 0, f) | 0),
                (l = (W() | 0) & -15728641),
                (o = je(f | 0, 0, 52) | 0),
                (o = m | o),
                (l = l | (W() | 0)),
                (m = (un(o, l) | 0) == 0),
                (f = m ? -1 : f)),
            (m = a),
            (A[m >> 2] = o),
            (A[(m + 4) >> 2] = l),
            (A[(a + 8) >> 2] = h),
            (A[(a + 12) >> 2] = f);
        }
        function hf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          if (
            ((l = a),
            (o = A[l >> 2] | 0),
            (l = A[(l + 4) >> 2] | 0),
            !(((o | 0) == 0) & ((l | 0) == 0)) &&
              ((f = De(o | 0, l | 0, 52) | 0),
              W() | 0,
              (f = f & 15),
              (y = je(1, 0, ((f ^ 15) * 3) | 0) | 0),
              (o = zt(y | 0, W() | 0, o | 0, l | 0) | 0),
              (l = W() | 0),
              (y = a),
              (A[y >> 2] = o),
              (A[(y + 4) >> 2] = l),
              (y = (a + 8) | 0),
              (v = A[y >> 2] | 0),
              !((f | 0) < (v | 0))))
          ) {
            for (w = (a + 12) | 0, m = f; ; ) {
              if ((m | 0) == (v | 0)) {
                f = 5;
                break;
              }
              if (
                ((P = (m | 0) == (A[w >> 2] | 0)),
                (h = (((15 - m) | 0) * 3) | 0),
                (f = De(o | 0, l | 0, h | 0) | 0),
                W() | 0,
                (f = f & 7),
                P & (((f | 0) == 1) & !0))
              ) {
                f = 7;
                break;
              }
              if (!(((f | 0) == 7) & !0)) {
                f = 10;
                break;
              }
              if (
                ((P = je(1, 0, h | 0) | 0),
                (o = zt(o | 0, l | 0, P | 0, W() | 0) | 0),
                (l = W() | 0),
                (P = a),
                (A[P >> 2] = o),
                (A[(P + 4) >> 2] = l),
                (m | 0) > (v | 0))
              )
                m = (m + -1) | 0;
              else {
                f = 10;
                break;
              }
            }
            if ((f | 0) == 5) {
              (P = a),
                (A[P >> 2] = 0),
                (A[(P + 4) >> 2] = 0),
                (A[y >> 2] = -1),
                (A[w >> 2] = -1);
              return;
            } else if ((f | 0) == 7) {
              (v = je(1, 0, h | 0) | 0),
                (v = zt(o | 0, l | 0, v | 0, W() | 0) | 0),
                (y = W() | 0),
                (P = a),
                (A[P >> 2] = v),
                (A[(P + 4) >> 2] = y),
                (A[w >> 2] = m + -1);
              return;
            } else if ((f | 0) == 10) return;
          }
        }
        function Jo(a) {
          a = +a;
          var o = 0;
          return (
            (o = a < 0 ? a + 6.283185307179586 : a),
            +(a >= 6.283185307179586 ? o + -6.283185307179586 : o)
          );
        }
        function js(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            +Ae(+(+H[a >> 3] - +H[o >> 3])) < 17453292519943298e-27
              ? ((o =
                  +Ae(+(+H[(a + 8) >> 3] - +H[(o + 8) >> 3])) <
                  17453292519943298e-27),
                o | 0)
              : ((o = 0), o | 0)
          );
        }
        function pg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          return (
            (h = +H[o >> 3]),
            (f = +H[a >> 3]),
            (m = +Ge(+((h - f) * 0.5))),
            (l = +Ge(+((+H[(o + 8) >> 3] - +H[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+h) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2)
          );
        }
        function ea(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          return (
            (h = +H[o >> 3]),
            (f = +H[a >> 3]),
            (m = +Ge(+((h - f) * 0.5))),
            (l = +Ge(+((+H[(o + 8) >> 3] - +H[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+h) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2 * 6371.007180918475)
          );
        }
        function mg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          return (
            (h = +H[o >> 3]),
            (f = +H[a >> 3]),
            (m = +Ge(+((h - f) * 0.5))),
            (l = +Ge(+((+H[(o + 8) >> 3] - +H[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+h) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2 * 6371.007180918475 * 1e3)
          );
        }
        function gg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0;
          return (
            (m = +H[o >> 3]),
            (f = +Qe(+m)),
            (h = +H[(o + 8) >> 3] - +H[(a + 8) >> 3]),
            (v = f * +Ge(+h)),
            (l = +H[a >> 3]),
            +(+jt(+v, +(+Ge(+m) * +Qe(+l) - +Qe(+h) * (f * +Ge(+l)))))
          );
        }
        function _g(a, o, l, f) {
          (a = a | 0), (o = +o), (l = +l), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0;
          if (l < 1e-16) {
            (A[f >> 2] = A[a >> 2]),
              (A[(f + 4) >> 2] = A[(a + 4) >> 2]),
              (A[(f + 8) >> 2] = A[(a + 8) >> 2]),
              (A[(f + 12) >> 2] = A[(a + 12) >> 2]);
            return;
          }
          (m = o < 0 ? o + 6.283185307179586 : o),
            (m = o >= 6.283185307179586 ? m + -6.283185307179586 : m);
          do
            if (m < 1e-16) (o = +H[a >> 3] + l), (H[f >> 3] = o), (h = f);
            else {
              if (
                ((h = +Ae(+(m + -3.141592653589793)) < 1e-16),
                (o = +H[a >> 3]),
                h)
              ) {
                (o = o - l), (H[f >> 3] = o), (h = f);
                break;
              }
              if (
                ((v = +Qe(+l)),
                (l = +Ge(+l)),
                (o = v * +Ge(+o) + +Qe(+m) * (l * +Qe(+o))),
                (o = o > 1 ? 1 : o),
                (o = +_t(+(o < -1 ? -1 : o))),
                (H[f >> 3] = o),
                +Ae(+(o + -1.5707963267948966)) < 1e-16)
              ) {
                (H[f >> 3] = 1.5707963267948966), (H[(f + 8) >> 3] = 0);
                return;
              }
              if (+Ae(+(o + 1.5707963267948966)) < 1e-16) {
                (H[f >> 3] = -1.5707963267948966), (H[(f + 8) >> 3] = 0);
                return;
              }
              if (
                ((y = +Qe(+o)),
                (m = (l * +Ge(+m)) / y),
                (l = +H[a >> 3]),
                (o = (v - +Ge(+o) * +Ge(+l)) / +Qe(+l) / y),
                (v = m > 1 ? 1 : m),
                (o = o > 1 ? 1 : o),
                (o =
                  +H[(a + 8) >> 3] +
                  +jt(+(v < -1 ? -1 : v), +(o < -1 ? -1 : o))),
                o > 3.141592653589793)
              )
                do o = o + -6.283185307179586;
                while (o > 3.141592653589793);
              if (o < -3.141592653589793)
                do o = o + 6.283185307179586;
                while (o < -3.141592653589793);
              H[(f + 8) >> 3] = o;
              return;
            }
          while (0);
          if (+Ae(+(o + -1.5707963267948966)) < 1e-16) {
            (H[h >> 3] = 1.5707963267948966), (H[(f + 8) >> 3] = 0);
            return;
          }
          if (+Ae(+(o + 1.5707963267948966)) < 1e-16) {
            (H[h >> 3] = -1.5707963267948966), (H[(f + 8) >> 3] = 0);
            return;
          }
          if (((o = +H[(a + 8) >> 3]), o > 3.141592653589793))
            do o = o + -6.283185307179586;
            while (o > 3.141592653589793);
          if (o < -3.141592653589793)
            do o = o + 6.283185307179586;
            while (o < -3.141592653589793);
          H[(f + 8) >> 3] = o;
        }
        function vg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((H[o >> 3] = +H[(20528 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function xg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((H[o >> 3] = +H[(20656 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function yg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((H[o >> 3] = +H[(20784 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function bg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((H[o >> 3] = +H[(20912 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function _0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          return a >>> 0 > 15
            ? ((o = 4), o | 0)
            : ((l = jr(7, 0, a, (((a | 0) < 0) << 31) >> 31) | 0),
              (l = Wn(l | 0, W() | 0, 120, 0) | 0),
              (a = W() | 0),
              (A[o >> 2] = l | 2),
              (A[(o + 4) >> 2] = a),
              (o = 0),
              o | 0);
        }
        function df(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0;
          return (
            (K = +H[o >> 3]),
            (B = +H[a >> 3]),
            (w = +Ge(+((K - B) * 0.5))),
            (m = +H[(o + 8) >> 3]),
            (P = +H[(a + 8) >> 3]),
            (v = +Ge(+((m - P) * 0.5))),
            (y = +Qe(+B)),
            (j = +Qe(+K)),
            (v = w * w + v * (j * y * v)),
            (v = +jt(+(+ge(+v)), +(+ge(+(1 - v)))) * 2),
            (w = +H[l >> 3]),
            (K = +Ge(+((w - K) * 0.5))),
            (f = +H[(l + 8) >> 3]),
            (m = +Ge(+((f - m) * 0.5))),
            (h = +Qe(+w)),
            (m = K * K + m * (j * h * m)),
            (m = +jt(+(+ge(+m)), +(+ge(+(1 - m)))) * 2),
            (w = +Ge(+((B - w) * 0.5))),
            (f = +Ge(+((P - f) * 0.5))),
            (f = w * w + f * (y * h * f)),
            (f = +jt(+(+ge(+f)), +(+ge(+(1 - f)))) * 2),
            (h = (v + m + f) * 0.5),
            +(
              +Pt(
                +(+ge(
                  +(
                    +ht(+(h * 0.5)) *
                    +ht(+((h - v) * 0.5)) *
                    +ht(+((h - m) * 0.5)) *
                    +ht(+((h - f) * 0.5))
                  )
                ))
              ) * 4
            )
          );
        }
        function v0(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          if (
            ((y = z),
            (z = (z + 192) | 0),
            (m = (y + 168) | 0),
            (v = y),
            (h = Zo(a, o, m) | 0),
            h | 0)
          )
            return (l = h), (z = y), l | 0;
          if (
            (Ko(a, o, v) | 0 && dt(23313, 22742, 386, 22751),
            (o = A[v >> 2] | 0),
            (o | 0) > 0)
          ) {
            if (
              ((f =
                +df((v + 8) | 0, (v + 8 + ((((o | 0) != 1) & 1) << 4)) | 0, m) +
                0),
              (o | 0) != 1)
            ) {
              a = 1;
              do
                (h = a),
                  (a = (a + 1) | 0),
                  (f =
                    f +
                    +df(
                      (v + 8 + (h << 4)) | 0,
                      (v + 8 + (((a | 0) % (o | 0) | 0) << 4)) | 0,
                      m
                    ));
              while ((a | 0) < (o | 0));
            }
          } else f = 0;
          return (H[l >> 3] = f), (l = 0), (z = y), l | 0;
        }
        function Mg(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (a = v0(a, o, l) | 0),
            a | 0 ||
              (H[l >> 3] = +H[l >> 3] * 6371.007180918475 * 6371.007180918475),
            a | 0
          );
        }
        function Sg(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (a = v0(a, o, l) | 0),
            a | 0 ||
              (H[l >> 3] =
                +H[l >> 3] * 6371.007180918475 * 6371.007180918475 * 1e3 * 1e3),
            a | 0
          );
        }
        function Eg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (v = y),
            (a = tA(a, o, v) | 0),
            a | 0)
          )
            return (v = a), (z = y), v | 0;
          if (((H[l >> 3] = 0), (a = A[v >> 2] | 0), (a | 0) <= 1))
            return (v = 0), (z = y), v | 0;
          (o = (a + -1) | 0),
            (a = 0),
            (f = +H[(v + 8) >> 3]),
            (h = +H[(v + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +H[(v + 8 + (a << 4)) >> 3]),
              (B = +Ge(+((f - P) * 0.5))),
              (w = h),
              (h = +H[(v + 8 + (a << 4) + 8) >> 3]),
              (w = +Ge(+((h - w) * 0.5))),
              (w = B * B + w * (+Qe(+f) * +Qe(+P) * w)),
              (m = m + +jt(+(+ge(+w)), +(+ge(+(1 - w)))) * 2);
          while ((a | 0) < (o | 0));
          return (H[l >> 3] = m), (v = 0), (z = y), v | 0;
        }
        function wg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (v = y),
            (a = tA(a, o, v) | 0),
            a | 0)
          )
            return (
              (v = a),
              (m = +H[l >> 3]),
              (m = m * 6371.007180918475),
              (H[l >> 3] = m),
              (z = y),
              v | 0
            );
          if (((H[l >> 3] = 0), (a = A[v >> 2] | 0), (a | 0) <= 1))
            return (
              (v = 0),
              (m = 0),
              (m = m * 6371.007180918475),
              (H[l >> 3] = m),
              (z = y),
              v | 0
            );
          (o = (a + -1) | 0),
            (a = 0),
            (f = +H[(v + 8) >> 3]),
            (h = +H[(v + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +H[(v + 8 + (a << 4)) >> 3]),
              (B = +Ge(+((f - P) * 0.5))),
              (w = h),
              (h = +H[(v + 8 + (a << 4) + 8) >> 3]),
              (w = +Ge(+((h - w) * 0.5))),
              (w = B * B + w * (+Qe(+P) * +Qe(+f) * w)),
              (m = m + +jt(+(+ge(+w)), +(+ge(+(1 - w)))) * 2);
          while ((a | 0) != (o | 0));
          return (
            (H[l >> 3] = m),
            (v = 0),
            (B = m),
            (B = B * 6371.007180918475),
            (H[l >> 3] = B),
            (z = y),
            v | 0
          );
        }
        function Tg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (v = y),
            (a = tA(a, o, v) | 0),
            a | 0)
          )
            return (
              (v = a),
              (m = +H[l >> 3]),
              (m = m * 6371.007180918475),
              (m = m * 1e3),
              (H[l >> 3] = m),
              (z = y),
              v | 0
            );
          if (((H[l >> 3] = 0), (a = A[v >> 2] | 0), (a | 0) <= 1))
            return (
              (v = 0),
              (m = 0),
              (m = m * 6371.007180918475),
              (m = m * 1e3),
              (H[l >> 3] = m),
              (z = y),
              v | 0
            );
          (o = (a + -1) | 0),
            (a = 0),
            (f = +H[(v + 8) >> 3]),
            (h = +H[(v + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +H[(v + 8 + (a << 4)) >> 3]),
              (B = +Ge(+((f - P) * 0.5))),
              (w = h),
              (h = +H[(v + 8 + (a << 4) + 8) >> 3]),
              (w = +Ge(+((h - w) * 0.5))),
              (w = B * B + w * (+Qe(+P) * +Qe(+f) * w)),
              (m = m + +jt(+(+ge(+w)), +(+ge(+(1 - w)))) * 2);
          while ((a | 0) != (o | 0));
          return (
            (H[l >> 3] = m),
            (v = 0),
            (B = m),
            (B = B * 6371.007180918475),
            (B = B * 1e3),
            (H[l >> 3] = B),
            (z = y),
            v | 0
          );
        }
        function Cg(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          return (
            (o = lr(1, 12) | 0),
            o || dt(22832, 22787, 49, 22845),
            (l = (a + 4) | 0),
            (f = A[l >> 2] | 0),
            f | 0
              ? ((f = (f + 8) | 0), (A[f >> 2] = o), (A[l >> 2] = o), o | 0)
              : (A[a >> 2] | 0 && dt(22862, 22787, 61, 22885),
                (f = a),
                (A[f >> 2] = o),
                (A[l >> 2] = o),
                o | 0)
          );
        }
        function Rg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          return (
            (f = Ar(24) | 0),
            f || dt(22899, 22787, 78, 22913),
            (A[f >> 2] = A[o >> 2]),
            (A[(f + 4) >> 2] = A[(o + 4) >> 2]),
            (A[(f + 8) >> 2] = A[(o + 8) >> 2]),
            (A[(f + 12) >> 2] = A[(o + 12) >> 2]),
            (A[(f + 16) >> 2] = 0),
            (o = (a + 4) | 0),
            (l = A[o >> 2] | 0),
            l | 0
              ? ((A[(l + 16) >> 2] = f), (A[o >> 2] = f), f | 0)
              : (A[a >> 2] | 0 && dt(22928, 22787, 82, 22913),
                (A[a >> 2] = f),
                (A[o >> 2] = f),
                f | 0)
          );
        }
        function pf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0;
          if (a)
            for (f = 1; ; ) {
              if (((o = A[a >> 2] | 0), o | 0))
                do {
                  if (((l = A[o >> 2] | 0), l | 0))
                    do (h = l), (l = A[(l + 16) >> 2] | 0), yt(h);
                    while (l | 0);
                  (h = o), (o = A[(o + 8) >> 2] | 0), yt(h);
                } while (o | 0);
              if (((o = a), (a = A[(a + 8) >> 2] | 0), f || yt(o), a)) f = 0;
              else break;
            }
        }
        function Pg(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            Ot = 0,
            Ct = 0,
            Ut = 0,
            en = 0,
            bt = 0;
          if (((h = (a + 8) | 0), A[h >> 2] | 0)) return (bt = 1), bt | 0;
          if (((f = A[a >> 2] | 0), !f)) return (bt = 0), bt | 0;
          (o = f), (l = 0);
          do (l = (l + 1) | 0), (o = A[(o + 8) >> 2] | 0);
          while (o | 0);
          if (l >>> 0 < 2) return (bt = 0), bt | 0;
          (Ut = Ar(l << 2) | 0),
            Ut || dt(22948, 22787, 317, 22967),
            (Ct = Ar(l << 5) | 0),
            Ct || dt(22989, 22787, 321, 22967),
            (A[a >> 2] = 0),
            (st = (a + 4) | 0),
            (A[st >> 2] = 0),
            (A[h >> 2] = 0),
            (l = 0),
            (Ot = 0),
            (Ye = 0),
            (j = 0);
          e: for (;;) {
            if (((B = A[f >> 2] | 0), B)) {
              (m = 0), (v = B);
              do {
                if (
                  ((w = +H[(v + 8) >> 3]),
                  (o = v),
                  (v = A[(v + 16) >> 2] | 0),
                  (P = (v | 0) == 0),
                  (h = P ? B : v),
                  (y = +H[(h + 8) >> 3]),
                  +Ae(+(w - y)) > 3.141592653589793)
                ) {
                  bt = 14;
                  break;
                }
                m = m + (y - w) * (+H[o >> 3] + +H[h >> 3]);
              } while (!P);
              if ((bt | 0) == 14) {
                (bt = 0), (m = 0), (o = B);
                do
                  (ue = +H[(o + 8) >> 3]),
                    (Qt = (o + 16) | 0),
                    (Xt = A[Qt >> 2] | 0),
                    (Xt = Xt | 0 ? Xt : B),
                    (ve = +H[(Xt + 8) >> 3]),
                    (m =
                      m +
                      (+H[o >> 3] + +H[Xt >> 3]) *
                        ((ve < 0 ? ve + 6.283185307179586 : ve) -
                          (ue < 0 ? ue + 6.283185307179586 : ue))),
                    (o = A[(o | 0 ? Qt : f) >> 2] | 0);
                while (o | 0);
              }
              m > 0
                ? ((A[(Ut + (Ot << 2)) >> 2] = f),
                  (Ot = (Ot + 1) | 0),
                  (h = Ye),
                  (o = j))
                : (bt = 19);
            } else bt = 19;
            if ((bt | 0) == 19) {
              bt = 0;
              do
                if (l) {
                  if (((o = (l + 8) | 0), A[o >> 2] | 0)) {
                    bt = 21;
                    break e;
                  }
                  if (((l = lr(1, 12) | 0), !l)) {
                    bt = 23;
                    break e;
                  }
                  (A[o >> 2] = l), (h = (l + 4) | 0), (v = l), (o = j);
                } else if (j) {
                  (h = st), (v = (j + 8) | 0), (o = f), (l = a);
                  break;
                } else if (A[a >> 2] | 0) {
                  bt = 27;
                  break e;
                } else {
                  (h = st), (v = a), (o = f), (l = a);
                  break;
                }
              while (0);
              if (
                ((A[v >> 2] = f),
                (A[h >> 2] = f),
                (v = (Ct + (Ye << 5)) | 0),
                (P = A[f >> 2] | 0),
                P)
              ) {
                for (
                  B = (Ct + (Ye << 5) + 8) | 0,
                    H[B >> 3] = 17976931348623157e292,
                    j = (Ct + (Ye << 5) + 24) | 0,
                    H[j >> 3] = 17976931348623157e292,
                    H[v >> 3] = -17976931348623157e292,
                    K = (Ct + (Ye << 5) + 16) | 0,
                    H[K >> 3] = -17976931348623157e292,
                    Se = 17976931348623157e292,
                    _e = -17976931348623157e292,
                    h = 0,
                    re = P,
                    w = 17976931348623157e292,
                    ce = 17976931348623157e292,
                    Ee = -17976931348623157e292,
                    y = -17976931348623157e292;
                  (m = +H[re >> 3]),
                    (ue = +H[(re + 8) >> 3]),
                    (re = A[(re + 16) >> 2] | 0),
                    (Z = (re | 0) == 0),
                    (ve = +H[((Z ? P : re) + 8) >> 3]),
                    m < w && ((H[B >> 3] = m), (w = m)),
                    ue < ce && ((H[j >> 3] = ue), (ce = ue)),
                    m > Ee ? (H[v >> 3] = m) : (m = Ee),
                    ue > y && ((H[K >> 3] = ue), (y = ue)),
                    (Se = (ue > 0) & (ue < Se) ? ue : Se),
                    (_e = (ue < 0) & (ue > _e) ? ue : _e),
                    (h = h | (+Ae(+(ue - ve)) > 3.141592653589793)),
                    !Z;

                )
                  Ee = m;
                h && ((H[K >> 3] = _e), (H[j >> 3] = Se));
              } else
                (A[v >> 2] = 0),
                  (A[(v + 4) >> 2] = 0),
                  (A[(v + 8) >> 2] = 0),
                  (A[(v + 12) >> 2] = 0),
                  (A[(v + 16) >> 2] = 0),
                  (A[(v + 20) >> 2] = 0),
                  (A[(v + 24) >> 2] = 0),
                  (A[(v + 28) >> 2] = 0);
              h = (Ye + 1) | 0;
            }
            if (((Qt = (f + 8) | 0), (f = A[Qt >> 2] | 0), (A[Qt >> 2] = 0), f))
              (Ye = h), (j = o);
            else {
              bt = 45;
              break;
            }
          }
          if ((bt | 0) == 21) dt(22765, 22787, 35, 22799);
          else if ((bt | 0) == 23) dt(22819, 22787, 37, 22799);
          else if ((bt | 0) == 27) dt(22862, 22787, 61, 22885);
          else if ((bt | 0) == 45) {
            e: do
              if ((Ot | 0) > 0) {
                for (
                  Qt = (h | 0) == 0,
                    Zt = h << 2,
                    Xt = (a | 0) == 0,
                    Ze = 0,
                    o = 0;
                  ;

                ) {
                  if (((He = A[(Ut + (Ze << 2)) >> 2] | 0), Qt)) bt = 73;
                  else {
                    if (((Ye = Ar(Zt) | 0), !Ye)) {
                      bt = 50;
                      break;
                    }
                    if (((st = Ar(Zt) | 0), !st)) {
                      bt = 52;
                      break;
                    }
                    t: do
                      if (Xt) l = 0;
                      else {
                        for (
                          h = 0, l = 0, v = a;
                          (f = (Ct + (h << 5)) | 0),
                            mf(A[v >> 2] | 0, f, A[He >> 2] | 0) | 0
                              ? ((A[(Ye + (l << 2)) >> 2] = v),
                                (A[(st + (l << 2)) >> 2] = f),
                                (Z = (l + 1) | 0))
                              : (Z = l),
                            (v = A[(v + 8) >> 2] | 0),
                            v;

                        )
                          (h = (h + 1) | 0), (l = Z);
                        if ((Z | 0) > 0)
                          if (((f = A[Ye >> 2] | 0), (Z | 0) == 1)) l = f;
                          else
                            for (K = 0, re = -1, l = f, j = f; ; ) {
                              for (
                                P = A[j >> 2] | 0, f = 0, v = 0;
                                (h = A[A[(Ye + (v << 2)) >> 2] >> 2] | 0),
                                  (h | 0) == (P | 0)
                                    ? (B = f)
                                    : (B =
                                        (f +
                                          ((mf(
                                            h,
                                            A[(st + (v << 2)) >> 2] | 0,
                                            A[P >> 2] | 0
                                          ) |
                                            0) &
                                            1)) |
                                        0),
                                  (v = (v + 1) | 0),
                                  (v | 0) != (Z | 0);

                              )
                                f = B;
                              if (
                                ((h = (B | 0) > (re | 0)),
                                (l = h ? j : l),
                                (f = (K + 1) | 0),
                                (f | 0) == (Z | 0))
                              )
                                break t;
                              (K = f),
                                (re = h ? B : re),
                                (j = A[(Ye + (f << 2)) >> 2] | 0);
                            }
                        else l = 0;
                      }
                    while (0);
                    if ((yt(Ye), yt(st), l)) {
                      if (((h = (l + 4) | 0), (f = A[h >> 2] | 0), f))
                        l = (f + 8) | 0;
                      else if (A[l >> 2] | 0) {
                        bt = 70;
                        break;
                      }
                      (A[l >> 2] = He), (A[h >> 2] = He);
                    } else bt = 73;
                  }
                  if ((bt | 0) == 73) {
                    if (((bt = 0), (o = A[He >> 2] | 0), o | 0))
                      do (st = o), (o = A[(o + 16) >> 2] | 0), yt(st);
                      while (o | 0);
                    yt(He), (o = 1);
                  }
                  if (((Ze = (Ze + 1) | 0), (Ze | 0) >= (Ot | 0))) {
                    en = o;
                    break e;
                  }
                }
                (bt | 0) == 50
                  ? dt(23004, 22787, 249, 23023)
                  : (bt | 0) == 52
                  ? dt(23042, 22787, 252, 23023)
                  : (bt | 0) == 70 && dt(22862, 22787, 61, 22885);
              } else en = 0;
            while (0);
            return yt(Ut), yt(Ct), (bt = en), bt | 0;
          }
          return 0;
        }
        function mf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0;
          if (
            !(Zc(o, l) | 0) ||
            ((o = Yc(o) | 0),
            (f = +H[l >> 3]),
            (h = +H[(l + 8) >> 3]),
            (h = o & (h < 0) ? h + 6.283185307179586 : h),
            (a = A[a >> 2] | 0),
            !a)
          )
            return (a = 0), a | 0;
          if (o) {
            (o = 0), (P = h), (l = a);
            e: for (;;) {
              for (
                ;
                (v = +H[l >> 3]),
                  (h = +H[(l + 8) >> 3]),
                  (l = (l + 16) | 0),
                  (B = A[l >> 2] | 0),
                  (B = B | 0 ? B : a),
                  (m = +H[B >> 3]),
                  (y = +H[(B + 8) >> 3]),
                  v > m
                    ? ((w = v), (v = y))
                    : ((w = m), (m = v), (v = h), (h = y)),
                  (f = (f == m) | (f == w) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > w));

              )
                if (((l = A[l >> 2] | 0), !l)) {
                  l = 22;
                  break e;
                }
              if (
                ((y = v < 0 ? v + 6.283185307179586 : v),
                (v = h < 0 ? h + 6.283185307179586 : h),
                (P = (y == P) | (v == P) ? P + -2220446049250313e-31 : P),
                (w = y + (v - y) * ((f - m) / (w - m))),
                (w < 0 ? w + 6.283185307179586 : w) > P && (o = o ^ 1),
                (l = A[l >> 2] | 0),
                !l)
              ) {
                l = 22;
                break;
              }
            }
            if ((l | 0) == 22) return o | 0;
          } else {
            (o = 0), (P = h), (l = a);
            e: for (;;) {
              for (
                ;
                (v = +H[l >> 3]),
                  (h = +H[(l + 8) >> 3]),
                  (l = (l + 16) | 0),
                  (B = A[l >> 2] | 0),
                  (B = B | 0 ? B : a),
                  (m = +H[B >> 3]),
                  (y = +H[(B + 8) >> 3]),
                  v > m
                    ? ((w = v), (v = y))
                    : ((w = m), (m = v), (v = h), (h = y)),
                  (f = (f == m) | (f == w) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > w));

              )
                if (((l = A[l >> 2] | 0), !l)) {
                  l = 22;
                  break e;
                }
              if (
                ((P = (v == P) | (h == P) ? P + -2220446049250313e-31 : P),
                v + (h - v) * ((f - m) / (w - m)) > P && (o = o ^ 1),
                (l = A[l >> 2] | 0),
                !l)
              ) {
                l = 22;
                break;
              }
            }
            if ((l | 0) == 22) return o | 0;
          }
          return 0;
        }
        function Sr(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0;
          if (
            ((_e = z),
            (z = (z + 32) | 0),
            (Se = (_e + 16) | 0),
            (Ee = _e),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            (re = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (m | 0) != ((re & 15) | 0))
          )
            return (Se = 12), (z = _e), Se | 0;
          if (
            ((P = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (P = P & 127),
            (B = De(l | 0, f | 0, 45) | 0),
            W() | 0,
            (B = B & 127),
            (P >>> 0 > 121) | (B >>> 0 > 121))
          )
            return (Se = 5), (z = _e), Se | 0;
          if (((re = (P | 0) != (B | 0)), re)) {
            if (((y = a0(P, B) | 0), (y | 0) == 7))
              return (Se = 1), (z = _e), Se | 0;
            (w = a0(B, P) | 0),
              (w | 0) == 7 ? dt(23066, 23090, 161, 23100) : ((Z = y), (v = w));
          } else (Z = 0), (v = 0);
          (j = ln(P) | 0),
            (K = ln(B) | 0),
            (A[Se >> 2] = 0),
            (A[(Se + 4) >> 2] = 0),
            (A[(Se + 8) >> 2] = 0),
            (A[(Se + 12) >> 2] = 0);
          do
            if (Z) {
              if (
                ((B = A[(4272 + ((P * 28) | 0) + (Z << 2)) >> 2] | 0),
                (y = (B | 0) > 0),
                K)
              )
                if (y) {
                  (P = 0), (w = l), (y = f);
                  do
                    (w = lg(w, y) | 0),
                      (y = W() | 0),
                      (v = Wr(v) | 0),
                      (v | 0) == 1 && (v = Wr(1) | 0),
                      (P = (P + 1) | 0);
                  while ((P | 0) != (B | 0));
                  (B = v), (P = w), (w = y);
                } else (B = v), (P = l), (w = f);
              else if (y) {
                (P = 0), (w = l), (y = f);
                do
                  (w = p0(w, y) | 0),
                    (y = W() | 0),
                    (v = Wr(v) | 0),
                    (P = (P + 1) | 0);
                while ((P | 0) != (B | 0));
                (B = v), (P = w), (w = y);
              } else (B = v), (P = l), (w = f);
              if (
                (m0(P, w, Se) | 0,
                re || dt(23115, 23090, 191, 23100),
                (y = (j | 0) != 0),
                (v = (K | 0) != 0),
                y & v && dt(23142, 23090, 192, 23100),
                y)
              ) {
                if (((v = hi(a, o) | 0), (v | 0) == 7)) {
                  m = 5;
                  break;
                }
                if (pt[(21872 + ((v * 7) | 0) + Z) >> 0] | 0) {
                  m = 1;
                  break;
                }
                (w = A[(21040 + ((v * 28) | 0) + (Z << 2)) >> 2] | 0), (P = w);
              } else if (v) {
                if (((v = hi(P, w) | 0), (v | 0) == 7)) {
                  m = 5;
                  break;
                }
                if (pt[(21872 + ((v * 7) | 0) + B) >> 0] | 0) {
                  m = 1;
                  break;
                }
                (P = 0), (w = A[(21040 + ((B * 28) | 0) + (v << 2)) >> 2] | 0);
              } else (P = 0), (w = 0);
              if ((P | w | 0) < 0) m = 5;
              else {
                if ((w | 0) > 0) {
                  (y = (Se + 4) | 0), (v = 0);
                  do eA(y), (v = (v + 1) | 0);
                  while ((v | 0) != (w | 0));
                }
                if (
                  ((A[Ee >> 2] = 0),
                  (A[(Ee + 4) >> 2] = 0),
                  (A[(Ee + 8) >> 2] = 0),
                  tf(Ee, Z),
                  m | 0)
                )
                  for (; Ui(m) | 0 ? Ja(Ee) : gs(Ee), (m | 0) > 1; )
                    m = (m + -1) | 0;
                if ((P | 0) > 0) {
                  m = 0;
                  do eA(Ee), (m = (m + 1) | 0);
                  while ((m | 0) != (P | 0));
                }
                (ce = (Se + 4) | 0), ei(ce, Ee, ce), Hn(ce), (ce = 51);
              }
            } else if ((m0(l, f, Se) | 0, ((j | 0) != 0) & ((K | 0) != 0)))
              if (
                ((B | 0) != (P | 0) && dt(23173, 23090, 261, 23100),
                (v = hi(a, o) | 0),
                (m = hi(l, f) | 0),
                ((v | 0) == 7) | ((m | 0) == 7))
              )
                m = 5;
              else if (pt[(21872 + ((v * 7) | 0) + m) >> 0] | 0) m = 1;
              else if (
                ((v = A[(21040 + ((v * 28) | 0) + (m << 2)) >> 2] | 0),
                (v | 0) > 0)
              ) {
                (y = (Se + 4) | 0), (m = 0);
                do eA(y), (m = (m + 1) | 0);
                while ((m | 0) != (v | 0));
                ce = 51;
              } else ce = 51;
            else ce = 51;
          while (0);
          return (
            (ce | 0) == 51 &&
              ((m = (Se + 4) | 0),
              (A[h >> 2] = A[m >> 2]),
              (A[(h + 4) >> 2] = A[(m + 4) >> 2]),
              (A[(h + 8) >> 2] = A[(m + 8) >> 2]),
              (m = 0)),
            (Se = m),
            (z = _e),
            Se | 0
          );
        }
        function gf(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0;
          if (
            ((ce = z),
            (z = (z + 48) | 0),
            (P = (ce + 36) | 0),
            (v = (ce + 24) | 0),
            (y = (ce + 12) | 0),
            (w = ce),
            (h = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (h = h & 15),
            (K = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (K = K & 127),
            K >>> 0 > 121)
          )
            return (f = 5), (z = ce), f | 0;
          if (
            ((B = ln(K) | 0),
            je(h | 0, 0, 52) | 0,
            (Ee = W() | 0 | 134225919),
            (m = f),
            (A[m >> 2] = -1),
            (A[(m + 4) >> 2] = Ee),
            !h)
          )
            return (
              (h = Ka(l) | 0),
              (h | 0) == 7 || ((h = o0(K, h) | 0), (h | 0) == 127)
                ? ((Ee = 1), (z = ce), Ee | 0)
                : ((re = je(h | 0, 0, 45) | 0),
                  (Z = W() | 0),
                  (K = f),
                  (Z = (A[(K + 4) >> 2] & -1040385) | Z),
                  (Ee = f),
                  (A[Ee >> 2] = A[K >> 2] | re),
                  (A[(Ee + 4) >> 2] = Z),
                  (Ee = 0),
                  (z = ce),
                  Ee | 0)
            );
          for (
            A[P >> 2] = A[l >> 2],
              A[(P + 4) >> 2] = A[(l + 4) >> 2],
              A[(P + 8) >> 2] = A[(l + 8) >> 2],
              l = h;
            ;

          ) {
            if (
              ((m = l),
              (l = (l + -1) | 0),
              (A[v >> 2] = A[P >> 2]),
              (A[(v + 4) >> 2] = A[(P + 4) >> 2]),
              (A[(v + 8) >> 2] = A[(P + 8) >> 2]),
              Ui(m) | 0)
            ) {
              if (((h = Bm(P) | 0), h | 0)) {
                l = 13;
                break;
              }
              (A[y >> 2] = A[P >> 2]),
                (A[(y + 4) >> 2] = A[(P + 4) >> 2]),
                (A[(y + 8) >> 2] = A[(P + 8) >> 2]),
                Ja(y);
            } else {
              if (((h = Nm(P) | 0), h | 0)) {
                l = 13;
                break;
              }
              (A[y >> 2] = A[P >> 2]),
                (A[(y + 4) >> 2] = A[(P + 4) >> 2]),
                (A[(y + 8) >> 2] = A[(P + 8) >> 2]),
                gs(y);
            }
            if (
              (A0(v, y, w),
              Hn(w),
              (h = f),
              (_e = A[h >> 2] | 0),
              (h = A[(h + 4) >> 2] | 0),
              (ve = (((15 - m) | 0) * 3) | 0),
              (Se = je(7, 0, ve | 0) | 0),
              (h = h & ~(W() | 0)),
              (ve = je(Ka(w) | 0, 0, ve | 0) | 0),
              (h = W() | 0 | h),
              (Ee = f),
              (A[Ee >> 2] = ve | (_e & ~Se)),
              (A[(Ee + 4) >> 2] = h),
              (m | 0) <= 1)
            ) {
              l = 14;
              break;
            }
          }
          e: do
            if ((l | 0) != 13 && (l | 0) == 14)
              if (
                (A[P >> 2] | 0) <= 1 &&
                (A[(P + 4) >> 2] | 0) <= 1 &&
                (A[(P + 8) >> 2] | 0) <= 1
              ) {
                (l = Ka(P) | 0),
                  (h = o0(K, l) | 0),
                  (h | 0) == 127 ? (w = 0) : (w = ln(h) | 0);
                t: do
                  if (l) {
                    if (B) {
                      if (((h = hi(a, o) | 0), (h | 0) == 7)) {
                        h = 5;
                        break e;
                      }
                      if (
                        ((m = A[(21248 + ((h * 28) | 0) + (l << 2)) >> 2] | 0),
                        (m | 0) > 0)
                      ) {
                        (h = l), (l = 0);
                        do (h = _s(h) | 0), (l = (l + 1) | 0);
                        while ((l | 0) != (m | 0));
                      } else h = l;
                      if ((h | 0) == 1) {
                        h = 9;
                        break e;
                      }
                      (l = o0(K, h) | 0),
                        (l | 0) == 127 && dt(23200, 23090, 411, 23230),
                        ln(l) | 0
                          ? dt(23245, 23090, 412, 23230)
                          : ((Z = l), (re = m), (j = h));
                    } else (Z = h), (re = 0), (j = l);
                    if (
                      ((y = A[(4272 + ((K * 28) | 0) + (j << 2)) >> 2] | 0),
                      (y | 0) <= -1 && dt(23276, 23090, 419, 23230),
                      !w)
                    ) {
                      if ((re | 0) < 0) {
                        h = 5;
                        break e;
                      }
                      if (re | 0) {
                        (m = f),
                          (h = 0),
                          (l = A[m >> 2] | 0),
                          (m = A[(m + 4) >> 2] | 0);
                        do
                          (l = vs(l, m) | 0),
                            (m = W() | 0),
                            (ve = f),
                            (A[ve >> 2] = l),
                            (A[(ve + 4) >> 2] = m),
                            (h = (h + 1) | 0);
                        while ((h | 0) < (re | 0));
                      }
                      if ((y | 0) <= 0) {
                        (h = Z), (l = 58);
                        break;
                      }
                      for (
                        m = f,
                          h = 0,
                          l = A[m >> 2] | 0,
                          m = A[(m + 4) >> 2] | 0;
                        ;

                      )
                        if (
                          ((l = vs(l, m) | 0),
                          (m = W() | 0),
                          (ve = f),
                          (A[ve >> 2] = l),
                          (A[(ve + 4) >> 2] = m),
                          (h = (h + 1) | 0),
                          (h | 0) == (y | 0))
                        ) {
                          (h = Z), (l = 58);
                          break t;
                        }
                    }
                    if (
                      ((v = a0(Z, K) | 0),
                      (v | 0) == 7 && dt(23066, 23090, 428, 23230),
                      (h = f),
                      (l = A[h >> 2] | 0),
                      (h = A[(h + 4) >> 2] | 0),
                      (y | 0) > 0)
                    ) {
                      m = 0;
                      do
                        (l = vs(l, h) | 0),
                          (h = W() | 0),
                          (ve = f),
                          (A[ve >> 2] = l),
                          (A[(ve + 4) >> 2] = h),
                          (m = (m + 1) | 0);
                      while ((m | 0) != (y | 0));
                    }
                    if (
                      ((h = hi(l, h) | 0),
                      (h | 0) == 7 && dt(23313, 23090, 440, 23230),
                      (l = s0(Z) | 0),
                      (l =
                        A[
                          ((l ? 21664 : 21456) + ((v * 28) | 0) + (h << 2)) >> 2
                        ] | 0),
                      (l | 0) < 0 && dt(23313, 23090, 454, 23230),
                      !l)
                    )
                      (h = Z), (l = 58);
                    else {
                      (v = f),
                        (h = 0),
                        (m = A[v >> 2] | 0),
                        (v = A[(v + 4) >> 2] | 0);
                      do
                        (m = d0(m, v) | 0),
                          (v = W() | 0),
                          (ve = f),
                          (A[ve >> 2] = m),
                          (A[(ve + 4) >> 2] = v),
                          (h = (h + 1) | 0);
                      while ((h | 0) < (l | 0));
                      (h = Z), (l = 58);
                    }
                  } else if (((B | 0) != 0) & ((w | 0) != 0)) {
                    if (
                      ((l = hi(a, o) | 0),
                      (m = f),
                      (m = hi(A[m >> 2] | 0, A[(m + 4) >> 2] | 0) | 0),
                      ((l | 0) == 7) | ((m | 0) == 7))
                    ) {
                      h = 5;
                      break e;
                    }
                    if (
                      ((m = A[(21248 + ((l * 28) | 0) + (m << 2)) >> 2] | 0),
                      (m | 0) < 0)
                    ) {
                      h = 5;
                      break e;
                    }
                    if (!m) l = 59;
                    else {
                      (y = f),
                        (l = 0),
                        (v = A[y >> 2] | 0),
                        (y = A[(y + 4) >> 2] | 0);
                      do
                        (v = vs(v, y) | 0),
                          (y = W() | 0),
                          (ve = f),
                          (A[ve >> 2] = v),
                          (A[(ve + 4) >> 2] = y),
                          (l = (l + 1) | 0);
                      while ((l | 0) < (m | 0));
                      l = 58;
                    }
                  } else l = 58;
                while (0);
                if (
                  ((l | 0) == 58 && w && (l = 59),
                  (l | 0) == 59 &&
                    ((ve = f),
                    (hi(A[ve >> 2] | 0, A[(ve + 4) >> 2] | 0) | 0) == 1))
                ) {
                  h = 9;
                  break;
                }
                (ve = f),
                  (Se = A[ve >> 2] | 0),
                  (ve = A[(ve + 4) >> 2] & -1040385),
                  (_e = je(h | 0, 0, 45) | 0),
                  (ve = ve | (W() | 0)),
                  (h = f),
                  (A[h >> 2] = Se | _e),
                  (A[(h + 4) >> 2] = ve),
                  (h = 0);
              } else h = 1;
          while (0);
          return (ve = h), (z = ce), ve | 0;
        }
        function Lg(a, o, l, f, h, m) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (h = h | 0),
            (m = m | 0);
          var v = 0,
            y = 0;
          return (
            (y = z),
            (z = (z + 16) | 0),
            (v = y),
            h
              ? (a = 15)
              : ((a = Sr(a, o, l, f, v) | 0), a || (km(v, m), (a = 0))),
            (z = y),
            a | 0
          );
        }
        function Dg(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0;
          return (
            (v = z),
            (z = (z + 16) | 0),
            (m = v),
            f ? (l = 15) : ((l = zm(l, m) | 0), l || (l = gf(a, o, m, h) | 0)),
            (z = v),
            l | 0
          );
        }
        function Ig(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0;
          return (
            (w = z),
            (z = (z + 32) | 0),
            (v = (w + 12) | 0),
            (y = w),
            (m = Sr(a, o, a, o, v) | 0),
            m | 0
              ? ((y = m), (z = w), y | 0)
              : ((a = Sr(a, o, l, f, y) | 0),
                a | 0
                  ? ((y = a), (z = w), y | 0)
                  : ((v = l0(v, y) | 0),
                    (y = h),
                    (A[y >> 2] = v),
                    (A[(y + 4) >> 2] = (((v | 0) < 0) << 31) >> 31),
                    (y = 0),
                    (z = w),
                    y | 0))
          );
        }
        function Og(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0;
          return (
            (w = z),
            (z = (z + 32) | 0),
            (v = (w + 12) | 0),
            (y = w),
            (m = Sr(a, o, a, o, v) | 0),
            !m && ((m = Sr(a, o, l, f, y) | 0), !m)
              ? ((f = l0(v, y) | 0),
                (f = zt(f | 0, ((((f | 0) < 0) << 31) >> 31) | 0, 1, 0) | 0),
                (v = W() | 0),
                (y = h),
                (A[y >> 2] = f),
                (A[(y + 4) >> 2] = v),
                (y = 0),
                (z = w),
                y | 0)
              : ((y = m), (z = w), y | 0)
          );
        }
        function Ug(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0,
            Ze = 0;
          if (
            ((He = z),
            (z = (z + 48) | 0),
            (v = (He + 24) | 0),
            (y = (He + 12) | 0),
            (st = He),
            (m = Sr(a, o, a, o, v) | 0),
            !m && ((m = Sr(a, o, l, f, y) | 0), !m))
          ) {
            (ue = l0(v, y) | 0),
              (Ye = (((ue | 0) < 0) << 31) >> 31),
              (A[v >> 2] = 0),
              (A[(v + 4) >> 2] = 0),
              (A[(v + 8) >> 2] = 0),
              (A[y >> 2] = 0),
              (A[(y + 4) >> 2] = 0),
              (A[(y + 8) >> 2] = 0),
              Sr(a, o, a, o, v) | 0 && dt(23313, 23090, 691, 23299),
              Sr(a, o, l, f, y) | 0 && dt(23313, 23090, 696, 23299),
              of(v),
              of(y),
              ue
                ? ((j = A[v >> 2] | 0),
                  (Z = +(ue | 0)),
                  (Se = (v + 4) | 0),
                  (K = A[Se >> 2] | 0),
                  (_e = (v + 8) | 0),
                  (re = A[_e >> 2] | 0),
                  (ve = v),
                  (f = j),
                  (m = K),
                  (l = re),
                  (ce = +(((A[y >> 2] | 0) - j) | 0) / Z),
                  (Ee = +(((A[(y + 4) >> 2] | 0) - K) | 0) / Z),
                  (Z = +(((A[(y + 8) >> 2] | 0) - re) | 0) / Z))
                : ((m = (v + 4) | 0),
                  (l = (v + 8) | 0),
                  (Se = m),
                  (_e = l),
                  (ve = v),
                  (f = A[v >> 2] | 0),
                  (m = A[m >> 2] | 0),
                  (l = A[l >> 2] | 0),
                  (ce = 0),
                  (Ee = 0),
                  (Z = 0)),
              (A[st >> 2] = f),
              (re = (st + 4) | 0),
              (A[re >> 2] = m),
              (K = (st + 8) | 0),
              (A[K >> 2] = l);
            e: do
              if ((ue | 0) < 0) m = 0;
              else
                for (B = 0, j = 0, m = f; ; ) {
                  (P = +(j >>> 0) + 4294967296 * +(B | 0)),
                    (Ze = ce * P + +(m | 0)),
                    (w = Ee * P + +(A[Se >> 2] | 0)),
                    (P = Z * P + +(A[_e >> 2] | 0)),
                    (l = ~~+rA(+Ze)),
                    (v = ~~+rA(+w)),
                    (m = ~~+rA(+P)),
                    (Ze = +Ae(+(+(l | 0) - Ze))),
                    (w = +Ae(+(+(v | 0) - w))),
                    (P = +Ae(+(+(m | 0) - P)));
                  do
                    if ((Ze > w) & (Ze > P)) (l = (0 - (v + m)) | 0), (f = v);
                    else if (((y = (0 - l) | 0), w > P)) {
                      f = (y - m) | 0;
                      break;
                    } else {
                      (f = v), (m = (y - v) | 0);
                      break;
                    }
                  while (0);
                  if (
                    ((A[st >> 2] = l),
                    (A[re >> 2] = f),
                    (A[K >> 2] = m),
                    Gm(st),
                    (m = gf(a, o, st, (h + (j << 3)) | 0) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    !(
                      ((B | 0) < (Ye | 0)) |
                      (((B | 0) == (Ye | 0)) & (j >>> 0 < ue >>> 0))
                    )
                  ) {
                    m = 0;
                    break e;
                  }
                  (m = zt(j | 0, B | 0, 1, 0) | 0),
                    (y = W() | 0),
                    (B = y),
                    (j = m),
                    (m = A[ve >> 2] | 0);
                }
            while (0);
            return (st = m), (z = He), st | 0;
          }
          return (st = m), (z = He), st | 0;
        }
        function jr(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0;
          if (((l | 0) == 0) & ((f | 0) == 0))
            return (h = 0), (m = 1), wt(h | 0), m | 0;
          (m = a), (h = o), (a = 1), (o = 0);
          do
            (v = (((l & 1) | 0) == 0) & !0),
              (a = Wn((v ? 1 : m) | 0, (v ? 0 : h) | 0, a | 0, o | 0) | 0),
              (o = W() | 0),
              (l = Tf(l | 0, f | 0, 1) | 0),
              (f = W() | 0),
              (m = Wn(m | 0, h | 0, m | 0, h | 0) | 0),
              (h = W() | 0);
          while (!(((l | 0) == 0) & ((f | 0) == 0)));
          return wt(o | 0), a | 0;
        }
        function _f(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0;
          if (
            !(Zc(o, l) | 0) ||
            ((o = Yc(o) | 0),
            (f = +H[l >> 3]),
            (h = +H[(l + 8) >> 3]),
            (h = o & (h < 0) ? h + 6.283185307179586 : h),
            (K = A[a >> 2] | 0),
            (K | 0) <= 0)
          )
            return (K = 0), K | 0;
          if (((j = A[(a + 4) >> 2] | 0), o)) {
            (o = 0), (B = h), (l = -1), (a = 0);
            e: for (;;) {
              for (
                P = a;
                (v = +H[(j + (P << 4)) >> 3]),
                  (h = +H[(j + (P << 4) + 8) >> 3]),
                  (a = ((l + 2) | 0) % (K | 0) | 0),
                  (m = +H[(j + (a << 4)) >> 3]),
                  (y = +H[(j + (a << 4) + 8) >> 3]),
                  v > m
                    ? ((w = v), (v = y))
                    : ((w = m), (m = v), (v = h), (h = y)),
                  (f = (f == m) | (f == w) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > w));

              )
                if (((l = (P + 1) | 0), (l | 0) >= (K | 0))) {
                  l = 22;
                  break e;
                } else (a = P), (P = l), (l = a);
              if (
                ((y = v < 0 ? v + 6.283185307179586 : v),
                (v = h < 0 ? h + 6.283185307179586 : h),
                (B = (y == B) | (v == B) ? B + -2220446049250313e-31 : B),
                (w = y + (v - y) * ((f - m) / (w - m))),
                (w < 0 ? w + 6.283185307179586 : w) > B && (o = o ^ 1),
                (a = (P + 1) | 0),
                (a | 0) >= (K | 0))
              ) {
                l = 22;
                break;
              } else l = P;
            }
            if ((l | 0) == 22) return o | 0;
          } else {
            (o = 0), (B = h), (l = -1), (a = 0);
            e: for (;;) {
              for (
                P = a;
                (v = +H[(j + (P << 4)) >> 3]),
                  (h = +H[(j + (P << 4) + 8) >> 3]),
                  (a = ((l + 2) | 0) % (K | 0) | 0),
                  (m = +H[(j + (a << 4)) >> 3]),
                  (y = +H[(j + (a << 4) + 8) >> 3]),
                  v > m
                    ? ((w = v), (v = y))
                    : ((w = m), (m = v), (v = h), (h = y)),
                  (f = (f == m) | (f == w) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > w));

              )
                if (((l = (P + 1) | 0), (l | 0) >= (K | 0))) {
                  l = 22;
                  break e;
                } else (a = P), (P = l), (l = a);
              if (
                ((B = (v == B) | (h == B) ? B + -2220446049250313e-31 : B),
                v + (h - v) * ((f - m) / (w - m)) > B && (o = o ^ 1),
                (a = (P + 1) | 0),
                (a | 0) >= (K | 0))
              ) {
                l = 22;
                break;
              } else l = P;
            }
            if ((l | 0) == 22) return o | 0;
          }
          return 0;
        }
        function vf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0;
          if (((Z = A[a >> 2] | 0), !Z)) {
            (A[o >> 2] = 0),
              (A[(o + 4) >> 2] = 0),
              (A[(o + 8) >> 2] = 0),
              (A[(o + 12) >> 2] = 0),
              (A[(o + 16) >> 2] = 0),
              (A[(o + 20) >> 2] = 0),
              (A[(o + 24) >> 2] = 0),
              (A[(o + 28) >> 2] = 0);
            return;
          }
          if (
            ((ce = (o + 8) | 0),
            (H[ce >> 3] = 17976931348623157e292),
            (Ee = (o + 24) | 0),
            (H[Ee >> 3] = 17976931348623157e292),
            (H[o >> 3] = -17976931348623157e292),
            (Se = (o + 16) | 0),
            (H[Se >> 3] = -17976931348623157e292),
            !((Z | 0) <= 0))
          ) {
            for (
              K = A[(a + 4) >> 2] | 0,
                P = 17976931348623157e292,
                B = -17976931348623157e292,
                j = 0,
                a = -1,
                m = 17976931348623157e292,
                v = 17976931348623157e292,
                w = -17976931348623157e292,
                f = -17976931348623157e292,
                re = 0;
              (l = +H[(K + (re << 4)) >> 3]),
                (y = +H[(K + (re << 4) + 8) >> 3]),
                (a = (a + 2) | 0),
                (h = +H[(K + (((a | 0) == (Z | 0) ? 0 : a) << 4) + 8) >> 3]),
                l < m && ((H[ce >> 3] = l), (m = l)),
                y < v && ((H[Ee >> 3] = y), (v = y)),
                l > w ? (H[o >> 3] = l) : (l = w),
                y > f && ((H[Se >> 3] = y), (f = y)),
                (P = (y > 0) & (y < P) ? y : P),
                (B = (y < 0) & (y > B) ? y : B),
                (j = j | (+Ae(+(y - h)) > 3.141592653589793)),
                (a = (re + 1) | 0),
                (a | 0) != (Z | 0);

            )
              (_e = re), (w = l), (re = a), (a = _e);
            j && ((H[Se >> 3] = B), (H[Ee >> 3] = P));
          }
        }
        function qg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0,
            st = 0,
            He = 0;
          if (((Z = A[a >> 2] | 0), Z)) {
            if (
              ((ce = (o + 8) | 0),
              (H[ce >> 3] = 17976931348623157e292),
              (Ee = (o + 24) | 0),
              (H[Ee >> 3] = 17976931348623157e292),
              (H[o >> 3] = -17976931348623157e292),
              (Se = (o + 16) | 0),
              (H[Se >> 3] = -17976931348623157e292),
              (Z | 0) > 0)
            ) {
              for (
                h = A[(a + 4) >> 2] | 0,
                  K = 17976931348623157e292,
                  re = -17976931348623157e292,
                  f = 0,
                  l = -1,
                  w = 17976931348623157e292,
                  P = 17976931348623157e292,
                  j = -17976931348623157e292,
                  v = -17976931348623157e292,
                  _e = 0;
                (m = +H[(h + (_e << 4)) >> 3]),
                  (B = +H[(h + (_e << 4) + 8) >> 3]),
                  (st = (l + 2) | 0),
                  (y =
                    +H[(h + (((st | 0) == (Z | 0) ? 0 : st) << 4) + 8) >> 3]),
                  m < w && ((H[ce >> 3] = m), (w = m)),
                  B < P && ((H[Ee >> 3] = B), (P = B)),
                  m > j ? (H[o >> 3] = m) : (m = j),
                  B > v && ((H[Se >> 3] = B), (v = B)),
                  (K = (B > 0) & (B < K) ? B : K),
                  (re = (B < 0) & (B > re) ? B : re),
                  (f = f | (+Ae(+(B - y)) > 3.141592653589793)),
                  (l = (_e + 1) | 0),
                  (l | 0) != (Z | 0);

              )
                (st = _e), (j = m), (_e = l), (l = st);
              f && ((H[Se >> 3] = re), (H[Ee >> 3] = K));
            }
          } else
            (A[o >> 2] = 0),
              (A[(o + 4) >> 2] = 0),
              (A[(o + 8) >> 2] = 0),
              (A[(o + 12) >> 2] = 0),
              (A[(o + 16) >> 2] = 0),
              (A[(o + 20) >> 2] = 0),
              (A[(o + 24) >> 2] = 0),
              (A[(o + 28) >> 2] = 0);
          if (((st = (a + 8) | 0), (l = A[st >> 2] | 0), !((l | 0) <= 0))) {
            (Ye = (a + 12) | 0), (ue = 0);
            do
              if (
                ((h = A[Ye >> 2] | 0),
                (f = ue),
                (ue = (ue + 1) | 0),
                (Ee = (o + (ue << 5)) | 0),
                (Se = A[(h + (f << 3)) >> 2] | 0),
                Se)
              ) {
                if (
                  ((_e = (o + (ue << 5) + 8) | 0),
                  (H[_e >> 3] = 17976931348623157e292),
                  (a = (o + (ue << 5) + 24) | 0),
                  (H[a >> 3] = 17976931348623157e292),
                  (H[Ee >> 3] = -17976931348623157e292),
                  (ve = (o + (ue << 5) + 16) | 0),
                  (H[ve >> 3] = -17976931348623157e292),
                  (Se | 0) > 0)
                ) {
                  for (
                    Z = A[(h + (f << 3) + 4) >> 2] | 0,
                      K = 17976931348623157e292,
                      re = -17976931348623157e292,
                      h = 0,
                      f = -1,
                      ce = 0,
                      w = 17976931348623157e292,
                      P = 17976931348623157e292,
                      B = -17976931348623157e292,
                      v = -17976931348623157e292;
                    (m = +H[(Z + (ce << 4)) >> 3]),
                      (j = +H[(Z + (ce << 4) + 8) >> 3]),
                      (f = (f + 2) | 0),
                      (y =
                        +H[
                          (Z + (((f | 0) == (Se | 0) ? 0 : f) << 4) + 8) >> 3
                        ]),
                      m < w && ((H[_e >> 3] = m), (w = m)),
                      j < P && ((H[a >> 3] = j), (P = j)),
                      m > B ? (H[Ee >> 3] = m) : (m = B),
                      j > v && ((H[ve >> 3] = j), (v = j)),
                      (K = (j > 0) & (j < K) ? j : K),
                      (re = (j < 0) & (j > re) ? j : re),
                      (h = h | (+Ae(+(j - y)) > 3.141592653589793)),
                      (f = (ce + 1) | 0),
                      (f | 0) != (Se | 0);

                  )
                    (He = ce), (ce = f), (B = m), (f = He);
                  h && ((H[ve >> 3] = re), (H[a >> 3] = K));
                }
              } else
                (A[Ee >> 2] = 0),
                  (A[(Ee + 4) >> 2] = 0),
                  (A[(Ee + 8) >> 2] = 0),
                  (A[(Ee + 12) >> 2] = 0),
                  (A[(Ee + 16) >> 2] = 0),
                  (A[(Ee + 20) >> 2] = 0),
                  (A[(Ee + 24) >> 2] = 0),
                  (A[(Ee + 28) >> 2] = 0),
                  (l = A[st >> 2] | 0);
            while ((ue | 0) < (l | 0));
          }
        }
        function Bg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          if (!(_f(a, o, l) | 0)) return (h = 0), h | 0;
          if (((h = (a + 8) | 0), (A[h >> 2] | 0) <= 0)) return (h = 1), h | 0;
          for (f = (a + 12) | 0, a = 0; ; ) {
            if (
              ((m = a),
              (a = (a + 1) | 0),
              _f(((A[f >> 2] | 0) + (m << 3)) | 0, (o + (a << 5)) | 0, l) | 0)
            ) {
              (a = 0), (f = 6);
              break;
            }
            if ((a | 0) >= (A[h >> 2] | 0)) {
              (a = 1), (f = 6);
              break;
            }
          }
          return (f | 0) == 6 ? a | 0 : 0;
        }
        function Ng() {
          return 8;
        }
        function Fg() {
          return 16;
        }
        function kg() {
          return 168;
        }
        function zg() {
          return 8;
        }
        function Gg() {
          return 16;
        }
        function Hg() {
          return 12;
        }
        function Vg() {
          return 8;
        }
        function Wg(a) {
          return (
            (a = a | 0),
            +(+((A[a >> 2] | 0) >>> 0) + 4294967296 * +(A[(a + 4) >> 2] | 0))
          );
        }
        function jg(a) {
          a = a | 0;
          var o = 0,
            l = 0;
          return (
            (l = +H[a >> 3]), (o = +H[(a + 8) >> 3]), +(+ge(+(l * l + o * o)))
          );
        }
        function xf(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0;
          (P = +H[a >> 3]),
            (w = +H[o >> 3] - P),
            (y = +H[(a + 8) >> 3]),
            (v = +H[(o + 8) >> 3] - y),
            (j = +H[l >> 3]),
            (m = +H[f >> 3] - j),
            (K = +H[(l + 8) >> 3]),
            (B = +H[(f + 8) >> 3] - K),
            (m = (m * (y - K) - (P - j) * B) / (w * B - v * m)),
            (H[h >> 3] = P + w * m),
            (H[(h + 8) >> 3] = y + v * m);
        }
        function yf(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            +Ae(+(+H[a >> 3] - +H[o >> 3])) < 11920928955078125e-23
              ? ((o =
                  +Ae(+(+H[(a + 8) >> 3] - +H[(o + 8) >> 3])) <
                  11920928955078125e-23),
                o | 0)
              : ((o = 0), o | 0)
          );
        }
        function En(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          return (
            (h = +H[a >> 3] - +H[o >> 3]),
            (f = +H[(a + 8) >> 3] - +H[(o + 8) >> 3]),
            (l = +H[(a + 16) >> 3] - +H[(o + 16) >> 3]),
            +(h * h + f * f + l * l)
          );
        }
        function Xg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0;
          (l = +H[a >> 3]),
            (f = +Qe(+l)),
            (l = +Ge(+l)),
            (H[(o + 16) >> 3] = l),
            (l = +H[(a + 8) >> 3]),
            (h = f * +Qe(+l)),
            (H[o >> 3] = h),
            (l = f * +Ge(+l)),
            (H[(o + 8) >> 3] = l);
        }
        function Qg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          if (
            ((m = z),
            (z = (z + 16) | 0),
            (h = m),
            (f = un(a, o) | 0),
            ((l + -1) | 0) >>> 0 > 5 ||
              ((f = (f | 0) != 0), ((l | 0) == 1) & f))
          )
            return (h = -1), (z = m), h | 0;
          do
            if (ta(a, o, h) | 0) f = -1;
            else if (f) {
              f =
                (((A[(21936 + (l << 2)) >> 2] | 0) + 5 - (A[h >> 2] | 0)) | 0) %
                  5 |
                0;
              break;
            } else {
              f =
                (((A[(21968 + (l << 2)) >> 2] | 0) + 6 - (A[h >> 2] | 0)) | 0) %
                  6 |
                0;
              break;
            }
          while (0);
          return (h = f), (z = m), h | 0;
        }
        function ta(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          if (
            ((P = z),
            (z = (z + 32) | 0),
            (v = (P + 16) | 0),
            (y = P),
            (f = Ws(a, o, v) | 0),
            f | 0)
          )
            return (l = f), (z = P), l | 0;
          (m = lf(a, o) | 0),
            (w = hi(a, o) | 0),
            Pm(m, y),
            (f = Lm(m, A[v >> 2] | 0) | 0);
          e: do
            if (ln(m) | 0) {
              do
                switch (m | 0) {
                  case 4: {
                    a = 0;
                    break;
                  }
                  case 14: {
                    a = 1;
                    break;
                  }
                  case 24: {
                    a = 2;
                    break;
                  }
                  case 38: {
                    a = 3;
                    break;
                  }
                  case 49: {
                    a = 4;
                    break;
                  }
                  case 58: {
                    a = 5;
                    break;
                  }
                  case 63: {
                    a = 6;
                    break;
                  }
                  case 72: {
                    a = 7;
                    break;
                  }
                  case 83: {
                    a = 8;
                    break;
                  }
                  case 97: {
                    a = 9;
                    break;
                  }
                  case 107: {
                    a = 10;
                    break;
                  }
                  case 117: {
                    a = 11;
                    break;
                  }
                  default: {
                    f = 1;
                    break e;
                  }
                }
              while (0);
              if (
                ((h = A[(22e3 + ((a * 24) | 0) + 8) >> 2] | 0),
                (o = A[(22e3 + ((a * 24) | 0) + 16) >> 2] | 0),
                (a = A[v >> 2] | 0),
                (a | 0) != (A[y >> 2] | 0) &&
                  ((y = s0(m) | 0),
                  (a = A[v >> 2] | 0),
                  y | ((a | 0) == (o | 0)) && (f = ((f + 1) | 0) % 6 | 0)),
                ((w | 0) == 3) & ((a | 0) == (o | 0)))
              ) {
                (f = ((f + 5) | 0) % 6 | 0), (h = 22);
                break;
              }
              ((w | 0) == 5) & ((a | 0) == (h | 0)) &&
                (f = ((f + 1) | 0) % 6 | 0),
                (h = 22);
            } else h = 22;
          while (0);
          return (
            (h | 0) == 22 && ((A[l >> 2] = f), (f = 0)), (l = f), (z = P), l | 0
          );
        }
        function qi(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0;
          if (
            ((ve = z),
            (z = (z + 32) | 0),
            (_e = (ve + 24) | 0),
            (Ee = (ve + 20) | 0),
            (Z = (ve + 8) | 0),
            (re = (ve + 16) | 0),
            (K = ve),
            (w = (un(a, o) | 0) == 0),
            (w = w ? 6 : 5),
            (B = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (B = B & 15),
            w >>> 0 <= l >>> 0)
          )
            return (f = 2), (z = ve), f | 0;
          (j = (B | 0) == 0),
            !j &&
            ((ce = je(7, 0, ((B ^ 15) * 3) | 0) | 0),
            (((ce & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0))
              ? (h = l)
              : (m = 4);
          e: do
            if ((m | 0) == 4) {
              if (
                ((h = (un(a, o) | 0) != 0),
                ((h ? 4 : 5) | 0) < (l | 0) ||
                  ta(a, o, _e) | 0 ||
                  ((m = ((A[_e >> 2] | 0) + l) | 0),
                  h
                    ? (h = (22288 + (((m | 0) % 5 | 0) << 2)) | 0)
                    : (h = (22320 + (((m | 0) % 6 | 0) << 2)) | 0),
                  (ce = A[h >> 2] | 0),
                  (ce | 0) == 7))
              )
                return (f = 1), (z = ve), f | 0;
              (A[Ee >> 2] = 0), (h = qn(a, o, ce, Ee, Z) | 0);
              do
                if (!h) {
                  if (
                    ((y = Z),
                    (P = A[y >> 2] | 0),
                    (y = A[(y + 4) >> 2] | 0),
                    (v =
                      (y >>> 0 < o >>> 0) |
                      (((y | 0) == (o | 0)) & (P >>> 0 < a >>> 0))),
                    (m = v ? P : a),
                    (v = v ? y : o),
                    !j &&
                      ((j = je(7, 0, ((B ^ 15) * 3) | 0) | 0),
                      (((P & j) | 0) == 0) & (((y & (W() | 0)) | 0) == 0)))
                  )
                    h = l;
                  else {
                    if (
                      ((y = ((l + -1 + w) | 0) % (w | 0) | 0),
                      (h = un(a, o) | 0),
                      (y | 0) < 0 && dt(23313, 23315, 245, 23324),
                      (w = (h | 0) != 0),
                      ((w ? 4 : 5) | 0) < (y | 0) &&
                        dt(23313, 23315, 245, 23324),
                      ta(a, o, _e) | 0 && dt(23313, 23315, 245, 23324),
                      (h = ((A[_e >> 2] | 0) + y) | 0),
                      w
                        ? (h = (22288 + (((h | 0) % 5 | 0) << 2)) | 0)
                        : (h = (22320 + (((h | 0) % 6 | 0) << 2)) | 0),
                      (y = A[h >> 2] | 0),
                      (y | 0) == 7 && dt(23313, 23315, 245, 23324),
                      (A[re >> 2] = 0),
                      (h = qn(a, o, y, re, K) | 0),
                      h | 0)
                    )
                      break;
                    (P = K), (w = A[P >> 2] | 0), (P = A[(P + 4) >> 2] | 0);
                    do
                      if (
                        (P >>> 0 < v >>> 0) |
                        (((P | 0) == (v | 0)) & (w >>> 0 < m >>> 0))
                      ) {
                        if (
                          (un(w, P) | 0
                            ? (m = r0(w, P, a, o) | 0)
                            : (m =
                                A[
                                  (22384 +
                                    (((((A[re >> 2] | 0) +
                                      (A[(22352 + (y << 2)) >> 2] | 0)) |
                                      0) %
                                      6 |
                                      0) <<
                                      2)) >>
                                    2
                                ] | 0),
                          (h = un(w, P) | 0),
                          ((m + -1) | 0) >>> 0 > 5)
                        ) {
                          (h = -1), (m = w), (v = P);
                          break;
                        }
                        if (((h = (h | 0) != 0), ((m | 0) == 1) & h)) {
                          (h = -1), (m = w), (v = P);
                          break;
                        }
                        do
                          if (ta(w, P, _e) | 0) h = -1;
                          else if (h) {
                            h =
                              (((A[(21936 + (m << 2)) >> 2] | 0) +
                                5 -
                                (A[_e >> 2] | 0)) |
                                0) %
                                5 |
                              0;
                            break;
                          } else {
                            h =
                              (((A[(21968 + (m << 2)) >> 2] | 0) +
                                6 -
                                (A[_e >> 2] | 0)) |
                                0) %
                                6 |
                              0;
                            break;
                          }
                        while (0);
                        (m = w), (v = P);
                      } else h = l;
                    while (0);
                    (y = Z), (P = A[y >> 2] | 0), (y = A[(y + 4) >> 2] | 0);
                  }
                  if (((m | 0) == (P | 0)) & ((v | 0) == (y | 0))) {
                    if (
                      ((w = (un(P, y) | 0) != 0),
                      w
                        ? (a = r0(P, y, a, o) | 0)
                        : (a =
                            A[
                              (22384 +
                                (((((A[Ee >> 2] | 0) +
                                  (A[(22352 + (ce << 2)) >> 2] | 0)) |
                                  0) %
                                  6 |
                                  0) <<
                                  2)) >>
                                2
                            ] | 0),
                      (h = un(P, y) | 0),
                      ((a + -1) | 0) >>> 0 <= 5 &&
                        ((Se = (h | 0) != 0), !(((a | 0) == 1) & Se)))
                    )
                      do
                        if (ta(P, y, _e) | 0) h = -1;
                        else if (Se) {
                          h =
                            (((A[(21936 + (a << 2)) >> 2] | 0) +
                              5 -
                              (A[_e >> 2] | 0)) |
                              0) %
                              5 |
                            0;
                          break;
                        } else {
                          h =
                            (((A[(21968 + (a << 2)) >> 2] | 0) +
                              6 -
                              (A[_e >> 2] | 0)) |
                              0) %
                              6 |
                            0;
                          break;
                        }
                      while (0);
                    else h = -1;
                    (h = (h + 1) | 0),
                      (h = ((h | 0) == 6) | (w & ((h | 0) == 5)) ? 0 : h);
                  }
                  (o = v), (a = m);
                  break e;
                }
              while (0);
              return (f = h), (z = ve), f | 0;
            }
          while (0);
          return (
            (Se = je(h | 0, 0, 56) | 0),
            (_e = W() | 0 | (o & -2130706433) | 536870912),
            (A[f >> 2] = Se | a),
            (A[(f + 4) >> 2] = _e),
            (f = 0),
            (z = ve),
            f | 0
          );
        }
        function $g(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          return (
            (m = (un(a, o) | 0) == 0),
            (f = qi(a, o, 0, l) | 0),
            (h = (f | 0) == 0),
            m
              ? !h ||
                ((f = qi(a, o, 1, (l + 8) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 2, (l + 16) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 3, (l + 24) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 4, (l + 32) | 0) | 0), f)
                ? ((m = f), m | 0)
                : qi(a, o, 5, (l + 40) | 0) | 0
              : !h ||
                ((f = qi(a, o, 1, (l + 8) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 2, (l + 16) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 3, (l + 24) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 4, (l + 32) | 0) | 0), f | 0)
              ? ((m = f), m | 0)
              : ((m = (l + 40) | 0),
                (A[m >> 2] = 0),
                (A[(m + 4) >> 2] = 0),
                (m = 0),
                m | 0)
          );
        }
        function Yg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          return (
            (w = z),
            (z = (z + 192) | 0),
            (h = w),
            (m = (w + 168) | 0),
            (v = De(a | 0, o | 0, 56) | 0),
            W() | 0,
            (v = v & 7),
            (y = (o & -2130706433) | 134217728),
            (f = Ws(a, y, m) | 0),
            f | 0
              ? ((y = f), (z = w), y | 0)
              : ((o = De(a | 0, o | 0, 52) | 0),
                W() | 0,
                (o = o & 15),
                un(a, y) | 0 ? u0(m, o, v, 1, h) : c0(m, o, v, 1, h),
                (y = (h + 8) | 0),
                (A[l >> 2] = A[y >> 2]),
                (A[(l + 4) >> 2] = A[(y + 4) >> 2]),
                (A[(l + 8) >> 2] = A[(y + 8) >> 2]),
                (A[(l + 12) >> 2] = A[(y + 12) >> 2]),
                (y = 0),
                (z = w),
                y | 0)
          );
        }
        function Zg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          return (
            (h = z),
            (z = (z + 16) | 0),
            (l = h),
            !(!0 & (((o & 2013265920) | 0) == 536870912)) ||
            ((f = (o & -2130706433) | 134217728), !(f0(a, f) | 0))
              ? ((f = 0), (z = h), f | 0)
              : ((m = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (m = (qi(a, f, m & 7, l) | 0) == 0),
                (f = l),
                (f =
                  m &
                  ((A[f >> 2] | 0) == (a | 0)
                    ? (A[(f + 4) >> 2] | 0) == (o | 0)
                    : 0) &
                  1),
                (z = h),
                f | 0)
          );
        }
        function bf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0;
          (o | 0) > 0
            ? ((f = lr(o, 4) | 0),
              (A[a >> 2] = f),
              f || dt(23337, 23360, 40, 23374))
            : (A[a >> 2] = 0),
            (A[(a + 4) >> 2] = o),
            (A[(a + 8) >> 2] = 0),
            (A[(a + 12) >> 2] = l);
        }
        function Mf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0;
          (h = (a + 4) | 0), (m = (a + 12) | 0), (v = (a + 8) | 0);
          e: for (;;) {
            for (l = A[h >> 2] | 0, o = 0; ; ) {
              if ((o | 0) >= (l | 0)) break e;
              if (((f = A[a >> 2] | 0), (y = A[(f + (o << 2)) >> 2] | 0), !y))
                o = (o + 1) | 0;
              else break;
            }
            (o =
              (f +
                ((~~(
                  +Ae(
                    +(
                      +it(10, +(+((15 - (A[m >> 2] | 0)) | 0))) *
                      (+H[y >> 3] + +H[(y + 8) >> 3])
                    )
                  ) % +(l | 0)
                ) >>>
                  0) <<
                  2)) |
              0),
              (l = A[o >> 2] | 0);
            t: do
              if (l | 0) {
                if (((f = (y + 32) | 0), (l | 0) == (y | 0)))
                  A[o >> 2] = A[f >> 2];
                else {
                  if (((l = (l + 32) | 0), (o = A[l >> 2] | 0), !o)) break;
                  for (; (o | 0) != (y | 0); )
                    if (((l = (o + 32) | 0), (o = A[l >> 2] | 0), !o)) break t;
                  A[l >> 2] = A[f >> 2];
                }
                yt(y), (A[v >> 2] = (A[v >> 2] | 0) + -1);
              }
            while (0);
          }
          yt(A[a >> 2] | 0);
        }
        function Sf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          for (f = A[(a + 4) >> 2] | 0, l = 0; ; ) {
            if ((l | 0) >= (f | 0)) {
              (o = 0), (l = 4);
              break;
            }
            if (((o = A[((A[a >> 2] | 0) + (l << 2)) >> 2] | 0), !o))
              l = (l + 1) | 0;
            else {
              l = 4;
              break;
            }
          }
          return (l | 0) == 4 ? o | 0 : 0;
        }
        function Ef(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          if (
            ((l =
              ~~(
                +Ae(
                  +(
                    +it(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+H[o >> 3] + +H[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (l = ((A[a >> 2] | 0) + (l << 2)) | 0),
            (f = A[l >> 2] | 0),
            !f)
          )
            return (m = 1), m | 0;
          m = (o + 32) | 0;
          do
            if ((f | 0) != (o | 0)) {
              if (((l = A[(f + 32) >> 2] | 0), !l)) return (m = 1), m | 0;
              for (h = l; ; ) {
                if ((h | 0) == (o | 0)) {
                  h = 8;
                  break;
                }
                if (((l = A[(h + 32) >> 2] | 0), l)) (f = h), (h = l);
                else {
                  (l = 1), (h = 10);
                  break;
                }
              }
              if ((h | 0) == 8) {
                A[(f + 32) >> 2] = A[m >> 2];
                break;
              } else if ((h | 0) == 10) return l | 0;
            } else A[l >> 2] = A[m >> 2];
          while (0);
          return (
            yt(o),
            (m = (a + 8) | 0),
            (A[m >> 2] = (A[m >> 2] | 0) + -1),
            (m = 0),
            m | 0
          );
        }
        function Kg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          (m = Ar(40) | 0),
            m || dt(23390, 23360, 98, 23403),
            (A[m >> 2] = A[o >> 2]),
            (A[(m + 4) >> 2] = A[(o + 4) >> 2]),
            (A[(m + 8) >> 2] = A[(o + 8) >> 2]),
            (A[(m + 12) >> 2] = A[(o + 12) >> 2]),
            (h = (m + 16) | 0),
            (A[h >> 2] = A[l >> 2]),
            (A[(h + 4) >> 2] = A[(l + 4) >> 2]),
            (A[(h + 8) >> 2] = A[(l + 8) >> 2]),
            (A[(h + 12) >> 2] = A[(l + 12) >> 2]),
            (A[(m + 32) >> 2] = 0),
            (h =
              ~~(
                +Ae(
                  +(
                    +it(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+H[o >> 3] + +H[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (h = ((A[a >> 2] | 0) + (h << 2)) | 0),
            (f = A[h >> 2] | 0);
          do
            if (!f) A[h >> 2] = m;
            else {
              for (; !(js(f, o) | 0 && js((f + 16) | 0, l) | 0); )
                if (
                  ((h = A[(f + 32) >> 2] | 0),
                  (f = h | 0 ? h : f),
                  !(A[(f + 32) >> 2] | 0))
                ) {
                  v = 10;
                  break;
                }
              if ((v | 0) == 10) {
                A[(f + 32) >> 2] = m;
                break;
              }
              return yt(m), (v = f), v | 0;
            }
          while (0);
          return (
            (v = (a + 8) | 0), (A[v >> 2] = (A[v >> 2] | 0) + 1), (v = m), v | 0
          );
        }
        function Jg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0;
          if (
            ((h =
              ~~(
                +Ae(
                  +(
                    +it(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+H[o >> 3] + +H[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (h = A[((A[a >> 2] | 0) + (h << 2)) >> 2] | 0),
            !h)
          )
            return (l = 0), l | 0;
          if (!l) {
            for (a = h; ; ) {
              if (js(a, o) | 0) {
                f = 10;
                break;
              }
              if (((a = A[(a + 32) >> 2] | 0), !a)) {
                (a = 0), (f = 10);
                break;
              }
            }
            if ((f | 0) == 10) return a | 0;
          }
          for (a = h; ; ) {
            if (js(a, o) | 0 && js((a + 16) | 0, l) | 0) {
              f = 10;
              break;
            }
            if (((a = A[(a + 32) >> 2] | 0), !a)) {
              (a = 0), (f = 10);
              break;
            }
          }
          return (f | 0) == 10 ? a | 0 : 0;
        }
        function e3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          if (
            ((l =
              ~~(
                +Ae(
                  +(
                    +it(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+H[o >> 3] + +H[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (a = A[((A[a >> 2] | 0) + (l << 2)) >> 2] | 0),
            !a)
          )
            return (l = 0), l | 0;
          for (;;) {
            if (js(a, o) | 0) {
              o = 5;
              break;
            }
            if (((a = A[(a + 32) >> 2] | 0), !a)) {
              (a = 0), (o = 5);
              break;
            }
          }
          return (o | 0) == 5 ? a | 0 : 0;
        }
        function t3() {
          return 23424;
        }
        function n3(a) {
          return (a = +a), +(+Rf(+a));
        }
        function Xr(a) {
          return (a = +a), ~~+n3(a) | 0;
        }
        function Ar(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0,
            ce = 0,
            Ee = 0,
            Se = 0,
            _e = 0,
            ve = 0,
            ue = 0,
            Ye = 0;
          (Ye = z), (z = (z + 16) | 0), (K = Ye);
          do
            if (a >>> 0 < 245) {
              if (
                ((P = a >>> 0 < 11 ? 16 : (a + 11) & -8),
                (a = P >>> 3),
                (j = A[5857] | 0),
                (l = j >>> a),
                (l & 3) | 0)
              )
                return (
                  (o = (((l & 1) ^ 1) + a) | 0),
                  (a = (23468 + ((o << 1) << 2)) | 0),
                  (l = (a + 8) | 0),
                  (f = A[l >> 2] | 0),
                  (h = (f + 8) | 0),
                  (m = A[h >> 2] | 0),
                  (m | 0) == (a | 0)
                    ? (A[5857] = j & ~(1 << o))
                    : ((A[(m + 12) >> 2] = a), (A[l >> 2] = m)),
                  (ue = o << 3),
                  (A[(f + 4) >> 2] = ue | 3),
                  (ue = (f + ue + 4) | 0),
                  (A[ue >> 2] = A[ue >> 2] | 1),
                  (ue = h),
                  (z = Ye),
                  ue | 0
                );
              if (((B = A[5859] | 0), P >>> 0 > B >>> 0)) {
                if (l | 0)
                  return (
                    (o = 2 << a),
                    (o = (l << a) & (o | (0 - o))),
                    (o = ((o & (0 - o)) + -1) | 0),
                    (y = (o >>> 12) & 16),
                    (o = o >>> y),
                    (l = (o >>> 5) & 8),
                    (o = o >>> l),
                    (m = (o >>> 2) & 4),
                    (o = o >>> m),
                    (a = (o >>> 1) & 2),
                    (o = o >>> a),
                    (f = (o >>> 1) & 1),
                    (f = ((l | y | m | a | f) + (o >>> f)) | 0),
                    (o = (23468 + ((f << 1) << 2)) | 0),
                    (a = (o + 8) | 0),
                    (m = A[a >> 2] | 0),
                    (y = (m + 8) | 0),
                    (l = A[y >> 2] | 0),
                    (l | 0) == (o | 0)
                      ? ((a = j & ~(1 << f)), (A[5857] = a))
                      : ((A[(l + 12) >> 2] = o), (A[a >> 2] = l), (a = j)),
                    (ue = f << 3),
                    (v = (ue - P) | 0),
                    (A[(m + 4) >> 2] = P | 3),
                    (h = (m + P) | 0),
                    (A[(h + 4) >> 2] = v | 1),
                    (A[(m + ue) >> 2] = v),
                    B | 0 &&
                      ((f = A[5862] | 0),
                      (o = B >>> 3),
                      (l = (23468 + ((o << 1) << 2)) | 0),
                      (o = 1 << o),
                      a & o
                        ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                        : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                      (A[a >> 2] = f),
                      (A[(o + 12) >> 2] = f),
                      (A[(f + 8) >> 2] = o),
                      (A[(f + 12) >> 2] = l)),
                    (A[5859] = v),
                    (A[5862] = h),
                    (ue = y),
                    (z = Ye),
                    ue | 0
                  );
                if (((m = A[5858] | 0), m)) {
                  for (
                    l = ((m & (0 - m)) + -1) | 0,
                      h = (l >>> 12) & 16,
                      l = l >>> h,
                      f = (l >>> 5) & 8,
                      l = l >>> f,
                      v = (l >>> 2) & 4,
                      l = l >>> v,
                      y = (l >>> 1) & 2,
                      l = l >>> y,
                      w = (l >>> 1) & 1,
                      w =
                        A[
                          (23732 + (((f | h | v | y | w) + (l >>> w)) << 2)) >>
                            2
                        ] | 0,
                      l = w,
                      y = w,
                      w = ((A[(w + 4) >> 2] & -8) - P) | 0;
                    (a = A[(l + 16) >> 2] | 0),
                      !(!a && ((a = A[(l + 20) >> 2] | 0), !a));

                  )
                    (v = ((A[(a + 4) >> 2] & -8) - P) | 0),
                      (h = v >>> 0 < w >>> 0),
                      (l = a),
                      (y = h ? a : y),
                      (w = h ? v : w);
                  if (((v = (y + P) | 0), v >>> 0 > y >>> 0)) {
                    (h = A[(y + 24) >> 2] | 0), (o = A[(y + 12) >> 2] | 0);
                    do
                      if ((o | 0) == (y | 0)) {
                        if (
                          ((a = (y + 20) | 0),
                          (o = A[a >> 2] | 0),
                          !o && ((a = (y + 16) | 0), (o = A[a >> 2] | 0), !o))
                        ) {
                          l = 0;
                          break;
                        }
                        for (;;)
                          if (((f = (o + 20) | 0), (l = A[f >> 2] | 0), l))
                            (o = l), (a = f);
                          else if (((f = (o + 16) | 0), (l = A[f >> 2] | 0), l))
                            (o = l), (a = f);
                          else break;
                        (A[a >> 2] = 0), (l = o);
                      } else
                        (l = A[(y + 8) >> 2] | 0),
                          (A[(l + 12) >> 2] = o),
                          (A[(o + 8) >> 2] = l),
                          (l = o);
                    while (0);
                    do
                      if (h | 0) {
                        if (
                          ((o = A[(y + 28) >> 2] | 0),
                          (a = (23732 + (o << 2)) | 0),
                          (y | 0) == (A[a >> 2] | 0))
                        ) {
                          if (((A[a >> 2] = l), !l)) {
                            A[5858] = m & ~(1 << o);
                            break;
                          }
                        } else if (
                          ((ue = (h + 16) | 0),
                          (A[
                            ((A[ue >> 2] | 0) == (y | 0) ? ue : (h + 20) | 0) >>
                              2
                          ] = l),
                          !l)
                        )
                          break;
                        (A[(l + 24) >> 2] = h),
                          (o = A[(y + 16) >> 2] | 0),
                          o | 0 &&
                            ((A[(l + 16) >> 2] = o), (A[(o + 24) >> 2] = l)),
                          (o = A[(y + 20) >> 2] | 0),
                          o | 0 &&
                            ((A[(l + 20) >> 2] = o), (A[(o + 24) >> 2] = l));
                      }
                    while (0);
                    return (
                      w >>> 0 < 16
                        ? ((ue = (w + P) | 0),
                          (A[(y + 4) >> 2] = ue | 3),
                          (ue = (y + ue + 4) | 0),
                          (A[ue >> 2] = A[ue >> 2] | 1))
                        : ((A[(y + 4) >> 2] = P | 3),
                          (A[(v + 4) >> 2] = w | 1),
                          (A[(v + w) >> 2] = w),
                          B | 0 &&
                            ((f = A[5862] | 0),
                            (o = B >>> 3),
                            (l = (23468 + ((o << 1) << 2)) | 0),
                            (o = 1 << o),
                            o & j
                              ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                              : ((A[5857] = o | j), (o = l), (a = (l + 8) | 0)),
                            (A[a >> 2] = f),
                            (A[(o + 12) >> 2] = f),
                            (A[(f + 8) >> 2] = o),
                            (A[(f + 12) >> 2] = l)),
                          (A[5859] = w),
                          (A[5862] = v)),
                      (ue = (y + 8) | 0),
                      (z = Ye),
                      ue | 0
                    );
                  } else j = P;
                } else j = P;
              } else j = P;
            } else if (a >>> 0 <= 4294967231)
              if (((a = (a + 11) | 0), (P = a & -8), (f = A[5858] | 0), f)) {
                (h = (0 - P) | 0),
                  (a = a >>> 8),
                  a
                    ? P >>> 0 > 16777215
                      ? (w = 31)
                      : ((j = (((a + 1048320) | 0) >>> 16) & 8),
                        (ce = a << j),
                        (y = (((ce + 520192) | 0) >>> 16) & 4),
                        (ce = ce << y),
                        (w = (((ce + 245760) | 0) >>> 16) & 2),
                        (w = (14 - (y | j | w) + ((ce << w) >>> 15)) | 0),
                        (w = ((P >>> ((w + 7) | 0)) & 1) | (w << 1)))
                    : (w = 0),
                  (l = A[(23732 + (w << 2)) >> 2] | 0);
                e: do
                  if (!l) (l = 0), (a = 0), (ce = 61);
                  else
                    for (
                      a = 0,
                        y = P << ((w | 0) == 31 ? 0 : (25 - (w >>> 1)) | 0),
                        m = 0;
                      ;

                    ) {
                      if (
                        ((v = ((A[(l + 4) >> 2] & -8) - P) | 0),
                        v >>> 0 < h >>> 0)
                      )
                        if (v) (a = l), (h = v);
                        else {
                          (a = l), (h = 0), (ce = 65);
                          break e;
                        }
                      if (
                        ((ce = A[(l + 20) >> 2] | 0),
                        (l = A[(l + 16 + ((y >>> 31) << 2)) >> 2] | 0),
                        (m = ((ce | 0) == 0) | ((ce | 0) == (l | 0)) ? m : ce),
                        l)
                      )
                        y = y << 1;
                      else {
                        (l = m), (ce = 61);
                        break;
                      }
                    }
                while (0);
                if ((ce | 0) == 61) {
                  if (((l | 0) == 0) & ((a | 0) == 0)) {
                    if (((a = 2 << w), (a = (a | (0 - a)) & f), !a)) {
                      j = P;
                      break;
                    }
                    (j = ((a & (0 - a)) + -1) | 0),
                      (v = (j >>> 12) & 16),
                      (j = j >>> v),
                      (m = (j >>> 5) & 8),
                      (j = j >>> m),
                      (y = (j >>> 2) & 4),
                      (j = j >>> y),
                      (w = (j >>> 1) & 2),
                      (j = j >>> w),
                      (l = (j >>> 1) & 1),
                      (a = 0),
                      (l =
                        A[
                          (23732 + (((m | v | y | w | l) + (j >>> l)) << 2)) >>
                            2
                        ] | 0);
                  }
                  l ? (ce = 65) : ((y = a), (v = h));
                }
                if ((ce | 0) == 65)
                  for (m = l; ; )
                    if (
                      ((j = ((A[(m + 4) >> 2] & -8) - P) | 0),
                      (l = j >>> 0 < h >>> 0),
                      (h = l ? j : h),
                      (a = l ? m : a),
                      (l = A[(m + 16) >> 2] | 0),
                      l || (l = A[(m + 20) >> 2] | 0),
                      l)
                    )
                      m = l;
                    else {
                      (y = a), (v = h);
                      break;
                    }
                if (
                  y | 0 &&
                  v >>> 0 < (((A[5859] | 0) - P) | 0) >>> 0 &&
                  ((B = (y + P) | 0), B >>> 0 > y >>> 0)
                ) {
                  (m = A[(y + 24) >> 2] | 0), (o = A[(y + 12) >> 2] | 0);
                  do
                    if ((o | 0) == (y | 0)) {
                      if (
                        ((a = (y + 20) | 0),
                        (o = A[a >> 2] | 0),
                        !o && ((a = (y + 16) | 0), (o = A[a >> 2] | 0), !o))
                      ) {
                        o = 0;
                        break;
                      }
                      for (;;)
                        if (((h = (o + 20) | 0), (l = A[h >> 2] | 0), l))
                          (o = l), (a = h);
                        else if (((h = (o + 16) | 0), (l = A[h >> 2] | 0), l))
                          (o = l), (a = h);
                        else break;
                      A[a >> 2] = 0;
                    } else
                      (ue = A[(y + 8) >> 2] | 0),
                        (A[(ue + 12) >> 2] = o),
                        (A[(o + 8) >> 2] = ue);
                  while (0);
                  do
                    if (m) {
                      if (
                        ((a = A[(y + 28) >> 2] | 0),
                        (l = (23732 + (a << 2)) | 0),
                        (y | 0) == (A[l >> 2] | 0))
                      ) {
                        if (((A[l >> 2] = o), !o)) {
                          (f = f & ~(1 << a)), (A[5858] = f);
                          break;
                        }
                      } else if (
                        ((ue = (m + 16) | 0),
                        (A[
                          ((A[ue >> 2] | 0) == (y | 0) ? ue : (m + 20) | 0) >> 2
                        ] = o),
                        !o)
                      )
                        break;
                      (A[(o + 24) >> 2] = m),
                        (a = A[(y + 16) >> 2] | 0),
                        a | 0 &&
                          ((A[(o + 16) >> 2] = a), (A[(a + 24) >> 2] = o)),
                        (a = A[(y + 20) >> 2] | 0),
                        a && ((A[(o + 20) >> 2] = a), (A[(a + 24) >> 2] = o));
                    }
                  while (0);
                  e: do
                    if (v >>> 0 < 16)
                      (ue = (v + P) | 0),
                        (A[(y + 4) >> 2] = ue | 3),
                        (ue = (y + ue + 4) | 0),
                        (A[ue >> 2] = A[ue >> 2] | 1);
                    else {
                      if (
                        ((A[(y + 4) >> 2] = P | 3),
                        (A[(B + 4) >> 2] = v | 1),
                        (A[(B + v) >> 2] = v),
                        (o = v >>> 3),
                        v >>> 0 < 256)
                      ) {
                        (l = (23468 + ((o << 1) << 2)) | 0),
                          (a = A[5857] | 0),
                          (o = 1 << o),
                          a & o
                            ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                            : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                          (A[a >> 2] = B),
                          (A[(o + 12) >> 2] = B),
                          (A[(B + 8) >> 2] = o),
                          (A[(B + 12) >> 2] = l);
                        break;
                      }
                      if (
                        ((o = v >>> 8),
                        o
                          ? v >>> 0 > 16777215
                            ? (l = 31)
                            : ((ve = (((o + 1048320) | 0) >>> 16) & 8),
                              (ue = o << ve),
                              (_e = (((ue + 520192) | 0) >>> 16) & 4),
                              (ue = ue << _e),
                              (l = (((ue + 245760) | 0) >>> 16) & 2),
                              (l =
                                (14 - (_e | ve | l) + ((ue << l) >>> 15)) | 0),
                              (l = ((v >>> ((l + 7) | 0)) & 1) | (l << 1)))
                          : (l = 0),
                        (o = (23732 + (l << 2)) | 0),
                        (A[(B + 28) >> 2] = l),
                        (a = (B + 16) | 0),
                        (A[(a + 4) >> 2] = 0),
                        (A[a >> 2] = 0),
                        (a = 1 << l),
                        !(f & a))
                      ) {
                        (A[5858] = f | a),
                          (A[o >> 2] = B),
                          (A[(B + 24) >> 2] = o),
                          (A[(B + 12) >> 2] = B),
                          (A[(B + 8) >> 2] = B);
                        break;
                      }
                      o = A[o >> 2] | 0;
                      t: do
                        if (((A[(o + 4) >> 2] & -8) | 0) != (v | 0)) {
                          for (
                            f = v << ((l | 0) == 31 ? 0 : (25 - (l >>> 1)) | 0);
                            (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                              (a = A[l >> 2] | 0),
                              !!a;

                          )
                            if (((A[(a + 4) >> 2] & -8) | 0) == (v | 0)) {
                              o = a;
                              break t;
                            } else (f = f << 1), (o = a);
                          (A[l >> 2] = B),
                            (A[(B + 24) >> 2] = o),
                            (A[(B + 12) >> 2] = B),
                            (A[(B + 8) >> 2] = B);
                          break e;
                        }
                      while (0);
                      (ve = (o + 8) | 0),
                        (ue = A[ve >> 2] | 0),
                        (A[(ue + 12) >> 2] = B),
                        (A[ve >> 2] = B),
                        (A[(B + 8) >> 2] = ue),
                        (A[(B + 12) >> 2] = o),
                        (A[(B + 24) >> 2] = 0);
                    }
                  while (0);
                  return (ue = (y + 8) | 0), (z = Ye), ue | 0;
                } else j = P;
              } else j = P;
            else j = -1;
          while (0);
          if (((l = A[5859] | 0), l >>> 0 >= j >>> 0))
            return (
              (o = (l - j) | 0),
              (a = A[5862] | 0),
              o >>> 0 > 15
                ? ((ue = (a + j) | 0),
                  (A[5862] = ue),
                  (A[5859] = o),
                  (A[(ue + 4) >> 2] = o | 1),
                  (A[(a + l) >> 2] = o),
                  (A[(a + 4) >> 2] = j | 3))
                : ((A[5859] = 0),
                  (A[5862] = 0),
                  (A[(a + 4) >> 2] = l | 3),
                  (ue = (a + l + 4) | 0),
                  (A[ue >> 2] = A[ue >> 2] | 1)),
              (ue = (a + 8) | 0),
              (z = Ye),
              ue | 0
            );
          if (((v = A[5860] | 0), v >>> 0 > j >>> 0))
            return (
              (_e = (v - j) | 0),
              (A[5860] = _e),
              (ue = A[5863] | 0),
              (ve = (ue + j) | 0),
              (A[5863] = ve),
              (A[(ve + 4) >> 2] = _e | 1),
              (A[(ue + 4) >> 2] = j | 3),
              (ue = (ue + 8) | 0),
              (z = Ye),
              ue | 0
            );
          if (
            (A[5975] | 0
              ? (a = A[5977] | 0)
              : ((A[5977] = 4096),
                (A[5976] = 4096),
                (A[5978] = -1),
                (A[5979] = -1),
                (A[5980] = 0),
                (A[5968] = 0),
                (A[5975] = (K & -16) ^ 1431655768),
                (a = 4096)),
            (y = (j + 48) | 0),
            (w = (j + 47) | 0),
            (m = (a + w) | 0),
            (h = (0 - a) | 0),
            (P = m & h),
            P >>> 0 <= j >>> 0 ||
              ((a = A[5967] | 0),
              a | 0 &&
                ((B = A[5965] | 0),
                (K = (B + P) | 0),
                (K >>> 0 <= B >>> 0) | (K >>> 0 > a >>> 0))))
          )
            return (ue = 0), (z = Ye), ue | 0;
          e: do
            if (A[5968] & 4) (o = 0), (ce = 143);
            else {
              l = A[5863] | 0;
              t: do
                if (l) {
                  for (
                    f = 23876;
                    (K = A[f >> 2] | 0),
                      !(
                        K >>> 0 <= l >>> 0 &&
                        ((K + (A[(f + 4) >> 2] | 0)) | 0) >>> 0 > l >>> 0
                      );

                  )
                    if (((a = A[(f + 8) >> 2] | 0), a)) f = a;
                    else {
                      ce = 128;
                      break t;
                    }
                  if (((o = (m - v) & h), o >>> 0 < 2147483647))
                    if (
                      ((a = Qr(o | 0) | 0),
                      (a | 0) ==
                        (((A[f >> 2] | 0) + (A[(f + 4) >> 2] | 0)) | 0))
                    ) {
                      if ((a | 0) != -1) {
                        (v = o), (m = a), (ce = 145);
                        break e;
                      }
                    } else (f = a), (ce = 136);
                  else o = 0;
                } else ce = 128;
              while (0);
              do
                if ((ce | 0) == 128)
                  if (
                    ((l = Qr(0) | 0),
                    (l | 0) != -1 &&
                      ((o = l),
                      (re = A[5976] | 0),
                      (Z = (re + -1) | 0),
                      (o =
                        (((Z & o) | 0 ? (((Z + o) & (0 - re)) - o) | 0 : 0) +
                          P) |
                        0),
                      (re = A[5965] | 0),
                      (Z = (o + re) | 0),
                      (o >>> 0 > j >>> 0) & (o >>> 0 < 2147483647)))
                  ) {
                    if (
                      ((K = A[5967] | 0),
                      K | 0 && (Z >>> 0 <= re >>> 0) | (Z >>> 0 > K >>> 0))
                    ) {
                      o = 0;
                      break;
                    }
                    if (((a = Qr(o | 0) | 0), (a | 0) == (l | 0))) {
                      (v = o), (m = l), (ce = 145);
                      break e;
                    } else (f = a), (ce = 136);
                  } else o = 0;
              while (0);
              do
                if ((ce | 0) == 136) {
                  if (
                    ((l = (0 - o) | 0),
                    !(
                      (y >>> 0 > o >>> 0) &
                      ((o >>> 0 < 2147483647) & ((f | 0) != -1))
                    ))
                  )
                    if ((f | 0) == -1) {
                      o = 0;
                      break;
                    } else {
                      (v = o), (m = f), (ce = 145);
                      break e;
                    }
                  if (
                    ((a = A[5977] | 0),
                    (a = (w - o + a) & (0 - a)),
                    a >>> 0 >= 2147483647)
                  ) {
                    (v = o), (m = f), (ce = 145);
                    break e;
                  }
                  if ((Qr(a | 0) | 0) == -1) {
                    Qr(l | 0) | 0, (o = 0);
                    break;
                  } else {
                    (v = (a + o) | 0), (m = f), (ce = 145);
                    break e;
                  }
                }
              while (0);
              (A[5968] = A[5968] | 4), (ce = 143);
            }
          while (0);
          if (
            ((ce | 0) == 143 &&
              P >>> 0 < 2147483647 &&
              ((_e = Qr(P | 0) | 0),
              (Z = Qr(0) | 0),
              (Ee = (Z - _e) | 0),
              (Se = Ee >>> 0 > ((j + 40) | 0) >>> 0),
              !(
                ((_e | 0) == -1) |
                (Se ^ 1) |
                (((_e >>> 0 < Z >>> 0) & (((_e | 0) != -1) & ((Z | 0) != -1))) ^
                  1)
              )) &&
              ((v = Se ? Ee : o), (m = _e), (ce = 145)),
            (ce | 0) == 145)
          ) {
            (o = ((A[5965] | 0) + v) | 0),
              (A[5965] = o),
              o >>> 0 > (A[5966] | 0) >>> 0 && (A[5966] = o),
              (w = A[5863] | 0);
            e: do
              if (w) {
                for (o = 23876; ; ) {
                  if (
                    ((a = A[o >> 2] | 0),
                    (l = A[(o + 4) >> 2] | 0),
                    (m | 0) == ((a + l) | 0))
                  ) {
                    ce = 154;
                    break;
                  }
                  if (((f = A[(o + 8) >> 2] | 0), f)) o = f;
                  else break;
                }
                if (
                  (ce | 0) == 154 &&
                  ((ve = (o + 4) | 0), ((A[(o + 12) >> 2] & 8) | 0) == 0) &&
                  (m >>> 0 > w >>> 0) & (a >>> 0 <= w >>> 0)
                ) {
                  (A[ve >> 2] = l + v),
                    (ue = ((A[5860] | 0) + v) | 0),
                    (_e = (w + 8) | 0),
                    (_e = (_e & 7) | 0 ? (0 - _e) & 7 : 0),
                    (ve = (w + _e) | 0),
                    (_e = (ue - _e) | 0),
                    (A[5863] = ve),
                    (A[5860] = _e),
                    (A[(ve + 4) >> 2] = _e | 1),
                    (A[(w + ue + 4) >> 2] = 40),
                    (A[5864] = A[5979]);
                  break;
                }
                for (
                  m >>> 0 < (A[5861] | 0) >>> 0 && (A[5861] = m),
                    l = (m + v) | 0,
                    o = 23876;
                  ;

                ) {
                  if ((A[o >> 2] | 0) == (l | 0)) {
                    ce = 162;
                    break;
                  }
                  if (((a = A[(o + 8) >> 2] | 0), a)) o = a;
                  else break;
                }
                if ((ce | 0) == 162 && !((A[(o + 12) >> 2] & 8) | 0)) {
                  (A[o >> 2] = m),
                    (B = (o + 4) | 0),
                    (A[B >> 2] = (A[B >> 2] | 0) + v),
                    (B = (m + 8) | 0),
                    (B = (m + ((B & 7) | 0 ? (0 - B) & 7 : 0)) | 0),
                    (o = (l + 8) | 0),
                    (o = (l + ((o & 7) | 0 ? (0 - o) & 7 : 0)) | 0),
                    (P = (B + j) | 0),
                    (y = (o - B - j) | 0),
                    (A[(B + 4) >> 2] = j | 3);
                  t: do
                    if ((w | 0) == (o | 0))
                      (ue = ((A[5860] | 0) + y) | 0),
                        (A[5860] = ue),
                        (A[5863] = P),
                        (A[(P + 4) >> 2] = ue | 1);
                    else {
                      if ((A[5862] | 0) == (o | 0)) {
                        (ue = ((A[5859] | 0) + y) | 0),
                          (A[5859] = ue),
                          (A[5862] = P),
                          (A[(P + 4) >> 2] = ue | 1),
                          (A[(P + ue) >> 2] = ue);
                        break;
                      }
                      if (((a = A[(o + 4) >> 2] | 0), ((a & 3) | 0) == 1)) {
                        (v = a & -8), (f = a >>> 3);
                        n: do
                          if (a >>> 0 < 256)
                            if (
                              ((a = A[(o + 8) >> 2] | 0),
                              (l = A[(o + 12) >> 2] | 0),
                              (l | 0) == (a | 0))
                            ) {
                              A[5857] = A[5857] & ~(1 << f);
                              break;
                            } else {
                              (A[(a + 12) >> 2] = l), (A[(l + 8) >> 2] = a);
                              break;
                            }
                          else {
                            (m = A[(o + 24) >> 2] | 0),
                              (a = A[(o + 12) >> 2] | 0);
                            do
                              if ((a | 0) == (o | 0)) {
                                if (
                                  ((l = (o + 16) | 0),
                                  (f = (l + 4) | 0),
                                  (a = A[f >> 2] | 0),
                                  a)
                                )
                                  l = f;
                                else if (((a = A[l >> 2] | 0), !a)) {
                                  a = 0;
                                  break;
                                }
                                for (;;)
                                  if (
                                    ((h = (a + 20) | 0), (f = A[h >> 2] | 0), f)
                                  )
                                    (a = f), (l = h);
                                  else if (
                                    ((h = (a + 16) | 0), (f = A[h >> 2] | 0), f)
                                  )
                                    (a = f), (l = h);
                                  else break;
                                A[l >> 2] = 0;
                              } else
                                (ue = A[(o + 8) >> 2] | 0),
                                  (A[(ue + 12) >> 2] = a),
                                  (A[(a + 8) >> 2] = ue);
                            while (0);
                            if (!m) break;
                            (l = A[(o + 28) >> 2] | 0),
                              (f = (23732 + (l << 2)) | 0);
                            do
                              if ((A[f >> 2] | 0) != (o | 0)) {
                                if (
                                  ((ue = (m + 16) | 0),
                                  (A[
                                    ((A[ue >> 2] | 0) == (o | 0)
                                      ? ue
                                      : (m + 20) | 0) >> 2
                                  ] = a),
                                  !a)
                                )
                                  break n;
                              } else {
                                if (((A[f >> 2] = a), a | 0)) break;
                                A[5858] = A[5858] & ~(1 << l);
                                break n;
                              }
                            while (0);
                            if (
                              ((A[(a + 24) >> 2] = m),
                              (l = (o + 16) | 0),
                              (f = A[l >> 2] | 0),
                              f | 0 &&
                                ((A[(a + 16) >> 2] = f),
                                (A[(f + 24) >> 2] = a)),
                              (l = A[(l + 4) >> 2] | 0),
                              !l)
                            )
                              break;
                            (A[(a + 20) >> 2] = l), (A[(l + 24) >> 2] = a);
                          }
                        while (0);
                        (o = (o + v) | 0), (h = (v + y) | 0);
                      } else h = y;
                      if (
                        ((o = (o + 4) | 0),
                        (A[o >> 2] = A[o >> 2] & -2),
                        (A[(P + 4) >> 2] = h | 1),
                        (A[(P + h) >> 2] = h),
                        (o = h >>> 3),
                        h >>> 0 < 256)
                      ) {
                        (l = (23468 + ((o << 1) << 2)) | 0),
                          (a = A[5857] | 0),
                          (o = 1 << o),
                          a & o
                            ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                            : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                          (A[a >> 2] = P),
                          (A[(o + 12) >> 2] = P),
                          (A[(P + 8) >> 2] = o),
                          (A[(P + 12) >> 2] = l);
                        break;
                      }
                      o = h >>> 8;
                      do
                        if (!o) f = 0;
                        else {
                          if (h >>> 0 > 16777215) {
                            f = 31;
                            break;
                          }
                          (ve = (((o + 1048320) | 0) >>> 16) & 8),
                            (ue = o << ve),
                            (_e = (((ue + 520192) | 0) >>> 16) & 4),
                            (ue = ue << _e),
                            (f = (((ue + 245760) | 0) >>> 16) & 2),
                            (f = (14 - (_e | ve | f) + ((ue << f) >>> 15)) | 0),
                            (f = ((h >>> ((f + 7) | 0)) & 1) | (f << 1));
                        }
                      while (0);
                      if (
                        ((o = (23732 + (f << 2)) | 0),
                        (A[(P + 28) >> 2] = f),
                        (a = (P + 16) | 0),
                        (A[(a + 4) >> 2] = 0),
                        (A[a >> 2] = 0),
                        (a = A[5858] | 0),
                        (l = 1 << f),
                        !(a & l))
                      ) {
                        (A[5858] = a | l),
                          (A[o >> 2] = P),
                          (A[(P + 24) >> 2] = o),
                          (A[(P + 12) >> 2] = P),
                          (A[(P + 8) >> 2] = P);
                        break;
                      }
                      o = A[o >> 2] | 0;
                      n: do
                        if (((A[(o + 4) >> 2] & -8) | 0) != (h | 0)) {
                          for (
                            f = h << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                            (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                              (a = A[l >> 2] | 0),
                              !!a;

                          )
                            if (((A[(a + 4) >> 2] & -8) | 0) == (h | 0)) {
                              o = a;
                              break n;
                            } else (f = f << 1), (o = a);
                          (A[l >> 2] = P),
                            (A[(P + 24) >> 2] = o),
                            (A[(P + 12) >> 2] = P),
                            (A[(P + 8) >> 2] = P);
                          break t;
                        }
                      while (0);
                      (ve = (o + 8) | 0),
                        (ue = A[ve >> 2] | 0),
                        (A[(ue + 12) >> 2] = P),
                        (A[ve >> 2] = P),
                        (A[(P + 8) >> 2] = ue),
                        (A[(P + 12) >> 2] = o),
                        (A[(P + 24) >> 2] = 0);
                    }
                  while (0);
                  return (ue = (B + 8) | 0), (z = Ye), ue | 0;
                }
                for (
                  o = 23876;
                  (a = A[o >> 2] | 0),
                    !(
                      a >>> 0 <= w >>> 0 &&
                      ((ue = (a + (A[(o + 4) >> 2] | 0)) | 0),
                      ue >>> 0 > w >>> 0)
                    );

                )
                  o = A[(o + 8) >> 2] | 0;
                (h = (ue + -47) | 0),
                  (a = (h + 8) | 0),
                  (a = (h + ((a & 7) | 0 ? (0 - a) & 7 : 0)) | 0),
                  (h = (w + 16) | 0),
                  (a = a >>> 0 < h >>> 0 ? w : a),
                  (o = (a + 8) | 0),
                  (l = (v + -40) | 0),
                  (_e = (m + 8) | 0),
                  (_e = (_e & 7) | 0 ? (0 - _e) & 7 : 0),
                  (ve = (m + _e) | 0),
                  (_e = (l - _e) | 0),
                  (A[5863] = ve),
                  (A[5860] = _e),
                  (A[(ve + 4) >> 2] = _e | 1),
                  (A[(m + l + 4) >> 2] = 40),
                  (A[5864] = A[5979]),
                  (l = (a + 4) | 0),
                  (A[l >> 2] = 27),
                  (A[o >> 2] = A[5969]),
                  (A[(o + 4) >> 2] = A[5970]),
                  (A[(o + 8) >> 2] = A[5971]),
                  (A[(o + 12) >> 2] = A[5972]),
                  (A[5969] = m),
                  (A[5970] = v),
                  (A[5972] = 0),
                  (A[5971] = o),
                  (o = (a + 24) | 0);
                do (ve = o), (o = (o + 4) | 0), (A[o >> 2] = 7);
                while (((ve + 8) | 0) >>> 0 < ue >>> 0);
                if ((a | 0) != (w | 0)) {
                  if (
                    ((m = (a - w) | 0),
                    (A[l >> 2] = A[l >> 2] & -2),
                    (A[(w + 4) >> 2] = m | 1),
                    (A[a >> 2] = m),
                    (o = m >>> 3),
                    m >>> 0 < 256)
                  ) {
                    (l = (23468 + ((o << 1) << 2)) | 0),
                      (a = A[5857] | 0),
                      (o = 1 << o),
                      a & o
                        ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                        : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                      (A[a >> 2] = w),
                      (A[(o + 12) >> 2] = w),
                      (A[(w + 8) >> 2] = o),
                      (A[(w + 12) >> 2] = l);
                    break;
                  }
                  if (
                    ((o = m >>> 8),
                    o
                      ? m >>> 0 > 16777215
                        ? (f = 31)
                        : ((ve = (((o + 1048320) | 0) >>> 16) & 8),
                          (ue = o << ve),
                          (_e = (((ue + 520192) | 0) >>> 16) & 4),
                          (ue = ue << _e),
                          (f = (((ue + 245760) | 0) >>> 16) & 2),
                          (f = (14 - (_e | ve | f) + ((ue << f) >>> 15)) | 0),
                          (f = ((m >>> ((f + 7) | 0)) & 1) | (f << 1)))
                      : (f = 0),
                    (l = (23732 + (f << 2)) | 0),
                    (A[(w + 28) >> 2] = f),
                    (A[(w + 20) >> 2] = 0),
                    (A[h >> 2] = 0),
                    (o = A[5858] | 0),
                    (a = 1 << f),
                    !(o & a))
                  ) {
                    (A[5858] = o | a),
                      (A[l >> 2] = w),
                      (A[(w + 24) >> 2] = l),
                      (A[(w + 12) >> 2] = w),
                      (A[(w + 8) >> 2] = w);
                    break;
                  }
                  o = A[l >> 2] | 0;
                  t: do
                    if (((A[(o + 4) >> 2] & -8) | 0) != (m | 0)) {
                      for (
                        f = m << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                        (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                          (a = A[l >> 2] | 0),
                          !!a;

                      )
                        if (((A[(a + 4) >> 2] & -8) | 0) == (m | 0)) {
                          o = a;
                          break t;
                        } else (f = f << 1), (o = a);
                      (A[l >> 2] = w),
                        (A[(w + 24) >> 2] = o),
                        (A[(w + 12) >> 2] = w),
                        (A[(w + 8) >> 2] = w);
                      break e;
                    }
                  while (0);
                  (ve = (o + 8) | 0),
                    (ue = A[ve >> 2] | 0),
                    (A[(ue + 12) >> 2] = w),
                    (A[ve >> 2] = w),
                    (A[(w + 8) >> 2] = ue),
                    (A[(w + 12) >> 2] = o),
                    (A[(w + 24) >> 2] = 0);
                }
              } else
                (ue = A[5861] | 0),
                  ((ue | 0) == 0) | (m >>> 0 < ue >>> 0) && (A[5861] = m),
                  (A[5969] = m),
                  (A[5970] = v),
                  (A[5972] = 0),
                  (A[5866] = A[5975]),
                  (A[5865] = -1),
                  (A[5870] = 23468),
                  (A[5869] = 23468),
                  (A[5872] = 23476),
                  (A[5871] = 23476),
                  (A[5874] = 23484),
                  (A[5873] = 23484),
                  (A[5876] = 23492),
                  (A[5875] = 23492),
                  (A[5878] = 23500),
                  (A[5877] = 23500),
                  (A[5880] = 23508),
                  (A[5879] = 23508),
                  (A[5882] = 23516),
                  (A[5881] = 23516),
                  (A[5884] = 23524),
                  (A[5883] = 23524),
                  (A[5886] = 23532),
                  (A[5885] = 23532),
                  (A[5888] = 23540),
                  (A[5887] = 23540),
                  (A[5890] = 23548),
                  (A[5889] = 23548),
                  (A[5892] = 23556),
                  (A[5891] = 23556),
                  (A[5894] = 23564),
                  (A[5893] = 23564),
                  (A[5896] = 23572),
                  (A[5895] = 23572),
                  (A[5898] = 23580),
                  (A[5897] = 23580),
                  (A[5900] = 23588),
                  (A[5899] = 23588),
                  (A[5902] = 23596),
                  (A[5901] = 23596),
                  (A[5904] = 23604),
                  (A[5903] = 23604),
                  (A[5906] = 23612),
                  (A[5905] = 23612),
                  (A[5908] = 23620),
                  (A[5907] = 23620),
                  (A[5910] = 23628),
                  (A[5909] = 23628),
                  (A[5912] = 23636),
                  (A[5911] = 23636),
                  (A[5914] = 23644),
                  (A[5913] = 23644),
                  (A[5916] = 23652),
                  (A[5915] = 23652),
                  (A[5918] = 23660),
                  (A[5917] = 23660),
                  (A[5920] = 23668),
                  (A[5919] = 23668),
                  (A[5922] = 23676),
                  (A[5921] = 23676),
                  (A[5924] = 23684),
                  (A[5923] = 23684),
                  (A[5926] = 23692),
                  (A[5925] = 23692),
                  (A[5928] = 23700),
                  (A[5927] = 23700),
                  (A[5930] = 23708),
                  (A[5929] = 23708),
                  (A[5932] = 23716),
                  (A[5931] = 23716),
                  (ue = (v + -40) | 0),
                  (_e = (m + 8) | 0),
                  (_e = (_e & 7) | 0 ? (0 - _e) & 7 : 0),
                  (ve = (m + _e) | 0),
                  (_e = (ue - _e) | 0),
                  (A[5863] = ve),
                  (A[5860] = _e),
                  (A[(ve + 4) >> 2] = _e | 1),
                  (A[(m + ue + 4) >> 2] = 40),
                  (A[5864] = A[5979]);
            while (0);
            if (((o = A[5860] | 0), o >>> 0 > j >>> 0))
              return (
                (_e = (o - j) | 0),
                (A[5860] = _e),
                (ue = A[5863] | 0),
                (ve = (ue + j) | 0),
                (A[5863] = ve),
                (A[(ve + 4) >> 2] = _e | 1),
                (A[(ue + 4) >> 2] = j | 3),
                (ue = (ue + 8) | 0),
                (z = Ye),
                ue | 0
              );
          }
          return (ue = t3() | 0), (A[ue >> 2] = 12), (ue = 0), (z = Ye), ue | 0;
        }
        function yt(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0;
          if (a) {
            (l = (a + -8) | 0),
              (h = A[5861] | 0),
              (a = A[(a + -4) >> 2] | 0),
              (o = a & -8),
              (w = (l + o) | 0);
            do
              if (a & 1) (y = l), (v = l);
              else {
                if (
                  ((f = A[l >> 2] | 0),
                  !(a & 3) ||
                    ((v = (l + (0 - f)) | 0),
                    (m = (f + o) | 0),
                    v >>> 0 < h >>> 0))
                )
                  return;
                if ((A[5862] | 0) == (v | 0)) {
                  if (
                    ((a = (w + 4) | 0), (o = A[a >> 2] | 0), ((o & 3) | 0) != 3)
                  ) {
                    (y = v), (o = m);
                    break;
                  }
                  (A[5859] = m),
                    (A[a >> 2] = o & -2),
                    (A[(v + 4) >> 2] = m | 1),
                    (A[(v + m) >> 2] = m);
                  return;
                }
                if (((l = f >>> 3), f >>> 0 < 256))
                  if (
                    ((a = A[(v + 8) >> 2] | 0),
                    (o = A[(v + 12) >> 2] | 0),
                    (o | 0) == (a | 0))
                  ) {
                    (A[5857] = A[5857] & ~(1 << l)), (y = v), (o = m);
                    break;
                  } else {
                    (A[(a + 12) >> 2] = o),
                      (A[(o + 8) >> 2] = a),
                      (y = v),
                      (o = m);
                    break;
                  }
                (h = A[(v + 24) >> 2] | 0), (a = A[(v + 12) >> 2] | 0);
                do
                  if ((a | 0) == (v | 0)) {
                    if (
                      ((o = (v + 16) | 0),
                      (l = (o + 4) | 0),
                      (a = A[l >> 2] | 0),
                      a)
                    )
                      o = l;
                    else if (((a = A[o >> 2] | 0), !a)) {
                      a = 0;
                      break;
                    }
                    for (;;)
                      if (((f = (a + 20) | 0), (l = A[f >> 2] | 0), l))
                        (a = l), (o = f);
                      else if (((f = (a + 16) | 0), (l = A[f >> 2] | 0), l))
                        (a = l), (o = f);
                      else break;
                    A[o >> 2] = 0;
                  } else
                    (y = A[(v + 8) >> 2] | 0),
                      (A[(y + 12) >> 2] = a),
                      (A[(a + 8) >> 2] = y);
                while (0);
                if (h) {
                  if (
                    ((o = A[(v + 28) >> 2] | 0),
                    (l = (23732 + (o << 2)) | 0),
                    (A[l >> 2] | 0) == (v | 0))
                  ) {
                    if (((A[l >> 2] = a), !a)) {
                      (A[5858] = A[5858] & ~(1 << o)), (y = v), (o = m);
                      break;
                    }
                  } else if (
                    ((y = (h + 16) | 0),
                    (A[((A[y >> 2] | 0) == (v | 0) ? y : (h + 20) | 0) >> 2] =
                      a),
                    !a)
                  ) {
                    (y = v), (o = m);
                    break;
                  }
                  (A[(a + 24) >> 2] = h),
                    (o = (v + 16) | 0),
                    (l = A[o >> 2] | 0),
                    l | 0 && ((A[(a + 16) >> 2] = l), (A[(l + 24) >> 2] = a)),
                    (o = A[(o + 4) >> 2] | 0),
                    o
                      ? ((A[(a + 20) >> 2] = o),
                        (A[(o + 24) >> 2] = a),
                        (y = v),
                        (o = m))
                      : ((y = v), (o = m));
                } else (y = v), (o = m);
              }
            while (0);
            if (
              !(v >>> 0 >= w >>> 0) &&
              ((a = (w + 4) | 0), (f = A[a >> 2] | 0), !!(f & 1))
            ) {
              if (f & 2)
                (A[a >> 2] = f & -2),
                  (A[(y + 4) >> 2] = o | 1),
                  (A[(v + o) >> 2] = o),
                  (h = o);
              else {
                if ((A[5863] | 0) == (w | 0)) {
                  if (
                    ((w = ((A[5860] | 0) + o) | 0),
                    (A[5860] = w),
                    (A[5863] = y),
                    (A[(y + 4) >> 2] = w | 1),
                    (y | 0) != (A[5862] | 0))
                  )
                    return;
                  (A[5862] = 0), (A[5859] = 0);
                  return;
                }
                if ((A[5862] | 0) == (w | 0)) {
                  (w = ((A[5859] | 0) + o) | 0),
                    (A[5859] = w),
                    (A[5862] = v),
                    (A[(y + 4) >> 2] = w | 1),
                    (A[(v + w) >> 2] = w);
                  return;
                }
                (h = ((f & -8) + o) | 0), (l = f >>> 3);
                do
                  if (f >>> 0 < 256)
                    if (
                      ((o = A[(w + 8) >> 2] | 0),
                      (a = A[(w + 12) >> 2] | 0),
                      (a | 0) == (o | 0))
                    ) {
                      A[5857] = A[5857] & ~(1 << l);
                      break;
                    } else {
                      (A[(o + 12) >> 2] = a), (A[(a + 8) >> 2] = o);
                      break;
                    }
                  else {
                    (m = A[(w + 24) >> 2] | 0), (a = A[(w + 12) >> 2] | 0);
                    do
                      if ((a | 0) == (w | 0)) {
                        if (
                          ((o = (w + 16) | 0),
                          (l = (o + 4) | 0),
                          (a = A[l >> 2] | 0),
                          a)
                        )
                          o = l;
                        else if (((a = A[o >> 2] | 0), !a)) {
                          l = 0;
                          break;
                        }
                        for (;;)
                          if (((f = (a + 20) | 0), (l = A[f >> 2] | 0), l))
                            (a = l), (o = f);
                          else if (((f = (a + 16) | 0), (l = A[f >> 2] | 0), l))
                            (a = l), (o = f);
                          else break;
                        (A[o >> 2] = 0), (l = a);
                      } else
                        (l = A[(w + 8) >> 2] | 0),
                          (A[(l + 12) >> 2] = a),
                          (A[(a + 8) >> 2] = l),
                          (l = a);
                    while (0);
                    if (m | 0) {
                      if (
                        ((a = A[(w + 28) >> 2] | 0),
                        (o = (23732 + (a << 2)) | 0),
                        (A[o >> 2] | 0) == (w | 0))
                      ) {
                        if (((A[o >> 2] = l), !l)) {
                          A[5858] = A[5858] & ~(1 << a);
                          break;
                        }
                      } else if (
                        ((f = (m + 16) | 0),
                        (A[
                          ((A[f >> 2] | 0) == (w | 0) ? f : (m + 20) | 0) >> 2
                        ] = l),
                        !l)
                      )
                        break;
                      (A[(l + 24) >> 2] = m),
                        (a = (w + 16) | 0),
                        (o = A[a >> 2] | 0),
                        o | 0 &&
                          ((A[(l + 16) >> 2] = o), (A[(o + 24) >> 2] = l)),
                        (a = A[(a + 4) >> 2] | 0),
                        a | 0 &&
                          ((A[(l + 20) >> 2] = a), (A[(a + 24) >> 2] = l));
                    }
                  }
                while (0);
                if (
                  ((A[(y + 4) >> 2] = h | 1),
                  (A[(v + h) >> 2] = h),
                  (y | 0) == (A[5862] | 0))
                ) {
                  A[5859] = h;
                  return;
                }
              }
              if (((a = h >>> 3), h >>> 0 < 256)) {
                (l = (23468 + ((a << 1) << 2)) | 0),
                  (o = A[5857] | 0),
                  (a = 1 << a),
                  o & a
                    ? ((o = (l + 8) | 0), (a = A[o >> 2] | 0))
                    : ((A[5857] = o | a), (a = l), (o = (l + 8) | 0)),
                  (A[o >> 2] = y),
                  (A[(a + 12) >> 2] = y),
                  (A[(y + 8) >> 2] = a),
                  (A[(y + 12) >> 2] = l);
                return;
              }
              (a = h >>> 8),
                a
                  ? h >>> 0 > 16777215
                    ? (f = 31)
                    : ((v = (((a + 1048320) | 0) >>> 16) & 8),
                      (w = a << v),
                      (m = (((w + 520192) | 0) >>> 16) & 4),
                      (w = w << m),
                      (f = (((w + 245760) | 0) >>> 16) & 2),
                      (f = (14 - (m | v | f) + ((w << f) >>> 15)) | 0),
                      (f = ((h >>> ((f + 7) | 0)) & 1) | (f << 1)))
                  : (f = 0),
                (a = (23732 + (f << 2)) | 0),
                (A[(y + 28) >> 2] = f),
                (A[(y + 20) >> 2] = 0),
                (A[(y + 16) >> 2] = 0),
                (o = A[5858] | 0),
                (l = 1 << f);
              e: do
                if (!(o & l))
                  (A[5858] = o | l),
                    (A[a >> 2] = y),
                    (A[(y + 24) >> 2] = a),
                    (A[(y + 12) >> 2] = y),
                    (A[(y + 8) >> 2] = y);
                else {
                  a = A[a >> 2] | 0;
                  t: do
                    if (((A[(a + 4) >> 2] & -8) | 0) != (h | 0)) {
                      for (
                        f = h << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                        (l = (a + 16 + ((f >>> 31) << 2)) | 0),
                          (o = A[l >> 2] | 0),
                          !!o;

                      )
                        if (((A[(o + 4) >> 2] & -8) | 0) == (h | 0)) {
                          a = o;
                          break t;
                        } else (f = f << 1), (a = o);
                      (A[l >> 2] = y),
                        (A[(y + 24) >> 2] = a),
                        (A[(y + 12) >> 2] = y),
                        (A[(y + 8) >> 2] = y);
                      break e;
                    }
                  while (0);
                  (v = (a + 8) | 0),
                    (w = A[v >> 2] | 0),
                    (A[(w + 12) >> 2] = y),
                    (A[v >> 2] = y),
                    (A[(y + 8) >> 2] = w),
                    (A[(y + 12) >> 2] = a),
                    (A[(y + 24) >> 2] = 0);
                }
              while (0);
              if (((w = ((A[5865] | 0) + -1) | 0), (A[5865] = w), !(w | 0))) {
                for (a = 23884; (a = A[a >> 2] | 0), a; ) a = (a + 8) | 0;
                A[5865] = -1;
              }
            }
          }
        }
        function lr(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          return (
            a
              ? ((l = gn(o, a) | 0),
                (o | a) >>> 0 > 65535 &&
                  (l = (((l >>> 0) / (a >>> 0)) | 0 | 0) == (o | 0) ? l : -1))
              : (l = 0),
            (a = Ar(l) | 0),
            !a || !(A[(a + -4) >> 2] & 3) || ys(a | 0, 0, l | 0) | 0,
            a | 0
          );
        }
        function zt(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (l = (a + l) >>> 0),
            wt(((o + f + ((l >>> 0 < a >>> 0) | 0)) >>> 0) | 0),
            l | 0 | 0
          );
        }
        function Vn(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (f = (o - f - ((l >>> 0 > a >>> 0) | 0)) >>> 0),
            wt(f | 0),
            ((a - l) >>> 0) | 0 | 0
          );
        }
        function wf(a) {
          return (a = a | 0), (a ? (31 - (Lt(a ^ (a - 1)) | 0)) | 0 : 32) | 0;
        }
        function x0(a, o, l, f, h) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (h = h | 0);
          var m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0,
            B = 0,
            j = 0,
            K = 0,
            re = 0,
            Z = 0;
          if (((B = a), (w = o), (P = w), (v = l), (K = f), (y = K), !P))
            return (
              (m = (h | 0) != 0),
              y
                ? m
                  ? ((A[h >> 2] = a | 0),
                    (A[(h + 4) >> 2] = o & 0),
                    (K = 0),
                    (h = 0),
                    wt(K | 0),
                    h | 0)
                  : ((K = 0), (h = 0), wt(K | 0), h | 0)
                : (m &&
                    ((A[h >> 2] = (B >>> 0) % (v >>> 0)),
                    (A[(h + 4) >> 2] = 0)),
                  (K = 0),
                  (h = ((B >>> 0) / (v >>> 0)) >>> 0),
                  wt(K | 0),
                  h | 0)
            );
          m = (y | 0) == 0;
          do
            if (v) {
              if (!m) {
                if (
                  ((m = ((Lt(y | 0) | 0) - (Lt(P | 0) | 0)) | 0), m >>> 0 <= 31)
                ) {
                  (j = (m + 1) | 0),
                    (y = (31 - m) | 0),
                    (o = (m - 31) >> 31),
                    (v = j),
                    (a = ((B >>> (j >>> 0)) & o) | (P << y)),
                    (o = (P >>> (j >>> 0)) & o),
                    (m = 0),
                    (y = B << y);
                  break;
                }
                return h
                  ? ((A[h >> 2] = a | 0),
                    (A[(h + 4) >> 2] = w | (o & 0)),
                    (K = 0),
                    (h = 0),
                    wt(K | 0),
                    h | 0)
                  : ((K = 0), (h = 0), wt(K | 0), h | 0);
              }
              if (((m = (v - 1) | 0), (m & v) | 0)) {
                (y = ((Lt(v | 0) | 0) + 33 - (Lt(P | 0) | 0)) | 0),
                  (Z = (64 - y) | 0),
                  (j = (32 - y) | 0),
                  (w = j >> 31),
                  (re = (y - 32) | 0),
                  (o = re >> 31),
                  (v = y),
                  (a =
                    (((j - 1) >> 31) & (P >>> (re >>> 0))) |
                    (((P << j) | (B >>> (y >>> 0))) & o)),
                  (o = o & (P >>> (y >>> 0))),
                  (m = (B << Z) & w),
                  (y =
                    (((P << Z) | (B >>> (re >>> 0))) & w) |
                    ((B << j) & ((y - 33) >> 31)));
                break;
              }
              return (
                h | 0 && ((A[h >> 2] = m & B), (A[(h + 4) >> 2] = 0)),
                (v | 0) == 1
                  ? ((re = w | (o & 0)), (Z = a | 0 | 0), wt(re | 0), Z | 0)
                  : ((Z = wf(v | 0) | 0),
                    (re = (P >>> (Z >>> 0)) | 0),
                    (Z = (P << (32 - Z)) | (B >>> (Z >>> 0)) | 0),
                    wt(re | 0),
                    Z | 0)
              );
            } else {
              if (m)
                return (
                  h | 0 &&
                    ((A[h >> 2] = (P >>> 0) % (v >>> 0)),
                    (A[(h + 4) >> 2] = 0)),
                  (re = 0),
                  (Z = ((P >>> 0) / (v >>> 0)) >>> 0),
                  wt(re | 0),
                  Z | 0
                );
              if (!B)
                return (
                  h | 0 &&
                    ((A[h >> 2] = 0),
                    (A[(h + 4) >> 2] = (P >>> 0) % (y >>> 0))),
                  (re = 0),
                  (Z = ((P >>> 0) / (y >>> 0)) >>> 0),
                  wt(re | 0),
                  Z | 0
                );
              if (((m = (y - 1) | 0), !(m & y)))
                return (
                  h | 0 &&
                    ((A[h >> 2] = a | 0),
                    (A[(h + 4) >> 2] = (m & P) | (o & 0))),
                  (re = 0),
                  (Z = P >>> ((wf(y | 0) | 0) >>> 0)),
                  wt(re | 0),
                  Z | 0
                );
              if (
                ((m = ((Lt(y | 0) | 0) - (Lt(P | 0) | 0)) | 0), m >>> 0 <= 30)
              ) {
                (o = (m + 1) | 0),
                  (y = (31 - m) | 0),
                  (v = o),
                  (a = (P << y) | (B >>> (o >>> 0))),
                  (o = P >>> (o >>> 0)),
                  (m = 0),
                  (y = B << y);
                break;
              }
              return h
                ? ((A[h >> 2] = a | 0),
                  (A[(h + 4) >> 2] = w | (o & 0)),
                  (re = 0),
                  (Z = 0),
                  wt(re | 0),
                  Z | 0)
                : ((re = 0), (Z = 0), wt(re | 0), Z | 0);
            }
          while (0);
          if (!v) (P = y), (w = 0), (y = 0);
          else {
            (j = l | 0 | 0),
              (B = K | (f & 0)),
              (P = zt(j | 0, B | 0, -1, -1) | 0),
              (l = W() | 0),
              (w = y),
              (y = 0);
            do
              (f = w),
                (w = (m >>> 31) | (w << 1)),
                (m = y | (m << 1)),
                (f = (a << 1) | (f >>> 31) | 0),
                (K = (a >>> 31) | (o << 1) | 0),
                Vn(P | 0, l | 0, f | 0, K | 0) | 0,
                (Z = W() | 0),
                (re = (Z >> 31) | (((Z | 0) < 0 ? -1 : 0) << 1)),
                (y = re & 1),
                (a =
                  Vn(
                    f | 0,
                    K | 0,
                    (re & j) | 0,
                    (((((Z | 0) < 0 ? -1 : 0) >> 31) |
                      (((Z | 0) < 0 ? -1 : 0) << 1)) &
                      B) |
                      0
                  ) | 0),
                (o = W() | 0),
                (v = (v - 1) | 0);
            while (v | 0);
            (P = w), (w = 0);
          }
          return (
            (v = 0),
            h | 0 && ((A[h >> 2] = a), (A[(h + 4) >> 2] = o)),
            (re =
              ((m | 0) >>> 31) |
              ((P | v) << 1) |
              (((v << 1) | (m >>> 31)) & 0) |
              w),
            (Z = (((m << 1) | 0) & -2) | y),
            wt(re | 0),
            Z | 0
          );
        }
        function xs(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          return (
            (P = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (w =
              (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (m = (f >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (h =
              (((f | 0) < 0 ? -1 : 0) >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (y = Vn((P ^ a) | 0, (w ^ o) | 0, P | 0, w | 0) | 0),
            (v = W() | 0),
            (a = m ^ P),
            (o = h ^ w),
            Vn(
              ((x0(
                y,
                v,
                Vn((m ^ l) | 0, (h ^ f) | 0, m | 0, h | 0) | 0,
                W() | 0,
                0
              ) |
                0) ^
                a) |
                0,
              ((W() | 0) ^ o) | 0,
              a | 0,
              o | 0
            ) | 0
          );
        }
        function i3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            h = 0,
            m = 0;
          return (
            (m = a & 65535),
            (h = o & 65535),
            (l = gn(h, m) | 0),
            (f = a >>> 16),
            (a = ((l >>> 16) + (gn(h, f) | 0)) | 0),
            (h = o >>> 16),
            (o = gn(h, m) | 0),
            wt(
              ((a >>> 16) + (gn(h, f) | 0) + ((((a & 65535) + o) | 0) >>> 16)) |
                0
            ),
            ((a + o) << 16) | (l & 65535) | 0 | 0
          );
        }
        function Wn(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0;
          return (
            (h = a),
            (m = l),
            (l = i3(h, m) | 0),
            (a = W() | 0),
            wt(((gn(o, m) | 0) + (gn(f, h) | 0) + a) | (a & 0) | 0),
            l | 0 | 0 | 0
          );
        }
        function iA(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0,
            v = 0,
            y = 0,
            w = 0,
            P = 0;
          return (
            (h = z),
            (z = (z + 16) | 0),
            (y = h | 0),
            (v = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (m =
              (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (P = (f >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (w =
              (((f | 0) < 0 ? -1 : 0) >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (a = Vn((v ^ a) | 0, (m ^ o) | 0, v | 0, m | 0) | 0),
            (o = W() | 0),
            x0(
              a,
              o,
              Vn((P ^ l) | 0, (w ^ f) | 0, P | 0, w | 0) | 0,
              W() | 0,
              y
            ) | 0,
            (f =
              Vn((A[y >> 2] ^ v) | 0, (A[(y + 4) >> 2] ^ m) | 0, v | 0, m | 0) |
              0),
            (l = W() | 0),
            (z = h),
            wt(l | 0),
            f | 0
          );
        }
        function Xs(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var h = 0,
            m = 0;
          return (
            (m = z),
            (z = (z + 16) | 0),
            (h = m | 0),
            x0(a, o, l, f, h) | 0,
            (z = m),
            wt(A[(h + 4) >> 2] | 0),
            A[h >> 2] | 0 | 0
          );
        }
        function Tf(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (wt((o >> l) | 0),
                (a >>> l) | ((o & ((1 << l) - 1)) << (32 - l)))
              : (wt(((o | 0) < 0 ? -1 : 0) | 0), (o >> (l - 32)) | 0)
          );
        }
        function De(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (wt((o >>> l) | 0),
                (a >>> l) | ((o & ((1 << l) - 1)) << (32 - l)))
              : (wt(0), (o >>> (l - 32)) | 0)
          );
        }
        function je(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (wt(
                  (o << l) |
                    ((a & (((1 << l) - 1) << (32 - l))) >>> (32 - l)) |
                    0
                ),
                a << l)
              : (wt((a << (l - 32)) | 0), 0)
          );
        }
        function Cf(a, o) {
          return (a = +a), (o = +o), a != a ? +o : o != o ? +a : +bn(+a, +o);
        }
        function y0(a, o) {
          return (a = +a), (o = +o), a != a ? +o : o != o ? +a : +Si(+a, +o);
        }
        function rA(a) {
          return (a = +a), a >= 0 ? +ye(a + 0.5) : +sn(a - 0.5);
        }
        function sA(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0;
          if ((l | 0) >= 8192) return Qo(a | 0, o | 0, l | 0) | 0, a | 0;
          if (((m = a | 0), (h = (a + l) | 0), (a & 3) == (o & 3))) {
            for (; a & 3; ) {
              if (!l) return m | 0;
              (pt[a >> 0] = pt[o >> 0] | 0),
                (a = (a + 1) | 0),
                (o = (o + 1) | 0),
                (l = (l - 1) | 0);
            }
            for (l = (h & -4) | 0, f = (l - 64) | 0; (a | 0) <= (f | 0); )
              (A[a >> 2] = A[o >> 2]),
                (A[(a + 4) >> 2] = A[(o + 4) >> 2]),
                (A[(a + 8) >> 2] = A[(o + 8) >> 2]),
                (A[(a + 12) >> 2] = A[(o + 12) >> 2]),
                (A[(a + 16) >> 2] = A[(o + 16) >> 2]),
                (A[(a + 20) >> 2] = A[(o + 20) >> 2]),
                (A[(a + 24) >> 2] = A[(o + 24) >> 2]),
                (A[(a + 28) >> 2] = A[(o + 28) >> 2]),
                (A[(a + 32) >> 2] = A[(o + 32) >> 2]),
                (A[(a + 36) >> 2] = A[(o + 36) >> 2]),
                (A[(a + 40) >> 2] = A[(o + 40) >> 2]),
                (A[(a + 44) >> 2] = A[(o + 44) >> 2]),
                (A[(a + 48) >> 2] = A[(o + 48) >> 2]),
                (A[(a + 52) >> 2] = A[(o + 52) >> 2]),
                (A[(a + 56) >> 2] = A[(o + 56) >> 2]),
                (A[(a + 60) >> 2] = A[(o + 60) >> 2]),
                (a = (a + 64) | 0),
                (o = (o + 64) | 0);
            for (; (a | 0) < (l | 0); )
              (A[a >> 2] = A[o >> 2]), (a = (a + 4) | 0), (o = (o + 4) | 0);
          } else
            for (l = (h - 4) | 0; (a | 0) < (l | 0); )
              (pt[a >> 0] = pt[o >> 0] | 0),
                (pt[(a + 1) >> 0] = pt[(o + 1) >> 0] | 0),
                (pt[(a + 2) >> 0] = pt[(o + 2) >> 0] | 0),
                (pt[(a + 3) >> 0] = pt[(o + 3) >> 0] | 0),
                (a = (a + 4) | 0),
                (o = (o + 4) | 0);
          for (; (a | 0) < (h | 0); )
            (pt[a >> 0] = pt[o >> 0] | 0), (a = (a + 1) | 0), (o = (o + 1) | 0);
          return m | 0;
        }
        function ys(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            h = 0,
            m = 0,
            v = 0;
          if (((m = (a + l) | 0), (o = o & 255), (l | 0) >= 67)) {
            for (; a & 3; ) (pt[a >> 0] = o), (a = (a + 1) | 0);
            for (
              f = (m & -4) | 0,
                v = o | (o << 8) | (o << 16) | (o << 24),
                h = (f - 64) | 0;
              (a | 0) <= (h | 0);

            )
              (A[a >> 2] = v),
                (A[(a + 4) >> 2] = v),
                (A[(a + 8) >> 2] = v),
                (A[(a + 12) >> 2] = v),
                (A[(a + 16) >> 2] = v),
                (A[(a + 20) >> 2] = v),
                (A[(a + 24) >> 2] = v),
                (A[(a + 28) >> 2] = v),
                (A[(a + 32) >> 2] = v),
                (A[(a + 36) >> 2] = v),
                (A[(a + 40) >> 2] = v),
                (A[(a + 44) >> 2] = v),
                (A[(a + 48) >> 2] = v),
                (A[(a + 52) >> 2] = v),
                (A[(a + 56) >> 2] = v),
                (A[(a + 60) >> 2] = v),
                (a = (a + 64) | 0);
            for (; (a | 0) < (f | 0); ) (A[a >> 2] = v), (a = (a + 4) | 0);
          }
          for (; (a | 0) < (m | 0); ) (pt[a >> 0] = o), (a = (a + 1) | 0);
          return (m - l) | 0;
        }
        function Rf(a) {
          return (a = +a), a >= 0 ? +ye(a + 0.5) : +sn(a - 0.5);
        }
        function Qr(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          return (
            (f = ps() | 0),
            (l = A[le >> 2] | 0),
            (o = (l + a) | 0),
            (((a | 0) > 0) & ((o | 0) < (l | 0))) | ((o | 0) < 0)
              ? (br(o | 0) | 0, Xo(12), -1)
              : (o | 0) > (f | 0) && !(Fn(o | 0) | 0)
              ? (Xo(12), -1)
              : ((A[le >> 2] = o), l | 0)
          );
        }
        return {
          ___divdi3: xs,
          ___muldi3: Wn,
          ___remdi3: iA,
          ___uremdi3: Xs,
          _areNeighborCells: Hm,
          _bitshift64Ashr: Tf,
          _bitshift64Lshr: De,
          _bitshift64Shl: je,
          _calloc: lr,
          _cellAreaKm2: Mg,
          _cellAreaM2: Sg,
          _cellAreaRads2: v0,
          _cellToBoundary: Ko,
          _cellToCenterChild: rg,
          _cellToChildPos: hg,
          _cellToChildren: ng,
          _cellToChildrenSize: nA,
          _cellToLatLng: Zo,
          _cellToLocalIj: Lg,
          _cellToParent: h0,
          _cellToVertex: qi,
          _cellToVertexes: $g,
          _cellsToDirectedEdge: Vm,
          _cellsToLinkedMultiPolygon: Cm,
          _childPosToCell: dg,
          _compactCells: sg,
          _destroyLinkedMultiPolygon: pf,
          _directedEdgeToBoundary: tA,
          _directedEdgeToCells: Qm,
          _edgeLengthKm: wg,
          _edgeLengthM: Tg,
          _edgeLengthRads: Eg,
          _emscripten_replace_memory: Jn,
          _free: yt,
          _getBaseCellNumber: lf,
          _getDirectedEdgeDestination: jm,
          _getDirectedEdgeOrigin: Wm,
          _getHexagonAreaAvgKm2: vg,
          _getHexagonAreaAvgM2: xg,
          _getHexagonEdgeLengthAvgKm: yg,
          _getHexagonEdgeLengthAvgM: bg,
          _getIcosahedronFaces: cf,
          _getNumCells: _0,
          _getPentagons: g0,
          _getRes0Cells: Im,
          _getResolution: tg,
          _greatCircleDistanceKm: ea,
          _greatCircleDistanceM: mg,
          _greatCircleDistanceRads: pg,
          _gridDisk: Vc,
          _gridDiskDistances: Wc,
          _gridDistance: Ig,
          _gridPathCells: Ug,
          _gridPathCellsSize: Og,
          _gridRingUnsafe: Sm,
          _i64Add: zt,
          _i64Subtract: Vn,
          _isPentagon: un,
          _isResClassIII: Ag,
          _isValidCell: f0,
          _isValidDirectedEdge: Xm,
          _isValidVertex: Zg,
          _latLngToCell: uf,
          _llvm_maxnum_f64: Cf,
          _llvm_minnum_f64: y0,
          _llvm_round_f64: rA,
          _localIjToCell: Dg,
          _malloc: Ar,
          _maxFaceCount: cg,
          _maxGridDiskSize: Mm,
          _maxPolygonToCellsSize: Em,
          _memcpy: sA,
          _memset: ys,
          _originToDirectedEdges: $m,
          _pentagonCount: fg,
          _polygonToCells: wm,
          _readInt64AsDoubleFromPointer: Wg,
          _res0CellCount: Dm,
          _round: Rf,
          _sbrk: Qr,
          _sizeOfCellBoundary: kg,
          _sizeOfCoordIJ: Vg,
          _sizeOfGeoLoop: zg,
          _sizeOfGeoPolygon: Gg,
          _sizeOfH3Index: Ng,
          _sizeOfLatLng: Fg,
          _sizeOfLinkedGeoPolygon: Hg,
          _uncompactCells: og,
          _uncompactCellsSize: ag,
          _vertexToLatLng: Yg,
          establishStackSpace: bm,
          stackAlloc: $o,
          stackRestore: Za,
          stackSave: i0,
        };
      })(Me, Ue, F);
    (e.___divdi3 = fe.___divdi3),
      (e.___muldi3 = fe.___muldi3),
      (e.___remdi3 = fe.___remdi3),
      (e.___uremdi3 = fe.___uremdi3),
      (e._areNeighborCells = fe._areNeighborCells),
      (e._bitshift64Ashr = fe._bitshift64Ashr),
      (e._bitshift64Lshr = fe._bitshift64Lshr),
      (e._bitshift64Shl = fe._bitshift64Shl),
      (e._calloc = fe._calloc),
      (e._cellAreaKm2 = fe._cellAreaKm2),
      (e._cellAreaM2 = fe._cellAreaM2),
      (e._cellAreaRads2 = fe._cellAreaRads2),
      (e._cellToBoundary = fe._cellToBoundary),
      (e._cellToCenterChild = fe._cellToCenterChild),
      (e._cellToChildPos = fe._cellToChildPos),
      (e._cellToChildren = fe._cellToChildren),
      (e._cellToChildrenSize = fe._cellToChildrenSize),
      (e._cellToLatLng = fe._cellToLatLng),
      (e._cellToLocalIj = fe._cellToLocalIj),
      (e._cellToParent = fe._cellToParent),
      (e._cellToVertex = fe._cellToVertex),
      (e._cellToVertexes = fe._cellToVertexes),
      (e._cellsToDirectedEdge = fe._cellsToDirectedEdge),
      (e._cellsToLinkedMultiPolygon = fe._cellsToLinkedMultiPolygon),
      (e._childPosToCell = fe._childPosToCell),
      (e._compactCells = fe._compactCells),
      (e._destroyLinkedMultiPolygon = fe._destroyLinkedMultiPolygon),
      (e._directedEdgeToBoundary = fe._directedEdgeToBoundary),
      (e._directedEdgeToCells = fe._directedEdgeToCells),
      (e._edgeLengthKm = fe._edgeLengthKm),
      (e._edgeLengthM = fe._edgeLengthM),
      (e._edgeLengthRads = fe._edgeLengthRads);
    var kt = (e._emscripten_replace_memory = fe._emscripten_replace_memory);
    (e._free = fe._free),
      (e._getBaseCellNumber = fe._getBaseCellNumber),
      (e._getDirectedEdgeDestination = fe._getDirectedEdgeDestination),
      (e._getDirectedEdgeOrigin = fe._getDirectedEdgeOrigin),
      (e._getHexagonAreaAvgKm2 = fe._getHexagonAreaAvgKm2),
      (e._getHexagonAreaAvgM2 = fe._getHexagonAreaAvgM2),
      (e._getHexagonEdgeLengthAvgKm = fe._getHexagonEdgeLengthAvgKm),
      (e._getHexagonEdgeLengthAvgM = fe._getHexagonEdgeLengthAvgM),
      (e._getIcosahedronFaces = fe._getIcosahedronFaces),
      (e._getNumCells = fe._getNumCells),
      (e._getPentagons = fe._getPentagons),
      (e._getRes0Cells = fe._getRes0Cells),
      (e._getResolution = fe._getResolution),
      (e._greatCircleDistanceKm = fe._greatCircleDistanceKm),
      (e._greatCircleDistanceM = fe._greatCircleDistanceM),
      (e._greatCircleDistanceRads = fe._greatCircleDistanceRads),
      (e._gridDisk = fe._gridDisk),
      (e._gridDiskDistances = fe._gridDiskDistances),
      (e._gridDistance = fe._gridDistance),
      (e._gridPathCells = fe._gridPathCells),
      (e._gridPathCellsSize = fe._gridPathCellsSize),
      (e._gridRingUnsafe = fe._gridRingUnsafe),
      (e._i64Add = fe._i64Add),
      (e._i64Subtract = fe._i64Subtract),
      (e._isPentagon = fe._isPentagon),
      (e._isResClassIII = fe._isResClassIII),
      (e._isValidCell = fe._isValidCell),
      (e._isValidDirectedEdge = fe._isValidDirectedEdge),
      (e._isValidVertex = fe._isValidVertex),
      (e._latLngToCell = fe._latLngToCell),
      (e._llvm_maxnum_f64 = fe._llvm_maxnum_f64),
      (e._llvm_minnum_f64 = fe._llvm_minnum_f64),
      (e._llvm_round_f64 = fe._llvm_round_f64),
      (e._localIjToCell = fe._localIjToCell),
      (e._malloc = fe._malloc),
      (e._maxFaceCount = fe._maxFaceCount),
      (e._maxGridDiskSize = fe._maxGridDiskSize),
      (e._maxPolygonToCellsSize = fe._maxPolygonToCellsSize),
      (e._memcpy = fe._memcpy),
      (e._memset = fe._memset),
      (e._originToDirectedEdges = fe._originToDirectedEdges),
      (e._pentagonCount = fe._pentagonCount),
      (e._polygonToCells = fe._polygonToCells),
      (e._readInt64AsDoubleFromPointer = fe._readInt64AsDoubleFromPointer),
      (e._res0CellCount = fe._res0CellCount),
      (e._round = fe._round),
      (e._sbrk = fe._sbrk),
      (e._sizeOfCellBoundary = fe._sizeOfCellBoundary),
      (e._sizeOfCoordIJ = fe._sizeOfCoordIJ),
      (e._sizeOfGeoLoop = fe._sizeOfGeoLoop),
      (e._sizeOfGeoPolygon = fe._sizeOfGeoPolygon),
      (e._sizeOfH3Index = fe._sizeOfH3Index),
      (e._sizeOfLatLng = fe._sizeOfLatLng),
      (e._sizeOfLinkedGeoPolygon = fe._sizeOfLinkedGeoPolygon),
      (e._uncompactCells = fe._uncompactCells),
      (e._uncompactCellsSize = fe._uncompactCellsSize),
      (e._vertexToLatLng = fe._vertexToLatLng),
      (e.establishStackSpace = fe.establishStackSpace);
    var Yt = (e.stackAlloc = fe.stackAlloc),
      rn = (e.stackRestore = fe.stackRestore),
      Kn = (e.stackSave = fe.stackSave);
    if (((e.asm = fe), (e.cwrap = T), (e.setValue = M), (e.getValue = E), xt)) {
      Y(xt) || (xt = s(xt));
      {
        at();
        var Jt = function (me) {
            me.byteLength && (me = new Uint8Array(me)),
              V.set(me, x),
              e.memoryInitializerRequest &&
                delete e.memoryInitializerRequest.response,
              mt();
          },
          Mi = function () {
            u(xt, Jt, function () {
              throw "could not load memory initializer " + xt;
            });
          },
          Un = $e(xt);
        if (Un) Jt(Un.buffer);
        else if (e.memoryInitializerRequest) {
          var Wo = function () {
            var me = e.memoryInitializerRequest,
              we = me.response;
            if (me.status !== 200 && me.status !== 0) {
              var We = $e(e.memoryInitializerRequestURL);
              if (We) we = We.buffer;
              else {
                console.warn(
                  "a problem seems to have happened with Module.memoryInitializerRequest, status: " +
                    me.status +
                    ", retrying " +
                    xt
                ),
                  Mi();
                return;
              }
            }
            Jt(we);
          };
          e.memoryInitializerRequest.response
            ? setTimeout(Wo, 0)
            : e.memoryInitializerRequest.addEventListener("load", Wo);
        } else Mi();
      }
    }
    var ds;
    nt = function me() {
      ds || jo(), ds || (nt = me);
    };
    function jo(me) {
      if (At > 0 || (rt(), At > 0)) return;
      function we() {
        ds ||
          ((ds = !0),
          !C &&
            (ot(),
            Rt(),
            e.onRuntimeInitialized && e.onRuntimeInitialized(),
            It()));
      }
      e.setStatus
        ? (e.setStatus("Running..."),
          setTimeout(function () {
            setTimeout(function () {
              e.setStatus("");
            }, 1),
              we();
          }, 1))
        : we();
    }
    e.run = jo;
    function Oi(me) {
      throw (
        (e.onAbort && e.onAbort(me),
        (me += ""),
        c(me),
        d(me),
        (C = !0),
        "abort(" + me + "). Build with -s ASSERTIONS=1 for more info.")
      );
    }
    if (((e.abort = Oi), e.preInit))
      for (
        typeof e.preInit == "function" && (e.preInit = [e.preInit]);
        e.preInit.length > 0;

      )
        e.preInit.pop()();
    return jo(), n;
  })(typeof Wt == "object" ? Wt : {}),
  qt = "number",
  gt = qt,
  ua = qt,
  Mt = qt,
  St = qt,
  $n = qt,
  lt = qt,
  QE = [
    ["sizeOfH3Index", qt],
    ["sizeOfLatLng", qt],
    ["sizeOfCellBoundary", qt],
    ["sizeOfGeoLoop", qt],
    ["sizeOfGeoPolygon", qt],
    ["sizeOfLinkedGeoPolygon", qt],
    ["sizeOfCoordIJ", qt],
    ["readInt64AsDoubleFromPointer", qt],
    ["isValidCell", ua, [Mt, St]],
    ["latLngToCell", gt, [qt, qt, $n, lt]],
    ["cellToLatLng", gt, [Mt, St, lt]],
    ["cellToBoundary", gt, [Mt, St, lt]],
    ["maxGridDiskSize", gt, [qt, lt]],
    ["gridDisk", gt, [Mt, St, qt, lt]],
    ["gridDiskDistances", gt, [Mt, St, qt, lt, lt]],
    ["gridRingUnsafe", gt, [Mt, St, qt, lt]],
    ["maxPolygonToCellsSize", gt, [lt, $n, qt, lt]],
    ["polygonToCells", gt, [lt, $n, qt, lt]],
    ["cellsToLinkedMultiPolygon", gt, [lt, qt, lt]],
    ["destroyLinkedMultiPolygon", null, [lt]],
    ["compactCells", gt, [lt, lt, qt, qt]],
    ["uncompactCells", gt, [lt, qt, qt, lt, qt, $n]],
    ["uncompactCellsSize", gt, [lt, qt, qt, $n, lt]],
    ["isPentagon", ua, [Mt, St]],
    ["isResClassIII", ua, [Mt, St]],
    ["getBaseCellNumber", qt, [Mt, St]],
    ["getResolution", qt, [Mt, St]],
    ["maxFaceCount", gt, [Mt, St, lt]],
    ["getIcosahedronFaces", gt, [Mt, St, lt]],
    ["cellToParent", gt, [Mt, St, $n, lt]],
    ["cellToChildren", gt, [Mt, St, $n, lt]],
    ["cellToCenterChild", gt, [Mt, St, $n, lt]],
    ["cellToChildrenSize", gt, [Mt, St, $n, lt]],
    ["cellToChildPos", gt, [Mt, St, $n, lt]],
    ["childPosToCell", gt, [qt, qt, Mt, St, $n, lt]],
    ["areNeighborCells", gt, [Mt, St, Mt, St, lt]],
    ["cellsToDirectedEdge", gt, [Mt, St, Mt, St, lt]],
    ["getDirectedEdgeOrigin", gt, [Mt, St, lt]],
    ["getDirectedEdgeDestination", gt, [Mt, St, lt]],
    ["isValidDirectedEdge", ua, [Mt, St]],
    ["directedEdgeToCells", gt, [Mt, St, lt]],
    ["originToDirectedEdges", gt, [Mt, St, lt]],
    ["directedEdgeToBoundary", gt, [Mt, St, lt]],
    ["gridDistance", gt, [Mt, St, Mt, St, lt]],
    ["gridPathCells", gt, [Mt, St, Mt, St, lt]],
    ["gridPathCellsSize", gt, [Mt, St, Mt, St, lt]],
    ["cellToLocalIj", gt, [Mt, St, Mt, St, qt, lt]],
    ["localIjToCell", gt, [Mt, St, lt, qt, lt]],
    ["getHexagonAreaAvgM2", gt, [$n, lt]],
    ["getHexagonAreaAvgKm2", gt, [$n, lt]],
    ["getHexagonEdgeLengthAvgM", gt, [$n, lt]],
    ["getHexagonEdgeLengthAvgKm", gt, [$n, lt]],
    ["greatCircleDistanceM", qt, [lt, lt]],
    ["greatCircleDistanceKm", qt, [lt, lt]],
    ["greatCircleDistanceRads", qt, [lt, lt]],
    ["cellAreaM2", gt, [Mt, St, lt]],
    ["cellAreaKm2", gt, [Mt, St, lt]],
    ["cellAreaRads2", gt, [Mt, St, lt]],
    ["edgeLengthM", gt, [Mt, St, lt]],
    ["edgeLengthKm", gt, [Mt, St, lt]],
    ["edgeLengthRads", gt, [Mt, St, lt]],
    ["getNumCells", gt, [$n, lt]],
    ["getRes0Cells", gt, [lt]],
    ["res0CellCount", qt],
    ["getPentagons", gt, [qt, lt]],
    ["pentagonCount", qt],
    ["cellToVertex", gt, [Mt, St, qt, lt]],
    ["cellToVertexes", gt, [Mt, St, lt]],
    ["vertexToLatLng", gt, [Mt, St, lt]],
    ["isValidVertex", ua, [Mt, St]],
  ],
  $E = 0,
  YE = 1,
  ZE = 2,
  KE = 3,
  B2 = 4,
  JE = 5,
  ew = 6,
  tw = 7,
  nw = 8,
  iw = 9,
  rw = 10,
  sw = 11,
  ow = 12,
  aw = 13,
  Aw = 14,
  lw = 15,
  Gn = {};
Gn[$E] = "Success";
Gn[YE] = "The operation failed but a more specific error is not available";
Gn[ZE] = "Argument was outside of acceptable range";
Gn[KE] = "Latitude or longitude arguments were outside of acceptable range";
Gn[B2] = "Resolution argument was outside of acceptable range";
Gn[JE] = "Cell argument was not valid";
Gn[ew] = "Directed edge argument was not valid";
Gn[tw] = "Undirected edge argument was not valid";
Gn[nw] = "Vertex argument was not valid";
Gn[iw] = "Pentagon distortion was encountered";
Gn[rw] = "Duplicate input";
Gn[sw] = "Cell arguments were not neighbors";
Gn[ow] = "Cell arguments had incompatible resolutions";
Gn[aw] = "Memory allocation failed";
Gn[Aw] = "Bounds of provided memory were insufficient";
Gn[lw] = "Mode or flags argument was not valid";
var uw = 1e3,
  N2 = 1001,
  F2 = 1002,
  t0 = {};
t0[uw] = "Unknown unit";
t0[N2] = "Array length out of bounds";
t0[F2] = "Got unexpected null value for H3 index";
var cw = "Unknown error";
function k2(n, e, t) {
  var i = t && "value" in t,
    r = new Error(
      (n[e] || cw) + " (code: " + e + (i ? ", value: " + t.value : "") + ")"
    );
  return (r.code = e), r;
}
function z2(n, e) {
  var t = arguments.length === 2 ? { value: e } : {};
  return k2(Gn, n, t);
}
function G2(n, e) {
  var t = arguments.length === 2 ? { value: e } : {};
  return k2(t0, n, t);
}
function za(n) {
  if (n !== 0) throw z2(n);
}
var yi = {};
QE.forEach(function (e) {
  yi[e[0]] = Wt.cwrap.apply(Wt, e);
});
var wo = 16,
  Ga = 4,
  zo = 8,
  fw = 8,
  Fl = yi.sizeOfH3Index(),
  zc = yi.sizeOfLatLng(),
  hw = yi.sizeOfCellBoundary(),
  dw = yi.sizeOfGeoPolygon(),
  Ma = yi.sizeOfGeoLoop();
yi.sizeOfLinkedGeoPolygon();
yi.sizeOfCoordIJ();
function pw(n) {
  if (typeof n != "number" || n < 0 || n > 15 || Math.floor(n) !== n)
    throw z2(B2, n);
  return n;
}
function mw(n) {
  if (!n) throw G2(F2);
  return n;
}
var gw = Math.pow(2, 32) - 1;
function _w(n) {
  if (n > gw) throw G2(N2, n);
  return n;
}
var vw = /[^0-9a-fA-F]/;
function H2(n) {
  if (
    Array.isArray(n) &&
    n.length === 2 &&
    Number.isInteger(n[0]) &&
    Number.isInteger(n[1])
  )
    return n;
  if (typeof n != "string" || vw.test(n)) return [0, 0];
  var e = parseInt(n.substring(0, n.length - 8), wo),
    t = parseInt(n.substring(n.length - 8), wo);
  return [t, e];
}
function Lp(n) {
  if (n >= 0) return n.toString(wo);
  n = n & 2147483647;
  var e = V2(8, n.toString(wo)),
    t = (parseInt(e[0], wo) + 8).toString(wo);
  return (e = t + e.substring(1)), e;
}
function xw(n, e) {
  return Lp(e) + V2(8, Lp(n));
}
function V2(n, e) {
  for (var t = n - e.length, i = "", r = 0; r < t; r++) i += "0";
  return (i = i + e), i;
}
function Dp(n, e, t) {
  for (
    var i = n.length,
      r = Wt._calloc(i, zc),
      s = t ? 1 : 0,
      u = t ? 0 : 1,
      c = 0;
    c < i * 2;
    c += 2
  )
    Wt.HEAPF64.set([n[c / 2][s], n[c / 2][u]].map($2), r / zo + c);
  return Wt.HEAPU32.set([i, r], e / Ga), e;
}
function yw(n, e) {
  var t = n.length - 1,
    i = Wt._calloc(dw),
    r = 0,
    s = r + Ma,
    u = s + Ga;
  Dp(n[0], i + r, e);
  var c;
  if (t > 0) {
    c = Wt._calloc(t, Ma);
    for (var d = 0; d < t; d++) Dp(n[d + 1], c + Ma * d, e);
  }
  return Wt.setValue(i + s, t, "i32"), Wt.setValue(i + u, c, "i32"), i;
}
function bw(n) {
  var e = 0,
    t = e + Ma,
    i = t + Ga,
    r = Ga;
  Wt._free(Wt.getValue(n + e + r, "i8*"));
  var s = Wt.getValue(n + t, "i32");
  if (s > 0) {
    for (var u = Wt.getValue(n + i, "i32"), c = 0; c < s; c++)
      Wt._free(Wt.getValue(u + Ma * c + r, "i8*"));
    Wt._free(u);
  }
  Wt._free(n);
}
function W2(n, e) {
  e === void 0 && (e = 0);
  var t = Wt.getValue(n + Fl * e, "i32"),
    i = Wt.getValue(n + Fl * e + Ga, "i32");
  return i ? xw(t, i) : null;
}
function Mw(n) {
  return yi.readInt64AsDoubleFromPointer(n);
}
function Sw(n, e) {
  for (var t = [], i = 0; i < e; i++) {
    var r = W2(n, i);
    r !== null && t.push(r);
  }
  return t;
}
function kl(n) {
  return Cw(Wt.getValue(n, "double"));
}
function j2(n) {
  return [kl(n), kl(n + zo)];
}
function Ew(n) {
  return [kl(n + zo), kl(n)];
}
function ww(n, e, t) {
  for (
    var i = Wt.getValue(n, "i32"), r = n + zo, s = [], u = e ? Ew : j2, c = 0;
    c < i * 2;
    c += 2
  )
    s.push(u(r + zo * c));
  return t && s.push(s[0]), s;
}
function Tw(n, e, t) {
  var i = Wt._malloc(zc);
  Wt.HEAPF64.set([n, e].map($2), i / zo);
  var r = Wt._malloc(Fl);
  try {
    return za(yi.latLngToCell(i, t, r)), mw(W2(r));
  } finally {
    Wt._free(r), Wt._free(i);
  }
}
function X2(n) {
  var e = Wt._malloc(zc),
    t = H2(n),
    i = t[0],
    r = t[1];
  try {
    return za(yi.cellToLatLng(i, r, e)), j2(e);
  } finally {
    Wt._free(e);
  }
}
function Q2(n, e) {
  var t = Wt._malloc(hw),
    i = H2(n),
    r = i[0],
    s = i[1];
  try {
    return za(yi.cellToBoundary(r, s, t)), ww(t, e, e);
  } finally {
    Wt._free(t);
  }
}
function Ip(n, e, t) {
  if ((pw(e), (t = !!t), n.length === 0 || n[0].length === 0)) return [];
  var i = typeof n[0][0] == "number" ? [n] : n,
    r = yw(i, t),
    s = Wt._malloc(fw);
  try {
    za(yi.maxPolygonToCellsSize(r, e, 0, s));
    var u = _w(Mw(s)),
      c = Wt._calloc(u, Fl);
    try {
      return za(yi.polygonToCells(r, e, 0, c)), Sw(c, u);
    } finally {
      Wt._free(c);
    }
  } finally {
    Wt._free(s), bw(r);
  }
}
function $2(n) {
  return (n * Math.PI) / 180;
}
function Cw(n) {
  return (n * 180) / Math.PI;
}
const si = window.THREE
  ? window.THREE
  : {
      Box3: Gs,
      BufferGeometry: cn,
      Float32BufferAttribute: Kt,
      InstancedBufferGeometry: c8,
      InstancedInterleavedBuffer: z1,
      InterleavedBufferAttribute: ja,
      Sphere: Go,
      Vector3: J,
      WireframeGeometry: n8,
    };
var po = new si.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute";
const Op = new si.Box3(),
  HA = new si.Vector3();
class Gc extends si.InstancedBufferGeometry {
  constructor() {
    super(), (this.type = "LineSegmentsGeometry");
    const e = [
        -1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1,
        -1, 0,
      ],
      t = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2],
      i = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];
    this.setIndex(i),
      this[po]("position", new si.Float32BufferAttribute(e, 3)),
      this[po]("uv", new si.Float32BufferAttribute(t, 2));
  }
  applyMatrix4(e) {
    const t = this.attributes.instanceStart,
      i = this.attributes.instanceEnd;
    return (
      t !== void 0 &&
        (t.applyMatrix4(e), i.applyMatrix4(e), (t.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  setPositions(e) {
    let t;
    e instanceof Float32Array
      ? (t = e)
      : Array.isArray(e) && (t = new Float32Array(e));
    const i = new si.InstancedInterleavedBuffer(t, 6, 1);
    return (
      this[po]("instanceStart", new si.InterleavedBufferAttribute(i, 3, 0)),
      this[po]("instanceEnd", new si.InterleavedBufferAttribute(i, 3, 3)),
      this.computeBoundingBox(),
      this.computeBoundingSphere(),
      this
    );
  }
  setColors(e) {
    let t;
    e instanceof Float32Array
      ? (t = e)
      : Array.isArray(e) && (t = new Float32Array(e));
    const i = new si.InstancedInterleavedBuffer(t, 6, 1);
    return (
      this[po](
        "instanceColorStart",
        new si.InterleavedBufferAttribute(i, 3, 0)
      ),
      this[po]("instanceColorEnd", new si.InterleavedBufferAttribute(i, 3, 3)),
      this
    );
  }
  fromWireframeGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromEdgesGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromMesh(e) {
    return (
      this.fromWireframeGeometry(new si.WireframeGeometry(e.geometry)), this
    );
  }
  fromLineSegments(e) {
    const t = e.geometry;
    if (t.isGeometry) {
      console.error(
        "LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead."
      );
      return;
    } else t.isBufferGeometry && this.setPositions(t.attributes.position.array);
    return this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new si.Box3());
    const e = this.attributes.instanceStart,
      t = this.attributes.instanceEnd;
    e !== void 0 &&
      t !== void 0 &&
      (this.boundingBox.setFromBufferAttribute(e),
      Op.setFromBufferAttribute(t),
      this.boundingBox.union(Op));
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new si.Sphere()),
      this.boundingBox === null && this.computeBoundingBox();
    const e = this.attributes.instanceStart,
      t = this.attributes.instanceEnd;
    if (e !== void 0 && t !== void 0) {
      const i = this.boundingSphere.center;
      this.boundingBox.getCenter(i);
      let r = 0;
      for (let s = 0, u = e.count; s < u; s++)
        HA.fromBufferAttribute(e, s),
          (r = Math.max(r, i.distanceToSquared(HA))),
          HA.fromBufferAttribute(t, s),
          (r = Math.max(r, i.distanceToSquared(HA)));
      (this.boundingSphere.radius = Math.sqrt(r)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            "THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",
            this
          );
    }
  }
  toJSON() {}
  applyMatrix(e) {
    return (
      console.warn(
        "THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."
      ),
      this.applyMatrix4(e)
    );
  }
}
Gc.prototype.isLineSegmentsGeometry = !0;
const Gi = window.THREE
  ? window.THREE
  : {
      ShaderLib: er,
      ShaderMaterial: or,
      UniformsLib: Ke,
      UniformsUtils: x1,
      Vector2: ke,
    };
Gi.UniformsLib.line = {
  worldUnits: { value: 1 },
  linewidth: { value: 1 },
  resolution: { value: new Gi.Vector2(1, 1) },
  dashScale: { value: 1 },
  dashSize: { value: 1 },
  dashOffset: { value: 0 },
  gapSize: { value: 1 },
};
Gi.ShaderLib.line = {
  uniforms: Gi.UniformsUtils.merge([
    Gi.UniformsLib.common,
    Gi.UniformsLib.fog,
    Gi.UniformsLib.line,
  ]),
  vertexShader: `
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		varying vec2 vUv;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;

			#endif

			float aspect = resolution.x / resolution.y;

			vUv = uv;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			worldStart = start.xyz;
			worldEnd = end.xyz;

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				// get the offset direction as perpendicular to the view vector
				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 offset;
				if ( position.y < 0.5 ) {

					offset = normalize( cross( start.xyz, worldDir ) );

				} else {

					offset = normalize( cross( end.xyz, worldDir ) );

				}

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// extend the line bounds to encompass  endcaps
					start.xyz += - worldDir * linewidth * 0.5;
					end.xyz += worldDir * linewidth * 0.5;

					// shift the position of the quad so it hugs the forward edge of the line
					offset.xy -= dir * forwardOffset;
					offset.z += 0.5;

				#endif

				// endcaps
				if ( position.y > 1.0 || position.y < 0.0 ) {

					offset.xy += dir * 2.0 * forwardOffset;

				}

				// adjust for linewidth
				offset *= linewidth * 0.5;

				// set the world position
				worldPos = ( position.y < 0.5 ) ? start : end;
				worldPos.xyz += offset;

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segements overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

			vec2 offset = vec2( dir.y, - dir.x );
			// undo aspect ratio adjustment
			dir.x /= aspect;
			offset.x /= aspect;

			// sign flip
			if ( position.x < 0.0 ) offset *= - 1.0;

			// endcaps
			if ( position.y < 0.0 ) {

				offset += - dir;

			} else if ( position.y > 1.0 ) {

				offset += dir;

			}

			// adjust for linewidth
			offset *= linewidth;

			// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
			offset /= resolution.y;

			// select end
			vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

			// back to clip space
			offset *= clip.w;

			clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,
  fragmentShader: `
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		varying vec2 vUv;

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

			#endif

			#else

				#ifdef ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

			if ( abs( vUv.y ) > 1.0 ) {

				float a = vUv.x;
				float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
				float len2 = a * a + b * b;

				if ( len2 > 1.0 ) discard;

			}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <encodings_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`,
};
class n0 extends Gi.ShaderMaterial {
  constructor(e) {
    super({
      type: "LineMaterial",
      uniforms: Gi.UniformsUtils.clone(Gi.ShaderLib.line.uniforms),
      vertexShader: Gi.ShaderLib.line.vertexShader,
      fragmentShader: Gi.ShaderLib.line.fragmentShader,
      clipping: !0,
    }),
      Object.defineProperties(this, {
        color: {
          enumerable: !0,
          get: function () {
            return this.uniforms.diffuse.value;
          },
          set: function (t) {
            this.uniforms.diffuse.value = t;
          },
        },
        worldUnits: {
          enumerable: !0,
          get: function () {
            return "WORLD_UNITS" in this.defines;
          },
          set: function (t) {
            t === !0
              ? (this.defines.WORLD_UNITS = "")
              : delete this.defines.WORLD_UNITS;
          },
        },
        linewidth: {
          enumerable: !0,
          get: function () {
            return this.uniforms.linewidth.value;
          },
          set: function (t) {
            this.uniforms.linewidth.value = t;
          },
        },
        dashed: {
          enumerable: !0,
          get: function () {
            return "USE_DASH" in this.defines;
          },
          set(t) {
            !!t != "USE_DASH" in this.defines && (this.needsUpdate = !0),
              t === !0
                ? (this.defines.USE_DASH = "")
                : delete this.defines.USE_DASH;
          },
        },
        dashScale: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashScale.value;
          },
          set: function (t) {
            this.uniforms.dashScale.value = t;
          },
        },
        dashSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashSize.value;
          },
          set: function (t) {
            this.uniforms.dashSize.value = t;
          },
        },
        dashOffset: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashOffset.value;
          },
          set: function (t) {
            this.uniforms.dashOffset.value = t;
          },
        },
        gapSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.gapSize.value;
          },
          set: function (t) {
            this.uniforms.gapSize.value = t;
          },
        },
        opacity: {
          enumerable: !0,
          get: function () {
            return this.uniforms.opacity.value;
          },
          set: function (t) {
            this.uniforms.opacity.value = t;
          },
        },
        resolution: {
          enumerable: !0,
          get: function () {
            return this.uniforms.resolution.value;
          },
          set: function (t) {
            this.uniforms.resolution.value.copy(t);
          },
        },
        alphaToCoverage: {
          enumerable: !0,
          get: function () {
            return "ALPHA_TO_COVERAGE" in this.defines;
          },
          set: function (t) {
            !!t != "ALPHA_TO_COVERAGE" in this.defines &&
              (this.needsUpdate = !0),
              t === !0
                ? ((this.defines.ALPHA_TO_COVERAGE = ""),
                  (this.extensions.derivatives = !0))
                : (delete this.defines.ALPHA_TO_COVERAGE,
                  (this.extensions.derivatives = !1));
          },
        },
      }),
      this.setValues(e);
  }
}
n0.prototype.isLineMaterial = !0;
const Tn = window.THREE
  ? window.THREE
  : {
      Box3: Gs,
      BufferGeometry: cn,
      InstancedInterleavedBuffer: z1,
      InterleavedBufferAttribute: ja,
      Line3: f8,
      MathUtils: u1,
      Matrix4: dn,
      Mesh: Dn,
      Sphere: Go,
      Vector3: J,
      Vector4: Ln,
    };
var Up = new Tn.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute";
const qp = new Tn.Vector3(),
  Bp = new Tn.Vector3(),
  kn = new Tn.Vector4(),
  zn = new Tn.Vector4(),
  ur = new Tn.Vector4(),
  uu = new Tn.Vector3(),
  cu = new Tn.Matrix4(),
  Ni = new Tn.Line3(),
  Np = new Tn.Vector3(),
  Dr = new Tn.Box3(),
  VA = new Tn.Sphere(),
  cr = new Tn.Vector4();
class Y2 extends Tn.Mesh {
  constructor(e = new Gc(), t = new n0({ color: Math.random() * 16777215 })) {
    super(e, t), (this.type = "LineSegments2");
  }
  computeLineDistances() {
    const e = this.geometry,
      t = e.attributes.instanceStart,
      i = e.attributes.instanceEnd,
      r = new Float32Array(2 * t.count);
    for (let u = 0, c = 0, d = t.count; u < d; u++, c += 2)
      qp.fromBufferAttribute(t, u),
        Bp.fromBufferAttribute(i, u),
        (r[c] = c === 0 ? 0 : r[c - 1]),
        (r[c + 1] = r[c] + qp.distanceTo(Bp));
    const s = new Tn.InstancedInterleavedBuffer(r, 2, 1);
    return (
      e[Up](
        "instanceDistanceStart",
        new Tn.InterleavedBufferAttribute(s, 1, 0)
      ),
      e[Up]("instanceDistanceEnd", new Tn.InterleavedBufferAttribute(s, 1, 1)),
      this
    );
  }
  raycast(e, t) {
    e.camera === null &&
      console.error(
        'LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.'
      );
    const i = (e.params.Line2 !== void 0 && e.params.Line2.threshold) || 0,
      r = e.ray,
      s = e.camera,
      u = s.projectionMatrix,
      c = this.matrixWorld,
      d = this.geometry,
      p = this.material,
      g = p.resolution,
      _ = p.linewidth + i,
      x = d.attributes.instanceStart,
      M = d.attributes.instanceEnd,
      E = -s.near,
      C = 2 * Math.max(_ / g.width, _ / g.height);
    d.boundingSphere === null && d.computeBoundingSphere(),
      VA.copy(d.boundingSphere).applyMatrix4(c);
    const S = Math.max(s.near, VA.distanceToPoint(r.origin));
    cr.set(0, 0, -S, 1).applyMatrix4(s.projectionMatrix),
      cr.multiplyScalar(1 / cr.w),
      cr.applyMatrix4(s.projectionMatrixInverse);
    const b = Math.abs(C / cr.w) * 0.5;
    if (((VA.radius += b), e.ray.intersectsSphere(VA) === !1)) return;
    d.boundingBox === null && d.computeBoundingBox(),
      Dr.copy(d.boundingBox).applyMatrix4(c);
    const L = Math.max(s.near, Dr.distanceToPoint(r.origin));
    cr.set(0, 0, -L, 1).applyMatrix4(s.projectionMatrix),
      cr.multiplyScalar(1 / cr.w),
      cr.applyMatrix4(s.projectionMatrixInverse);
    const T = Math.abs(C / cr.w) * 0.5;
    if (
      ((Dr.max.x += T),
      (Dr.max.y += T),
      (Dr.max.z += T),
      (Dr.min.x -= T),
      (Dr.min.y -= T),
      (Dr.min.z -= T),
      e.ray.intersectsBox(Dr) !== !1)
    ) {
      r.at(1, ur),
        (ur.w = 1),
        ur.applyMatrix4(s.matrixWorldInverse),
        ur.applyMatrix4(u),
        ur.multiplyScalar(1 / ur.w),
        (ur.x *= g.x / 2),
        (ur.y *= g.y / 2),
        (ur.z = 0),
        uu.copy(ur),
        cu.multiplyMatrices(s.matrixWorldInverse, c);
      for (let U = 0, q = x.count; U < q; U++) {
        kn.fromBufferAttribute(x, U),
          zn.fromBufferAttribute(M, U),
          (kn.w = 1),
          (zn.w = 1),
          kn.applyMatrix4(cu),
          zn.applyMatrix4(cu);
        var R = kn.z > E && zn.z > E;
        if (R) continue;
        if (kn.z > E) {
          const F = kn.z - zn.z,
            $ = (kn.z - E) / F;
          kn.lerp(zn, $);
        } else if (zn.z > E) {
          const F = zn.z - kn.z,
            $ = (zn.z - E) / F;
          zn.lerp(kn, $);
        }
        kn.applyMatrix4(u),
          zn.applyMatrix4(u),
          kn.multiplyScalar(1 / kn.w),
          zn.multiplyScalar(1 / zn.w),
          (kn.x *= g.x / 2),
          (kn.y *= g.y / 2),
          (zn.x *= g.x / 2),
          (zn.y *= g.y / 2),
          Ni.start.copy(kn),
          (Ni.start.z = 0),
          Ni.end.copy(zn),
          (Ni.end.z = 0);
        const I = Ni.closestPointToPointParameter(uu, !0);
        Ni.at(I, Np);
        const N = Tn.MathUtils.lerp(kn.z, zn.z, I),
          D = N >= -1 && N <= 1,
          O = uu.distanceTo(Np) < _ * 0.5;
        if (D && O) {
          Ni.start.fromBufferAttribute(x, U),
            Ni.end.fromBufferAttribute(M, U),
            Ni.start.applyMatrix4(c),
            Ni.end.applyMatrix4(c);
          const F = new Tn.Vector3(),
            $ = new Tn.Vector3();
          r.distanceSqToSegment(Ni.start, Ni.end, $, F),
            t.push({
              point: $,
              pointOnLine: F,
              distance: r.origin.distanceTo($),
              object: this,
              face: null,
              faceIndex: U,
              uv: null,
              uv2: null,
            });
        }
      }
    }
  }
}
Y2.prototype.LineSegments2 = !0;
class Hc extends Gc {
  constructor() {
    super(), (this.type = "LineGeometry");
  }
  setPositions(e) {
    for (
      var t = e.length - 3, i = new Float32Array(2 * t), r = 0;
      r < t;
      r += 3
    )
      (i[2 * r] = e[r]),
        (i[2 * r + 1] = e[r + 1]),
        (i[2 * r + 2] = e[r + 2]),
        (i[2 * r + 3] = e[r + 3]),
        (i[2 * r + 4] = e[r + 4]),
        (i[2 * r + 5] = e[r + 5]);
    return super.setPositions(i), this;
  }
  setColors(e) {
    for (
      var t = e.length - 3, i = new Float32Array(2 * t), r = 0;
      r < t;
      r += 3
    )
      (i[2 * r] = e[r]),
        (i[2 * r + 1] = e[r + 1]),
        (i[2 * r + 2] = e[r + 2]),
        (i[2 * r + 3] = e[r + 3]),
        (i[2 * r + 4] = e[r + 4]),
        (i[2 * r + 5] = e[r + 5]);
    return super.setColors(i), this;
  }
  fromLine(e) {
    var t = e.geometry;
    if (t.isGeometry) {
      console.error(
        "THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead."
      );
      return;
    } else t.isBufferGeometry && this.setPositions(t.attributes.position.array);
    return this;
  }
}
Hc.prototype.isLineGeometry = !0;
class Z2 extends Y2 {
  constructor(e = new Hc(), t = new n0({ color: Math.random() * 16777215 })) {
    super(e, t), (this.type = "Line2");
  }
}
Z2.prototype.isLine2 = !0;
class Fp extends Mc {
  constructor(e, t = {}) {
    const i = t.font;
    if (i === void 0) super();
    else {
      const r = i.generateShapes(e, t.size);
      (t.depth = t.height !== void 0 ? t.height : 50),
        t.bevelThickness === void 0 && (t.bevelThickness = 10),
        t.bevelSize === void 0 && (t.bevelSize = 8),
        t.bevelEnabled === void 0 && (t.bevelEnabled = !1),
        super(r, t);
    }
    this.type = "TextGeometry";
  }
}
class Rw {
  constructor(e) {
    (this.isFont = !0), (this.type = "Font"), (this.data = e);
  }
  generateShapes(e, t = 100) {
    const i = [],
      r = Pw(e, t, this.data);
    for (let s = 0, u = r.length; s < u; s++) i.push(...r[s].toShapes());
    return i;
  }
}
function Pw(n, e, t) {
  const i = Array.from(n),
    r = e / t.resolution,
    s = (t.boundingBox.yMax - t.boundingBox.yMin + t.underlineThickness) * r,
    u = [];
  let c = 0,
    d = 0;
  for (let p = 0; p < i.length; p++) {
    const g = i[p];
    if (
      g ===
      `
`
    )
      (c = 0), (d -= s);
    else {
      const _ = Lw(g, r, c, d, t);
      (c += _.offsetX), u.push(_.path);
    }
  }
  return u;
}
function Lw(n, e, t, i, r) {
  const s = r.glyphs[n] || r.glyphs["?"];
  if (!s) {
    console.error(
      'THREE.Font: character "' +
        n +
        '" does not exists in font family ' +
        r.familyName +
        "."
    );
    return;
  }
  const u = new h8();
  let c, d, p, g, _, x, M, E;
  if (s.o) {
    const C = s._cachedOutline || (s._cachedOutline = s.o.split(" "));
    for (let S = 0, b = C.length; S < b; )
      switch (C[S++]) {
        case "m":
          (c = C[S++] * e + t), (d = C[S++] * e + i), u.moveTo(c, d);
          break;
        case "l":
          (c = C[S++] * e + t), (d = C[S++] * e + i), u.lineTo(c, d);
          break;
        case "q":
          (p = C[S++] * e + t),
            (g = C[S++] * e + i),
            (_ = C[S++] * e + t),
            (x = C[S++] * e + i),
            u.quadraticCurveTo(_, x, p, g);
          break;
        case "b":
          (p = C[S++] * e + t),
            (g = C[S++] * e + i),
            (_ = C[S++] * e + t),
            (x = C[S++] * e + i),
            (M = C[S++] * e + t),
            (E = C[S++] * e + i),
            u.bezierCurveTo(_, x, M, E, p, g);
          break;
      }
  }
  return { offsetX: s.ha * e, path: u };
}
class Dw extends Cn {
  constructor(e = document.createElement("div")) {
    super(),
      (this.isCSS2DObject = !0),
      (this.element = e),
      (this.element.style.position = "absolute"),
      (this.element.style.userSelect = "none"),
      this.element.setAttribute("draggable", !1),
      (this.center = new ke(0.5, 0.5)),
      this.addEventListener("removed", function () {
        this.traverse(function (t) {
          t.element instanceof Element &&
            t.element.parentNode !== null &&
            t.element.parentNode.removeChild(t.element);
        });
      });
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.element = e.element.cloneNode(!0)),
      (this.center = e.center),
      this
    );
  }
}
new J();
new dn();
new dn();
new J();
new J();
function Iw(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      d = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        d = !1;
      } else
        for (
          ;
          !(d = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          d = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!d && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function kp(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(n);
    e &&
      (i = i.filter(function (r) {
        return Object.getOwnPropertyDescriptor(n, r).enumerable;
      })),
      t.push.apply(t, i);
  }
  return t;
}
function tn(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? kp(Object(t), !0).forEach(function (i) {
          fi(n, i, t[i]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t))
      : kp(Object(t)).forEach(function (i) {
          Object.defineProperty(n, i, Object.getOwnPropertyDescriptor(t, i));
        });
  }
  return n;
}
function K2(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function zp(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, sm(i.key), i);
  }
}
function J2(n, e, t) {
  return (
    e && zp(n.prototype, e),
    t && zp(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function fi(n, e, t) {
  return (
    (e = sm(e)),
    e in n
      ? Object.defineProperty(n, e, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (n[e] = t),
    n
  );
}
function em(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && Gl(n, e);
}
function zl(n) {
  return (
    (zl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    zl(n)
  );
}
function Gl(n, e) {
  return (
    (Gl = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    Gl(n, e)
  );
}
function tm() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function rl(n, e, t) {
  return (
    tm()
      ? (rl = Reflect.construct.bind())
      : (rl = function (r, s, u) {
          var c = [null];
          c.push.apply(c, s);
          var d = Function.bind.apply(r, c),
            p = new d();
          return u && Gl(p, u.prototype), p;
        }),
    rl.apply(null, arguments)
  );
}
function Ow(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function Uw(n, e) {
  if (n == null) return {};
  var t = Ow(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function nm(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function qw(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return nm(n);
}
function im(n) {
  var e = tm();
  return function () {
    var i = zl(n),
      r;
    if (e) {
      var s = zl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return qw(this, r);
  };
}
function vi(n, e) {
  return Nw(n) || Iw(n, e) || rm(n, e) || zw();
}
function hn(n) {
  return Bw(n) || Fw(n) || rm(n) || kw();
}
function Bw(n) {
  if (Array.isArray(n)) return oc(n);
}
function Nw(n) {
  if (Array.isArray(n)) return n;
}
function Fw(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function rm(n, e) {
  if (n) {
    if (typeof n == "string") return oc(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return oc(n, e);
  }
}
function oc(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function kw() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function zw() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Gw(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function sm(n) {
  var e = Gw(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var Hw = function n(e) {
    e instanceof Array ? e.forEach(n) : (e.map && e.map.dispose(), e.dispose());
  },
  om = function n(e) {
    e.geometry && e.geometry.dispose(),
      e.material && Hw(e.material),
      e.texture && e.texture.dispose(),
      e.children && e.children.forEach(n);
  },
  yn = function (e) {
    if (e && e.children)
      for (; e.children.length; ) {
        var t = e.children[0];
        e.remove(t), om(t);
      }
  };
function Ii(n, e) {
  var t = new e();
  return {
    linkProp: function (r) {
      return {
        default: t[r](),
        onChange: function (u, c) {
          c[n][r](u);
        },
        triggerUpdate: !1,
      };
    },
    linkMethod: function (r) {
      return function (s) {
        for (
          var u = s[n],
            c = arguments.length,
            d = new Array(c > 1 ? c - 1 : 0),
            p = 1;
          p < c;
          p++
        )
          d[p - 1] = arguments[p];
        var g = u[r].apply(u, d);
        return g === u ? this : g;
      };
    },
  };
}
var Nn = 100;
function Gp() {
  return Nn;
}
function hs(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180,
    s = Nn * (1 + t);
  return {
    x: s * Math.sin(i) * Math.cos(r),
    y: s * Math.cos(i),
    z: s * Math.sin(i) * Math.sin(r),
  };
}
function Vw(n) {
  var e = n.x,
    t = n.y,
    i = n.z,
    r = Math.sqrt(e * e + t * t + i * i),
    s = Math.acos(t / r),
    u = Math.atan2(i, e);
  return {
    lat: 90 - (s * 180) / Math.PI,
    lng: 90 - (u * 180) / Math.PI - (u < -Math.PI / 2 ? 360 : 0),
    altitude: r / Nn - 1,
  };
}
function ca(n) {
  return (n * Math.PI) / 180;
}
var Ha = window.THREE
    ? window.THREE
    : {
        BackSide: ci,
        BufferAttribute: mn,
        Color: Nt,
        Mesh: Dn,
        ShaderMaterial: or,
      },
  Ww = `
uniform vec3 color;
uniform float coefficient;
uniform float power;
varying vec3 vVertexNormal;
varying vec3 vVertexWorldPosition;
void main() {
  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;
  vec3 viewCameraToVertex	= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;
  viewCameraToVertex = normalize(viewCameraToVertex);
  float intensity	= pow(
    coefficient + dot(vVertexNormal, viewCameraToVertex),
    power
  );
  gl_FragColor = vec4(color, intensity);
}`,
  jw = `
varying vec3 vVertexWorldPosition;
varying vec3 vVertexNormal;
void main() {
  vVertexNormal	= normalize(normalMatrix * normal);
  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;
  gl_Position	= projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,
  Xw = { backside: !0, coefficient: 0.5, color: "gold", size: 2, power: 1 };
function Qw(n, e, t) {
  return new Ha.ShaderMaterial({
    depthWrite: !1,
    fragmentShader: Ww,
    transparent: !0,
    uniforms: {
      coefficient: { value: n },
      color: { value: new Ha.Color(e) },
      power: { value: t },
    },
    vertexShader: jw,
  });
}
function $w(n, e) {
  for (
    var t = n.clone(),
      i = new Float32Array(n.attributes.position.count * 3),
      r = 0,
      s = i.length;
    r < s;
    r++
  ) {
    var u = n.attributes.normal.array[r],
      c = n.attributes.position.array[r];
    i[r] = c + u * e;
  }
  return t.setAttribute("position", new Ha.BufferAttribute(i, 3)), t;
}
function Yw(n) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Xw,
    t = e.backside,
    i = e.coefficient,
    r = e.color,
    s = e.size,
    u = e.power,
    c = $w(n, s),
    d = Qw(i, r, u);
  return t && (d.side = Ha.BackSide), new Ha.Mesh(c, d);
}
var Ir = window.THREE
    ? window.THREE
    : {
        Color: Nt,
        LineBasicMaterial: Ql,
        LineSegments: D1,
        Mesh: Dn,
        MeshPhongMaterial: i8,
        SphereGeometry: Xa,
        SRGBColorSpace: fn,
        TextureLoader: a8,
      },
  am = bi({
    props: {
      globeImageUrl: {},
      bumpImageUrl: {},
      showGlobe: {
        default: !0,
        onChange: function (e, t) {
          t.globeObj.visible = !!e;
        },
        triggerUpdate: !1,
      },
      showGraticules: {
        default: !1,
        onChange: function (e, t) {
          t.graticulesObj.visible = !!e;
        },
        triggerUpdate: !1,
      },
      showAtmosphere: {
        default: !0,
        onChange: function (e, t) {
          t.atmosphereObj && (t.atmosphereObj.visible = !!e);
        },
        triggerUpdate: !1,
      },
      atmosphereColor: { default: "lightskyblue" },
      atmosphereAltitude: { default: 0.15 },
      onReady: { default: function () {}, triggerUpdate: !1 },
    },
    methods: {
      globeMaterial: function (e, t) {
        return t !== void 0
          ? ((e.globeObj.material = t || e.defaultGlobeMaterial), this)
          : e.globeObj.material;
      },
      _destructor: function (e) {
        yn(e.globeObj), yn(e.graticulesObj);
      },
    },
    stateInit: function () {
      var e = new Ir.SphereGeometry(Nn, 75, 75),
        t = new Ir.MeshPhongMaterial({ color: 0 }),
        i = new Ir.Mesh(e, t);
      (i.rotation.y = -Math.PI / 2), (i.__globeObjType = "globe");
      var r = new Ir.LineSegments(
        new m2(cb(), Nn, 2),
        new Ir.LineBasicMaterial({
          color: "lightgrey",
          transparent: !0,
          opacity: 0.1,
        })
      );
      return { globeObj: i, graticulesObj: r, defaultGlobeMaterial: t };
    },
    init: function (e, t) {
      yn(e),
        (t.scene = e),
        t.scene.add(t.globeObj),
        t.scene.add(t.graticulesObj),
        (t.ready = !1);
    },
    update: function (e, t) {
      var i = e.globeObj.material;
      if (
        (t.hasOwnProperty("globeImageUrl") &&
          (e.globeImageUrl
            ? new Ir.TextureLoader().load(e.globeImageUrl, function (s) {
                (s.colorSpace = Ir.SRGBColorSpace),
                  (i.map = s),
                  (i.color = null),
                  (i.needsUpdate = !0),
                  !e.ready && (e.ready = !0) && setTimeout(e.onReady);
              })
            : !i.color && (i.color = new Ir.Color(0))),
        t.hasOwnProperty("bumpImageUrl") &&
          (e.bumpImageUrl
            ? e.bumpImageUrl &&
              new Ir.TextureLoader().load(e.bumpImageUrl, function (s) {
                (i.bumpMap = s), (i.needsUpdate = !0);
              })
            : ((i.bumpMap = null), (i.needsUpdate = !0))),
        (t.hasOwnProperty("atmosphereColor") ||
          t.hasOwnProperty("atmosphereAltitude")) &&
          (e.atmosphereObj &&
            (e.scene.remove(e.atmosphereObj), yn(e.atmosphereObj)),
          e.atmosphereColor && e.atmosphereAltitude))
      ) {
        var r = (e.atmosphereObj = Yw(e.globeObj.geometry, {
          backside: !0,
          color: e.atmosphereColor,
          size: Nn * e.atmosphereAltitude,
          power: 3.5,
          coefficient: 0.1,
        }));
        (r.visible = !!e.showAtmosphere),
          (r.__globeObjType = "atmosphere"),
          e.scene.add(r);
      }
      !e.ready && !e.globeImageUrl && ((e.ready = !0), e.onReady());
    },
  }),
  Vr = function (e) {
    return isNaN(e) ? parseInt(ct(e).toHex(), 16) : e;
  },
  vr = function (e) {
    return isNaN(e) ? ct(e).getAlpha() : 1;
  },
  Hl = function (e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0,
      i = ct(e).toRgb(),
      r = ["r", "g", "b"].map(function (s) {
        return i[s] / 255;
      });
    return t ? [].concat(hn(r), [i.a]) : r;
  };
function Zw(n, e, t) {
  return (
    (n.opacity = e),
    (n.transparent = e < 1),
    (n.depthWrite = t === void 0 ? e >= 1 : t),
    n
  );
}
function Xi(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
    r = i.removeDelay,
    s = r === void 0 ? 0 : r;
  return $M(
    n,
    e.children,
    function (u) {
      return e.add(u);
    },
    function (u) {
      var c = function () {
        e.remove(u),
          yn(u),
          u && u.hasOwnProperty("__data") && delete u.__data.__currentTargetD;
      };
      s ? setTimeout(c, s) : c();
    },
    tn({ objBindAttr: "__threeObj" }, t)
  );
}
var di = window.THREE
    ? window.THREE
    : {
        BufferAttribute: mn,
        BufferGeometry: cn,
        Color: Nt,
        CylinderGeometry: bc,
        Matrix4: dn,
        Mesh: Dn,
        MeshBasicMaterial: Va,
        MeshLambertMaterial: Vo,
        Object3D: Cn,
        Vector3: J,
      },
  Hp = Object.assign({}, Lc),
  Vp = Hp.BufferGeometryUtils || Hp,
  fu = new di.BufferGeometry().applyMatrix4 ? "applyMatrix4" : "applyMatrix",
  Am = bi({
    props: {
      pointsData: { default: [] },
      pointLat: { default: "lat" },
      pointLng: { default: "lng" },
      pointColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      pointAltitude: { default: 0.1 },
      pointRadius: { default: 0.25 },
      pointResolution: { default: 12, triggerUpdate: !1 },
      pointsMerge: { default: !1 },
      pointsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.pointLat),
        i = Ve(e.pointLng),
        r = Ve(e.pointAltitude),
        s = Ve(e.pointRadius),
        u = Ve(e.pointColor),
        c = new di.CylinderGeometry(1, 1, 1, e.pointResolution);
      c[fu](new di.Matrix4().makeRotationX(Math.PI / 2)),
        c[fu](new di.Matrix4().makeTranslation(0, 0, -0.5));
      var d = (2 * Math.PI * Nn) / 360,
        p = {},
        g = e.pointsMerge ? new di.Object3D() : e.scene;
      if (
        (Xi(e.pointsData, g, { createObj: M, updateObj: E }), e.pointsMerge)
      ) {
        var _ = e.pointsData.length
            ? (Vp.mergeGeometries || Vp.mergeBufferGeometries)(
                e.pointsData.map(function (C) {
                  var S = C.__threeObj;
                  C.__threeObj = void 0;
                  var b = S.geometry.clone();
                  S.updateMatrix(), b[fu](S.matrix);
                  for (
                    var L = new di.Color(u(C)),
                      T = b.attributes.position.count,
                      R = new Float32Array(T * 3),
                      U = 0,
                      q = T;
                    U < q;
                    U++
                  ) {
                    var I = U * 3;
                    (R[I] = L.r), (R[I + 1] = L.g), (R[I + 2] = L.b);
                  }
                  return (
                    b.setAttribute("color", new di.BufferAttribute(R, 3)), b
                  );
                })
              )
            : new di.BufferGeometry(),
          x = new di.Mesh(
            _,
            new di.MeshBasicMaterial({ color: 16777215, vertexColors: !0 })
          );
        (x.__globeObjType = "points"),
          (x.__data = e.pointsData),
          yn(e.scene),
          e.scene.add(x);
      }
      function M() {
        var C = new di.Mesh(c);
        return (C.__globeObjType = "point"), C;
      }
      function E(C, S) {
        var b = function (N) {
            var D = (C.__currentTargetD = N),
              O = D.r,
              F = D.alt,
              $ = D.lat,
              V = D.lng;
            Object.assign(C.position, hs($, V));
            var Q = e.pointsMerge
              ? new di.Vector3(0, 0, 0)
              : e.scene.localToWorld(new di.Vector3(0, 0, 0));
            C.lookAt(Q),
              (C.scale.x = C.scale.y = Math.min(30, O) * d),
              (C.scale.z = Math.max(F * Nn, 0.1));
          },
          L = { alt: +r(S), r: +s(S), lat: +t(S), lng: +i(S) },
          T = C.__currentTargetD || Object.assign({}, L, { alt: -0.001 });
        if (
          (Object.keys(L).some(function (I) {
            return T[I] !== L[I];
          }) &&
            (e.pointsMerge ||
            !e.pointsTransitionDuration ||
            e.pointsTransitionDuration < 0
              ? b(L)
              : new Wi(T)
                  .to(L, e.pointsTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate(b)
                  .start()),
          !e.pointsMerge)
        ) {
          var R = u(S),
            U = R ? vr(R) : 0,
            q = !!U;
          (C.visible = q),
            q &&
              (p.hasOwnProperty(R) ||
                (p[R] = new di.MeshLambertMaterial({
                  color: Vr(R),
                  transparent: U < 1,
                  opacity: U,
                })),
              (C.material = p[R]));
        }
      }
    },
  }),
  Kw = ["stroke"],
  pi = window.THREE
    ? window.THREE
    : {
        BufferGeometry: cn,
        CubicBezierCurve3: O1,
        Curve: ar,
        Float32BufferAttribute: Kt,
        Group: Hi,
        Line: $l,
        Mesh: Dn,
        NormalBlending: as,
        QuadraticBezierCurve3: vc,
        ShaderMaterial: or,
        TubeGeometry: Sc,
        Vector3: J,
      },
  Jw = No.default || No,
  WA = new pi.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  e7 = {
    uniforms: {
      dashOffset: { value: 0 },
      dashSize: { value: 1 },
      gapSize: { value: 0 },
      dashTranslate: { value: 0 },
    },
    vertexShader: `
    uniform float dashTranslate; 

    attribute vec4 vertexColor;
    varying vec4 vColor;
    
    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
    fragmentShader: `
    uniform float dashOffset; 
    uniform float dashSize;
    uniform float gapSize; 
    
    varying vec4 vColor;
    varying float vRelDistance;
    
    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;
    
      // set px color: [r, g, b, a], interpolated between vertices 
      gl_FragColor = vColor; 
    }
  `,
  },
  lm = bi({
    props: {
      arcsData: { default: [] },
      arcStartLat: { default: "startLat" },
      arcStartLng: { default: "startLng" },
      arcEndLat: { default: "endLat" },
      arcEndLng: { default: "endLng" },
      arcColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      arcAltitude: {},
      arcAltitudeAutoScale: { default: 0.5 },
      arcStroke: {},
      arcCurveResolution: { default: 64, triggerUpdate: !1 },
      arcCircularResolution: { default: 6, triggerUpdate: !1 },
      arcDashLength: { default: 1 },
      arcDashGap: { default: 0 },
      arcDashInitialGap: { default: 0 },
      arcDashAnimateTime: { default: 0 },
      arcsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      yn(e),
        (t.scene = e),
        (t.ticker = new Jw()),
        t.ticker.onTick.add(function (i, r) {
          t.arcsData
            .filter(function (s) {
              return (
                s.__threeObj &&
                s.__threeObj.children.length &&
                s.__threeObj.children[0].material &&
                s.__threeObj.children[0].__dashAnimateStep
              );
            })
            .forEach(function (s) {
              var u = s.__threeObj.children[0],
                c = u.__dashAnimateStep * r,
                d = u.material.uniforms.dashTranslate.value % 1e9;
              u.material.uniforms.dashTranslate.value = d + c;
            });
        });
    },
    update: function (e) {
      var t = Ve(e.arcStartLat),
        i = Ve(e.arcStartLng),
        r = Ve(e.arcEndLat),
        s = Ve(e.arcEndLng),
        u = Ve(e.arcAltitude),
        c = Ve(e.arcAltitudeAutoScale),
        d = Ve(e.arcStroke),
        p = Ve(e.arcColor),
        g = Ve(e.arcDashLength),
        _ = Ve(e.arcDashGap),
        x = Ve(e.arcDashInitialGap),
        M = Ve(e.arcDashAnimateTime),
        E = new pi.ShaderMaterial(
          tn(tn({}, e7), {}, { transparent: !0, blending: pi.NormalBlending })
        );
      Xi(e.arcsData, e.scene, {
        createObj: function () {
          var T = new pi.Group();
          return (T.__globeObjType = "arc"), T;
        },
        updateObj: function (T, R) {
          var U = d(R),
            q = U != null;
          if (!T.children.length || q !== (T.children[0].type === "Mesh")) {
            yn(T);
            var I = q ? new pi.Mesh() : new pi.Line(new pi.BufferGeometry());
            (I.material = E.clone()), T.add(I);
          }
          var N = T.children[0];
          Object.assign(N.material.uniforms, {
            dashSize: { value: g(R) },
            gapSize: { value: _(R) },
            dashOffset: { value: x(R) },
          });
          var D = M(R);
          N.__dashAnimateStep = D > 0 ? 1e3 / D : 0;
          var O = S(
              p(R),
              e.arcCurveResolution,
              q ? e.arcCircularResolution + 1 : 1
            ),
            F = b(
              e.arcCurveResolution,
              q ? e.arcCircularResolution + 1 : 1,
              !0
            );
          N.geometry[WA]("vertexColor", O),
            N.geometry[WA]("vertexRelDistance", F);
          var $ = function (te) {
              var ee = (R.__currentTargetD = te),
                se = ee.stroke,
                pe = Uw(ee, Kw),
                de = C(pe);
              q
                ? (N.geometry && N.geometry.dispose(),
                  (N.geometry = new pi.TubeGeometry(
                    de,
                    e.arcCurveResolution,
                    se / 2,
                    e.arcCircularResolution
                  )),
                  N.geometry[WA]("vertexColor", O),
                  N.geometry[WA]("vertexRelDistance", F))
                : N.geometry.setFromPoints(de.getPoints(e.arcCurveResolution));
            },
            V = {
              stroke: U,
              alt: u(R),
              altAutoScale: +c(R),
              startLat: +t(R),
              startLng: +i(R),
              endLat: +r(R),
              endLng: +s(R),
            },
            Q =
              R.__currentTargetD ||
              Object.assign({}, V, { altAutoScale: -0.001 });
          Object.keys(V).some(function (k) {
            return Q[k] !== V[k];
          }) &&
            (!e.arcsTransitionDuration || e.arcsTransitionDuration < 0
              ? $(V)
              : new Wi(Q)
                  .to(V, e.arcsTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate($)
                  .start());
        },
      });
      function C(L) {
        var T = L.alt,
          R = L.altAutoScale,
          U = L.startLat,
          q = L.startLng,
          I = L.endLat,
          N = L.endLng,
          D = function (he) {
            var Te = vi(he, 3),
              Pe = Te[0],
              Oe = Te[1],
              Je = Te[2],
              rt = hs(Oe, Pe, Je),
              ot = rt.x,
              Rt = rt.y,
              It = rt.z;
            return new pi.Vector3(ot, Rt, It);
          },
          O = [q, U],
          F = [N, I],
          $ = T;
        if (($ == null && ($ = (fs(O, F) / 2) * R), $)) {
          var V = Cc(O, F),
            Q = [0.25, 0.75].map(function (oe) {
              return [].concat(hn(V(oe)), [$ * 1.5]);
            }),
            k = vi(Q, 2),
            te = k[0],
            ee = k[1],
            se = rl(pi.CubicBezierCurve3, hn([O, te, ee, F].map(D)));
          return se;
        } else {
          var pe = 0.001;
          return de.apply(
            void 0,
            hn([[].concat(O, [pe]), [].concat(F, [pe])].map(D))
          );
        }
        function de(oe, he) {
          var Te = oe.angleTo(he),
            Pe =
              Te === 0
                ? function () {
                    return oe.clone();
                  }
                : function (Je) {
                    return new pi.Vector3()
                      .addVectors(
                        oe.clone().multiplyScalar(Math.sin((1 - Je) * Te)),
                        he.clone().multiplyScalar(Math.sin(Je * Te))
                      )
                      .divideScalar(Math.sin(Te));
                  },
            Oe = new pi.Curve();
          return (Oe.getPoint = Pe), Oe;
        }
      }
      function S(L, T) {
        var R =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
          U = T + 1,
          q;
        if (L instanceof Array || L instanceof Function) {
          var I =
            L instanceof Array
              ? ko()
                  .domain(
                    L.map(function (Q, k) {
                      return k / (L.length - 1);
                    })
                  )
                  .range(L)
              : L;
          q = function (k) {
            return Hl(I(k));
          };
        } else {
          var N = Hl(L);
          q = function () {
            return N;
          };
        }
        for (
          var D = new pi.Float32BufferAttribute(U * 4 * R, 4), O = 0, F = U;
          O < F;
          O++
        )
          for (var $ = q(O / (F - 1)), V = 0; V < R; V++)
            D.set($, (O * R + V) * 4);
        return D;
      }
      function b(L) {
        for (
          var T =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : 1,
            R =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : !1,
            U = L + 1,
            q = U * T,
            I = new pi.Float32BufferAttribute(q, 1),
            N = 0,
            D = U;
          N < D;
          N++
        )
          for (var O = N / (D - 1), F = 0; F < T; F++) {
            var $ = N * T + F,
              V = R ? q - 1 - $ : $;
            I.setX(V, O);
          }
        return I;
      }
    },
  }),
  Fi = window.THREE
    ? window.THREE
    : {
        BufferAttribute: mn,
        BufferGeometry: cn,
        Color: Nt,
        DoubleSide: gi,
        Mesh: Dn,
        MeshBasicMaterial: Va,
        MeshLambertMaterial: Vo,
        Object3D: Cn,
      },
  Wp = Object.assign({}, Lc),
  jp = Wp.BufferGeometryUtils || Wp,
  t7 = new Fi.BufferGeometry().applyMatrix4 ? "applyMatrix4" : "applyMatrix",
  um = bi({
    props: {
      hexBinPointsData: { default: [] },
      hexBinPointLat: { default: "lat" },
      hexBinPointLng: { default: "lng" },
      hexBinPointWeight: { default: 1 },
      hexBinResolution: { default: 4 },
      hexMargin: { default: 0.2 },
      hexTopCurvatureResolution: { default: 5 },
      hexTopColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexSideColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexAltitude: {
        default: function (e) {
          var t = e.sumWeight;
          return t * 0.01;
        },
      },
      hexBinMerge: { default: !1 },
      hexTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.hexBinPointLat),
        i = Ve(e.hexBinPointLng),
        r = Ve(e.hexBinPointWeight),
        s = Ve(e.hexAltitude),
        u = Ve(e.hexTopColor),
        c = Ve(e.hexSideColor),
        d = Ve(e.hexMargin),
        p = Zu(
          e.hexBinPointsData.map(function (b) {
            return tn(
              tn({}, b),
              {},
              { h3Idx: Tw(t(b), i(b), e.hexBinResolution) }
            );
          }),
          "h3Idx"
        ),
        g = Object.entries(p).map(function (b) {
          var L = vi(b, 2),
            T = L[0],
            R = L[1];
          return {
            h3Idx: T,
            points: R,
            sumWeight: R.reduce(function (U, q) {
              return U + +r(q);
            }, 0),
          };
        }),
        _ = {},
        x = e.hexBinMerge ? new Fi.Object3D() : e.scene;
      if (
        (Xi(g, x, {
          createObj: C,
          updateObj: S,
          idAccessor: function (L) {
            return L.h3Idx;
          },
        }),
        e.hexBinMerge)
      ) {
        var M = g.length
            ? (jp.mergeGeometries || jp.mergeBufferGeometries)(
                g.map(function (b) {
                  var L = b.__threeObj;
                  b.__threeObj = void 0;
                  var T = L.geometry.toNonIndexed();
                  L.updateMatrix(), T[t7](L.matrix);
                  for (
                    var R = new Fi.Color(u(b)),
                      U = new Fi.Color(c(b)),
                      q = T.attributes.position.count,
                      I = T.groups[0].count,
                      N = new Float32Array(q * 3),
                      D = 0,
                      O = q;
                    D < O;
                    D++
                  ) {
                    var F = D * 3,
                      $ = D >= I ? R : U;
                    (N[F] = $.r), (N[F + 1] = $.g), (N[F + 2] = $.b);
                  }
                  return (
                    T.setAttribute("color", new Fi.BufferAttribute(N, 3)), T
                  );
                })
              )
            : new Fi.BufferGeometry(),
          E = new Fi.Mesh(
            M,
            new Fi.MeshBasicMaterial({
              color: 16777215,
              vertexColors: !0,
              side: Fi.DoubleSide,
            })
          );
        (E.__globeObjType = "hexBinPoints"),
          (E.__data = g),
          yn(e.scene),
          e.scene.add(E);
      }
      function C(b) {
        var L = new Fi.Mesh();
        (L.__hexCenter = X2(b.h3Idx)),
          (L.__hexGeoJson = Q2(b.h3Idx, !0).reverse());
        var T = L.__hexCenter[1];
        return (
          L.__hexGeoJson.forEach(function (R) {
            var U = R[0];
            Math.abs(T - U) > 170 && (R[0] += T > U ? 360 : -360);
          }),
          (L.__globeObjType = "hexbin"),
          L
        );
      }
      function S(b, L) {
        var T = function (te, ee, se) {
            return te - (te - ee) * se;
          },
          R = Math.max(0, Math.min(1, +d(L))),
          U = vi(b.__hexCenter, 2),
          q = U[0],
          I = U[1],
          N =
            R === 0
              ? b.__hexGeoJson
              : b.__hexGeoJson.map(function (k) {
                  var te = vi(k, 2),
                    ee = te[0],
                    se = te[1];
                  return [
                    [ee, I],
                    [se, q],
                  ].map(function (pe) {
                    var de = vi(pe, 2),
                      oe = de[0],
                      he = de[1];
                    return T(oe, he, R);
                  });
                }),
          D = e.hexTopCurvatureResolution;
        b.geometry && b.geometry.dispose(),
          (b.geometry = new kc([N], 0, Nn, !1, !0, !0, D));
        var O = { alt: +s(L) },
          F = function (te) {
            var ee = (b.__currentTargetD = te),
              se = ee.alt;
            b.scale.x = b.scale.y = b.scale.z = 1 + se;
          },
          $ = b.__currentTargetD || Object.assign({}, O, { alt: -0.001 });
        if (
          (Object.keys(O).some(function (k) {
            return $[k] !== O[k];
          }) &&
            (e.hexBinMerge ||
            !e.hexTransitionDuration ||
            e.hexTransitionDuration < 0
              ? F(O)
              : new Wi($)
                  .to(O, e.hexTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate(F)
                  .start()),
          !e.hexBinMerge)
        ) {
          var V = c(L),
            Q = u(L);
          [V, Q].forEach(function (k) {
            if (!_.hasOwnProperty(k)) {
              var te = vr(k);
              _[k] = new Fi.MeshLambertMaterial({
                color: Vr(k),
                transparent: te < 1,
                opacity: te,
                side: Fi.DoubleSide,
              });
            }
          }),
            (b.material = [V, Q].map(function (k) {
              return _[k];
            }));
        }
      }
    },
  }),
  Jr = window.THREE
    ? window.THREE
    : {
        DoubleSide: gi,
        Group: Hi,
        LineBasicMaterial: Ql,
        LineSegments: D1,
        Mesh: Dn,
        MeshBasicMaterial: Va,
      },
  cm = bi({
    props: {
      polygonsData: { default: [] },
      polygonGeoJsonGeometry: { default: "geometry" },
      polygonSideColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      polygonSideMaterial: {},
      polygonCapColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      polygonCapMaterial: {},
      polygonStrokeColor: {},
      polygonAltitude: { default: 0.01 },
      polygonCapCurvatureResolution: { default: 5 },
      polygonsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.polygonGeoJsonGeometry),
        i = Ve(e.polygonAltitude),
        r = Ve(e.polygonCapCurvatureResolution),
        s = Ve(e.polygonCapColor),
        u = Ve(e.polygonCapMaterial),
        c = Ve(e.polygonSideColor),
        d = Ve(e.polygonSideMaterial),
        p = Ve(e.polygonStrokeColor),
        g = [];
      e.polygonsData.forEach(function (_) {
        var x = {
            data: _,
            capColor: s(_),
            capMaterial: u(_),
            sideColor: c(_),
            sideMaterial: d(_),
            strokeColor: p(_),
            altitude: +i(_),
            capCurvatureResolution: +r(_),
          },
          M = t(_),
          E = _.__id || "".concat(Math.round(Math.random() * 1e9));
        (_.__id = E),
          M.type === "Polygon"
            ? g.push(tn({ id: "".concat(E, "_0"), coords: M.coordinates }, x))
            : M.type === "MultiPolygon"
            ? g.push.apply(
                g,
                hn(
                  M.coordinates.map(function (C, S) {
                    return tn(
                      { id: "".concat(E, "_").concat(S), coords: C },
                      x
                    );
                  })
                )
              )
            : console.warn(
                "Unsupported GeoJson geometry type: ".concat(
                  M.type,
                  ". Skipping geometry..."
                )
              );
      }),
        Xi(g, e.scene, {
          idAccessor: function (x) {
            return x.id;
          },
          createObj: function () {
            var x = new Jr.Group();
            return (
              (x.__defaultSideMaterial = new Jr.MeshBasicMaterial({
                side: Jr.DoubleSide,
                depthWrite: !0,
              })),
              (x.__defaultCapMaterial = new Jr.MeshBasicMaterial({
                side: Jr.DoubleSide,
                depthWrite: !0,
              })),
              x.add(
                new Jr.Mesh(void 0, [
                  x.__defaultSideMaterial,
                  x.__defaultCapMaterial,
                ])
              ),
              x.add(new Jr.LineSegments(void 0, new Jr.LineBasicMaterial())),
              (x.__globeObjType = "polygon"),
              x
            );
          },
          updateObj: function (x, M) {
            var E = M.coords,
              C = M.capColor,
              S = M.capMaterial,
              b = M.sideColor,
              L = M.sideMaterial,
              T = M.strokeColor,
              R = M.altitude,
              U = M.capCurvatureResolution,
              q = vi(x.children, 2),
              I = q[0],
              N = q[1],
              D = !!T;
            if (
              ((N.visible = D),
              n7(I.geometry.parameters || {}, {
                polygonGeoJson: E,
                curvatureResolution: U,
              }) ||
                (I.geometry && I.geometry.dispose(),
                (I.geometry = new kc(E, 0, Nn, !1, !0, !0, U))),
              D &&
                (!N.geometry.parameters ||
                  N.geometry.parameters.geoJson.coordinates !== E ||
                  N.geometry.parameters.resolution !== U) &&
                (N.geometry && N.geometry.dispose(),
                (N.geometry = new m2(
                  { type: "Polygon", coordinates: E },
                  Nn,
                  U
                ))),
              (I.material[0] = L || x.__defaultSideMaterial),
              (I.material[1] = S || x.__defaultCapMaterial),
              [!L && b, !S && C].forEach(function (k, te) {
                if (k) {
                  var ee = I.material[te],
                    se = vr(k);
                  ee.color.set(Vr(k)),
                    (ee.transparent = se < 1),
                    (ee.opacity = se);
                }
              }),
              D)
            ) {
              var O = N.material,
                F = vr(T);
              O.color.set(Vr(T)), (O.transparent = F < 1), (O.opacity = F);
            }
            var $ = { alt: R },
              V = function (te) {
                var ee = (x.__currentTargetD = te),
                  se = ee.alt;
                (I.scale.x = I.scale.y = I.scale.z = 1 + se),
                  D && (N.scale.x = N.scale.y = N.scale.z = 1 + se + 1e-4);
              },
              Q = x.__currentTargetD || Object.assign({}, $, { alt: -0.001 });
            Object.keys($).some(function (k) {
              return Q[k] !== $[k];
            }) &&
              (!e.polygonsTransitionDuration ||
              e.polygonsTransitionDuration < 0 ||
              Q.alt === $.alt
                ? V($)
                : new Wi(Q)
                    .to($, e.polygonsTransitionDuration)
                    .easing(Zn.Quadratic.InOut)
                    .onUpdate(V)
                    .start());
          },
        });
    },
  });
function n7(n, e) {
  var t =
    arguments.length > 2 && arguments[2] !== void 0
      ? arguments[2]
      : function () {
          return function (i, r) {
            return i === r;
          };
        };
  return Object.entries(e).every(function (i) {
    var r = vi(i, 2),
      s = r[0],
      u = r[1];
    return n.hasOwnProperty(s) && t(s)(n[s], u);
  });
}
var jA = window.THREE
    ? window.THREE
    : { BufferGeometry: cn, DoubleSide: gi, Mesh: Dn, MeshLambertMaterial: Vo },
  Xp = Object.assign({}, Lc),
  Qp = Xp.BufferGeometryUtils || Xp,
  fm = bi({
    props: {
      hexPolygonsData: { default: [] },
      hexPolygonGeoJsonGeometry: { default: "geometry" },
      hexPolygonColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexPolygonAltitude: { default: 0.001 },
      hexPolygonResolution: { default: 3 },
      hexPolygonMargin: { default: 0.2 },
      hexPolygonCurvatureResolution: { default: 5 },
      hexPolygonsTransitionDuration: { default: 0, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.hexPolygonGeoJsonGeometry),
        i = Ve(e.hexPolygonColor),
        r = Ve(e.hexPolygonAltitude),
        s = Ve(e.hexPolygonResolution),
        u = Ve(e.hexPolygonMargin),
        c = Ve(e.hexPolygonCurvatureResolution);
      Xi(e.hexPolygonsData, e.scene, {
        createObj: function (p) {
          var g = new jA.Mesh(
            void 0,
            new jA.MeshLambertMaterial({ side: jA.DoubleSide })
          );
          return (g.__globeObjType = "hexPolygon"), g;
        },
        updateObj: function (p, g) {
          var _ = t(g),
            x = s(g),
            M = r(g),
            E = Math.max(0, Math.min(1, +u(g))),
            C = c(g),
            S = i(g),
            b = vr(S);
          p.material.color.set(Vr(S)),
            (p.material.transparent = b < 1),
            (p.material.opacity = b);
          var L = { alt: M, margin: E, curvatureResolution: C },
            T = { geoJson: _, h3Res: x },
            R = p.__currentTargetD || Object.assign({}, L, { alt: -0.001 }),
            U = p.__currentMemD || T;
          if (
            Object.keys(L).some(function (D) {
              return R[D] !== L[D];
            }) ||
            Object.keys(T).some(function (D) {
              return U[D] !== T[D];
            })
          ) {
            p.__currentMemD = T;
            var q = [];
            _.type === "Polygon"
              ? Ip(_.coordinates, x, !0).forEach(function (D) {
                  return q.push(D);
                })
              : _.type === "MultiPolygon"
              ? _.coordinates.forEach(function (D) {
                  return Ip(D, x, !0).forEach(function (O) {
                    return q.push(O);
                  });
                })
              : console.warn(
                  "Unsupported GeoJson geometry type: ".concat(
                    _.type,
                    ". Skipping geometry..."
                  )
                );
            var I = q.map(function (D) {
                var O = X2(D),
                  F = Q2(D, !0).reverse(),
                  $ = O[1];
                return (
                  F.forEach(function (V) {
                    var Q = V[0];
                    Math.abs($ - Q) > 170 && (V[0] += $ > Q ? 360 : -360);
                  }),
                  { h3Idx: D, hexCenter: O, hexGeoJson: F }
                );
              }),
              N = function (O) {
                var F = (p.__currentTargetD = O),
                  $ = F.alt,
                  V = F.margin,
                  Q = F.curvatureResolution;
                p.geometry && p.geometry.dispose(),
                  (p.geometry = I.length
                    ? (Qp.mergeGeometries || Qp.mergeBufferGeometries)(
                        I.map(function (k) {
                          var te = function (he, Te, Pe) {
                              return he - (he - Te) * Pe;
                            },
                            ee = vi(k.hexCenter, 2),
                            se = ee[0],
                            pe = ee[1],
                            de =
                              V === 0
                                ? k.hexGeoJson
                                : k.hexGeoJson.map(function (oe) {
                                    var he = vi(oe, 2),
                                      Te = he[0],
                                      Pe = he[1];
                                    return [
                                      [Te, pe],
                                      [Pe, se],
                                    ].map(function (Oe) {
                                      var Je = vi(Oe, 2),
                                        rt = Je[0],
                                        ot = Je[1];
                                      return te(rt, ot, V);
                                    });
                                  });
                          return new kc([de], Nn, Nn * (1 + $), !1, !0, !1, Q);
                        })
                      )
                    : new jA.BufferGeometry());
              };
            !e.hexPolygonsTransitionDuration ||
            e.hexPolygonsTransitionDuration < 0
              ? N(L)
              : new Wi(R)
                  .to(L, e.hexPolygonsTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate(N)
                  .start();
          }
        },
      });
    },
  }),
  i7 = window.THREE ? window.THREE : { Vector3: J };
function r7(n, e) {
  var t = function (u, c) {
      var d = u[u.length - 1];
      return [].concat(
        hn(u),
        hn(
          hn(new Array(c - u.length)).map(function () {
            return d;
          })
        )
      );
    },
    i = Math.max(n.length, e.length),
    r = hS.apply(
      void 0,
      hn(
        [n, e]
          .map(function (s) {
            return s.map(function (u) {
              var c = u.x,
                d = u.y,
                p = u.z;
              return [c, d, p];
            });
          })
          .map(function (s) {
            return t(s, i);
          })
      )
    );
  return function (s) {
    return s === 0
      ? n
      : s === 1
      ? e
      : r(s).map(function (u) {
          var c = vi(u, 3),
            d = c[0],
            p = c[1],
            g = c[2];
          return new i7.Vector3(d, p, g);
        });
  };
}
var fr = window.THREE
    ? window.THREE
    : {
        BufferGeometry: cn,
        Color: Nt,
        Float32BufferAttribute: Kt,
        Group: Hi,
        Line: $l,
        NormalBlending: as,
        ShaderMaterial: or,
        Vector3: J,
      },
  s7 = No.default || No,
  $p = new fr.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  o7 = {
    uniforms: {
      dashOffset: { value: 0 },
      dashSize: { value: 1 },
      gapSize: { value: 0 },
      dashTranslate: { value: 0 },
    },
    vertexShader: `
    uniform float dashTranslate;

    attribute vec4 vertexColor;
    varying vec4 vColor;

    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
    fragmentShader: `
    uniform float dashOffset;
    uniform float dashSize;
    uniform float gapSize;

    varying vec4 vColor;
    varying float vRelDistance;

    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;

      // set px color: [r, g, b, a], interpolated between vertices
      gl_FragColor = vColor;
    }
  `,
  },
  hm = bi({
    props: {
      pathsData: { default: [] },
      pathPoints: {
        default: function (e) {
          return e;
        },
      },
      pathPointLat: {
        default: function (e) {
          return e[0];
        },
      },
      pathPointLng: {
        default: function (e) {
          return e[1];
        },
      },
      pathPointAlt: { default: 0.001 },
      pathResolution: { default: 2 },
      pathColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      pathStroke: {},
      pathDashLength: { default: 1 },
      pathDashGap: { default: 0 },
      pathDashInitialGap: { default: 0 },
      pathDashAnimateTime: { default: 0 },
      pathTransitionDuration: { default: 1e3, triggerUpdate: !1 },
      rendererSize: {},
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      yn(e),
        (t.scene = e),
        (t.ticker = new s7()),
        t.ticker.onTick.add(function (i, r) {
          t.pathsData
            .filter(function (s) {
              return (
                s.__threeObj &&
                s.__threeObj.children.length &&
                s.__threeObj.children[0].material &&
                s.__threeObj.children[0].__dashAnimateStep
              );
            })
            .forEach(function (s) {
              var u = s.__threeObj.children[0],
                c = u.__dashAnimateStep * r;
              if (u.type === "Line") {
                var d = u.material.uniforms.dashTranslate.value % 1e9;
                u.material.uniforms.dashTranslate.value = d + c;
              } else if (u.type === "Line2") {
                for (
                  var p = u.material.dashOffset - c,
                    g = u.material.dashSize + u.material.gapSize;
                  p <= -g;

                )
                  p += g;
                u.material.dashOffset = p;
              }
            });
        });
    },
    update: function (e) {
      var t = Ve(e.pathPoints),
        i = Ve(e.pathPointLat),
        r = Ve(e.pathPointLng),
        s = Ve(e.pathPointAlt),
        u = Ve(e.pathStroke),
        c = Ve(e.pathColor),
        d = Ve(e.pathDashLength),
        p = Ve(e.pathDashGap),
        g = Ve(e.pathDashInitialGap),
        _ = Ve(e.pathDashAnimateTime),
        x = new fr.ShaderMaterial(
          tn(tn({}, o7), {}, { transparent: !0, blending: fr.NormalBlending })
        );
      Xi(e.pathsData, e.scene, {
        createObj: function () {
          var L = new fr.Group();
          return (L.__globeObjType = "path"), L;
        },
        updateObj: function (L, T) {
          var R = u(T),
            U = R != null;
          if (!L.children.length || U === (L.children[0].type === "Line")) {
            yn(L);
            var q = U
              ? new Z2(new Hc(), new n0())
              : new fr.Line(new fr.BufferGeometry(), x.clone());
            L.add(q);
          }
          var I = L.children[0],
            N = E(t(T), i, r, s, e.pathResolution),
            D = _(T);
          if (((I.__dashAnimateStep = D > 0 ? 1e3 / D : 0), U)) {
            I.material.resolution = e.rendererSize;
            {
              var $ = d(T),
                V = p(T),
                Q = g(T);
              (I.material.dashed = V > 0),
                I.material.dashed
                  ? (I.material.defines.USE_DASH = "")
                  : delete I.material.defines.USE_DASH,
                I.material.dashed &&
                  ((I.material.dashScale = 1 / M(N)),
                  (I.material.dashSize = $),
                  (I.material.gapSize = V),
                  (I.material.dashOffset = -Q));
            }
            {
              var k = c(T);
              if (k instanceof Array) {
                var te = C(c(T), N.length - 1, 1, !1);
                I.geometry.setColors(te.array), (I.material.vertexColors = !0);
              } else {
                var ee = k,
                  se = vr(ee);
                (I.material.color = new fr.Color(Vr(ee))),
                  (I.material.transparent = se < 1),
                  (I.material.opacity = se),
                  (I.material.vertexColors = !1);
              }
            }
            I.material.needsUpdate = !0;
          } else {
            Object.assign(I.material.uniforms, {
              dashSize: { value: d(T) },
              gapSize: { value: p(T) },
              dashOffset: { value: g(T) },
            });
            var O = C(c(T), N.length),
              F = S(N.length, 1, !0);
            I.geometry[$p]("vertexColor", O),
              I.geometry[$p]("vertexRelDistance", F);
          }
          var pe = r7(
              (T.__currentTargetD && T.__currentTargetD.points) || [N[0]],
              N
            ),
            de = function (Pe) {
              var Oe = (T.__currentTargetD = Pe),
                Je = Oe.stroke,
                rt = Oe.interpolK,
                ot = (T.__currentTargetD.points = pe(rt));
              if (U) {
                var Rt;
                I.geometry.setPositions(
                  (Rt = []).concat.apply(
                    Rt,
                    hn(
                      ot.map(function (It) {
                        var ft = It.x,
                          ne = It.y,
                          ze = It.z;
                        return [ft, ne, ze];
                      })
                    )
                  )
                ),
                  (I.material.linewidth = Je),
                  I.material.dashed && I.computeLineDistances();
              } else
                I.geometry.setFromPoints(ot),
                  I.geometry.computeBoundingSphere();
            },
            oe = { stroke: R, interpolK: 1 },
            he = Object.assign({}, T.__currentTargetD || oe, { interpolK: 0 });
          Object.keys(oe).some(function (Te) {
            return he[Te] !== oe[Te];
          }) &&
            (!e.pathTransitionDuration || e.pathTransitionDuration < 0
              ? de(oe)
              : new Wi(he)
                  .to(oe, e.pathTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate(de)
                  .start());
        },
      });
      function M(b) {
        var L = 0,
          T;
        return (
          b.forEach(function (R) {
            T && (L += T.distanceTo(R)), (T = R);
          }),
          L
        );
      }
      function E(b, L, T, R, U) {
        var q = function (O, F, $) {
            for (var V = [], Q = 1; Q <= $; Q++)
              V.push(O + ((F - O) * Q) / ($ + 1));
            return V;
          },
          I = function () {
            var O =
                arguments.length > 0 && arguments[0] !== void 0
                  ? arguments[0]
                  : [],
              F =
                arguments.length > 1 && arguments[1] !== void 0
                  ? arguments[1]
                  : 1,
              $ = [],
              V = null;
            return (
              O.forEach(function (Q) {
                if (V) {
                  for (; Math.abs(V[1] - Q[1]) > 180; )
                    V[1] += 360 * (V[1] < Q[1] ? 1 : -1);
                  var k = Math.sqrt(
                    Math.pow(Q[0] - V[0], 2) + Math.pow(Q[1] - V[1], 2)
                  );
                  if (k > F)
                    for (
                      var te = Math.floor(k / F),
                        ee = q(V[0], Q[0], te),
                        se = q(V[1], Q[1], te),
                        pe = q(V[2], Q[2], te),
                        de = 0,
                        oe = ee.length;
                      de < oe;
                      de++
                    )
                      $.push([ee[de], se[de], pe[de]]);
                }
                $.push((V = Q));
              }),
              $
            );
          },
          N = function (O) {
            var F = vi(O, 3),
              $ = F[0],
              V = F[1],
              Q = F[2],
              k = hs($, V, Q),
              te = k.x,
              ee = k.y,
              se = k.z;
            return new fr.Vector3(te, ee, se);
          };
        return I(
          b.map(function (D) {
            return [L(D), T(D), R(D)];
          }),
          U
        ).map(N);
      }
      function C(b, L) {
        var T =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
          R =
            arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0,
          U = L + 1,
          q;
        if (b instanceof Array || b instanceof Function) {
          var I =
            b instanceof Array
              ? ko()
                  .domain(
                    b.map(function (k, te) {
                      return te / (b.length - 1);
                    })
                  )
                  .range(b)
              : b;
          q = function (te) {
            return Hl(I(te), R);
          };
        } else {
          var N = Hl(b, R);
          q = function () {
            return N;
          };
        }
        for (
          var D = R ? 4 : 3,
            O = new fr.Float32BufferAttribute(U * D * T, D),
            F = 0,
            $ = U;
          F < $;
          F++
        )
          for (var V = q(F / ($ - 1)), Q = 0; Q < T; Q++)
            O.set(V, (F * T + Q) * D);
        return O;
      }
      function S(b) {
        for (
          var L =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : 1,
            T =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : !1,
            R = b + 1,
            U = R * L,
            q = new fr.Float32BufferAttribute(U, 1),
            I = 0,
            N = R;
          I < N;
          I++
        )
          for (var D = I / (N - 1), O = 0; O < L; O++) {
            var F = I * L + O,
              $ = T ? U - 1 - F : F;
            q.setX($, D);
          }
        return q;
      }
    },
  }),
  XA = window.THREE
    ? window.THREE
    : { Euler: cs, Mesh: Dn, MeshLambertMaterial: Vo, SphereGeometry: Xa },
  dm = bi({
    props: {
      tilesData: { default: [] },
      tileLat: { default: "lat" },
      tileLng: { default: "lng" },
      tileAltitude: { default: 0.01 },
      tileWidth: { default: 1 },
      tileHeight: { default: 1 },
      tileUseGlobeProjection: { default: !0 },
      tileMaterial: {
        default: function () {
          return new XA.MeshLambertMaterial({
            color: "#ffbb88",
            opacity: 0.4,
            transparent: !0,
          });
        },
      },
      tileCurvatureResolution: { default: 5 },
      tilesTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.tileLat),
        i = Ve(e.tileLng),
        r = Ve(e.tileAltitude),
        s = Ve(e.tileWidth),
        u = Ve(e.tileHeight),
        c = Ve(e.tileUseGlobeProjection),
        d = Ve(e.tileMaterial),
        p = Ve(e.tileCurvatureResolution);
      Xi(e.tilesData, e.scene, {
        createObj: function () {
          var _ = new XA.Mesh();
          return (_.__globeObjType = "tile"), _;
        },
        updateObj: function (_, x) {
          _.material = d(x);
          var M = c(x),
            E = p(x),
            C = function (T) {
              var R = (_.__currentTargetD = T),
                U = R.lat,
                q = R.lng,
                I = R.alt,
                N = R.width,
                D = R.height,
                O = mo(q),
                F = mo(-U);
              _.geometry && _.geometry.dispose(),
                (_.geometry = new XA.SphereGeometry(
                  Nn * (1 + I),
                  Math.ceil(N / (E || -1)),
                  Math.ceil(D / (E || -1)),
                  mo(90 - N / 2) + (M ? O : 0),
                  mo(N),
                  mo(90 - D / 2) + (M ? F : 0),
                  mo(D)
                )),
                M || _.setRotationFromEuler(new XA.Euler(F, O, 0, "YXZ"));
            },
            S = {
              lat: +t(x),
              lng: +i(x),
              alt: +r(x),
              width: +s(x),
              height: +u(x),
            },
            b =
              _.__currentTargetD ||
              Object.assign({}, S, { width: 0, height: 0 });
          Object.keys(S).some(function (L) {
            return b[L] !== S[L];
          }) &&
            (!e.tilesTransitionDuration || e.tilesTransitionDuration < 0
              ? C(S)
              : new Wi(b)
                  .to(S, e.tilesTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate(C)
                  .start());
        },
      });
    },
  }),
  mo = function (e) {
    return (e * Math.PI) / 180;
  },
  a7 = {
    0: {
      x_min: 73,
      x_max: 715,
      ha: 792,
      o: "m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 ",
    },
    1: {
      x_min: 215.671875,
      x_max: 574,
      ha: 792,
      o: "m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 ",
    },
    2: {
      x_min: 59,
      x_max: 731,
      ha: 792,
      o: "m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 ",
    },
    3: {
      x_min: 54,
      x_max: 737,
      ha: 792,
      o: "m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 ",
    },
    4: {
      x_min: 48,
      x_max: 742.453125,
      ha: 792,
      o: "m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 ",
    },
    5: {
      x_min: 54.171875,
      x_max: 738,
      ha: 792,
      o: "m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 ",
    },
    6: {
      x_min: 53,
      x_max: 739,
      ha: 792,
      o: "m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 ",
    },
    7: {
      x_min: 58.71875,
      x_max: 730.953125,
      ha: 792,
      o: "m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 ",
    },
    8: {
      x_min: 55,
      x_max: 736,
      ha: 792,
      o: "m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 ",
    },
    9: {
      x_min: 53,
      x_max: 739,
      ha: 792,
      o: "m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 ",
    },
    ο: {
      x_min: 0,
      x_max: 712,
      ha: 815,
      o: "m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 ",
    },
    S: {
      x_min: 0,
      x_max: 788,
      ha: 890,
      o: "m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 ",
    },
    "¦": {
      x_min: 343,
      x_max: 449,
      ha: 792,
      o: "m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 ",
    },
    "/": {
      x_min: 183.25,
      x_max: 608.328125,
      ha: 792,
      o: "m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 ",
    },
    Τ: {
      x_min: -0.4375,
      x_max: 777.453125,
      ha: 839,
      o: "m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 ",
    },
    y: {
      x_min: 0,
      x_max: 684.78125,
      ha: 771,
      o: "m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 ",
    },
    Π: {
      x_min: 0,
      x_max: 803,
      ha: 917,
      o: "m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 ",
    },
    ΐ: {
      x_min: -111,
      x_max: 339,
      ha: 361,
      o: "m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 ",
    },
    g: {
      x_min: 0,
      x_max: 686,
      ha: 838,
      o: "m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 ",
    },
    "²": {
      x_min: 0,
      x_max: 442,
      ha: 539,
      o: "m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 ",
    },
    "–": {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 ",
    },
    Κ: {
      x_min: 0,
      x_max: 819.5625,
      ha: 893,
      o: "m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 ",
    },
    ƒ: {
      x_min: -46.265625,
      x_max: 392,
      ha: 513,
      o: "m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 ",
    },
    e: {
      x_min: 0,
      x_max: 714,
      ha: 813,
      o: "m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 ",
    },
    ό: {
      x_min: 0,
      x_max: 712,
      ha: 815,
      o: "m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 ",
    },
    J: {
      x_min: 0,
      x_max: 588,
      ha: 699,
      o: "m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 ",
    },
    "»": {
      x_min: -1,
      x_max: 503,
      ha: 601,
      o: "m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 ",
    },
    "©": {
      x_min: -3,
      x_max: 1008,
      ha: 1106,
      o: "m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 ",
    },
    ώ: {
      x_min: 0,
      x_max: 922,
      ha: 1030,
      o: "m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 ",
    },
    "^": {
      x_min: 193.0625,
      x_max: 598.609375,
      ha: 792,
      o: "m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 ",
    },
    "«": {
      x_min: 0,
      x_max: 507.203125,
      ha: 604,
      o: "m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 ",
    },
    D: {
      x_min: 0,
      x_max: 828,
      ha: 935,
      o: "m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 ",
    },
    "∙": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 ",
    },
    ÿ: {
      x_min: 0,
      x_max: 47,
      ha: 125,
      o: "m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 ",
    },
    w: {
      x_min: 0,
      x_max: 1009.71875,
      ha: 1100,
      o: "m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 ",
    },
    $: {
      x_min: 0,
      x_max: 700,
      ha: 793,
      o: "m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 ",
    },
    "\\": {
      x_min: -0.015625,
      x_max: 425.0625,
      ha: 522,
      o: "m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 ",
    },
    µ: {
      x_min: 0,
      x_max: 697.21875,
      ha: 747,
      o: "m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 ",
    },
    Ι: {
      x_min: 42,
      x_max: 181,
      ha: 297,
      o: "m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 ",
    },
    Ύ: {
      x_min: 0,
      x_max: 1144.5,
      ha: 1214,
      o: "m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    "’": {
      x_min: 0,
      x_max: 139,
      ha: 236,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 ",
    },
    Ν: {
      x_min: 0,
      x_max: 801,
      ha: 915,
      o: "m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 ",
    },
    "-": {
      x_min: 8.71875,
      x_max: 350.390625,
      ha: 478,
      o: "m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 ",
    },
    Q: {
      x_min: 0,
      x_max: 968,
      ha: 1072,
      o: "m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 ",
    },
    ς: {
      x_min: 1,
      x_max: 676.28125,
      ha: 740,
      o: "m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 ",
    },
    M: {
      x_min: 0,
      x_max: 954,
      ha: 1067,
      o: "m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 ",
    },
    Ψ: {
      x_min: 0,
      x_max: 1006,
      ha: 1094,
      o: "m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 ",
    },
    C: {
      x_min: 0,
      x_max: 886,
      ha: 944,
      o: "m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 ",
    },
    "!": {
      x_min: 0,
      x_max: 138,
      ha: 236,
      o: "m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 ",
    },
    "{": {
      x_min: 0,
      x_max: 480.5625,
      ha: 578,
      o: "m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 ",
    },
    X: {
      x_min: -0.015625,
      x_max: 854.15625,
      ha: 940,
      o: "m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 ",
    },
    "#": {
      x_min: 0,
      x_max: 963.890625,
      ha: 1061,
      o: "m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 ",
    },
    ι: {
      x_min: 42,
      x_max: 284,
      ha: 361,
      o: "m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 ",
    },
    Ά: {
      x_min: 0,
      x_max: 906.953125,
      ha: 982,
      o: "m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 ",
    },
    ")": {
      x_min: 0,
      x_max: 318,
      ha: 415,
      o: "m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 ",
    },
    ε: {
      x_min: 0,
      x_max: 634.71875,
      ha: 714,
      o: "m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 ",
    },
    Δ: {
      x_min: 0,
      x_max: 952.78125,
      ha: 1028,
      o: "m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 ",
    },
    "}": {
      x_min: 0,
      x_max: 481,
      ha: 578,
      o: "m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 ",
    },
    "‰": {
      x_min: -3,
      x_max: 1672,
      ha: 1821,
      o: "m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 ",
    },
    a: {
      x_min: 0,
      x_max: 698.609375,
      ha: 794,
      o: "m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 ",
    },
    "—": {
      x_min: 0,
      x_max: 941.671875,
      ha: 1039,
      o: "m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 ",
    },
    "=": {
      x_min: 8.71875,
      x_max: 780.953125,
      ha: 792,
      o: "m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 ",
    },
    N: {
      x_min: 0,
      x_max: 801,
      ha: 914,
      o: "m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 ",
    },
    ρ: {
      x_min: 0,
      x_max: 712,
      ha: 797,
      o: "m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 ",
    },
    "¯": {
      x_min: 0,
      x_max: 941.671875,
      ha: 938,
      o: "m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 ",
    },
    Z: {
      x_min: 0,
      x_max: 779,
      ha: 849,
      o: "m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 ",
    },
    u: {
      x_min: 0,
      x_max: 617,
      ha: 729,
      o: "m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 ",
    },
    k: {
      x_min: 0,
      x_max: 612.484375,
      ha: 697,
      o: "m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 ",
    },
    Η: {
      x_min: 0,
      x_max: 803,
      ha: 917,
      o: "m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 ",
    },
    Α: {
      x_min: 0,
      x_max: 906.953125,
      ha: 985,
      o: "m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 ",
    },
    s: {
      x_min: 0,
      x_max: 604,
      ha: 697,
      o: "m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 ",
    },
    B: {
      x_min: 0,
      x_max: 778,
      ha: 876,
      o: "m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 ",
    },
    "…": {
      x_min: 0,
      x_max: 614,
      ha: 708,
      o: "m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 ",
    },
    "?": {
      x_min: 0,
      x_max: 607,
      ha: 704,
      o: "m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 ",
    },
    H: {
      x_min: 0,
      x_max: 803,
      ha: 915,
      o: "m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 ",
    },
    ν: {
      x_min: 0,
      x_max: 675,
      ha: 761,
      o: "m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 ",
    },
    c: {
      x_min: 1,
      x_max: 701.390625,
      ha: 775,
      o: "m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 ",
    },
    "¶": {
      x_min: 0,
      x_max: 566.671875,
      ha: 678,
      o: "m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 ",
    },
    β: {
      x_min: 0,
      x_max: 660,
      ha: 745,
      o: "m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 ",
    },
    Μ: {
      x_min: 0,
      x_max: 954,
      ha: 1068,
      o: "m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 ",
    },
    Ό: {
      x_min: 0.109375,
      x_max: 1120,
      ha: 1217,
      o: "m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    Ή: {
      x_min: 0,
      x_max: 1158,
      ha: 1275,
      o: "m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    "•": {
      x_min: 0,
      x_max: 663.890625,
      ha: 775,
      o: "m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 ",
    },
    "¥": {
      x_min: 0.1875,
      x_max: 819.546875,
      ha: 886,
      o: "m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 ",
    },
    "(": {
      x_min: 0,
      x_max: 318.0625,
      ha: 415,
      o: "m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 ",
    },
    U: {
      x_min: 0,
      x_max: 796,
      ha: 904,
      o: "m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 ",
    },
    γ: {
      x_min: 0.5,
      x_max: 744.953125,
      ha: 822,
      o: "m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 ",
    },
    α: {
      x_min: 0,
      x_max: 765.5625,
      ha: 809,
      o: "m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 ",
    },
    F: {
      x_min: 0,
      x_max: 683.328125,
      ha: 717,
      o: "m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 ",
    },
    "­": {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 ",
    },
    ":": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 ",
    },
    Χ: {
      x_min: 0,
      x_max: 854.171875,
      ha: 935,
      o: "m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 ",
    },
    "*": {
      x_min: 116,
      x_max: 674,
      ha: 792,
      o: "m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 ",
    },
    "†": {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 ",
    },
    "°": {
      x_min: 0,
      x_max: 347,
      ha: 444,
      o: "m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 ",
    },
    V: {
      x_min: 0,
      x_max: 862.71875,
      ha: 940,
      o: "m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 ",
    },
    Ξ: {
      x_min: 0,
      x_max: 734.71875,
      ha: 763,
      o: "m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 ",
    },
    " ": { x_min: 0, x_max: 0, ha: 853 },
    Ϋ: {
      x_min: 0.328125,
      x_max: 819.515625,
      ha: 889,
      o: "m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 ",
    },
    "”": {
      x_min: 0,
      x_max: 347,
      ha: 454,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 ",
    },
    "@": {
      x_min: 0,
      x_max: 1260,
      ha: 1357,
      o: "m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 ",
    },
    Ί: {
      x_min: 0,
      x_max: 499,
      ha: 613,
      o: "m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 ",
    },
    i: {
      x_min: 14,
      x_max: 136,
      ha: 275,
      o: "m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 ",
    },
    Β: {
      x_min: 0,
      x_max: 778,
      ha: 877,
      o: "m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 ",
    },
    υ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 ",
    },
    "]": {
      x_min: 0,
      x_max: 275,
      ha: 372,
      o: "m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 ",
    },
    m: {
      x_min: 0,
      x_max: 1019,
      ha: 1128,
      o: "m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 ",
    },
    χ: {
      x_min: 8.328125,
      x_max: 780.5625,
      ha: 815,
      o: "m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 ",
    },
    ί: {
      x_min: 42,
      x_max: 326.71875,
      ha: 361,
      o: "m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 ",
    },
    Ζ: {
      x_min: 0,
      x_max: 779.171875,
      ha: 850,
      o: "m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 ",
    },
    R: {
      x_min: 0,
      x_max: 781.953125,
      ha: 907,
      o: "m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 ",
    },
    o: {
      x_min: 0,
      x_max: 713,
      ha: 821,
      o: "m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 ",
    },
    K: {
      x_min: 0,
      x_max: 819.46875,
      ha: 906,
      o: "m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 ",
    },
    ",": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 ",
    },
    d: {
      x_min: 0,
      x_max: 683,
      ha: 796,
      o: "m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 ",
    },
    "¨": {
      x_min: -109,
      x_max: 247,
      ha: 232,
      o: "m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 ",
    },
    E: {
      x_min: 0,
      x_max: 736.109375,
      ha: 789,
      o: "m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 ",
    },
    Y: {
      x_min: 0,
      x_max: 820,
      ha: 886,
      o: "m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 ",
    },
    '"': {
      x_min: 0,
      x_max: 299,
      ha: 396,
      o: "m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 ",
    },
    "‹": {
      x_min: 17.984375,
      x_max: 773.609375,
      ha: 792,
      o: "m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 ",
    },
    "„": {
      x_min: 0,
      x_max: 364,
      ha: 467,
      o: "m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 ",
    },
    δ: {
      x_min: 1,
      x_max: 710,
      ha: 810,
      o: "m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 ",
    },
    έ: {
      x_min: 0,
      x_max: 634.71875,
      ha: 714,
      o: "m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 ",
    },
    ω: {
      x_min: 0,
      x_max: 922,
      ha: 1031,
      o: "m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 ",
    },
    "´": {
      x_min: 0,
      x_max: 96,
      ha: 251,
      o: "m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 ",
    },
    "±": {
      x_min: 11,
      x_max: 781,
      ha: 792,
      o: "m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 ",
    },
    "|": {
      x_min: 343,
      x_max: 449,
      ha: 792,
      o: "m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 ",
    },
    ϋ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 ",
    },
    "§": {
      x_min: 0,
      x_max: 593,
      ha: 690,
      o: "m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 ",
    },
    b: {
      x_min: 0,
      x_max: 685,
      ha: 783,
      o: "m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 ",
    },
    q: {
      x_min: 0,
      x_max: 683,
      ha: 876,
      o: "m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 ",
    },
    Ω: {
      x_min: -0.171875,
      x_max: 969.5625,
      ha: 1068,
      o: "m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 ",
    },
    ύ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 ",
    },
    z: {
      x_min: -0.015625,
      x_max: 613.890625,
      ha: 697,
      o: "m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 ",
    },
    "™": {
      x_min: 0,
      x_max: 894,
      ha: 1e3,
      o: "m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 ",
    },
    ή: {
      x_min: 0.78125,
      x_max: 697,
      ha: 810,
      o: "m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 ",
    },
    Θ: {
      x_min: 0,
      x_max: 960,
      ha: 1056,
      o: "m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 ",
    },
    "®": {
      x_min: -3,
      x_max: 1008,
      ha: 1106,
      o: "m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 ",
    },
    "~": {
      x_min: 0,
      x_max: 833,
      ha: 931,
      o: "m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 ",
    },
    Ε: {
      x_min: 0,
      x_max: 736.21875,
      ha: 778,
      o: "m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 ",
    },
    "³": {
      x_min: 0,
      x_max: 450,
      ha: 547,
      o: "m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 ",
    },
    "[": {
      x_min: 0,
      x_max: 273.609375,
      ha: 371,
      o: "m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 ",
    },
    L: {
      x_min: 0,
      x_max: 645.828125,
      ha: 696,
      o: "m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 ",
    },
    σ: {
      x_min: 0,
      x_max: 803.390625,
      ha: 894,
      o: "m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 ",
    },
    ζ: {
      x_min: 0,
      x_max: 573,
      ha: 642,
      o: "m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 ",
    },
    θ: {
      x_min: 0,
      x_max: 674,
      ha: 778,
      o: "m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 ",
    },
    Ο: {
      x_min: 0,
      x_max: 958,
      ha: 1054,
      o: "m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 ",
    },
    Γ: {
      x_min: 0,
      x_max: 705.28125,
      ha: 749,
      o: "m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 ",
    },
    " ": { x_min: 0, x_max: 0, ha: 375 },
    "%": {
      x_min: -3,
      x_max: 1089,
      ha: 1186,
      o: "m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 ",
    },
    P: {
      x_min: 0,
      x_max: 726,
      ha: 806,
      o: "m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 ",
    },
    Έ: {
      x_min: 0,
      x_max: 1078.21875,
      ha: 1118,
      o: "m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    Ώ: {
      x_min: 0.125,
      x_max: 1136.546875,
      ha: 1235,
      o: "m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 ",
    },
    _: {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 ",
    },
    Ϊ: {
      x_min: -110,
      x_max: 246,
      ha: 275,
      o: "m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 ",
    },
    "+": {
      x_min: 23,
      x_max: 768,
      ha: 792,
      o: "m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 ",
    },
    "½": {
      x_min: 0,
      x_max: 1050,
      ha: 1149,
      o: "m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 ",
    },
    Ρ: {
      x_min: 0,
      x_max: 720,
      ha: 783,
      o: "m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 ",
    },
    "'": {
      x_min: 0,
      x_max: 139,
      ha: 236,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 ",
    },
    ª: {
      x_min: 0,
      x_max: 350,
      ha: 397,
      o: "m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 ",
    },
    "΅": {
      x_min: 0,
      x_max: 450,
      ha: 553,
      o: "m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 ",
    },
    T: {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 ",
    },
    Φ: {
      x_min: 0,
      x_max: 915,
      ha: 997,
      o: "m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 ",
    },
    "⁋": { x_min: 0, x_max: 0, ha: 694 },
    j: {
      x_min: -77.78125,
      x_max: 167,
      ha: 349,
      o: "m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 ",
    },
    Σ: {
      x_min: 0,
      x_max: 756.953125,
      ha: 819,
      o: "m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 ",
    },
    "›": {
      x_min: 18.0625,
      x_max: 774,
      ha: 792,
      o: "m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 ",
    },
    "<": {
      x_min: 17.984375,
      x_max: 773.609375,
      ha: 792,
      o: "m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 ",
    },
    "£": {
      x_min: 0,
      x_max: 704.484375,
      ha: 801,
      o: "m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 ",
    },
    t: {
      x_min: 0,
      x_max: 367,
      ha: 458,
      o: "m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 ",
    },
    "¬": {
      x_min: 0,
      x_max: 706,
      ha: 803,
      o: "m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 ",
    },
    λ: {
      x_min: 0,
      x_max: 750,
      ha: 803,
      o: "m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 ",
    },
    W: {
      x_min: 0,
      x_max: 1263.890625,
      ha: 1351,
      o: "m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 ",
    },
    ">": {
      x_min: 18.0625,
      x_max: 774,
      ha: 792,
      o: "m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 ",
    },
    v: {
      x_min: 0,
      x_max: 675.15625,
      ha: 761,
      o: "m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 ",
    },
    τ: {
      x_min: 0.28125,
      x_max: 644.5,
      ha: 703,
      o: "m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 ",
    },
    ξ: {
      x_min: 0,
      x_max: 624.9375,
      ha: 699,
      o: "m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 ",
    },
    "&": {
      x_min: -3,
      x_max: 894.25,
      ha: 992,
      o: "m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 ",
    },
    Λ: {
      x_min: 0,
      x_max: 862.5,
      ha: 942,
      o: "m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 ",
    },
    I: {
      x_min: 41,
      x_max: 180,
      ha: 293,
      o: "m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 ",
    },
    G: {
      x_min: 0,
      x_max: 921,
      ha: 1011,
      o: "m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 ",
    },
    ΰ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 ",
    },
    "`": {
      x_min: 0,
      x_max: 138.890625,
      ha: 236,
      o: "m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 ",
    },
    "·": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 ",
    },
    Υ: {
      x_min: 0.328125,
      x_max: 819.515625,
      ha: 889,
      o: "m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 ",
    },
    r: {
      x_min: 0,
      x_max: 355.5625,
      ha: 432,
      o: "m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 ",
    },
    x: {
      x_min: 0,
      x_max: 675,
      ha: 764,
      o: "m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 ",
    },
    μ: {
      x_min: 0,
      x_max: 696.609375,
      ha: 747,
      o: "m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 ",
    },
    h: {
      x_min: 0,
      x_max: 615,
      ha: 724,
      o: "m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 ",
    },
    ".": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 ",
    },
    φ: {
      x_min: -2,
      x_max: 878,
      ha: 974,
      o: "m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 ",
    },
    ";": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 ",
    },
    f: {
      x_min: 0,
      x_max: 378,
      ha: 472,
      o: "m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 ",
    },
    "“": {
      x_min: 1,
      x_max: 348.21875,
      ha: 454,
      o: "m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 ",
    },
    A: {
      x_min: 0.03125,
      x_max: 906.953125,
      ha: 1008,
      o: "m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 ",
    },
    "‘": {
      x_min: 1,
      x_max: 139.890625,
      ha: 236,
      o: "m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 ",
    },
    ϊ: {
      x_min: -70,
      x_max: 283,
      ha: 361,
      o: "m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 ",
    },
    π: {
      x_min: -0.21875,
      x_max: 773.21875,
      ha: 857,
      o: "m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 ",
    },
    ά: {
      x_min: 0,
      x_max: 765.5625,
      ha: 809,
      o: "m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 ",
    },
    O: {
      x_min: 0,
      x_max: 958,
      ha: 1057,
      o: "m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 ",
    },
    n: {
      x_min: 0,
      x_max: 615,
      ha: 724,
      o: "m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 ",
    },
    l: {
      x_min: 41,
      x_max: 166,
      ha: 279,
      o: "m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 ",
    },
    "¤": {
      x_min: 40.09375,
      x_max: 728.796875,
      ha: 825,
      o: "m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 ",
    },
    κ: {
      x_min: 0,
      x_max: 632.328125,
      ha: 679,
      o: "m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 ",
    },
    p: {
      x_min: 0,
      x_max: 685,
      ha: 786,
      o: "m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 ",
    },
    "‡": {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 ",
    },
    ψ: {
      x_min: 0,
      x_max: 808,
      ha: 907,
      o: "m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 ",
    },
    η: {
      x_min: 0.78125,
      x_max: 697,
      ha: 810,
      o: "m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 ",
    },
  },
  A7 = "normal",
  l7 = 1189,
  u7 = -100,
  c7 = "normal",
  f7 = { yMin: -334, xMin: -111, yMax: 1189, xMax: 1672 },
  h7 = 1e3,
  d7 = {
    postscript_name: "Helvetiker-Regular",
    version_string: "Version 1.00 2004 initial release",
    vendor_url: "http://www.magenta.gr/",
    full_font_name: "Helvetiker",
    font_family_name: "Helvetiker",
    copyright: "Copyright (c) Μagenta ltd, 2004",
    description: "",
    trademark: "",
    designer: "",
    designer_url: "",
    unique_font_identifier: "Μagenta ltd:Helvetiker:22-10-104",
    license_url: "http://www.ellak.gr/fonts/MgOpen/license.html",
    license_description: `Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\r
\r
Permission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \r
\r
The above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\r
\r
The Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "MgOpen", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\r
\r
This License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "MgOpen" name.\r
\r
The Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \r
\r
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.`,
    manufacturer_name: "Μagenta ltd",
    font_sub_family_name: "Regular",
  },
  p7 = -334,
  m7 = "Helvetiker",
  g7 = 1522,
  _7 = 50,
  v7 = {
    glyphs: a7,
    cssFontWeight: A7,
    ascender: l7,
    underlinePosition: u7,
    cssFontStyle: c7,
    boundingBox: f7,
    resolution: h7,
    original_font_information: d7,
    descender: p7,
    familyName: m7,
    lineHeight: g7,
    underlineThickness: _7,
  },
  es = tn(
    tn(
      {},
      window.THREE
        ? window.THREE
        : {
            CircleGeometry: yc,
            DoubleSide: gi,
            Group: Hi,
            Mesh: Dn,
            MeshLambertMaterial: Vo,
            TextGeometry: Fp,
            Vector3: J,
          }
    ),
    {},
    { Font: Rw, TextGeometry: Fp }
  ),
  pm = bi({
    props: {
      labelsData: { default: [] },
      labelLat: { default: "lat" },
      labelLng: { default: "lng" },
      labelAltitude: { default: 0 },
      labelText: { default: "text" },
      labelSize: { default: 0.5 },
      labelTypeFace: {
        default: v7,
        onChange: function (e, t) {
          t.font = new es.Font(e);
        },
      },
      labelColor: {
        default: function () {
          return "lightgrey";
        },
      },
      labelRotation: { default: 0 },
      labelResolution: { default: 3 },
      labelIncludeDot: { default: !0 },
      labelDotRadius: { default: 0.1 },
      labelDotOrientation: {
        default: function () {
          return "bottom";
        },
      },
      labelsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e) {
      var t = Ve(e.labelLat),
        i = Ve(e.labelLng),
        r = Ve(e.labelAltitude),
        s = Ve(e.labelText),
        u = Ve(e.labelSize),
        c = Ve(e.labelRotation),
        d = Ve(e.labelColor),
        p = Ve(e.labelIncludeDot),
        g = Ve(e.labelDotRadius),
        _ = Ve(e.labelDotOrientation),
        x = new Set(["right", "top", "bottom"]),
        M = (2 * Math.PI * Nn) / 360,
        E = new es.CircleGeometry(1, 16);
      Xi(e.labelsData, e.scene, {
        createObj: function () {
          var S = new es.MeshLambertMaterial();
          S.side = gi;
          var b = new es.Group();
          return (
            b.add(new es.Mesh(E, S)),
            b.add(new es.Mesh(void 0, S)),
            (b.__globeObjType = "label"),
            b
          );
        },
        updateObj: function (S, b) {
          var L = vi(S.children, 2),
            T = L[0],
            R = L[1],
            U = d(b),
            q = vr(U);
          R.material.color.set(Vr(U)),
            (R.material.transparent = q < 1),
            (R.material.opacity = q);
          var I = p(b),
            N = _(b);
          !I || (!x.has(N) && (N = "bottom"));
          var D = I ? +g(b) * M : 1e-12;
          T.scale.x = T.scale.y = D;
          var O = +u(b) * M;
          if (
            (R.geometry && R.geometry.dispose(),
            (R.geometry = new es.TextGeometry(s(b), {
              font: e.font,
              size: O,
              height: 0,
              curveSegments: e.labelResolution,
            })),
            N !== "right" && R.geometry.center(),
            I)
          ) {
            var F = D + O / 2;
            N === "right" && (R.position.x = F),
              (R.position.y = {
                right: -O / 2,
                top: F + O / 2,
                bottom: -F - O / 2,
              }[N]);
          }
          var $ = function (te) {
              var ee = (S.__currentTargetD = te),
                se = ee.lat,
                pe = ee.lng,
                de = ee.alt,
                oe = ee.rot,
                he = ee.scale;
              Object.assign(S.position, hs(se, pe, de)),
                S.lookAt(e.scene.localToWorld(new es.Vector3(0, 0, 0))),
                S.rotateY(Math.PI),
                S.rotateZ((-oe * Math.PI) / 180),
                (S.scale.x = S.scale.y = S.scale.z = he);
            },
            V = { lat: +t(b), lng: +i(b), alt: +r(b), rot: +c(b), scale: 1 },
            Q = S.__currentTargetD || Object.assign({}, V, { scale: 1e-12 });
          Object.keys(V).some(function (k) {
            return Q[k] !== V[k];
          }) &&
            (!e.labelsTransitionDuration || e.labelsTransitionDuration < 0
              ? $(V)
              : new Wi(Q)
                  .to(V, e.labelsTransitionDuration)
                  .easing(Zn.Quadratic.InOut)
                  .onUpdate($)
                  .start());
        },
      });
    },
  }),
  x7 = window.THREE ? window.THREE : { BufferGeometry: cn },
  y7 = (function (n) {
    em(t, n);
    var e = im(t);
    function t() {
      var i,
        r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1,
        s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 32;
      K2(this, t),
        (i = e.call(this)),
        (i.type = "CircleLineGeometry"),
        (i.parameters = { radius: r, segmentCount: s });
      for (var u = [], c = 0; c <= s; c++) {
        var d = (c / s - 0.25) * Math.PI * 2;
        u.push({ x: Math.cos(d) * r, y: Math.sin(d) * r, z: 0 });
      }
      return i.setFromPoints(u), i;
    }
    return J2(t);
  })(x7.BufferGeometry),
  go = window.THREE
    ? window.THREE
    : { Color: Nt, Group: Hi, Line: $l, LineBasicMaterial: Ql, Vector3: J },
  b7 = No.default || No,
  mm = bi({
    props: {
      ringsData: { default: [] },
      ringLat: { default: "lat" },
      ringLng: { default: "lng" },
      ringAltitude: { default: 0.0015 },
      ringColor: {
        default: function () {
          return "#ffffaa";
        },
        triggerUpdate: !1,
      },
      ringResolution: { default: 64, triggerUpdate: !1 },
      ringMaxRadius: { default: 2, triggerUpdate: !1 },
      ringPropagationSpeed: { default: 1, triggerUpdate: !1 },
      ringRepeatPeriod: { default: 700, triggerUpdate: !1 },
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      yn(e),
        (t.scene = e),
        (t.ticker = new b7()),
        t.ticker.onTick.add(function (i) {
          if (t.ringsData.length) {
            var r = Ve(t.ringColor),
              s = Ve(t.ringAltitude),
              u = Ve(t.ringMaxRadius),
              c = Ve(t.ringPropagationSpeed),
              d = Ve(t.ringRepeatPeriod);
            t.ringsData
              .filter(function (p) {
                return p.__threeObj;
              })
              .forEach(function (p) {
                var g = p.__threeObj;
                if ((g.__nextRingTime || 0) <= i) {
                  var _ = d(p) / 1e3;
                  g.__nextRingTime = i + (_ <= 0 ? 1 / 0 : _);
                  var x = new go.Line(
                      new y7(1, t.ringResolution),
                      new go.LineBasicMaterial()
                    ),
                    M = r(p),
                    E = M instanceof Array || M instanceof Function,
                    C;
                  E
                    ? M instanceof Array
                      ? ((C = ko()
                          .domain(
                            M.map(function (I, N) {
                              return N / (M.length - 1);
                            })
                          )
                          .range(M)),
                        (x.material.transparent = M.some(function (I) {
                          return vr(I) < 1;
                        })))
                      : ((C = M), (x.material.transparent = !0))
                    : ((x.material.color = new go.Color(Vr(M))),
                      Zw(x.material, vr(M)));
                  var S = Nn * (1 + s(p)),
                    b = u(p),
                    L = (b * Math.PI) / 180,
                    T = c(p),
                    R = T <= 0,
                    U = function (N) {
                      var D = N.t,
                        O = (R ? 1 - D : D) * L;
                      if (
                        ((x.scale.x = x.scale.y = S * Math.sin(O)),
                        (x.position.z = S * (1 - Math.cos(O))),
                        E)
                      ) {
                        var F = C(D);
                        (x.material.color = new go.Color(Vr(F))),
                          x.material.transparent &&
                            (x.material.opacity = vr(F));
                      }
                    };
                  if (T === 0) U({ t: 0 }), g.add(x);
                  else {
                    var q = Math.abs(b / T) * 1e3;
                    new Wi({ t: 0 })
                      .to({ t: 1 }, q)
                      .onUpdate(U)
                      .onStart(function () {
                        return g.add(x);
                      })
                      .onComplete(function () {
                        g.remove(x), om(x);
                      })
                      .start();
                  }
                }
              });
          }
        });
    },
    update: function (e) {
      var t = Ve(e.ringLat),
        i = Ve(e.ringLng),
        r = Ve(e.ringAltitude),
        s = e.scene.localToWorld(new go.Vector3(0, 0, 0));
      Xi(
        e.ringsData,
        e.scene,
        {
          createObj: function () {
            var c = new go.Group();
            return (c.__globeObjType = "ring"), c;
          },
          updateObj: function (c, d) {
            var p = t(d),
              g = i(d),
              _ = r(d);
            Object.assign(c.position, hs(p, g, _)), c.lookAt(s);
          },
        },
        { removeDelay: 3e4 }
      );
    },
  }),
  M7 = tn(tn({}, window.THREE ? window.THREE : {}), {}, { CSS2DObject: Dw }),
  gm = bi({
    props: {
      htmlElementsData: { default: [] },
      htmlLat: { default: "lat" },
      htmlLng: { default: "lng" },
      htmlAltitude: { default: 0 },
      htmlElement: {},
      htmlTransitionDuration: { default: 1e3, triggerUpdate: !1 },
      isBehindGlobe: {
        onChange: function () {
          this.updateObjVisibility();
        },
        triggerUpdate: !1,
      },
    },
    methods: {
      updateObjVisibility: function (e, t) {
        var i = t
          ? [t]
          : e.htmlElementsData
              .map(function (r) {
                return r.__threeObj;
              })
              .filter(function (r) {
                return r;
              });
        i.forEach(function (r) {
          return (r.visible = !e.isBehindGlobe || !e.isBehindGlobe(r.position));
        });
      },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e, t) {
      var i = this,
        r = Ve(e.htmlLat),
        s = Ve(e.htmlLng),
        u = Ve(e.htmlAltitude),
        c = Ve(e.htmlElement);
      Xi(e.htmlElementsData, e.scene, {
        purge: t.hasOwnProperty("htmlElement"),
        createObj: function (p) {
          var g = c(p),
            _ = new M7.CSS2DObject(g);
          return (_.__globeObjType = "html"), _;
        },
        updateObj: function (p, g) {
          var _ = function (E) {
              var C = (p.__currentTargetD = E),
                S = C.alt,
                b = C.lat,
                L = C.lng;
              Object.assign(p.position, hs(b, L, S)), i.updateObjVisibility(p);
            },
            x = { lat: +r(g), lng: +s(g), alt: +u(g) };
          !e.htmlTransitionDuration ||
          e.htmlTransitionDuration < 0 ||
          !p.__currentTargetD
            ? _(x)
            : new Wi(p.__currentTargetD)
                .to(x, e.pointsTransitionDuration)
                .easing(Zn.Quadratic.InOut)
                .onUpdate(_)
                .start();
        },
      });
    },
  }),
  QA = window.THREE
    ? window.THREE
    : {
        Euler: cs,
        Group: Hi,
        Mesh: Dn,
        MeshLambertMaterial: Vo,
        SphereGeometry: Xa,
      },
  _m = bi({
    props: {
      objectsData: { default: [] },
      objectLat: { default: "lat" },
      objectLng: { default: "lng" },
      objectAltitude: { default: 0.01 },
      objectFacesSurface: { default: !0 },
      objectRotation: {},
      objectThreeObject: {
        default: new QA.Mesh(
          new QA.SphereGeometry(1, 16, 8),
          new QA.MeshLambertMaterial({
            color: "#ffffaa",
            transparent: !0,
            opacity: 0.7,
          })
        ),
      },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e, t) {
      var i = Ve(e.objectLat),
        r = Ve(e.objectLng),
        s = Ve(e.objectAltitude),
        u = Ve(e.objectFacesSurface),
        c = Ve(e.objectRotation),
        d = Ve(e.objectThreeObject);
      Xi(e.objectsData, e.scene, {
        purge: t.hasOwnProperty("objectThreeObject"),
        createObj: function (g) {
          var _ = d(g);
          e.objectThreeObject === _ && (_ = _.clone());
          var x = new QA.Group();
          return x.add(_), (x.__globeObjType = "object"), x;
        },
        updateObj: function (g, _) {
          var x = +i(_),
            M = +r(_),
            E = +s(_);
          Object.assign(g.position, hs(x, M, E)),
            u(_)
              ? g.setRotationFromEuler(new cs(ca(-x), ca(M), 0, "YXZ"))
              : g.rotation.set(0, 0, 0);
          var C = g.children[0],
            S = c(_);
          S &&
            C.setRotationFromEuler(
              new cs(ca(S.x || 0), ca(S.y || 0), ca(S.z || 0))
            );
        },
      });
    },
  }),
  vm = bi({
    props: {
      customLayerData: { default: [] },
      customThreeObject: {},
      customThreeObjectUpdate: { triggerUpdate: !1 },
    },
    init: function (e, t) {
      yn(e), (t.scene = e);
    },
    update: function (e, t) {
      e.customThreeObjectUpdate || yn(e.scene);
      var i = Ve(e.customThreeObject),
        r = Ve(e.customThreeObjectUpdate);
      Xi(e.customLayerData, e.scene, {
        purge: t.hasOwnProperty("customThreeObject"),
        createObj: function (u) {
          var c = i(u, Nn);
          return (
            c &&
              (e.customThreeObject === c && (c = c.clone()),
              (c.__globeObjType = "custom")),
            c
          );
        },
        updateObj: function (u, c) {
          return r(u, c, Nn);
        },
      });
    },
  }),
  $A = window.THREE ? window.THREE : { Group: Hi, Vector2: ke, Vector3: J },
  S7 = [
    "globeLayer",
    "pointsLayer",
    "arcsLayer",
    "hexBinLayer",
    "polygonsLayer",
    "hexedPolygonsLayer",
    "pathsLayer",
    "tilesLayer",
    "labelsLayer",
    "ringsLayer",
    "htmlElementsLayer",
    "objectsLayer",
    "customLayer",
  ],
  xm = Ii("globeLayer", am),
  E7 = Object.assign.apply(
    Object,
    hn(
      [
        "globeImageUrl",
        "bumpImageUrl",
        "showGlobe",
        "showGraticules",
        "showAtmosphere",
        "atmosphereColor",
        "atmosphereAltitude",
      ].map(function (n) {
        return fi({}, n, xm.linkProp(n));
      })
    )
  ),
  w7 = Object.assign.apply(
    Object,
    hn(
      ["globeMaterial"].map(function (n) {
        return fi({}, n, xm.linkMethod(n));
      })
    )
  ),
  T7 = Ii("pointsLayer", Am),
  C7 = Object.assign.apply(
    Object,
    hn(
      [
        "pointsData",
        "pointLat",
        "pointLng",
        "pointColor",
        "pointAltitude",
        "pointRadius",
        "pointResolution",
        "pointsMerge",
        "pointsTransitionDuration",
      ].map(function (n) {
        return fi({}, n, T7.linkProp(n));
      })
    )
  ),
  R7 = Ii("arcsLayer", lm),
  P7 = Object.assign.apply(
    Object,
    hn(
      [
        "arcsData",
        "arcStartLat",
        "arcStartLng",
        "arcEndLat",
        "arcEndLng",
        "arcColor",
        "arcAltitude",
        "arcAltitudeAutoScale",
        "arcStroke",
        "arcCurveResolution",
        "arcCircularResolution",
        "arcDashLength",
        "arcDashGap",
        "arcDashInitialGap",
        "arcDashAnimateTime",
        "arcsTransitionDuration",
      ].map(function (n) {
        return fi({}, n, R7.linkProp(n));
      })
    )
  ),
  L7 = Ii("hexBinLayer", um),
  D7 = Object.assign.apply(
    Object,
    hn(
      [
        "hexBinPointsData",
        "hexBinPointLat",
        "hexBinPointLng",
        "hexBinPointWeight",
        "hexBinResolution",
        "hexMargin",
        "hexTopCurvatureResolution",
        "hexTopColor",
        "hexSideColor",
        "hexAltitude",
        "hexBinMerge",
        "hexTransitionDuration",
      ].map(function (n) {
        return fi({}, n, L7.linkProp(n));
      })
    )
  ),
  I7 = Ii("hexedPolygonsLayer", fm),
  O7 = Object.assign.apply(
    Object,
    hn(
      [
        "hexPolygonsData",
        "hexPolygonGeoJsonGeometry",
        "hexPolygonColor",
        "hexPolygonAltitude",
        "hexPolygonResolution",
        "hexPolygonMargin",
        "hexPolygonCurvatureResolution",
        "hexPolygonsTransitionDuration",
      ].map(function (n) {
        return fi({}, n, I7.linkProp(n));
      })
    )
  ),
  U7 = Ii("polygonsLayer", cm),
  q7 = Object.assign.apply(
    Object,
    hn(
      [
        "polygonsData",
        "polygonGeoJsonGeometry",
        "polygonCapColor",
        "polygonCapMaterial",
        "polygonSideColor",
        "polygonSideMaterial",
        "polygonStrokeColor",
        "polygonAltitude",
        "polygonCapCurvatureResolution",
        "polygonsTransitionDuration",
      ].map(function (n) {
        return fi({}, n, U7.linkProp(n));
      })
    )
  ),
  B7 = Ii("pathsLayer", hm),
  N7 = Object.assign.apply(
    Object,
    hn(
      [
        "pathsData",
        "pathPoints",
        "pathPointLat",
        "pathPointLng",
        "pathPointAlt",
        "pathResolution",
        "pathColor",
        "pathStroke",
        "pathDashLength",
        "pathDashGap",
        "pathDashInitialGap",
        "pathDashAnimateTime",
        "pathTransitionDuration",
      ].map(function (n) {
        return fi({}, n, B7.linkProp(n));
      })
    )
  ),
  F7 = Ii("tilesLayer", dm),
  k7 = Object.assign.apply(
    Object,
    hn(
      [
        "tilesData",
        "tileLat",
        "tileLng",
        "tileAltitude",
        "tileWidth",
        "tileHeight",
        "tileUseGlobeProjection",
        "tileMaterial",
        "tileCurvatureResolution",
        "tilesTransitionDuration",
      ].map(function (n) {
        return fi({}, n, F7.linkProp(n));
      })
    )
  ),
  z7 = Ii("labelsLayer", pm),
  G7 = Object.assign.apply(
    Object,
    hn(
      [
        "labelsData",
        "labelLat",
        "labelLng",
        "labelAltitude",
        "labelRotation",
        "labelText",
        "labelSize",
        "labelTypeFace",
        "labelColor",
        "labelResolution",
        "labelIncludeDot",
        "labelDotRadius",
        "labelDotOrientation",
        "labelsTransitionDuration",
      ].map(function (n) {
        return fi({}, n, z7.linkProp(n));
      })
    )
  ),
  H7 = Ii("ringsLayer", mm),
  V7 = Object.assign.apply(
    Object,
    hn(
      [
        "ringsData",
        "ringLat",
        "ringLng",
        "ringAltitude",
        "ringColor",
        "ringResolution",
        "ringMaxRadius",
        "ringPropagationSpeed",
        "ringRepeatPeriod",
      ].map(function (n) {
        return fi({}, n, H7.linkProp(n));
      })
    )
  ),
  W7 = Ii("htmlElementsLayer", gm),
  j7 = Object.assign.apply(
    Object,
    hn(
      [
        "htmlElementsData",
        "htmlLat",
        "htmlLng",
        "htmlAltitude",
        "htmlElement",
        "htmlTransitionDuration",
      ].map(function (n) {
        return fi({}, n, W7.linkProp(n));
      })
    )
  ),
  X7 = Ii("objectsLayer", _m),
  Q7 = Object.assign.apply(
    Object,
    hn(
      [
        "objectsData",
        "objectLat",
        "objectLng",
        "objectAltitude",
        "objectRotation",
        "objectFacesSurface",
        "objectThreeObject",
      ].map(function (n) {
        return fi({}, n, X7.linkProp(n));
      })
    )
  ),
  $7 = Ii("customLayer", vm),
  Y7 = Object.assign.apply(
    Object,
    hn(
      ["customLayerData", "customThreeObject", "customThreeObjectUpdate"].map(
        function (n) {
          return fi({}, n, $7.linkProp(n));
        }
      )
    )
  ),
  Z7 = bi({
    props: tn(
      tn(
        tn(
          tn(
            tn(
              tn(
                tn(
                  tn(
                    tn(
                      tn(
                        tn(
                          tn(
                            tn(
                              {
                                onGlobeReady: { triggerUpdate: !1 },
                                rendererSize: {
                                  default: new $A.Vector2(
                                    window.innerWidth,
                                    window.innerHeight
                                  ),
                                  onChange: function (e, t) {
                                    t.pathsLayer.rendererSize(e);
                                  },
                                  triggerUpdate: !1,
                                },
                              },
                              E7
                            ),
                            C7
                          ),
                          P7
                        ),
                        D7
                      ),
                      q7
                    ),
                    O7
                  ),
                  N7
                ),
                k7
              ),
              G7
            ),
            V7
          ),
          j7
        ),
        Q7
      ),
      Y7
    ),
    methods: tn(
      {
        getGlobeRadius: Gp,
        getCoords: function (e) {
          for (
            var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            i[r - 1] = arguments[r];
          return hs.apply(void 0, i);
        },
        toGeoCoords: function (e) {
          for (
            var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            i[r - 1] = arguments[r];
          return Vw.apply(void 0, i);
        },
        setPointOfView: function (e, t, i) {
          var r = void 0;
          if (t) {
            var s = Gp(),
              u = i ? t.clone().sub(i) : t,
              c,
              d,
              p;
            r = function (_) {
              c === void 0 && (c = u.length()),
                d === void 0 &&
                  (d = Math.sqrt(Math.pow(c, 2) - Math.pow(s, 2))),
                p === void 0 && (p = Math.acos(d / c));
              var x = u.distanceTo(_);
              if (x < d) return !1;
              var M = _.length(),
                E = Math.acos(
                  (Math.pow(c, 2) + Math.pow(x, 2) - Math.pow(M, 2)) /
                    (2 * c * x)
                );
              return E < p;
            };
          }
          e.layersThatNeedBehindGlobeChecker.forEach(function (g) {
            return g.isBehindGlobe(r);
          });
        },
        pauseAnimation: function (e) {
          return (
            e.animationFrameRequestId !== null &&
              (cancelAnimationFrame(e.animationFrameRequestId),
              (e.animationFrameRequestId = null)),
            e.pausableLayers.forEach(function (t) {
              var i;
              return (i = t.pauseAnimation) === null || i === void 0
                ? void 0
                : i.call(t);
            }),
            this
          );
        },
        resumeAnimation: function (e) {
          return (
            e.animationFrameRequestId === null && this._animationCycle(),
            e.pausableLayers.forEach(function (t) {
              var i;
              return (i = t.resumeAnimation) === null || i === void 0
                ? void 0
                : i.call(t);
            }),
            this
          );
        },
        _animationCycle: function (e) {
          (e.animationFrameRequestId = requestAnimationFrame(
            this._animationCycle
          )),
            n6();
        },
        _destructor: function (e) {
          this.pauseAnimation(),
            e.destructableLayers.forEach(function (t) {
              return t._destructor();
            });
        },
      },
      w7
    ),
    stateInit: function () {
      var e = {
        globeLayer: am(),
        pointsLayer: Am(),
        arcsLayer: lm(),
        hexBinLayer: um(),
        polygonsLayer: cm(),
        hexedPolygonsLayer: fm(),
        pathsLayer: hm(),
        tilesLayer: dm(),
        labelsLayer: pm(),
        ringsLayer: mm(),
        htmlElementsLayer: gm(),
        objectsLayer: _m(),
        customLayer: vm(),
      };
      return tn(
        tn({}, e),
        {},
        {
          layersThatNeedBehindGlobeChecker: Object.values(e).filter(function (
            t
          ) {
            return t.hasOwnProperty("isBehindGlobe");
          }),
          destructableLayers: Object.values(e).filter(function (t) {
            return t.hasOwnProperty("_destructor");
          }),
          pausableLayers: Object.values(e).filter(function (t) {
            return t.hasOwnProperty("pauseAnimation");
          }),
        }
      );
    },
    init: function (e, t, i) {
      var r = i.animateIn,
        s = r === void 0 ? !0 : r,
        u = i.waitForGlobeReady,
        c = u === void 0 ? !0 : u;
      yn(e),
        e.add((t.scene = new $A.Group())),
        (t.scene.visible = !1),
        S7.forEach(function (p) {
          var g = new $A.Group();
          t.scene.add(g), t[p](g);
        });
      var d = function () {
        if (s) {
          t.scene.scale.set(1e-6, 1e-6, 1e-6),
            new Wi({ k: 1e-6 })
              .to({ k: 1 }, 600)
              .easing(Zn.Quadratic.Out)
              .onUpdate(function (_) {
                var x = _.k;
                return t.scene.scale.set(x, x, x);
              })
              .start();
          var g = new $A.Vector3(0, 1, 0);
          new Wi({ rot: Math.PI * 2 })
            .to({ rot: 0 }, 1200)
            .easing(Zn.Quintic.Out)
            .onUpdate(function (_) {
              var x = _.rot;
              return t.scene.setRotationFromAxisAngle(g, x);
            })
            .start();
        }
        (t.scene.visible = !0), t.onGlobeReady && t.onGlobeReady();
      };
      c ? t.globeLayer.onReady(d) : d(), this._animationCycle();
    },
    update: function (e) {},
  });
function K7(n) {
  var e =
      arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Object,
    t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
    i = (function (r) {
      em(u, r);
      var s = im(u);
      function u() {
        var c;
        K2(this, u);
        for (var d = arguments.length, p = new Array(d), g = 0; g < d; g++)
          p[g] = arguments[g];
        return (
          (c = s.call.apply(s, [this].concat(p))),
          (c.__kapsuleInstance = n
            .apply(void 0, p)
            .apply(void 0, [].concat(hn(t ? [nm(c)] : []), p))),
          c
        );
      }
      return J2(u);
    })(e);
  return (
    Object.keys(n()).forEach(function (r) {
      return (i.prototype[r] = function () {
        var s,
          u = (s = this.__kapsuleInstance)[r].apply(s, arguments);
        return u === this.__kapsuleInstance ? this : u;
      });
    }),
    i
  );
}
var J7 = window.THREE ? window.THREE : { Group: Hi },
  eT = K7(Z7, J7.Group, !0);
const Yp = { type: "change" },
  hu = { type: "start" },
  Zp = { type: "end" },
  YA = new cc(),
  Kp = new ns(),
  tT = Math.cos(70 * u1.DEG2RAD);
class nT extends zs {
  constructor(e, t) {
    super(),
      (this.object = e),
      (this.domElement = t),
      (this.domElement.style.touchAction = "none"),
      (this.enabled = !0),
      (this.target = new J()),
      (this.minDistance = 0),
      (this.maxDistance = 1 / 0),
      (this.minZoom = 0),
      (this.maxZoom = 1 / 0),
      (this.minPolarAngle = 0),
      (this.maxPolarAngle = Math.PI),
      (this.minAzimuthAngle = -1 / 0),
      (this.maxAzimuthAngle = 1 / 0),
      (this.enableDamping = !1),
      (this.dampingFactor = 0.05),
      (this.enableZoom = !0),
      (this.zoomSpeed = 1),
      (this.enableRotate = !0),
      (this.rotateSpeed = 1),
      (this.enablePan = !0),
      (this.panSpeed = 1),
      (this.screenSpacePanning = !0),
      (this.keyPanSpeed = 7),
      (this.zoomToCursor = !1),
      (this.autoRotate = !1),
      (this.autoRotateSpeed = 2),
      (this.keys = {
        LEFT: "ArrowLeft",
        UP: "ArrowUp",
        RIGHT: "ArrowRight",
        BOTTOM: "ArrowDown",
      }),
      (this.mouseButtons = {
        LEFT: Qs.ROTATE,
        MIDDLE: Qs.DOLLY,
        RIGHT: Qs.PAN,
      }),
      (this.touches = { ONE: $s.ROTATE, TWO: $s.DOLLY_PAN }),
      (this.target0 = this.target.clone()),
      (this.position0 = this.object.position.clone()),
      (this.zoom0 = this.object.zoom),
      (this._domElementKeyEvents = null),
      (this.getPolarAngle = function () {
        return c.phi;
      }),
      (this.getAzimuthalAngle = function () {
        return c.theta;
      }),
      (this.getDistance = function () {
        return this.object.position.distanceTo(this.target);
      }),
      (this.listenToKeyEvents = function (ie) {
        ie.addEventListener("keydown", G), (this._domElementKeyEvents = ie);
      }),
      (this.stopListenToKeyEvents = function () {
        this._domElementKeyEvents.removeEventListener("keydown", G),
          (this._domElementKeyEvents = null);
      }),
      (this.saveState = function () {
        i.target0.copy(i.target),
          i.position0.copy(i.object.position),
          (i.zoom0 = i.object.zoom);
      }),
      (this.reset = function () {
        i.target.copy(i.target0),
          i.object.position.copy(i.position0),
          (i.object.zoom = i.zoom0),
          i.object.updateProjectionMatrix(),
          i.dispatchEvent(Yp),
          i.update(),
          (s = r.NONE);
      }),
      (this.update = (function () {
        const ie = new J(),
          Re = new Bs().setFromUnitVectors(e.up, new J(0, 1, 0)),
          tt = Re.clone().invert(),
          Xe = new J(),
          et = new Bs(),
          Et = new J(),
          Vt = 2 * Math.PI;
        return function ($e = null) {
          const Me = i.object.position;
          ie.copy(Me).sub(i.target),
            ie.applyQuaternion(Re),
            c.setFromVector3(ie),
            i.autoRotate && s === r.NONE && F(D($e)),
            i.enableDamping
              ? ((c.theta += d.theta * i.dampingFactor),
                (c.phi += d.phi * i.dampingFactor))
              : ((c.theta += d.theta), (c.phi += d.phi));
          let Ue = i.minAzimuthAngle,
            fe = i.maxAzimuthAngle;
          isFinite(Ue) &&
            isFinite(fe) &&
            (Ue < -Math.PI ? (Ue += Vt) : Ue > Math.PI && (Ue -= Vt),
            fe < -Math.PI ? (fe += Vt) : fe > Math.PI && (fe -= Vt),
            Ue <= fe
              ? (c.theta = Math.max(Ue, Math.min(fe, c.theta)))
              : (c.theta =
                  c.theta > (Ue + fe) / 2
                    ? Math.max(Ue, c.theta)
                    : Math.min(fe, c.theta))),
            (c.phi = Math.max(
              i.minPolarAngle,
              Math.min(i.maxPolarAngle, c.phi)
            )),
            c.makeSafe(),
            i.enableDamping === !0
              ? i.target.addScaledVector(g, i.dampingFactor)
              : i.target.add(g),
            (i.zoomToCursor && q) || i.object.isOrthographicCamera
              ? (c.radius = pe(c.radius))
              : (c.radius = pe(c.radius * p)),
            ie.setFromSpherical(c),
            ie.applyQuaternion(tt),
            Me.copy(i.target).add(ie),
            i.object.lookAt(i.target),
            i.enableDamping === !0
              ? ((d.theta *= 1 - i.dampingFactor),
                (d.phi *= 1 - i.dampingFactor),
                g.multiplyScalar(1 - i.dampingFactor))
              : (d.set(0, 0, 0), g.set(0, 0, 0));
          let kt = !1;
          if (i.zoomToCursor && q) {
            let Yt = null;
            if (i.object.isPerspectiveCamera) {
              const rn = ie.length();
              Yt = pe(rn * p);
              const Kn = rn - Yt;
              i.object.position.addScaledVector(R, Kn),
                i.object.updateMatrixWorld();
            } else if (i.object.isOrthographicCamera) {
              const rn = new J(U.x, U.y, 0);
              rn.unproject(i.object),
                (i.object.zoom = Math.max(
                  i.minZoom,
                  Math.min(i.maxZoom, i.object.zoom / p)
                )),
                i.object.updateProjectionMatrix(),
                (kt = !0);
              const Kn = new J(U.x, U.y, 0);
              Kn.unproject(i.object),
                i.object.position.sub(Kn).add(rn),
                i.object.updateMatrixWorld(),
                (Yt = ie.length());
            } else
              console.warn(
                "WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."
              ),
                (i.zoomToCursor = !1);
            Yt !== null &&
              (this.screenSpacePanning
                ? i.target
                    .set(0, 0, -1)
                    .transformDirection(i.object.matrix)
                    .multiplyScalar(Yt)
                    .add(i.object.position)
                : (YA.origin.copy(i.object.position),
                  YA.direction
                    .set(0, 0, -1)
                    .transformDirection(i.object.matrix),
                  Math.abs(i.object.up.dot(YA.direction)) < tT
                    ? e.lookAt(i.target)
                    : (Kp.setFromNormalAndCoplanarPoint(i.object.up, i.target),
                      YA.intersectPlane(Kp, i.target))));
          } else
            i.object.isOrthographicCamera &&
              ((i.object.zoom = Math.max(
                i.minZoom,
                Math.min(i.maxZoom, i.object.zoom / p)
              )),
              i.object.updateProjectionMatrix(),
              (kt = !0));
          return (
            (p = 1),
            (q = !1),
            kt ||
            Xe.distanceToSquared(i.object.position) > u ||
            8 * (1 - et.dot(i.object.quaternion)) > u ||
            Et.distanceToSquared(i.target) > 0
              ? (i.dispatchEvent(Yp),
                Xe.copy(i.object.position),
                et.copy(i.object.quaternion),
                Et.copy(i.target),
                (kt = !1),
                !0)
              : !1
          );
        };
      })()),
      (this.dispose = function () {
        i.domElement.removeEventListener("contextmenu", Ie),
          i.domElement.removeEventListener("pointerdown", nt),
          i.domElement.removeEventListener("pointercancel", mt),
          i.domElement.removeEventListener("wheel", Y),
          i.domElement.removeEventListener("pointermove", at),
          i.domElement.removeEventListener("pointerup", mt),
          i._domElementKeyEvents !== null &&
            (i._domElementKeyEvents.removeEventListener("keydown", G),
            (i._domElementKeyEvents = null));
      });
    const i = this,
      r = {
        NONE: -1,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_PAN: 4,
        TOUCH_DOLLY_PAN: 5,
        TOUCH_DOLLY_ROTATE: 6,
      };
    let s = r.NONE;
    const u = 1e-6,
      c = new Ad(),
      d = new Ad();
    let p = 1;
    const g = new J(),
      _ = new ke(),
      x = new ke(),
      M = new ke(),
      E = new ke(),
      C = new ke(),
      S = new ke(),
      b = new ke(),
      L = new ke(),
      T = new ke(),
      R = new J(),
      U = new ke();
    let q = !1;
    const I = [],
      N = {};
    function D(ie) {
      return ie !== null
        ? ((2 * Math.PI) / 60) * i.autoRotateSpeed * ie
        : ((2 * Math.PI) / 60 / 60) * i.autoRotateSpeed;
    }
    function O() {
      return Math.pow(0.95, i.zoomSpeed);
    }
    function F(ie) {
      d.theta -= ie;
    }
    function $(ie) {
      d.phi -= ie;
    }
    const V = (function () {
        const ie = new J();
        return function (tt, Xe) {
          ie.setFromMatrixColumn(Xe, 0), ie.multiplyScalar(-tt), g.add(ie);
        };
      })(),
      Q = (function () {
        const ie = new J();
        return function (tt, Xe) {
          i.screenSpacePanning === !0
            ? ie.setFromMatrixColumn(Xe, 1)
            : (ie.setFromMatrixColumn(Xe, 0), ie.crossVectors(i.object.up, ie)),
            ie.multiplyScalar(tt),
            g.add(ie);
        };
      })(),
      k = (function () {
        const ie = new J();
        return function (tt, Xe) {
          const et = i.domElement;
          if (i.object.isPerspectiveCamera) {
            const Et = i.object.position;
            ie.copy(Et).sub(i.target);
            let Vt = ie.length();
            (Vt *= Math.tan(((i.object.fov / 2) * Math.PI) / 180)),
              V((2 * tt * Vt) / et.clientHeight, i.object.matrix),
              Q((2 * Xe * Vt) / et.clientHeight, i.object.matrix);
          } else
            i.object.isOrthographicCamera
              ? (V(
                  (tt * (i.object.right - i.object.left)) /
                    i.object.zoom /
                    et.clientWidth,
                  i.object.matrix
                ),
                Q(
                  (Xe * (i.object.top - i.object.bottom)) /
                    i.object.zoom /
                    et.clientHeight,
                  i.object.matrix
                ))
              : (console.warn(
                  "WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."
                ),
                (i.enablePan = !1));
        };
      })();
    function te(ie) {
      i.object.isPerspectiveCamera || i.object.isOrthographicCamera
        ? (p /= ie)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (i.enableZoom = !1));
    }
    function ee(ie) {
      i.object.isPerspectiveCamera || i.object.isOrthographicCamera
        ? (p *= ie)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (i.enableZoom = !1));
    }
    function se(ie) {
      if (!i.zoomToCursor) return;
      q = !0;
      const Re = i.domElement.getBoundingClientRect(),
        tt = ie.clientX - Re.left,
        Xe = ie.clientY - Re.top,
        et = Re.width,
        Et = Re.height;
      (U.x = (tt / et) * 2 - 1),
        (U.y = -(Xe / Et) * 2 + 1),
        R.set(U.x, U.y, 1)
          .unproject(i.object)
          .sub(i.object.position)
          .normalize();
    }
    function pe(ie) {
      return Math.max(i.minDistance, Math.min(i.maxDistance, ie));
    }
    function de(ie) {
      _.set(ie.clientX, ie.clientY);
    }
    function oe(ie) {
      se(ie), b.set(ie.clientX, ie.clientY);
    }
    function he(ie) {
      E.set(ie.clientX, ie.clientY);
    }
    function Te(ie) {
      x.set(ie.clientX, ie.clientY),
        M.subVectors(x, _).multiplyScalar(i.rotateSpeed);
      const Re = i.domElement;
      F((2 * Math.PI * M.x) / Re.clientHeight),
        $((2 * Math.PI * M.y) / Re.clientHeight),
        _.copy(x),
        i.update();
    }
    function Pe(ie) {
      L.set(ie.clientX, ie.clientY),
        T.subVectors(L, b),
        T.y > 0 ? te(O()) : T.y < 0 && ee(O()),
        b.copy(L),
        i.update();
    }
    function Oe(ie) {
      C.set(ie.clientX, ie.clientY),
        S.subVectors(C, E).multiplyScalar(i.panSpeed),
        k(S.x, S.y),
        E.copy(C),
        i.update();
    }
    function Je(ie) {
      se(ie), ie.deltaY < 0 ? ee(O()) : ie.deltaY > 0 && te(O()), i.update();
    }
    function rt(ie) {
      let Re = !1;
      switch (ie.code) {
        case i.keys.UP:
          ie.ctrlKey || ie.metaKey || ie.shiftKey
            ? $((2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : k(0, i.keyPanSpeed),
            (Re = !0);
          break;
        case i.keys.BOTTOM:
          ie.ctrlKey || ie.metaKey || ie.shiftKey
            ? $((-2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : k(0, -i.keyPanSpeed),
            (Re = !0);
          break;
        case i.keys.LEFT:
          ie.ctrlKey || ie.metaKey || ie.shiftKey
            ? F((2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : k(i.keyPanSpeed, 0),
            (Re = !0);
          break;
        case i.keys.RIGHT:
          ie.ctrlKey || ie.metaKey || ie.shiftKey
            ? F((-2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : k(-i.keyPanSpeed, 0),
            (Re = !0);
          break;
      }
      Re && (ie.preventDefault(), i.update());
    }
    function ot() {
      if (I.length === 1) _.set(I[0].pageX, I[0].pageY);
      else {
        const ie = 0.5 * (I[0].pageX + I[1].pageX),
          Re = 0.5 * (I[0].pageY + I[1].pageY);
        _.set(ie, Re);
      }
    }
    function Rt() {
      if (I.length === 1) E.set(I[0].pageX, I[0].pageY);
      else {
        const ie = 0.5 * (I[0].pageX + I[1].pageX),
          Re = 0.5 * (I[0].pageY + I[1].pageY);
        E.set(ie, Re);
      }
    }
    function It() {
      const ie = I[0].pageX - I[1].pageX,
        Re = I[0].pageY - I[1].pageY,
        tt = Math.sqrt(ie * ie + Re * Re);
      b.set(0, tt);
    }
    function ft() {
      i.enableZoom && It(), i.enablePan && Rt();
    }
    function ne() {
      i.enableZoom && It(), i.enableRotate && ot();
    }
    function ze(ie) {
      if (I.length == 1) x.set(ie.pageX, ie.pageY);
      else {
        const tt = be(ie),
          Xe = 0.5 * (ie.pageX + tt.x),
          et = 0.5 * (ie.pageY + tt.y);
        x.set(Xe, et);
      }
      M.subVectors(x, _).multiplyScalar(i.rotateSpeed);
      const Re = i.domElement;
      F((2 * Math.PI * M.x) / Re.clientHeight),
        $((2 * Math.PI * M.y) / Re.clientHeight),
        _.copy(x);
    }
    function Ce(ie) {
      if (I.length === 1) C.set(ie.pageX, ie.pageY);
      else {
        const Re = be(ie),
          tt = 0.5 * (ie.pageX + Re.x),
          Xe = 0.5 * (ie.pageY + Re.y);
        C.set(tt, Xe);
      }
      S.subVectors(C, E).multiplyScalar(i.panSpeed), k(S.x, S.y), E.copy(C);
    }
    function Ne(ie) {
      const Re = be(ie),
        tt = ie.pageX - Re.x,
        Xe = ie.pageY - Re.y,
        et = Math.sqrt(tt * tt + Xe * Xe);
      L.set(0, et),
        T.set(0, Math.pow(L.y / b.y, i.zoomSpeed)),
        te(T.y),
        b.copy(L);
    }
    function Le(ie) {
      i.enableZoom && Ne(ie), i.enablePan && Ce(ie);
    }
    function At(ie) {
      i.enableZoom && Ne(ie), i.enableRotate && ze(ie);
    }
    function nt(ie) {
      i.enabled !== !1 &&
        (I.length === 0 &&
          (i.domElement.setPointerCapture(ie.pointerId),
          i.domElement.addEventListener("pointermove", at),
          i.domElement.addEventListener("pointerup", mt)),
        Be(ie),
        ie.pointerType === "touch" ? xe(ie) : xt(ie));
    }
    function at(ie) {
      i.enabled !== !1 && (ie.pointerType === "touch" ? qe(ie) : nn(ie));
    }
    function mt(ie) {
      ut(ie),
        I.length === 0 &&
          (i.domElement.releasePointerCapture(ie.pointerId),
          i.domElement.removeEventListener("pointermove", at),
          i.domElement.removeEventListener("pointerup", mt)),
        i.dispatchEvent(Zp),
        (s = r.NONE);
    }
    function xt(ie) {
      let Re;
      switch (ie.button) {
        case 0:
          Re = i.mouseButtons.LEFT;
          break;
        case 1:
          Re = i.mouseButtons.MIDDLE;
          break;
        case 2:
          Re = i.mouseButtons.RIGHT;
          break;
        default:
          Re = -1;
      }
      switch (Re) {
        case Qs.DOLLY:
          if (i.enableZoom === !1) return;
          oe(ie), (s = r.DOLLY);
          break;
        case Qs.ROTATE:
          if (ie.ctrlKey || ie.metaKey || ie.shiftKey) {
            if (i.enablePan === !1) return;
            he(ie), (s = r.PAN);
          } else {
            if (i.enableRotate === !1) return;
            de(ie), (s = r.ROTATE);
          }
          break;
        case Qs.PAN:
          if (ie.ctrlKey || ie.metaKey || ie.shiftKey) {
            if (i.enableRotate === !1) return;
            de(ie), (s = r.ROTATE);
          } else {
            if (i.enablePan === !1) return;
            he(ie), (s = r.PAN);
          }
          break;
        default:
          s = r.NONE;
      }
      s !== r.NONE && i.dispatchEvent(hu);
    }
    function nn(ie) {
      switch (s) {
        case r.ROTATE:
          if (i.enableRotate === !1) return;
          Te(ie);
          break;
        case r.DOLLY:
          if (i.enableZoom === !1) return;
          Pe(ie);
          break;
        case r.PAN:
          if (i.enablePan === !1) return;
          Oe(ie);
          break;
      }
    }
    function Y(ie) {
      i.enabled === !1 ||
        i.enableZoom === !1 ||
        s !== r.NONE ||
        (ie.preventDefault(), i.dispatchEvent(hu), Je(ie), i.dispatchEvent(Zp));
    }
    function G(ie) {
      i.enabled === !1 || i.enablePan === !1 || rt(ie);
    }
    function xe(ie) {
      switch ((Fe(ie), I.length)) {
        case 1:
          switch (i.touches.ONE) {
            case $s.ROTATE:
              if (i.enableRotate === !1) return;
              ot(), (s = r.TOUCH_ROTATE);
              break;
            case $s.PAN:
              if (i.enablePan === !1) return;
              Rt(), (s = r.TOUCH_PAN);
              break;
            default:
              s = r.NONE;
          }
          break;
        case 2:
          switch (i.touches.TWO) {
            case $s.DOLLY_PAN:
              if (i.enableZoom === !1 && i.enablePan === !1) return;
              ft(), (s = r.TOUCH_DOLLY_PAN);
              break;
            case $s.DOLLY_ROTATE:
              if (i.enableZoom === !1 && i.enableRotate === !1) return;
              ne(), (s = r.TOUCH_DOLLY_ROTATE);
              break;
            default:
              s = r.NONE;
          }
          break;
        default:
          s = r.NONE;
      }
      s !== r.NONE && i.dispatchEvent(hu);
    }
    function qe(ie) {
      switch ((Fe(ie), s)) {
        case r.TOUCH_ROTATE:
          if (i.enableRotate === !1) return;
          ze(ie), i.update();
          break;
        case r.TOUCH_PAN:
          if (i.enablePan === !1) return;
          Ce(ie), i.update();
          break;
        case r.TOUCH_DOLLY_PAN:
          if (i.enableZoom === !1 && i.enablePan === !1) return;
          Le(ie), i.update();
          break;
        case r.TOUCH_DOLLY_ROTATE:
          if (i.enableZoom === !1 && i.enableRotate === !1) return;
          At(ie), i.update();
          break;
        default:
          s = r.NONE;
      }
    }
    function Ie(ie) {
      i.enabled !== !1 && ie.preventDefault();
    }
    function Be(ie) {
      I.push(ie);
    }
    function ut(ie) {
      delete N[ie.pointerId];
      for (let Re = 0; Re < I.length; Re++)
        if (I[Re].pointerId == ie.pointerId) {
          I.splice(Re, 1);
          return;
        }
    }
    function Fe(ie) {
      let Re = N[ie.pointerId];
      Re === void 0 && ((Re = new ke()), (N[ie.pointerId] = Re)),
        Re.set(ie.pageX, ie.pageY);
    }
    function be(ie) {
      const Re = ie.pointerId === I[0].pointerId ? I[1] : I[0];
      return N[Re.pointerId];
    }
    i.domElement.addEventListener("contextmenu", Ie),
      i.domElement.addEventListener("pointerdown", nt),
      i.domElement.addEventListener("pointercancel", mt),
      i.domElement.addEventListener("wheel", Y, { passive: !1 }),
      this.update();
  }
}
const iT = "/flutter_globe_website/assets/earth_map-deef1197.png",
  rT = {}.VITE_NODE_ENV !== "production";
if (rT) {
  const n = JSON.stringify({
    type: "Map",
    maps: [
      {
        text: "Berlin MD, USA",
        size: 1,
        city: "Berlin MD, USA",
        lat: 38.3226153,
        lng: -75.2176892,
      },
      {
        text: "Benidorm Spain",
        size: 1,
        city: "Benidorm Spain",
        lat: 38.5411928,
        lng: -0.1233831,
      },
      {
        text: "He Hoe Myanmar (Burma)",
        size: 1,
        city: "He Hoe Myanmar (Burma)",
        lat: 20.723192,
        lng: 96.82170169999999,
      },
      {
        text: "Lucca Province of Lucca, Italy",
        size: 1,
        city: "Lucca Province of Lucca, Italy",
        lat: 43.8429197,
        lng: 10.5026977,
      },
      {
        text: "Shivamogga Karnataka, India",
        size: 1,
        city: "Shivamogga Karnataka, India",
        lat: 13.9299299,
        lng: 75.568101,
      },
    ],
  });
  setTimeout(() => {
    window.updateGlobeFromFlutter(n);
  }, 1e3);
}
let hr, oi, qr, Ci, ts;
sT();
window.updateGlobeFromFlutter = function (n) {
  try {
    const e = JSON.parse(n),
      t = aT(e);
    oT(t, e), ym(), console.log("update globe called");
  } catch (e) {
    console.error("Failed to parse data from Flutter:", e);
  }
};
window.addEventListener("resize", AT, !1);
function sT() {
  if (
    (hr && (document.body.removeChild(hr.domElement), hr.dispose()),
    (hr = new R1({ antialias: !0 })),
    hr.setPixelRatio(window.devicePixelRatio),
    hr.setSize(window.innerWidth, window.innerHeight),
    document.body.appendChild(hr.domElement),
    (qr = new E5()),
    (qr.background = new Nt(267777525)),
    !oi)
  ) {
    (oi = new zi()),
      (oi.aspect = window.innerWidth / window.innerHeight),
      oi.updateProjectionMatrix(),
      (oi.position.z = 460),
      (oi.position.x = 0),
      (oi.position.y = 0);
    let e = new ad(16777215, 1);
    e.position.set(-800, 2e3, 400), oi.add(e);
    let t = new ad(16777215, 1);
    t.position.set(-200, 500, 200),
      oi.add(t),
      qr.add(oi),
      (qr.fog = new pc(5463795, 400, 2e3)),
      (Ci = new nT(oi, hr.domElement)),
      (Ci.enableDamping = !0),
      (Ci.dynamicDampingFactor = 0.01),
      (Ci.enablePan = !1),
      (Ci.minDistance = 200),
      (Ci.maxDistance = 500),
      (Ci.rotateSpeed = 0.8),
      (Ci.zoomSpeed = 1),
      (Ci.autoRotate = !1),
      (Ci.minPolarAngle = Math.PI / 3.5),
      (Ci.maxPolarAngle = Math.PI - Math.PI / 3);
  }
  let n = new u8(12303291, 0.3);
  qr.add(n);
}
function oT(n, e) {
  ts && qr.remove(ts),
    (ts = new eT({ waitForGlobeReady: !0, animateIn: !0 })
      .showAtmosphere(!0)
      .globeImageUrl(iT)
      .atmosphereColor("#ffffff")
      .atmosphereAltitude(0.1)),
    ts
      .pointsData(e.maps)
      .pointColor(() => "#ffffff")
      .pointsMerge(!0)
      .pointAltitude(0.08)
      .pointRadius(0.1),
    ts.rotateY(-Math.PI * (5 / 9)),
    ts.rotateZ(-Math.PI / 6);
  const t = ts.globeMaterial();
  (t.side = Nt), (t.needsUpdate = !0), qr.add(ts);
}
function aT(n) {
  const e = [];
  for (let t = 0; t < n.maps.length - 1; t++) {
    const i = n.maps[t],
      r = n.maps[t + 1];
    e.push({
      type: "pull",
      from: i.text,
      to: r.text,
      startLat: parseFloat(i.lat),
      startLng: parseFloat(i.lng),
      endLat: parseFloat(r.lat),
      endLng: parseFloat(r.lng),
      color: i.color,
    });
  }
  return e;
}
function ym() {
  oi.lookAt(qr.position),
    Ci.update(),
    (Ci.autoRotate = !1),
    hr.render(qr, oi),
    requestAnimationFrame(ym);
}
function AT() {
  (oi.aspect = window.innerWidth / window.innerHeight),
    oi.updateProjectionMatrix(),
    hr.setSize(window.innerWidth, window.innerHeight);
}
