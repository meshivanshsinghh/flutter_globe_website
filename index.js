(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const r of document.querySelectorAll('link[rel="modulepreload"]')) i(r);
  new MutationObserver((r) => {
    for (const s of r)
      if (s.type === "childList")
        for (const u of s.addedNodes)
          u.tagName === "LINK" && u.rel === "modulepreload" && i(u);
  }).observe(document, { childList: !0, subtree: !0 });
  function t(r) {
    const s = {};
    return (
      r.integrity && (s.integrity = r.integrity),
      r.referrerPolicy && (s.referrerPolicy = r.referrerPolicy),
      r.crossOrigin === "use-credentials"
        ? (s.credentials = "include")
        : r.crossOrigin === "anonymous"
        ? (s.credentials = "omit")
        : (s.credentials = "same-origin"),
      s
    );
  }
  function i(r) {
    if (r.ep) return;
    r.ep = !0;
    const s = t(r);
    fetch(r.href, s);
  }
})();
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ const xc = "156",
  to = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
  no = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
  C3 = 0,
  Xf = 1,
  R3 = 2,
  v1 = 1,
  P3 = 2,
  Or = 3,
  cs = 0,
  fi = 1,
  mi = 2,
  as = 0,
  As = 1,
  Qf = 2,
  $f = 3,
  Yf = 4,
  L3 = 5,
  wo = 100,
  D3 = 101,
  I3 = 102,
  Zf = 103,
  Kf = 104,
  O3 = 200,
  q3 = 201,
  U3 = 202,
  B3 = 203,
  _1 = 204,
  x1 = 205,
  N3 = 206,
  F3 = 207,
  k3 = 208,
  z3 = 209,
  G3 = 210,
  H3 = 0,
  V3 = 1,
  W3 = 2,
  Mu = 3,
  j3 = 4,
  X3 = 5,
  Q3 = 6,
  $3 = 7,
  Xl = 0,
  Y3 = 1,
  Z3 = 2,
  ls = 0,
  K3 = 1,
  J3 = 2,
  ev = 3,
  tv = 4,
  nv = 5,
  y1 = 300,
  No = 301,
  Fo = 302,
  Eu = 303,
  wu = 304,
  Ql = 306,
  Su = 1e3,
  tr = 1001,
  Tu = 1002,
  Ai = 1003,
  Jf = 1004,
  T0 = 1005,
  Fi = 1006,
  iv = 1007,
  Ra = 1008,
  us = 1009,
  rv = 1010,
  sv = 1011,
  yc = 1012,
  b1 = 1013,
  ss = 1014,
  os = 1015,
  Pa = 1016,
  M1 = 1017,
  E1 = 1018,
  Os = 1020,
  ov = 1021,
  nr = 1023,
  av = 1024,
  Av = 1025,
  qs = 1026,
  ko = 1027,
  lv = 1028,
  w1 = 1029,
  uv = 1030,
  S1 = 1031,
  T1 = 1033,
  C0 = 33776,
  R0 = 33777,
  P0 = 33778,
  L0 = 33779,
  eh = 35840,
  th = 35841,
  nh = 35842,
  ih = 35843,
  cv = 36196,
  rh = 37492,
  sh = 37496,
  oh = 37808,
  ah = 37809,
  Ah = 37810,
  lh = 37811,
  uh = 37812,
  ch = 37813,
  fh = 37814,
  hh = 37815,
  dh = 37816,
  ph = 37817,
  mh = 37818,
  gh = 37819,
  vh = 37820,
  _h = 37821,
  D0 = 36492,
  xh = 36494,
  yh = 36495,
  fv = 36283,
  bh = 36284,
  Mh = 36285,
  Eh = 36286,
  hv = 0,
  dv = 1,
  wh = 2,
  C1 = 3e3,
  Us = 3001,
  pv = 3200,
  mv = 3201,
  bc = 0,
  gv = 1,
  Bs = "",
  hn = "srgb",
  xr = "srgb-linear",
  $l = "display-p3",
  I0 = 7680,
  vv = 519,
  _v = 512,
  xv = 513,
  yv = 514,
  bv = 515,
  Mv = 516,
  Ev = 517,
  wv = 518,
  Sv = 519,
  Cu = 35044,
  Sh = "300 es",
  Ru = 1035,
  Ur = 2e3,
  ll = 2001;
class js {
  addEventListener(e, t) {
    this._listeners === void 0 && (this._listeners = {});
    const i = this._listeners;
    i[e] === void 0 && (i[e] = []), i[e].indexOf(t) === -1 && i[e].push(t);
  }
  hasEventListener(e, t) {
    if (this._listeners === void 0) return !1;
    const i = this._listeners;
    return i[e] !== void 0 && i[e].indexOf(t) !== -1;
  }
  removeEventListener(e, t) {
    if (this._listeners === void 0) return;
    const r = this._listeners[e];
    if (r !== void 0) {
      const s = r.indexOf(t);
      s !== -1 && r.splice(s, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return;
    const i = this._listeners[e.type];
    if (i !== void 0) {
      e.target = this;
      const r = i.slice(0);
      for (let s = 0, u = r.length; s < u; s++) r[s].call(this, e);
      e.target = null;
    }
  }
}
const Qn = [
  "00",
  "01",
  "02",
  "03",
  "04",
  "05",
  "06",
  "07",
  "08",
  "09",
  "0a",
  "0b",
  "0c",
  "0d",
  "0e",
  "0f",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "1a",
  "1b",
  "1c",
  "1d",
  "1e",
  "1f",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "2a",
  "2b",
  "2c",
  "2d",
  "2e",
  "2f",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "3a",
  "3b",
  "3c",
  "3d",
  "3e",
  "3f",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47",
  "48",
  "49",
  "4a",
  "4b",
  "4c",
  "4d",
  "4e",
  "4f",
  "50",
  "51",
  "52",
  "53",
  "54",
  "55",
  "56",
  "57",
  "58",
  "59",
  "5a",
  "5b",
  "5c",
  "5d",
  "5e",
  "5f",
  "60",
  "61",
  "62",
  "63",
  "64",
  "65",
  "66",
  "67",
  "68",
  "69",
  "6a",
  "6b",
  "6c",
  "6d",
  "6e",
  "6f",
  "70",
  "71",
  "72",
  "73",
  "74",
  "75",
  "76",
  "77",
  "78",
  "79",
  "7a",
  "7b",
  "7c",
  "7d",
  "7e",
  "7f",
  "80",
  "81",
  "82",
  "83",
  "84",
  "85",
  "86",
  "87",
  "88",
  "89",
  "8a",
  "8b",
  "8c",
  "8d",
  "8e",
  "8f",
  "90",
  "91",
  "92",
  "93",
  "94",
  "95",
  "96",
  "97",
  "98",
  "99",
  "9a",
  "9b",
  "9c",
  "9d",
  "9e",
  "9f",
  "a0",
  "a1",
  "a2",
  "a3",
  "a4",
  "a5",
  "a6",
  "a7",
  "a8",
  "a9",
  "aa",
  "ab",
  "ac",
  "ad",
  "ae",
  "af",
  "b0",
  "b1",
  "b2",
  "b3",
  "b4",
  "b5",
  "b6",
  "b7",
  "b8",
  "b9",
  "ba",
  "bb",
  "bc",
  "bd",
  "be",
  "bf",
  "c0",
  "c1",
  "c2",
  "c3",
  "c4",
  "c5",
  "c6",
  "c7",
  "c8",
  "c9",
  "ca",
  "cb",
  "cc",
  "cd",
  "ce",
  "cf",
  "d0",
  "d1",
  "d2",
  "d3",
  "d4",
  "d5",
  "d6",
  "d7",
  "d8",
  "d9",
  "da",
  "db",
  "dc",
  "dd",
  "de",
  "df",
  "e0",
  "e1",
  "e2",
  "e3",
  "e4",
  "e5",
  "e6",
  "e7",
  "e8",
  "e9",
  "ea",
  "eb",
  "ec",
  "ed",
  "ee",
  "ef",
  "f0",
  "f1",
  "f2",
  "f3",
  "f4",
  "f5",
  "f6",
  "f7",
  "f8",
  "f9",
  "fa",
  "fb",
  "fc",
  "fd",
  "fe",
  "ff",
];
let Th = 1234567;
const ba = Math.PI / 180,
  La = 180 / Math.PI;
function pr() {
  const n = (Math.random() * 4294967295) | 0,
    e = (Math.random() * 4294967295) | 0,
    t = (Math.random() * 4294967295) | 0,
    i = (Math.random() * 4294967295) | 0;
  return (
    Qn[n & 255] +
    Qn[(n >> 8) & 255] +
    Qn[(n >> 16) & 255] +
    Qn[(n >> 24) & 255] +
    "-" +
    Qn[e & 255] +
    Qn[(e >> 8) & 255] +
    "-" +
    Qn[((e >> 16) & 15) | 64] +
    Qn[(e >> 24) & 255] +
    "-" +
    Qn[(t & 63) | 128] +
    Qn[(t >> 8) & 255] +
    "-" +
    Qn[(t >> 16) & 255] +
    Qn[(t >> 24) & 255] +
    Qn[i & 255] +
    Qn[(i >> 8) & 255] +
    Qn[(i >> 16) & 255] +
    Qn[(i >> 24) & 255]
  ).toLowerCase();
}
function Dn(n, e, t) {
  return Math.max(e, Math.min(t, n));
}
function Mc(n, e) {
  return ((n % e) + e) % e;
}
function Tv(n, e, t, i, r) {
  return i + ((n - e) * (r - i)) / (t - e);
}
function Cv(n, e, t) {
  return n !== e ? (t - n) / (e - n) : 0;
}
function Ma(n, e, t) {
  return (1 - t) * n + t * e;
}
function Rv(n, e, t, i) {
  return Ma(n, e, 1 - Math.exp(-t * i));
}
function Pv(n, e = 1) {
  return e - Math.abs(Mc(n, e * 2) - e);
}
function Lv(n, e, t) {
  return n <= e
    ? 0
    : n >= t
    ? 1
    : ((n = (n - e) / (t - e)), n * n * (3 - 2 * n));
}
function Dv(n, e, t) {
  return n <= e
    ? 0
    : n >= t
    ? 1
    : ((n = (n - e) / (t - e)), n * n * n * (n * (n * 6 - 15) + 10));
}
function Iv(n, e) {
  return n + Math.floor(Math.random() * (e - n + 1));
}
function Ov(n, e) {
  return n + Math.random() * (e - n);
}
function qv(n) {
  return n * (0.5 - Math.random());
}
function Uv(n) {
  n !== void 0 && (Th = n);
  let e = (Th += 1831565813);
  return (
    (e = Math.imul(e ^ (e >>> 15), e | 1)),
    (e ^= e + Math.imul(e ^ (e >>> 7), e | 61)),
    ((e ^ (e >>> 14)) >>> 0) / 4294967296
  );
}
function Bv(n) {
  return n * ba;
}
function Nv(n) {
  return n * La;
}
function Pu(n) {
  return (n & (n - 1)) === 0 && n !== 0;
}
function Fv(n) {
  return Math.pow(2, Math.ceil(Math.log(n) / Math.LN2));
}
function ul(n) {
  return Math.pow(2, Math.floor(Math.log(n) / Math.LN2));
}
function kv(n, e, t, i, r) {
  const s = Math.cos,
    u = Math.sin,
    c = s(t / 2),
    h = u(t / 2),
    p = s((e + i) / 2),
    g = u((e + i) / 2),
    v = s((e - i) / 2),
    x = u((e - i) / 2),
    M = s((i - e) / 2),
    w = u((i - e) / 2);
  switch (r) {
    case "XYX":
      n.set(c * g, h * v, h * x, c * p);
      break;
    case "YZY":
      n.set(h * x, c * g, h * v, c * p);
      break;
    case "ZXZ":
      n.set(h * v, h * x, c * g, c * p);
      break;
    case "XZX":
      n.set(c * g, h * w, h * M, c * p);
      break;
    case "YXY":
      n.set(h * M, c * g, h * w, c * p);
      break;
    case "ZYZ":
      n.set(h * w, h * M, c * g, c * p);
      break;
    default:
      console.warn(
        "THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " +
          r
      );
  }
}
function dr(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return n / 4294967295;
    case Uint16Array:
      return n / 65535;
    case Uint8Array:
      return n / 255;
    case Int32Array:
      return Math.max(n / 2147483647, -1);
    case Int16Array:
      return Math.max(n / 32767, -1);
    case Int8Array:
      return Math.max(n / 127, -1);
    default:
      throw new Error("Invalid component type.");
  }
}
function on(n, e) {
  switch (e.constructor) {
    case Float32Array:
      return n;
    case Uint32Array:
      return Math.round(n * 4294967295);
    case Uint16Array:
      return Math.round(n * 65535);
    case Uint8Array:
      return Math.round(n * 255);
    case Int32Array:
      return Math.round(n * 2147483647);
    case Int16Array:
      return Math.round(n * 32767);
    case Int8Array:
      return Math.round(n * 127);
    default:
      throw new Error("Invalid component type.");
  }
}
const R1 = {
  DEG2RAD: ba,
  RAD2DEG: La,
  generateUUID: pr,
  clamp: Dn,
  euclideanModulo: Mc,
  mapLinear: Tv,
  inverseLerp: Cv,
  lerp: Ma,
  damp: Rv,
  pingpong: Pv,
  smoothstep: Lv,
  smootherstep: Dv,
  randInt: Iv,
  randFloat: Ov,
  randFloatSpread: qv,
  seededRandom: Uv,
  degToRad: Bv,
  radToDeg: Nv,
  isPowerOfTwo: Pu,
  ceilPowerOfTwo: Fv,
  floorPowerOfTwo: ul,
  setQuaternionFromProperEuler: kv,
  normalize: on,
  denormalize: dr,
};
class ke {
  constructor(e = 0, t = 0) {
    (ke.prototype.isVector2 = !0), (this.x = e), (this.y = t);
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, t) {
    return (this.x = e), (this.y = t), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), this;
  }
  addVectors(e, t) {
    return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
  }
  addScaledVector(e, t) {
    return (this.x += e.x * t), (this.y += e.y * t), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), this;
  }
  subVectors(e, t) {
    return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), this;
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const t = this.x,
      i = this.y,
      r = e.elements;
    return (
      (this.x = r[0] * t + r[3] * i + r[6]),
      (this.y = r[1] * t + r[4] * i + r[7]),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)), (this.y = Math.min(this.y, e.y)), this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)), (this.y = Math.max(this.y, e.y)), this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this;
  }
  ceil() {
    return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this;
  }
  round() {
    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this;
  }
  roundToZero() {
    return (this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this;
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0) return Math.PI / 2;
    const i = this.dot(e) / t;
    return Math.acos(Dn(i, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x,
      i = this.y - e.y;
    return t * t + i * i;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this;
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i), (this.y = e.y + (t.y - e.y) * i), this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, t = 0) {
    return (this.x = e[t]), (this.y = e[t + 1]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.x), (e[t + 1] = this.y), e;
  }
  fromBufferAttribute(e, t) {
    return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
  }
  rotateAround(e, t) {
    const i = Math.cos(t),
      r = Math.sin(t),
      s = this.x - e.x,
      u = this.y - e.y;
    return (this.x = s * i - u * r + e.x), (this.y = s * r + u * i + e.y), this;
  }
  random() {
    return (this.x = Math.random()), (this.y = Math.random()), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class Gt {
  constructor(e, t, i, r, s, u, c, h, p) {
    (Gt.prototype.isMatrix3 = !0),
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, t, i, r, s, u, c, h, p);
  }
  set(e, t, i, r, s, u, c, h, p) {
    const g = this.elements;
    return (
      (g[0] = e),
      (g[1] = r),
      (g[2] = c),
      (g[3] = t),
      (g[4] = s),
      (g[5] = h),
      (g[6] = i),
      (g[7] = u),
      (g[8] = p),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }
  copy(e) {
    const t = this.elements,
      i = e.elements;
    return (
      (t[0] = i[0]),
      (t[1] = i[1]),
      (t[2] = i[2]),
      (t[3] = i[3]),
      (t[4] = i[4]),
      (t[5] = i[5]),
      (t[6] = i[6]),
      (t[7] = i[7]),
      (t[8] = i[8]),
      this
    );
  }
  extractBasis(e, t, i) {
    return (
      e.setFromMatrix3Column(this, 0),
      t.setFromMatrix3Column(this, 1),
      i.setFromMatrix3Column(this, 2),
      this
    );
  }
  setFromMatrix4(e) {
    const t = e.elements;
    return (
      this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const i = e.elements,
      r = t.elements,
      s = this.elements,
      u = i[0],
      c = i[3],
      h = i[6],
      p = i[1],
      g = i[4],
      v = i[7],
      x = i[2],
      M = i[5],
      w = i[8],
      C = r[0],
      E = r[3],
      b = r[6],
      L = r[1],
      S = r[4],
      R = r[7],
      U = r[2],
      q = r[5],
      I = r[8];
    return (
      (s[0] = u * C + c * L + h * U),
      (s[3] = u * E + c * S + h * q),
      (s[6] = u * b + c * R + h * I),
      (s[1] = p * C + g * L + v * U),
      (s[4] = p * E + g * S + v * q),
      (s[7] = p * b + g * R + v * I),
      (s[2] = x * C + M * L + w * U),
      (s[5] = x * E + M * S + w * q),
      (s[8] = x * b + M * R + w * I),
      this
    );
  }
  multiplyScalar(e) {
    const t = this.elements;
    return (
      (t[0] *= e),
      (t[3] *= e),
      (t[6] *= e),
      (t[1] *= e),
      (t[4] *= e),
      (t[7] *= e),
      (t[2] *= e),
      (t[5] *= e),
      (t[8] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      h = e[6],
      p = e[7],
      g = e[8];
    return (
      t * u * g - t * c * p - i * s * g + i * c * h + r * s * p - r * u * h
    );
  }
  invert() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      h = e[6],
      p = e[7],
      g = e[8],
      v = g * u - c * p,
      x = c * h - g * s,
      M = p * s - u * h,
      w = t * v + i * x + r * M;
    if (w === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const C = 1 / w;
    return (
      (e[0] = v * C),
      (e[1] = (r * p - g * i) * C),
      (e[2] = (c * i - r * u) * C),
      (e[3] = x * C),
      (e[4] = (g * t - r * h) * C),
      (e[5] = (r * s - c * t) * C),
      (e[6] = M * C),
      (e[7] = (i * h - p * t) * C),
      (e[8] = (u * t - i * s) * C),
      this
    );
  }
  transpose() {
    let e;
    const t = this.elements;
    return (
      (e = t[1]),
      (t[1] = t[3]),
      (t[3] = e),
      (e = t[2]),
      (t[2] = t[6]),
      (t[6] = e),
      (e = t[5]),
      (t[5] = t[7]),
      (t[7] = e),
      this
    );
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const t = this.elements;
    return (
      (e[0] = t[0]),
      (e[1] = t[3]),
      (e[2] = t[6]),
      (e[3] = t[1]),
      (e[4] = t[4]),
      (e[5] = t[7]),
      (e[6] = t[2]),
      (e[7] = t[5]),
      (e[8] = t[8]),
      this
    );
  }
  setUvTransform(e, t, i, r, s, u, c) {
    const h = Math.cos(s),
      p = Math.sin(s);
    return (
      this.set(
        i * h,
        i * p,
        -i * (h * u + p * c) + u + e,
        -r * p,
        r * h,
        -r * (-p * u + h * c) + c + t,
        0,
        0,
        1
      ),
      this
    );
  }
  scale(e, t) {
    return this.premultiply(O0.makeScale(e, t)), this;
  }
  rotate(e) {
    return this.premultiply(O0.makeRotation(-e)), this;
  }
  translate(e, t) {
    return this.premultiply(O0.makeTranslation(e, t)), this;
  }
  makeTranslation(e, t) {
    return (
      e.isVector2
        ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
        : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
      this
    );
  }
  makeRotation(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, -i, 0, i, t, 0, 0, 0, 1), this;
  }
  makeScale(e, t) {
    return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
  }
  equals(e) {
    const t = this.elements,
      i = e.elements;
    for (let r = 0; r < 9; r++) if (t[r] !== i[r]) return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let i = 0; i < 9; i++) this.elements[i] = e[i + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const i = this.elements;
    return (
      (e[t] = i[0]),
      (e[t + 1] = i[1]),
      (e[t + 2] = i[2]),
      (e[t + 3] = i[3]),
      (e[t + 4] = i[4]),
      (e[t + 5] = i[5]),
      (e[t + 6] = i[6]),
      (e[t + 7] = i[7]),
      (e[t + 8] = i[8]),
      e
    );
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
const O0 = new Gt();
function P1(n) {
  for (let e = n.length - 1; e >= 0; --e) if (n[e] >= 65535) return !0;
  return !1;
}
function Da(n) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", n);
}
function zv() {
  const n = Da("canvas");
  return (n.style.display = "block"), n;
}
const Ch = {};
function Ea(n) {
  n in Ch || ((Ch[n] = !0), console.warn(n));
}
function Oo(n) {
  return n < 0.04045
    ? n * 0.0773993808
    : Math.pow(n * 0.9478672986 + 0.0521327014, 2.4);
}
function q0(n) {
  return n < 0.0031308 ? n * 12.92 : 1.055 * Math.pow(n, 0.41666) - 0.055;
}
const Gv = new Gt().fromArray([
    0.8224621, 0.0331941, 0.0170827, 0.177538, 0.9668058, 0.0723974, -1e-7,
    1e-7, 0.9105199,
  ]),
  Hv = new Gt().fromArray([
    1.2249401, -0.0420569, -0.0196376, -0.2249404, 1.0420571, -0.0786361, 1e-7,
    0, 1.0982735,
  ]);
function Vv(n) {
  return n.convertSRGBToLinear().applyMatrix3(Hv);
}
function Wv(n) {
  return n.applyMatrix3(Gv).convertLinearToSRGB();
}
const jv = { [xr]: (n) => n, [hn]: (n) => n.convertSRGBToLinear(), [$l]: Vv },
  Xv = { [xr]: (n) => n, [hn]: (n) => n.convertLinearToSRGB(), [$l]: Wv },
  ji = {
    enabled: !0,
    get legacyMode() {
      return (
        console.warn(
          "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
        ),
        !this.enabled
      );
    },
    set legacyMode(n) {
      console.warn(
        "THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."
      ),
        (this.enabled = !n);
    },
    get workingColorSpace() {
      return xr;
    },
    set workingColorSpace(n) {
      console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
    },
    convert: function (n, e, t) {
      if (this.enabled === !1 || e === t || !e || !t) return n;
      const i = jv[e],
        r = Xv[t];
      if (i === void 0 || r === void 0)
        throw new Error(
          `Unsupported color space conversion, "${e}" to "${t}".`
        );
      return r(i(n));
    },
    fromWorkingColorSpace: function (n, e) {
      return this.convert(n, this.workingColorSpace, e);
    },
    toWorkingColorSpace: function (n, e) {
      return this.convert(n, e, this.workingColorSpace);
    },
  };
let io;
class L1 {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
    let t;
    if (e instanceof HTMLCanvasElement) t = e;
    else {
      io === void 0 && (io = Da("canvas")),
        (io.width = e.width),
        (io.height = e.height);
      const i = io.getContext("2d");
      e instanceof ImageData
        ? i.putImageData(e, 0, 0)
        : i.drawImage(e, 0, 0, e.width, e.height),
        (t = io);
    }
    return t.width > 2048 || t.height > 2048
      ? (console.warn(
          "THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",
          e
        ),
        t.toDataURL("image/jpeg", 0.6))
      : t.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (
      (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement) ||
      (typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement) ||
      (typeof ImageBitmap < "u" && e instanceof ImageBitmap)
    ) {
      const t = Da("canvas");
      (t.width = e.width), (t.height = e.height);
      const i = t.getContext("2d");
      i.drawImage(e, 0, 0, e.width, e.height);
      const r = i.getImageData(0, 0, e.width, e.height),
        s = r.data;
      for (let u = 0; u < s.length; u++) s[u] = Oo(s[u] / 255) * 255;
      return i.putImageData(r, 0, 0), t;
    } else if (e.data) {
      const t = e.data.slice(0);
      for (let i = 0; i < t.length; i++)
        t instanceof Uint8Array || t instanceof Uint8ClampedArray
          ? (t[i] = Math.floor(Oo(t[i] / 255) * 255))
          : (t[i] = Oo(t[i]));
      return { data: t, width: e.width, height: e.height };
    } else
      return (
        console.warn(
          "THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."
        ),
        e
      );
  }
}
let Qv = 0;
class D1 {
  constructor(e = null) {
    (this.isSource = !0),
      Object.defineProperty(this, "id", { value: Qv++ }),
      (this.uuid = pr()),
      (this.data = e),
      (this.version = 0);
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.images[this.uuid] !== void 0) return e.images[this.uuid];
    const i = { uuid: this.uuid, url: "" },
      r = this.data;
    if (r !== null) {
      let s;
      if (Array.isArray(r)) {
        s = [];
        for (let u = 0, c = r.length; u < c; u++)
          r[u].isDataTexture ? s.push(U0(r[u].image)) : s.push(U0(r[u]));
      } else s = U0(r);
      i.url = s;
    }
    return t || (e.images[this.uuid] = i), i;
  }
}
function U0(n) {
  return (typeof HTMLImageElement < "u" && n instanceof HTMLImageElement) ||
    (typeof HTMLCanvasElement < "u" && n instanceof HTMLCanvasElement) ||
    (typeof ImageBitmap < "u" && n instanceof ImageBitmap)
    ? L1.getDataURL(n)
    : n.data
    ? {
        data: Array.from(n.data),
        width: n.width,
        height: n.height,
        type: n.data.constructor.name,
      }
    : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let $v = 0;
class vi extends js {
  constructor(
    e = vi.DEFAULT_IMAGE,
    t = vi.DEFAULT_MAPPING,
    i = tr,
    r = tr,
    s = Fi,
    u = Ra,
    c = nr,
    h = us,
    p = vi.DEFAULT_ANISOTROPY,
    g = Bs
  ) {
    super(),
      (this.isTexture = !0),
      Object.defineProperty(this, "id", { value: $v++ }),
      (this.uuid = pr()),
      (this.name = ""),
      (this.source = new D1(e)),
      (this.mipmaps = []),
      (this.mapping = t),
      (this.channel = 0),
      (this.wrapS = i),
      (this.wrapT = r),
      (this.magFilter = s),
      (this.minFilter = u),
      (this.anisotropy = p),
      (this.format = c),
      (this.internalFormat = null),
      (this.type = h),
      (this.offset = new ke(0, 0)),
      (this.repeat = new ke(1, 1)),
      (this.center = new ke(0, 0)),
      (this.rotation = 0),
      (this.matrixAutoUpdate = !0),
      (this.matrix = new Gt()),
      (this.generateMipmaps = !0),
      (this.premultiplyAlpha = !1),
      (this.flipY = !0),
      (this.unpackAlignment = 4),
      typeof g == "string"
        ? (this.colorSpace = g)
        : (Ea(
            "THREE.Texture: Property .encoding has been replaced by .colorSpace."
          ),
          (this.colorSpace = g === Us ? hn : Bs)),
      (this.userData = {}),
      (this.version = 0),
      (this.onUpdate = null),
      (this.isRenderTargetTexture = !1),
      (this.needsPMREMUpdate = !1);
  }
  get image() {
    return this.source.data;
  }
  set image(e = null) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(
      this.offset.x,
      this.offset.y,
      this.repeat.x,
      this.repeat.y,
      this.rotation,
      this.center.x,
      this.center.y
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.source = e.source),
      (this.mipmaps = e.mipmaps.slice(0)),
      (this.mapping = e.mapping),
      (this.channel = e.channel),
      (this.wrapS = e.wrapS),
      (this.wrapT = e.wrapT),
      (this.magFilter = e.magFilter),
      (this.minFilter = e.minFilter),
      (this.anisotropy = e.anisotropy),
      (this.format = e.format),
      (this.internalFormat = e.internalFormat),
      (this.type = e.type),
      this.offset.copy(e.offset),
      this.repeat.copy(e.repeat),
      this.center.copy(e.center),
      (this.rotation = e.rotation),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this.matrix.copy(e.matrix),
      (this.generateMipmaps = e.generateMipmaps),
      (this.premultiplyAlpha = e.premultiplyAlpha),
      (this.flipY = e.flipY),
      (this.unpackAlignment = e.unpackAlignment),
      (this.colorSpace = e.colorSpace),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      (this.needsUpdate = !0),
      this
    );
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
    const i = {
      metadata: { version: 4.6, type: "Texture", generator: "Texture.toJSON" },
      uuid: this.uuid,
      name: this.name,
      image: this.source.toJSON(e).uuid,
      mapping: this.mapping,
      channel: this.channel,
      repeat: [this.repeat.x, this.repeat.y],
      offset: [this.offset.x, this.offset.y],
      center: [this.center.x, this.center.y],
      rotation: this.rotation,
      wrap: [this.wrapS, this.wrapT],
      format: this.format,
      internalFormat: this.internalFormat,
      type: this.type,
      colorSpace: this.colorSpace,
      minFilter: this.minFilter,
      magFilter: this.magFilter,
      anisotropy: this.anisotropy,
      flipY: this.flipY,
      generateMipmaps: this.generateMipmaps,
      premultiplyAlpha: this.premultiplyAlpha,
      unpackAlignment: this.unpackAlignment,
    };
    return (
      Object.keys(this.userData).length > 0 && (i.userData = this.userData),
      t || (e.textures[this.uuid] = i),
      i
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== y1) return e;
    if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
      switch (this.wrapS) {
        case Su:
          e.x = e.x - Math.floor(e.x);
          break;
        case tr:
          e.x = e.x < 0 ? 0 : 1;
          break;
        case Tu:
          Math.abs(Math.floor(e.x) % 2) === 1
            ? (e.x = Math.ceil(e.x) - e.x)
            : (e.x = e.x - Math.floor(e.x));
          break;
      }
    if (e.y < 0 || e.y > 1)
      switch (this.wrapT) {
        case Su:
          e.y = e.y - Math.floor(e.y);
          break;
        case tr:
          e.y = e.y < 0 ? 0 : 1;
          break;
        case Tu:
          Math.abs(Math.floor(e.y) % 2) === 1
            ? (e.y = Math.ceil(e.y) - e.y)
            : (e.y = e.y - Math.floor(e.y));
          break;
      }
    return this.flipY && (e.y = 1 - e.y), e;
  }
  set needsUpdate(e) {
    e === !0 && (this.version++, (this.source.needsUpdate = !0));
  }
  get encoding() {
    return (
      Ea("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      this.colorSpace === hn ? Us : C1
    );
  }
  set encoding(e) {
    Ea("THREE.Texture: Property .encoding has been replaced by .colorSpace."),
      (this.colorSpace = e === Us ? hn : Bs);
  }
}
vi.DEFAULT_IMAGE = null;
vi.DEFAULT_MAPPING = y1;
vi.DEFAULT_ANISOTROPY = 1;
class In {
  constructor(e = 0, t = 0, i = 0, r = 1) {
    (In.prototype.isVector4 = !0),
      (this.x = e),
      (this.y = t),
      (this.z = i),
      (this.w = r);
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, t, i, r) {
    return (this.x = e), (this.y = t), (this.z = i), (this.w = r), this;
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setW(e) {
    return (this.w = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      case 3:
        this.w = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return (
      (this.x = e.x),
      (this.y = e.y),
      (this.z = e.z),
      (this.w = e.w !== void 0 ? e.w : 1),
      this
    );
  }
  add(e) {
    return (
      (this.x += e.x), (this.y += e.y), (this.z += e.z), (this.w += e.w), this
    );
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), (this.w += e), this;
  }
  addVectors(e, t) {
    return (
      (this.x = e.x + t.x),
      (this.y = e.y + t.y),
      (this.z = e.z + t.z),
      (this.w = e.w + t.w),
      this
    );
  }
  addScaledVector(e, t) {
    return (
      (this.x += e.x * t),
      (this.y += e.y * t),
      (this.z += e.z * t),
      (this.w += e.w * t),
      this
    );
  }
  sub(e) {
    return (
      (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), (this.w -= e.w), this
    );
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this;
  }
  subVectors(e, t) {
    return (
      (this.x = e.x - t.x),
      (this.y = e.y - t.y),
      (this.z = e.z - t.z),
      (this.w = e.w - t.w),
      this
    );
  }
  multiply(e) {
    return (
      (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), (this.w *= e.w), this
    );
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this;
  }
  applyMatrix4(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = this.w,
      u = e.elements;
    return (
      (this.x = u[0] * t + u[4] * i + u[8] * r + u[12] * s),
      (this.y = u[1] * t + u[5] * i + u[9] * r + u[13] * s),
      (this.z = u[2] * t + u[6] * i + u[10] * r + u[14] * s),
      (this.w = u[3] * t + u[7] * i + u[11] * r + u[15] * s),
      this
    );
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const t = Math.sqrt(1 - e.w * e.w);
    return (
      t < 1e-4
        ? ((this.x = 1), (this.y = 0), (this.z = 0))
        : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
      this
    );
  }
  setAxisAngleFromRotationMatrix(e) {
    let t, i, r, s;
    const h = e.elements,
      p = h[0],
      g = h[4],
      v = h[8],
      x = h[1],
      M = h[5],
      w = h[9],
      C = h[2],
      E = h[6],
      b = h[10];
    if (
      Math.abs(g - x) < 0.01 &&
      Math.abs(v - C) < 0.01 &&
      Math.abs(w - E) < 0.01
    ) {
      if (
        Math.abs(g + x) < 0.1 &&
        Math.abs(v + C) < 0.1 &&
        Math.abs(w + E) < 0.1 &&
        Math.abs(p + M + b - 3) < 0.1
      )
        return this.set(1, 0, 0, 0), this;
      t = Math.PI;
      const S = (p + 1) / 2,
        R = (M + 1) / 2,
        U = (b + 1) / 2,
        q = (g + x) / 4,
        I = (v + C) / 4,
        N = (w + E) / 4;
      return (
        S > R && S > U
          ? S < 0.01
            ? ((i = 0), (r = 0.707106781), (s = 0.707106781))
            : ((i = Math.sqrt(S)), (r = q / i), (s = I / i))
          : R > U
          ? R < 0.01
            ? ((i = 0.707106781), (r = 0), (s = 0.707106781))
            : ((r = Math.sqrt(R)), (i = q / r), (s = N / r))
          : U < 0.01
          ? ((i = 0.707106781), (r = 0.707106781), (s = 0))
          : ((s = Math.sqrt(U)), (i = I / s), (r = N / s)),
        this.set(i, r, s, t),
        this
      );
    }
    let L = Math.sqrt(
      (E - w) * (E - w) + (v - C) * (v - C) + (x - g) * (x - g)
    );
    return (
      Math.abs(L) < 0.001 && (L = 1),
      (this.x = (E - w) / L),
      (this.y = (v - C) / L),
      (this.z = (x - g) / L),
      (this.w = Math.acos((p + M + b - 1) / 2)),
      this
    );
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      (this.w = Math.min(this.w, e.w)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      (this.w = Math.max(this.w, e.w)),
      this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      (this.z = Math.max(e.z, Math.min(t.z, this.z))),
      (this.w = Math.max(e.w, Math.min(t.w, this.w))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      (this.z = Math.max(e, Math.min(t, this.z))),
      (this.w = Math.max(e, Math.min(t, this.w))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      (this.w = Math.floor(this.w)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      (this.w = Math.ceil(this.w)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      (this.w = Math.round(this.w)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      (this.w = Math.trunc(this.w)),
      this
    );
  }
  negate() {
    return (
      (this.x = -this.x),
      (this.y = -this.y),
      (this.z = -this.z),
      (this.w = -this.w),
      this
    );
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return (
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  length() {
    return Math.sqrt(
      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    );
  }
  manhattanLength() {
    return (
      Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    );
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (
      (this.x += (e.x - this.x) * t),
      (this.y += (e.y - this.y) * t),
      (this.z += (e.z - this.z) * t),
      (this.w += (e.w - this.w) * t),
      this
    );
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i),
      (this.y = e.y + (t.y - e.y) * i),
      (this.z = e.z + (t.z - e.z) * i),
      (this.w = e.w + (t.w - e.w) * i),
      this
    );
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, t = 0) {
    return (
      (this.x = e[t]),
      (this.y = e[t + 1]),
      (this.z = e[t + 2]),
      (this.w = e[t + 3]),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this.x),
      (e[t + 1] = this.y),
      (e[t + 2] = this.z),
      (e[t + 3] = this.w),
      e
    );
  }
  fromBufferAttribute(e, t) {
    return (
      (this.x = e.getX(t)),
      (this.y = e.getY(t)),
      (this.z = e.getZ(t)),
      (this.w = e.getW(t)),
      this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      (this.w = Math.random()),
      this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class Yv extends js {
  constructor(e = 1, t = 1, i = {}) {
    super(),
      (this.isRenderTarget = !0),
      (this.width = e),
      (this.height = t),
      (this.depth = 1),
      (this.scissor = new In(0, 0, e, t)),
      (this.scissorTest = !1),
      (this.viewport = new In(0, 0, e, t));
    const r = { width: e, height: t, depth: 1 };
    i.encoding !== void 0 &&
      (Ea(
        "THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (i.colorSpace = i.encoding === Us ? hn : Bs)),
      (this.texture = new vi(
        r,
        i.mapping,
        i.wrapS,
        i.wrapT,
        i.magFilter,
        i.minFilter,
        i.format,
        i.type,
        i.anisotropy,
        i.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.flipY = !1),
      (this.texture.generateMipmaps =
        i.generateMipmaps !== void 0 ? i.generateMipmaps : !1),
      (this.texture.internalFormat =
        i.internalFormat !== void 0 ? i.internalFormat : null),
      (this.texture.minFilter = i.minFilter !== void 0 ? i.minFilter : Fi),
      (this.depthBuffer = i.depthBuffer !== void 0 ? i.depthBuffer : !0),
      (this.stencilBuffer = i.stencilBuffer !== void 0 ? i.stencilBuffer : !1),
      (this.depthTexture = i.depthTexture !== void 0 ? i.depthTexture : null),
      (this.samples = i.samples !== void 0 ? i.samples : 0);
  }
  setSize(e, t, i = 1) {
    (this.width !== e || this.height !== t || this.depth !== i) &&
      ((this.width = e),
      (this.height = t),
      (this.depth = i),
      (this.texture.image.width = e),
      (this.texture.image.height = t),
      (this.texture.image.depth = i),
      this.dispose()),
      this.viewport.set(0, 0, e, t),
      this.scissor.set(0, 0, e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.width = e.width),
      (this.height = e.height),
      (this.depth = e.depth),
      this.scissor.copy(e.scissor),
      (this.scissorTest = e.scissorTest),
      this.viewport.copy(e.viewport),
      (this.texture = e.texture.clone()),
      (this.texture.isRenderTargetTexture = !0);
    const t = Object.assign({}, e.texture.image);
    return (
      (this.texture.source = new D1(t)),
      (this.depthBuffer = e.depthBuffer),
      (this.stencilBuffer = e.stencilBuffer),
      e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()),
      (this.samples = e.samples),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class Fs extends Yv {
  constructor(e = 1, t = 1, i = {}) {
    super(e, t, i), (this.isWebGLRenderTarget = !0);
  }
}
class I1 extends vi {
  constructor(e = null, t = 1, i = 1, r = 1) {
    super(null),
      (this.isDataArrayTexture = !0),
      (this.image = { data: e, width: t, height: i, depth: r }),
      (this.magFilter = Ai),
      (this.minFilter = Ai),
      (this.wrapR = tr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class Zv extends vi {
  constructor(e = null, t = 1, i = 1, r = 1) {
    super(null),
      (this.isData3DTexture = !0),
      (this.image = { data: e, width: t, height: i, depth: r }),
      (this.magFilter = Ai),
      (this.minFilter = Ai),
      (this.wrapR = tr),
      (this.generateMipmaps = !1),
      (this.flipY = !1),
      (this.unpackAlignment = 1);
  }
}
class ks {
  constructor(e = 0, t = 0, i = 0, r = 1) {
    (this.isQuaternion = !0),
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._w = r);
  }
  static slerpFlat(e, t, i, r, s, u, c) {
    let h = i[r + 0],
      p = i[r + 1],
      g = i[r + 2],
      v = i[r + 3];
    const x = s[u + 0],
      M = s[u + 1],
      w = s[u + 2],
      C = s[u + 3];
    if (c === 0) {
      (e[t + 0] = h), (e[t + 1] = p), (e[t + 2] = g), (e[t + 3] = v);
      return;
    }
    if (c === 1) {
      (e[t + 0] = x), (e[t + 1] = M), (e[t + 2] = w), (e[t + 3] = C);
      return;
    }
    if (v !== C || h !== x || p !== M || g !== w) {
      let E = 1 - c;
      const b = h * x + p * M + g * w + v * C,
        L = b >= 0 ? 1 : -1,
        S = 1 - b * b;
      if (S > Number.EPSILON) {
        const U = Math.sqrt(S),
          q = Math.atan2(U, b * L);
        (E = Math.sin(E * q) / U), (c = Math.sin(c * q) / U);
      }
      const R = c * L;
      if (
        ((h = h * E + x * R),
        (p = p * E + M * R),
        (g = g * E + w * R),
        (v = v * E + C * R),
        E === 1 - c)
      ) {
        const U = 1 / Math.sqrt(h * h + p * p + g * g + v * v);
        (h *= U), (p *= U), (g *= U), (v *= U);
      }
    }
    (e[t] = h), (e[t + 1] = p), (e[t + 2] = g), (e[t + 3] = v);
  }
  static multiplyQuaternionsFlat(e, t, i, r, s, u) {
    const c = i[r],
      h = i[r + 1],
      p = i[r + 2],
      g = i[r + 3],
      v = s[u],
      x = s[u + 1],
      M = s[u + 2],
      w = s[u + 3];
    return (
      (e[t] = c * w + g * v + h * M - p * x),
      (e[t + 1] = h * w + g * x + p * v - c * M),
      (e[t + 2] = p * w + g * M + c * x - h * v),
      (e[t + 3] = g * w - c * v - h * x - p * M),
      e
    );
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(e) {
    (this._w = e), this._onChangeCallback();
  }
  set(e, t, i, r) {
    return (
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._w = r),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return (
      (this._x = e.x),
      (this._y = e.y),
      (this._z = e.z),
      (this._w = e.w),
      this._onChangeCallback(),
      this
    );
  }
  setFromEuler(e, t) {
    const i = e._x,
      r = e._y,
      s = e._z,
      u = e._order,
      c = Math.cos,
      h = Math.sin,
      p = c(i / 2),
      g = c(r / 2),
      v = c(s / 2),
      x = h(i / 2),
      M = h(r / 2),
      w = h(s / 2);
    switch (u) {
      case "XYZ":
        (this._x = x * g * v + p * M * w),
          (this._y = p * M * v - x * g * w),
          (this._z = p * g * w + x * M * v),
          (this._w = p * g * v - x * M * w);
        break;
      case "YXZ":
        (this._x = x * g * v + p * M * w),
          (this._y = p * M * v - x * g * w),
          (this._z = p * g * w - x * M * v),
          (this._w = p * g * v + x * M * w);
        break;
      case "ZXY":
        (this._x = x * g * v - p * M * w),
          (this._y = p * M * v + x * g * w),
          (this._z = p * g * w + x * M * v),
          (this._w = p * g * v - x * M * w);
        break;
      case "ZYX":
        (this._x = x * g * v - p * M * w),
          (this._y = p * M * v + x * g * w),
          (this._z = p * g * w - x * M * v),
          (this._w = p * g * v + x * M * w);
        break;
      case "YZX":
        (this._x = x * g * v + p * M * w),
          (this._y = p * M * v + x * g * w),
          (this._z = p * g * w - x * M * v),
          (this._w = p * g * v - x * M * w);
        break;
      case "XZY":
        (this._x = x * g * v - p * M * w),
          (this._y = p * M * v - x * g * w),
          (this._z = p * g * w + x * M * v),
          (this._w = p * g * v + x * M * w);
        break;
      default:
        console.warn(
          "THREE.Quaternion: .setFromEuler() encountered an unknown order: " + u
        );
    }
    return t !== !1 && this._onChangeCallback(), this;
  }
  setFromAxisAngle(e, t) {
    const i = t / 2,
      r = Math.sin(i);
    return (
      (this._x = e.x * r),
      (this._y = e.y * r),
      (this._z = e.z * r),
      (this._w = Math.cos(i)),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e) {
    const t = e.elements,
      i = t[0],
      r = t[4],
      s = t[8],
      u = t[1],
      c = t[5],
      h = t[9],
      p = t[2],
      g = t[6],
      v = t[10],
      x = i + c + v;
    if (x > 0) {
      const M = 0.5 / Math.sqrt(x + 1);
      (this._w = 0.25 / M),
        (this._x = (g - h) * M),
        (this._y = (s - p) * M),
        (this._z = (u - r) * M);
    } else if (i > c && i > v) {
      const M = 2 * Math.sqrt(1 + i - c - v);
      (this._w = (g - h) / M),
        (this._x = 0.25 * M),
        (this._y = (r + u) / M),
        (this._z = (s + p) / M);
    } else if (c > v) {
      const M = 2 * Math.sqrt(1 + c - i - v);
      (this._w = (s - p) / M),
        (this._x = (r + u) / M),
        (this._y = 0.25 * M),
        (this._z = (h + g) / M);
    } else {
      const M = 2 * Math.sqrt(1 + v - i - c);
      (this._w = (u - r) / M),
        (this._x = (s + p) / M),
        (this._y = (h + g) / M),
        (this._z = 0.25 * M);
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(e, t) {
    let i = e.dot(t) + 1;
    return (
      i < Number.EPSILON
        ? ((i = 0),
          Math.abs(e.x) > Math.abs(e.z)
            ? ((this._x = -e.y), (this._y = e.x), (this._z = 0), (this._w = i))
            : ((this._x = 0), (this._y = -e.z), (this._z = e.y), (this._w = i)))
        : ((this._x = e.y * t.z - e.z * t.y),
          (this._y = e.z * t.x - e.x * t.z),
          (this._z = e.x * t.y - e.y * t.x),
          (this._w = i)),
      this.normalize()
    );
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(Dn(this.dot(e), -1, 1)));
  }
  rotateTowards(e, t) {
    const i = this.angleTo(e);
    if (i === 0) return this;
    const r = Math.min(1, t / i);
    return this.slerp(e, r), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return (
      (this._x *= -1),
      (this._y *= -1),
      (this._z *= -1),
      this._onChangeCallback(),
      this
    );
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return (
      this._x * this._x +
      this._y * this._y +
      this._z * this._z +
      this._w * this._w
    );
  }
  length() {
    return Math.sqrt(
      this._x * this._x +
        this._y * this._y +
        this._z * this._z +
        this._w * this._w
    );
  }
  normalize() {
    let e = this.length();
    return (
      e === 0
        ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
        : ((e = 1 / e),
          (this._x = this._x * e),
          (this._y = this._y * e),
          (this._z = this._z * e),
          (this._w = this._w * e)),
      this._onChangeCallback(),
      this
    );
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, t) {
    const i = e._x,
      r = e._y,
      s = e._z,
      u = e._w,
      c = t._x,
      h = t._y,
      p = t._z,
      g = t._w;
    return (
      (this._x = i * g + u * c + r * p - s * h),
      (this._y = r * g + u * h + s * c - i * p),
      (this._z = s * g + u * p + i * h - r * c),
      (this._w = u * g - i * c - r * h - s * p),
      this._onChangeCallback(),
      this
    );
  }
  slerp(e, t) {
    if (t === 0) return this;
    if (t === 1) return this.copy(e);
    const i = this._x,
      r = this._y,
      s = this._z,
      u = this._w;
    let c = u * e._w + i * e._x + r * e._y + s * e._z;
    if (
      (c < 0
        ? ((this._w = -e._w),
          (this._x = -e._x),
          (this._y = -e._y),
          (this._z = -e._z),
          (c = -c))
        : this.copy(e),
      c >= 1)
    )
      return (this._w = u), (this._x = i), (this._y = r), (this._z = s), this;
    const h = 1 - c * c;
    if (h <= Number.EPSILON) {
      const M = 1 - t;
      return (
        (this._w = M * u + t * this._w),
        (this._x = M * i + t * this._x),
        (this._y = M * r + t * this._y),
        (this._z = M * s + t * this._z),
        this.normalize(),
        this._onChangeCallback(),
        this
      );
    }
    const p = Math.sqrt(h),
      g = Math.atan2(p, c),
      v = Math.sin((1 - t) * g) / p,
      x = Math.sin(t * g) / p;
    return (
      (this._w = u * v + this._w * x),
      (this._x = i * v + this._x * x),
      (this._y = r * v + this._y * x),
      (this._z = s * v + this._z * x),
      this._onChangeCallback(),
      this
    );
  }
  slerpQuaternions(e, t, i) {
    return this.copy(e).slerp(t, i);
  }
  random() {
    const e = Math.random(),
      t = Math.sqrt(1 - e),
      i = Math.sqrt(e),
      r = 2 * Math.PI * Math.random(),
      s = 2 * Math.PI * Math.random();
    return this.set(
      t * Math.cos(r),
      i * Math.sin(s),
      i * Math.cos(s),
      t * Math.sin(r)
    );
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._w === this._w
    );
  }
  fromArray(e, t = 0) {
    return (
      (this._x = e[t]),
      (this._y = e[t + 1]),
      (this._z = e[t + 2]),
      (this._w = e[t + 3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this._x),
      (e[t + 1] = this._y),
      (e[t + 2] = this._z),
      (e[t + 3] = this._w),
      e
    );
  }
  fromBufferAttribute(e, t) {
    return (
      (this._x = e.getX(t)),
      (this._y = e.getY(t)),
      (this._z = e.getZ(t)),
      (this._w = e.getW(t)),
      this
    );
  }
  toJSON() {
    return this.toArray();
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class te {
  constructor(e = 0, t = 0, i = 0) {
    (te.prototype.isVector3 = !0), (this.x = e), (this.y = t), (this.z = i);
  }
  set(e, t, i) {
    return (
      i === void 0 && (i = this.z),
      (this.x = e),
      (this.y = t),
      (this.z = i),
      this
    );
  }
  setScalar(e) {
    return (this.x = e), (this.y = e), (this.z = e), this;
  }
  setX(e) {
    return (this.x = e), this;
  }
  setY(e) {
    return (this.y = e), this;
  }
  setZ(e) {
    return (this.z = e), this;
  }
  setComponent(e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
  }
  add(e) {
    return (this.x += e.x), (this.y += e.y), (this.z += e.z), this;
  }
  addScalar(e) {
    return (this.x += e), (this.y += e), (this.z += e), this;
  }
  addVectors(e, t) {
    return (
      (this.x = e.x + t.x), (this.y = e.y + t.y), (this.z = e.z + t.z), this
    );
  }
  addScaledVector(e, t) {
    return (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this;
  }
  sub(e) {
    return (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this;
  }
  subScalar(e) {
    return (this.x -= e), (this.y -= e), (this.z -= e), this;
  }
  subVectors(e, t) {
    return (
      (this.x = e.x - t.x), (this.y = e.y - t.y), (this.z = e.z - t.z), this
    );
  }
  multiply(e) {
    return (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this;
  }
  multiplyScalar(e) {
    return (this.x *= e), (this.y *= e), (this.z *= e), this;
  }
  multiplyVectors(e, t) {
    return (
      (this.x = e.x * t.x), (this.y = e.y * t.y), (this.z = e.z * t.z), this
    );
  }
  applyEuler(e) {
    return this.applyQuaternion(Rh.setFromEuler(e));
  }
  applyAxisAngle(e, t) {
    return this.applyQuaternion(Rh.setFromAxisAngle(e, t));
  }
  applyMatrix3(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements;
    return (
      (this.x = s[0] * t + s[3] * i + s[6] * r),
      (this.y = s[1] * t + s[4] * i + s[7] * r),
      (this.z = s[2] * t + s[5] * i + s[8] * r),
      this
    );
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements,
      u = 1 / (s[3] * t + s[7] * i + s[11] * r + s[15]);
    return (
      (this.x = (s[0] * t + s[4] * i + s[8] * r + s[12]) * u),
      (this.y = (s[1] * t + s[5] * i + s[9] * r + s[13]) * u),
      (this.z = (s[2] * t + s[6] * i + s[10] * r + s[14]) * u),
      this
    );
  }
  applyQuaternion(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.x,
      u = e.y,
      c = e.z,
      h = e.w,
      p = h * t + u * r - c * i,
      g = h * i + c * t - s * r,
      v = h * r + s * i - u * t,
      x = -s * t - u * i - c * r;
    return (
      (this.x = p * h + x * -s + g * -c - v * -u),
      (this.y = g * h + x * -u + v * -s - p * -c),
      (this.z = v * h + x * -c + p * -u - g * -s),
      this
    );
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
      e.projectionMatrix
    );
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
      e.matrixWorld
    );
  }
  transformDirection(e) {
    const t = this.x,
      i = this.y,
      r = this.z,
      s = e.elements;
    return (
      (this.x = s[0] * t + s[4] * i + s[8] * r),
      (this.y = s[1] * t + s[5] * i + s[9] * r),
      (this.z = s[2] * t + s[6] * i + s[10] * r),
      this.normalize()
    );
  }
  divide(e) {
    return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return (
      (this.x = Math.min(this.x, e.x)),
      (this.y = Math.min(this.y, e.y)),
      (this.z = Math.min(this.z, e.z)),
      this
    );
  }
  max(e) {
    return (
      (this.x = Math.max(this.x, e.x)),
      (this.y = Math.max(this.y, e.y)),
      (this.z = Math.max(this.z, e.z)),
      this
    );
  }
  clamp(e, t) {
    return (
      (this.x = Math.max(e.x, Math.min(t.x, this.x))),
      (this.y = Math.max(e.y, Math.min(t.y, this.y))),
      (this.z = Math.max(e.z, Math.min(t.z, this.z))),
      this
    );
  }
  clampScalar(e, t) {
    return (
      (this.x = Math.max(e, Math.min(t, this.x))),
      (this.y = Math.max(e, Math.min(t, this.y))),
      (this.z = Math.max(e, Math.min(t, this.z))),
      this
    );
  }
  clampLength(e, t) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(
      Math.max(e, Math.min(t, i))
    );
  }
  floor() {
    return (
      (this.x = Math.floor(this.x)),
      (this.y = Math.floor(this.y)),
      (this.z = Math.floor(this.z)),
      this
    );
  }
  ceil() {
    return (
      (this.x = Math.ceil(this.x)),
      (this.y = Math.ceil(this.y)),
      (this.z = Math.ceil(this.z)),
      this
    );
  }
  round() {
    return (
      (this.x = Math.round(this.x)),
      (this.y = Math.round(this.y)),
      (this.z = Math.round(this.z)),
      this
    );
  }
  roundToZero() {
    return (
      (this.x = Math.trunc(this.x)),
      (this.y = Math.trunc(this.y)),
      (this.z = Math.trunc(this.z)),
      this
    );
  }
  negate() {
    return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, t) {
    return (
      (this.x += (e.x - this.x) * t),
      (this.y += (e.y - this.y) * t),
      (this.z += (e.z - this.z) * t),
      this
    );
  }
  lerpVectors(e, t, i) {
    return (
      (this.x = e.x + (t.x - e.x) * i),
      (this.y = e.y + (t.y - e.y) * i),
      (this.z = e.z + (t.z - e.z) * i),
      this
    );
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, t) {
    const i = e.x,
      r = e.y,
      s = e.z,
      u = t.x,
      c = t.y,
      h = t.z;
    return (
      (this.x = r * h - s * c),
      (this.y = s * u - i * h),
      (this.z = i * c - r * u),
      this
    );
  }
  projectOnVector(e) {
    const t = e.lengthSq();
    if (t === 0) return this.set(0, 0, 0);
    const i = e.dot(this) / t;
    return this.copy(e).multiplyScalar(i);
  }
  projectOnPlane(e) {
    return B0.copy(this).projectOnVector(e), this.sub(B0);
  }
  reflect(e) {
    return this.sub(B0.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const t = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (t === 0) return Math.PI / 2;
    const i = this.dot(e) / t;
    return Math.acos(Dn(i, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const t = this.x - e.x,
      i = this.y - e.y,
      r = this.z - e.z;
    return t * t + i * i + r * r;
  }
  manhattanDistanceTo(e) {
    return (
      Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    );
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, t, i) {
    const r = Math.sin(t) * e;
    return (
      (this.x = r * Math.sin(i)),
      (this.y = Math.cos(t) * e),
      (this.z = r * Math.cos(i)),
      this
    );
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, t, i) {
    return (
      (this.x = e * Math.sin(t)), (this.y = i), (this.z = e * Math.cos(t)), this
    );
  }
  setFromMatrixPosition(e) {
    const t = e.elements;
    return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
  }
  setFromMatrixScale(e) {
    const t = this.setFromMatrixColumn(e, 0).length(),
      i = this.setFromMatrixColumn(e, 1).length(),
      r = this.setFromMatrixColumn(e, 2).length();
    return (this.x = t), (this.y = i), (this.z = r), this;
  }
  setFromMatrixColumn(e, t) {
    return this.fromArray(e.elements, t * 4);
  }
  setFromMatrix3Column(e, t) {
    return this.fromArray(e.elements, t * 3);
  }
  setFromEuler(e) {
    return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
  }
  setFromColor(e) {
    return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, t = 0) {
    return (this.x = e[t]), (this.y = e[t + 1]), (this.z = e[t + 2]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e;
  }
  fromBufferAttribute(e, t) {
    return (
      (this.x = e.getX(t)), (this.y = e.getY(t)), (this.z = e.getZ(t)), this
    );
  }
  random() {
    return (
      (this.x = Math.random()),
      (this.y = Math.random()),
      (this.z = Math.random()),
      this
    );
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2,
      t = Math.random() * Math.PI * 2,
      i = Math.sqrt(1 - e ** 2);
    return (
      (this.x = i * Math.cos(t)), (this.y = i * Math.sin(t)), (this.z = e), this
    );
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const B0 = new te(),
  Rh = new ks();
class Xs {
  constructor(
    e = new te(1 / 0, 1 / 0, 1 / 0),
    t = new te(-1 / 0, -1 / 0, -1 / 0)
  ) {
    (this.isBox3 = !0), (this.min = e), (this.max = t);
  }
  set(e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }
  setFromArray(e) {
    this.makeEmpty();
    for (let t = 0, i = e.length; t < i; t += 3)
      this.expandByPoint(Sr.fromArray(e, t));
    return this;
  }
  setFromBufferAttribute(e) {
    this.makeEmpty();
    for (let t = 0, i = e.count; t < i; t++)
      this.expandByPoint(Sr.fromBufferAttribute(e, t));
    return this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let t = 0, i = e.length; t < i; t++) this.expandByPoint(e[t]);
    return this;
  }
  setFromCenterAndSize(e, t) {
    const i = Sr.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(i), this.max.copy(e).add(i), this;
  }
  setFromObject(e, t = !1) {
    return this.makeEmpty(), this.expandByObject(e, t);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return (
      (this.min.x = this.min.y = this.min.z = 1 / 0),
      (this.max.x = this.max.y = this.max.z = -1 / 0),
      this
    );
  }
  isEmpty() {
    return (
      this.max.x < this.min.x ||
      this.max.y < this.min.y ||
      this.max.z < this.min.z
    );
  }
  getCenter(e) {
    return this.isEmpty()
      ? e.set(0, 0, 0)
      : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  expandByObject(e, t = !1) {
    if ((e.updateWorldMatrix(!1, !1), e.boundingBox !== void 0))
      e.boundingBox === null && e.computeBoundingBox(),
        ro.copy(e.boundingBox),
        ro.applyMatrix4(e.matrixWorld),
        this.union(ro);
    else {
      const r = e.geometry;
      if (r !== void 0)
        if (t && r.attributes !== void 0 && r.attributes.position !== void 0) {
          const s = r.attributes.position;
          for (let u = 0, c = s.count; u < c; u++)
            Sr.fromBufferAttribute(s, u).applyMatrix4(e.matrixWorld),
              this.expandByPoint(Sr);
        } else
          r.boundingBox === null && r.computeBoundingBox(),
            ro.copy(r.boundingBox),
            ro.applyMatrix4(e.matrixWorld),
            this.union(ro);
    }
    const i = e.children;
    for (let r = 0, s = i.length; r < s; r++) this.expandByObject(i[r], t);
    return this;
  }
  containsPoint(e) {
    return !(
      e.x < this.min.x ||
      e.x > this.max.x ||
      e.y < this.min.y ||
      e.y > this.max.y ||
      e.z < this.min.z ||
      e.z > this.max.z
    );
  }
  containsBox(e) {
    return (
      this.min.x <= e.min.x &&
      e.max.x <= this.max.x &&
      this.min.y <= e.min.y &&
      e.max.y <= this.max.y &&
      this.min.z <= e.min.z &&
      e.max.z <= this.max.z
    );
  }
  getParameter(e, t) {
    return t.set(
      (e.x - this.min.x) / (this.max.x - this.min.x),
      (e.y - this.min.y) / (this.max.y - this.min.y),
      (e.z - this.min.z) / (this.max.z - this.min.z)
    );
  }
  intersectsBox(e) {
    return !(
      e.max.x < this.min.x ||
      e.min.x > this.max.x ||
      e.max.y < this.min.y ||
      e.min.y > this.max.y ||
      e.max.z < this.min.z ||
      e.min.z > this.max.z
    );
  }
  intersectsSphere(e) {
    return (
      this.clampPoint(e.center, Sr),
      Sr.distanceToSquared(e.center) <= e.radius * e.radius
    );
  }
  intersectsPlane(e) {
    let t, i;
    return (
      e.normal.x > 0
        ? ((t = e.normal.x * this.min.x), (i = e.normal.x * this.max.x))
        : ((t = e.normal.x * this.max.x), (i = e.normal.x * this.min.x)),
      e.normal.y > 0
        ? ((t += e.normal.y * this.min.y), (i += e.normal.y * this.max.y))
        : ((t += e.normal.y * this.max.y), (i += e.normal.y * this.min.y)),
      e.normal.z > 0
        ? ((t += e.normal.z * this.min.z), (i += e.normal.z * this.max.z))
        : ((t += e.normal.z * this.max.z), (i += e.normal.z * this.min.z)),
      t <= -e.constant && i >= -e.constant
    );
  }
  intersectsTriangle(e) {
    if (this.isEmpty()) return !1;
    this.getCenter(aa),
      AA.subVectors(this.max, aa),
      so.subVectors(e.a, aa),
      oo.subVectors(e.b, aa),
      ao.subVectors(e.c, aa),
      Qr.subVectors(oo, so),
      $r.subVectors(ao, oo),
      Es.subVectors(so, ao);
    let t = [
      0,
      -Qr.z,
      Qr.y,
      0,
      -$r.z,
      $r.y,
      0,
      -Es.z,
      Es.y,
      Qr.z,
      0,
      -Qr.x,
      $r.z,
      0,
      -$r.x,
      Es.z,
      0,
      -Es.x,
      -Qr.y,
      Qr.x,
      0,
      -$r.y,
      $r.x,
      0,
      -Es.y,
      Es.x,
      0,
    ];
    return !N0(t, so, oo, ao, AA) ||
      ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !N0(t, so, oo, ao, AA))
      ? !1
      : (lA.crossVectors(Qr, $r),
        (t = [lA.x, lA.y, lA.z]),
        N0(t, so, oo, ao, AA));
  }
  clampPoint(e, t) {
    return t.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return this.clampPoint(e, Sr).distanceTo(e);
  }
  getBoundingSphere(e) {
    return (
      this.isEmpty()
        ? e.makeEmpty()
        : (this.getCenter(e.center),
          (e.radius = this.getSize(Sr).length() * 0.5)),
      e
    );
  }
  intersect(e) {
    return (
      this.min.max(e.min),
      this.max.min(e.max),
      this.isEmpty() && this.makeEmpty(),
      this
    );
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  applyMatrix4(e) {
    return this.isEmpty()
      ? this
      : (wr[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
        wr[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
        wr[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
        wr[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
        wr[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
        wr[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
        wr[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
        wr[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
        this.setFromPoints(wr),
        this);
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const wr = [
    new te(),
    new te(),
    new te(),
    new te(),
    new te(),
    new te(),
    new te(),
    new te(),
  ],
  Sr = new te(),
  ro = new Xs(),
  so = new te(),
  oo = new te(),
  ao = new te(),
  Qr = new te(),
  $r = new te(),
  Es = new te(),
  aa = new te(),
  AA = new te(),
  lA = new te(),
  ws = new te();
function N0(n, e, t, i, r) {
  for (let s = 0, u = n.length - 3; s <= u; s += 3) {
    ws.fromArray(n, s);
    const c =
        r.x * Math.abs(ws.x) + r.y * Math.abs(ws.y) + r.z * Math.abs(ws.z),
      h = e.dot(ws),
      p = t.dot(ws),
      g = i.dot(ws);
    if (Math.max(-Math.max(h, p, g), Math.min(h, p, g)) > c) return !1;
  }
  return !0;
}
const Kv = new Xs(),
  Aa = new te(),
  F0 = new te();
class Qo {
  constructor(e = new te(), t = -1) {
    (this.center = e), (this.radius = t);
  }
  set(e, t) {
    return this.center.copy(e), (this.radius = t), this;
  }
  setFromPoints(e, t) {
    const i = this.center;
    t !== void 0 ? i.copy(t) : Kv.setFromPoints(e).getCenter(i);
    let r = 0;
    for (let s = 0, u = e.length; s < u; s++)
      r = Math.max(r, i.distanceToSquared(e[s]));
    return (this.radius = Math.sqrt(r)), this;
  }
  copy(e) {
    return this.center.copy(e.center), (this.radius = e.radius), this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), (this.radius = -1), this;
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const t = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= t * t;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, t) {
    const i = this.center.distanceToSquared(e);
    return (
      t.copy(e),
      i > this.radius * this.radius &&
        (t.sub(this.center).normalize(),
        t.multiplyScalar(this.radius).add(this.center)),
      t
    );
  }
  getBoundingBox(e) {
    return this.isEmpty()
      ? (e.makeEmpty(), e)
      : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return (
      this.center.applyMatrix4(e),
      (this.radius = this.radius * e.getMaxScaleOnAxis()),
      this
    );
  }
  translate(e) {
    return this.center.add(e), this;
  }
  expandByPoint(e) {
    if (this.isEmpty()) return this.center.copy(e), (this.radius = 0), this;
    Aa.subVectors(e, this.center);
    const t = Aa.lengthSq();
    if (t > this.radius * this.radius) {
      const i = Math.sqrt(t),
        r = (i - this.radius) * 0.5;
      this.center.addScaledVector(Aa, r / i), (this.radius += r);
    }
    return this;
  }
  union(e) {
    return e.isEmpty()
      ? this
      : this.isEmpty()
      ? (this.copy(e), this)
      : (this.center.equals(e.center) === !0
          ? (this.radius = Math.max(this.radius, e.radius))
          : (F0.subVectors(e.center, this.center).setLength(e.radius),
            this.expandByPoint(Aa.copy(e.center).add(F0)),
            this.expandByPoint(Aa.copy(e.center).sub(F0))),
        this);
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Tr = new te(),
  k0 = new te(),
  uA = new te(),
  Yr = new te(),
  z0 = new te(),
  cA = new te(),
  G0 = new te();
class Yl {
  constructor(e = new te(), t = new te(0, 0, -1)) {
    (this.origin = e), (this.direction = t);
  }
  set(e, t) {
    return this.origin.copy(e), this.direction.copy(t), this;
  }
  copy(e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }
  at(e, t) {
    return t.copy(this.origin).addScaledVector(this.direction, e);
  }
  lookAt(e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }
  recast(e) {
    return this.origin.copy(this.at(e, Tr)), this;
  }
  closestPointToPoint(e, t) {
    t.subVectors(e, this.origin);
    const i = t.dot(this.direction);
    return i < 0
      ? t.copy(this.origin)
      : t.copy(this.origin).addScaledVector(this.direction, i);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const t = Tr.subVectors(e, this.origin).dot(this.direction);
    return t < 0
      ? this.origin.distanceToSquared(e)
      : (Tr.copy(this.origin).addScaledVector(this.direction, t),
        Tr.distanceToSquared(e));
  }
  distanceSqToSegment(e, t, i, r) {
    k0.copy(e).add(t).multiplyScalar(0.5),
      uA.copy(t).sub(e).normalize(),
      Yr.copy(this.origin).sub(k0);
    const s = e.distanceTo(t) * 0.5,
      u = -this.direction.dot(uA),
      c = Yr.dot(this.direction),
      h = -Yr.dot(uA),
      p = Yr.lengthSq(),
      g = Math.abs(1 - u * u);
    let v, x, M, w;
    if (g > 0)
      if (((v = u * h - c), (x = u * c - h), (w = s * g), v >= 0))
        if (x >= -w)
          if (x <= w) {
            const C = 1 / g;
            (v *= C),
              (x *= C),
              (M = v * (v + u * x + 2 * c) + x * (u * v + x + 2 * h) + p);
          } else
            (x = s),
              (v = Math.max(0, -(u * x + c))),
              (M = -v * v + x * (x + 2 * h) + p);
        else
          (x = -s),
            (v = Math.max(0, -(u * x + c))),
            (M = -v * v + x * (x + 2 * h) + p);
      else
        x <= -w
          ? ((v = Math.max(0, -(-u * s + c))),
            (x = v > 0 ? -s : Math.min(Math.max(-s, -h), s)),
            (M = -v * v + x * (x + 2 * h) + p))
          : x <= w
          ? ((v = 0),
            (x = Math.min(Math.max(-s, -h), s)),
            (M = x * (x + 2 * h) + p))
          : ((v = Math.max(0, -(u * s + c))),
            (x = v > 0 ? s : Math.min(Math.max(-s, -h), s)),
            (M = -v * v + x * (x + 2 * h) + p));
    else
      (x = u > 0 ? -s : s),
        (v = Math.max(0, -(u * x + c))),
        (M = -v * v + x * (x + 2 * h) + p);
    return (
      i && i.copy(this.origin).addScaledVector(this.direction, v),
      r && r.copy(k0).addScaledVector(uA, x),
      M
    );
  }
  intersectSphere(e, t) {
    Tr.subVectors(e.center, this.origin);
    const i = Tr.dot(this.direction),
      r = Tr.dot(Tr) - i * i,
      s = e.radius * e.radius;
    if (r > s) return null;
    const u = Math.sqrt(s - r),
      c = i - u,
      h = i + u;
    return h < 0 ? null : c < 0 ? this.at(h, t) : this.at(c, t);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const t = e.normal.dot(this.direction);
    if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const i = -(this.origin.dot(e.normal) + e.constant) / t;
    return i >= 0 ? i : null;
  }
  intersectPlane(e, t) {
    const i = this.distanceToPlane(e);
    return i === null ? null : this.at(i, t);
  }
  intersectsPlane(e) {
    const t = e.distanceToPoint(this.origin);
    return t === 0 || e.normal.dot(this.direction) * t < 0;
  }
  intersectBox(e, t) {
    let i, r, s, u, c, h;
    const p = 1 / this.direction.x,
      g = 1 / this.direction.y,
      v = 1 / this.direction.z,
      x = this.origin;
    return (
      p >= 0
        ? ((i = (e.min.x - x.x) * p), (r = (e.max.x - x.x) * p))
        : ((i = (e.max.x - x.x) * p), (r = (e.min.x - x.x) * p)),
      g >= 0
        ? ((s = (e.min.y - x.y) * g), (u = (e.max.y - x.y) * g))
        : ((s = (e.max.y - x.y) * g), (u = (e.min.y - x.y) * g)),
      i > u ||
      s > r ||
      ((s > i || isNaN(i)) && (i = s),
      (u < r || isNaN(r)) && (r = u),
      v >= 0
        ? ((c = (e.min.z - x.z) * v), (h = (e.max.z - x.z) * v))
        : ((c = (e.max.z - x.z) * v), (h = (e.min.z - x.z) * v)),
      i > h || c > r) ||
      ((c > i || i !== i) && (i = c), (h < r || r !== r) && (r = h), r < 0)
        ? null
        : this.at(i >= 0 ? i : r, t)
    );
  }
  intersectsBox(e) {
    return this.intersectBox(e, Tr) !== null;
  }
  intersectTriangle(e, t, i, r, s) {
    z0.subVectors(t, e), cA.subVectors(i, e), G0.crossVectors(z0, cA);
    let u = this.direction.dot(G0),
      c;
    if (u > 0) {
      if (r) return null;
      c = 1;
    } else if (u < 0) (c = -1), (u = -u);
    else return null;
    Yr.subVectors(this.origin, e);
    const h = c * this.direction.dot(cA.crossVectors(Yr, cA));
    if (h < 0) return null;
    const p = c * this.direction.dot(z0.cross(Yr));
    if (p < 0 || h + p > u) return null;
    const g = -c * Yr.dot(G0);
    return g < 0 ? null : this.at(g / u, s);
  }
  applyMatrix4(e) {
    return (
      this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
    );
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class dn {
  constructor(e, t, i, r, s, u, c, h, p, g, v, x, M, w, C, E) {
    (dn.prototype.isMatrix4 = !0),
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
      e !== void 0 && this.set(e, t, i, r, s, u, c, h, p, g, v, x, M, w, C, E);
  }
  set(e, t, i, r, s, u, c, h, p, g, v, x, M, w, C, E) {
    const b = this.elements;
    return (
      (b[0] = e),
      (b[4] = t),
      (b[8] = i),
      (b[12] = r),
      (b[1] = s),
      (b[5] = u),
      (b[9] = c),
      (b[13] = h),
      (b[2] = p),
      (b[6] = g),
      (b[10] = v),
      (b[14] = x),
      (b[3] = M),
      (b[7] = w),
      (b[11] = C),
      (b[15] = E),
      this
    );
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new dn().fromArray(this.elements);
  }
  copy(e) {
    const t = this.elements,
      i = e.elements;
    return (
      (t[0] = i[0]),
      (t[1] = i[1]),
      (t[2] = i[2]),
      (t[3] = i[3]),
      (t[4] = i[4]),
      (t[5] = i[5]),
      (t[6] = i[6]),
      (t[7] = i[7]),
      (t[8] = i[8]),
      (t[9] = i[9]),
      (t[10] = i[10]),
      (t[11] = i[11]),
      (t[12] = i[12]),
      (t[13] = i[13]),
      (t[14] = i[14]),
      (t[15] = i[15]),
      this
    );
  }
  copyPosition(e) {
    const t = this.elements,
      i = e.elements;
    return (t[12] = i[12]), (t[13] = i[13]), (t[14] = i[14]), this;
  }
  setFromMatrix3(e) {
    const t = e.elements;
    return (
      this.set(
        t[0],
        t[3],
        t[6],
        0,
        t[1],
        t[4],
        t[7],
        0,
        t[2],
        t[5],
        t[8],
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractBasis(e, t, i) {
    return (
      e.setFromMatrixColumn(this, 0),
      t.setFromMatrixColumn(this, 1),
      i.setFromMatrixColumn(this, 2),
      this
    );
  }
  makeBasis(e, t, i) {
    return (
      this.set(
        e.x,
        t.x,
        i.x,
        0,
        e.y,
        t.y,
        i.y,
        0,
        e.z,
        t.z,
        i.z,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  extractRotation(e) {
    const t = this.elements,
      i = e.elements,
      r = 1 / Ao.setFromMatrixColumn(e, 0).length(),
      s = 1 / Ao.setFromMatrixColumn(e, 1).length(),
      u = 1 / Ao.setFromMatrixColumn(e, 2).length();
    return (
      (t[0] = i[0] * r),
      (t[1] = i[1] * r),
      (t[2] = i[2] * r),
      (t[3] = 0),
      (t[4] = i[4] * s),
      (t[5] = i[5] * s),
      (t[6] = i[6] * s),
      (t[7] = 0),
      (t[8] = i[8] * u),
      (t[9] = i[9] * u),
      (t[10] = i[10] * u),
      (t[11] = 0),
      (t[12] = 0),
      (t[13] = 0),
      (t[14] = 0),
      (t[15] = 1),
      this
    );
  }
  makeRotationFromEuler(e) {
    const t = this.elements,
      i = e.x,
      r = e.y,
      s = e.z,
      u = Math.cos(i),
      c = Math.sin(i),
      h = Math.cos(r),
      p = Math.sin(r),
      g = Math.cos(s),
      v = Math.sin(s);
    if (e.order === "XYZ") {
      const x = u * g,
        M = u * v,
        w = c * g,
        C = c * v;
      (t[0] = h * g),
        (t[4] = -h * v),
        (t[8] = p),
        (t[1] = M + w * p),
        (t[5] = x - C * p),
        (t[9] = -c * h),
        (t[2] = C - x * p),
        (t[6] = w + M * p),
        (t[10] = u * h);
    } else if (e.order === "YXZ") {
      const x = h * g,
        M = h * v,
        w = p * g,
        C = p * v;
      (t[0] = x + C * c),
        (t[4] = w * c - M),
        (t[8] = u * p),
        (t[1] = u * v),
        (t[5] = u * g),
        (t[9] = -c),
        (t[2] = M * c - w),
        (t[6] = C + x * c),
        (t[10] = u * h);
    } else if (e.order === "ZXY") {
      const x = h * g,
        M = h * v,
        w = p * g,
        C = p * v;
      (t[0] = x - C * c),
        (t[4] = -u * v),
        (t[8] = w + M * c),
        (t[1] = M + w * c),
        (t[5] = u * g),
        (t[9] = C - x * c),
        (t[2] = -u * p),
        (t[6] = c),
        (t[10] = u * h);
    } else if (e.order === "ZYX") {
      const x = u * g,
        M = u * v,
        w = c * g,
        C = c * v;
      (t[0] = h * g),
        (t[4] = w * p - M),
        (t[8] = x * p + C),
        (t[1] = h * v),
        (t[5] = C * p + x),
        (t[9] = M * p - w),
        (t[2] = -p),
        (t[6] = c * h),
        (t[10] = u * h);
    } else if (e.order === "YZX") {
      const x = u * h,
        M = u * p,
        w = c * h,
        C = c * p;
      (t[0] = h * g),
        (t[4] = C - x * v),
        (t[8] = w * v + M),
        (t[1] = v),
        (t[5] = u * g),
        (t[9] = -c * g),
        (t[2] = -p * g),
        (t[6] = M * v + w),
        (t[10] = x - C * v);
    } else if (e.order === "XZY") {
      const x = u * h,
        M = u * p,
        w = c * h,
        C = c * p;
      (t[0] = h * g),
        (t[4] = -v),
        (t[8] = p * g),
        (t[1] = x * v + C),
        (t[5] = u * g),
        (t[9] = M * v - w),
        (t[2] = w * v - M),
        (t[6] = c * g),
        (t[10] = C * v + x);
    }
    return (
      (t[3] = 0),
      (t[7] = 0),
      (t[11] = 0),
      (t[12] = 0),
      (t[13] = 0),
      (t[14] = 0),
      (t[15] = 1),
      this
    );
  }
  makeRotationFromQuaternion(e) {
    return this.compose(Jv, e, e_);
  }
  lookAt(e, t, i) {
    const r = this.elements;
    return (
      Mi.subVectors(e, t),
      Mi.lengthSq() === 0 && (Mi.z = 1),
      Mi.normalize(),
      Zr.crossVectors(i, Mi),
      Zr.lengthSq() === 0 &&
        (Math.abs(i.z) === 1 ? (Mi.x += 1e-4) : (Mi.z += 1e-4),
        Mi.normalize(),
        Zr.crossVectors(i, Mi)),
      Zr.normalize(),
      fA.crossVectors(Mi, Zr),
      (r[0] = Zr.x),
      (r[4] = fA.x),
      (r[8] = Mi.x),
      (r[1] = Zr.y),
      (r[5] = fA.y),
      (r[9] = Mi.y),
      (r[2] = Zr.z),
      (r[6] = fA.z),
      (r[10] = Mi.z),
      this
    );
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, t) {
    const i = e.elements,
      r = t.elements,
      s = this.elements,
      u = i[0],
      c = i[4],
      h = i[8],
      p = i[12],
      g = i[1],
      v = i[5],
      x = i[9],
      M = i[13],
      w = i[2],
      C = i[6],
      E = i[10],
      b = i[14],
      L = i[3],
      S = i[7],
      R = i[11],
      U = i[15],
      q = r[0],
      I = r[4],
      N = r[8],
      D = r[12],
      O = r[1],
      k = r[5],
      $ = r[9],
      H = r[13],
      Q = r[2],
      F = r[6],
      J = r[10],
      K = r[14],
      ie = r[3],
      he = r[7],
      ce = r[11],
      oe = r[15];
    return (
      (s[0] = u * q + c * O + h * Q + p * ie),
      (s[4] = u * I + c * k + h * F + p * he),
      (s[8] = u * N + c * $ + h * J + p * ce),
      (s[12] = u * D + c * H + h * K + p * oe),
      (s[1] = g * q + v * O + x * Q + M * ie),
      (s[5] = g * I + v * k + x * F + M * he),
      (s[9] = g * N + v * $ + x * J + M * ce),
      (s[13] = g * D + v * H + x * K + M * oe),
      (s[2] = w * q + C * O + E * Q + b * ie),
      (s[6] = w * I + C * k + E * F + b * he),
      (s[10] = w * N + C * $ + E * J + b * ce),
      (s[14] = w * D + C * H + E * K + b * oe),
      (s[3] = L * q + S * O + R * Q + U * ie),
      (s[7] = L * I + S * k + R * F + U * he),
      (s[11] = L * N + S * $ + R * J + U * ce),
      (s[15] = L * D + S * H + R * K + U * oe),
      this
    );
  }
  multiplyScalar(e) {
    const t = this.elements;
    return (
      (t[0] *= e),
      (t[4] *= e),
      (t[8] *= e),
      (t[12] *= e),
      (t[1] *= e),
      (t[5] *= e),
      (t[9] *= e),
      (t[13] *= e),
      (t[2] *= e),
      (t[6] *= e),
      (t[10] *= e),
      (t[14] *= e),
      (t[3] *= e),
      (t[7] *= e),
      (t[11] *= e),
      (t[15] *= e),
      this
    );
  }
  determinant() {
    const e = this.elements,
      t = e[0],
      i = e[4],
      r = e[8],
      s = e[12],
      u = e[1],
      c = e[5],
      h = e[9],
      p = e[13],
      g = e[2],
      v = e[6],
      x = e[10],
      M = e[14],
      w = e[3],
      C = e[7],
      E = e[11],
      b = e[15];
    return (
      w *
        (+s * h * v -
          r * p * v -
          s * c * x +
          i * p * x +
          r * c * M -
          i * h * M) +
      C *
        (+t * h * M -
          t * p * x +
          s * u * x -
          r * u * M +
          r * p * g -
          s * h * g) +
      E *
        (+t * p * v -
          t * c * M -
          s * u * v +
          i * u * M +
          s * c * g -
          i * p * g) +
      b *
        (-r * c * g - t * h * v + t * c * x + r * u * v - i * u * x + i * h * g)
    );
  }
  transpose() {
    const e = this.elements;
    let t;
    return (
      (t = e[1]),
      (e[1] = e[4]),
      (e[4] = t),
      (t = e[2]),
      (e[2] = e[8]),
      (e[8] = t),
      (t = e[6]),
      (e[6] = e[9]),
      (e[9] = t),
      (t = e[3]),
      (e[3] = e[12]),
      (e[12] = t),
      (t = e[7]),
      (e[7] = e[13]),
      (e[13] = t),
      (t = e[11]),
      (e[11] = e[14]),
      (e[14] = t),
      this
    );
  }
  setPosition(e, t, i) {
    const r = this.elements;
    return (
      e.isVector3
        ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
        : ((r[12] = e), (r[13] = t), (r[14] = i)),
      this
    );
  }
  invert() {
    const e = this.elements,
      t = e[0],
      i = e[1],
      r = e[2],
      s = e[3],
      u = e[4],
      c = e[5],
      h = e[6],
      p = e[7],
      g = e[8],
      v = e[9],
      x = e[10],
      M = e[11],
      w = e[12],
      C = e[13],
      E = e[14],
      b = e[15],
      L = v * E * p - C * x * p + C * h * M - c * E * M - v * h * b + c * x * b,
      S = w * x * p - g * E * p - w * h * M + u * E * M + g * h * b - u * x * b,
      R = g * C * p - w * v * p + w * c * M - u * C * M - g * c * b + u * v * b,
      U = w * v * h - g * C * h - w * c * x + u * C * x + g * c * E - u * v * E,
      q = t * L + i * S + r * R + s * U;
    if (q === 0)
      return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const I = 1 / q;
    return (
      (e[0] = L * I),
      (e[1] =
        (C * x * s -
          v * E * s -
          C * r * M +
          i * E * M +
          v * r * b -
          i * x * b) *
        I),
      (e[2] =
        (c * E * s -
          C * h * s +
          C * r * p -
          i * E * p -
          c * r * b +
          i * h * b) *
        I),
      (e[3] =
        (v * h * s -
          c * x * s -
          v * r * p +
          i * x * p +
          c * r * M -
          i * h * M) *
        I),
      (e[4] = S * I),
      (e[5] =
        (g * E * s -
          w * x * s +
          w * r * M -
          t * E * M -
          g * r * b +
          t * x * b) *
        I),
      (e[6] =
        (w * h * s -
          u * E * s -
          w * r * p +
          t * E * p +
          u * r * b -
          t * h * b) *
        I),
      (e[7] =
        (u * x * s -
          g * h * s +
          g * r * p -
          t * x * p -
          u * r * M +
          t * h * M) *
        I),
      (e[8] = R * I),
      (e[9] =
        (w * v * s -
          g * C * s -
          w * i * M +
          t * C * M +
          g * i * b -
          t * v * b) *
        I),
      (e[10] =
        (u * C * s -
          w * c * s +
          w * i * p -
          t * C * p -
          u * i * b +
          t * c * b) *
        I),
      (e[11] =
        (g * c * s -
          u * v * s -
          g * i * p +
          t * v * p +
          u * i * M -
          t * c * M) *
        I),
      (e[12] = U * I),
      (e[13] =
        (g * C * r -
          w * v * r +
          w * i * x -
          t * C * x -
          g * i * E +
          t * v * E) *
        I),
      (e[14] =
        (w * c * r -
          u * C * r -
          w * i * h +
          t * C * h +
          u * i * E -
          t * c * E) *
        I),
      (e[15] =
        (u * v * r -
          g * c * r +
          g * i * h -
          t * v * h -
          u * i * x +
          t * c * x) *
        I),
      this
    );
  }
  scale(e) {
    const t = this.elements,
      i = e.x,
      r = e.y,
      s = e.z;
    return (
      (t[0] *= i),
      (t[4] *= r),
      (t[8] *= s),
      (t[1] *= i),
      (t[5] *= r),
      (t[9] *= s),
      (t[2] *= i),
      (t[6] *= r),
      (t[10] *= s),
      (t[3] *= i),
      (t[7] *= r),
      (t[11] *= s),
      this
    );
  }
  getMaxScaleOnAxis() {
    const e = this.elements,
      t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
      i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
      r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(t, i, r));
  }
  makeTranslation(e, t, i) {
    return (
      e.isVector3
        ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
        : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, i, 0, 0, 0, 1),
      this
    );
  }
  makeRotationX(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, t, -i, 0, 0, i, t, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, 0, i, 0, 0, 1, 0, 0, -i, 0, t, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(e) {
    const t = Math.cos(e),
      i = Math.sin(e);
    return this.set(t, -i, 0, 0, i, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(e, t) {
    const i = Math.cos(t),
      r = Math.sin(t),
      s = 1 - i,
      u = e.x,
      c = e.y,
      h = e.z,
      p = s * u,
      g = s * c;
    return (
      this.set(
        p * u + i,
        p * c - r * h,
        p * h + r * c,
        0,
        p * c + r * h,
        g * c + i,
        g * h - r * u,
        0,
        p * h - r * c,
        g * h + r * u,
        s * h * h + i,
        0,
        0,
        0,
        0,
        1
      ),
      this
    );
  }
  makeScale(e, t, i) {
    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this;
  }
  makeShear(e, t, i, r, s, u) {
    return this.set(1, i, s, 0, e, 1, u, 0, t, r, 1, 0, 0, 0, 0, 1), this;
  }
  compose(e, t, i) {
    const r = this.elements,
      s = t._x,
      u = t._y,
      c = t._z,
      h = t._w,
      p = s + s,
      g = u + u,
      v = c + c,
      x = s * p,
      M = s * g,
      w = s * v,
      C = u * g,
      E = u * v,
      b = c * v,
      L = h * p,
      S = h * g,
      R = h * v,
      U = i.x,
      q = i.y,
      I = i.z;
    return (
      (r[0] = (1 - (C + b)) * U),
      (r[1] = (M + R) * U),
      (r[2] = (w - S) * U),
      (r[3] = 0),
      (r[4] = (M - R) * q),
      (r[5] = (1 - (x + b)) * q),
      (r[6] = (E + L) * q),
      (r[7] = 0),
      (r[8] = (w + S) * I),
      (r[9] = (E - L) * I),
      (r[10] = (1 - (x + C)) * I),
      (r[11] = 0),
      (r[12] = e.x),
      (r[13] = e.y),
      (r[14] = e.z),
      (r[15] = 1),
      this
    );
  }
  decompose(e, t, i) {
    const r = this.elements;
    let s = Ao.set(r[0], r[1], r[2]).length();
    const u = Ao.set(r[4], r[5], r[6]).length(),
      c = Ao.set(r[8], r[9], r[10]).length();
    this.determinant() < 0 && (s = -s),
      (e.x = r[12]),
      (e.y = r[13]),
      (e.z = r[14]),
      Xi.copy(this);
    const p = 1 / s,
      g = 1 / u,
      v = 1 / c;
    return (
      (Xi.elements[0] *= p),
      (Xi.elements[1] *= p),
      (Xi.elements[2] *= p),
      (Xi.elements[4] *= g),
      (Xi.elements[5] *= g),
      (Xi.elements[6] *= g),
      (Xi.elements[8] *= v),
      (Xi.elements[9] *= v),
      (Xi.elements[10] *= v),
      t.setFromRotationMatrix(Xi),
      (i.x = s),
      (i.y = u),
      (i.z = c),
      this
    );
  }
  makePerspective(e, t, i, r, s, u, c = Ur) {
    const h = this.elements,
      p = (2 * s) / (t - e),
      g = (2 * s) / (i - r),
      v = (t + e) / (t - e),
      x = (i + r) / (i - r);
    let M, w;
    if (c === Ur) (M = -(u + s) / (u - s)), (w = (-2 * u * s) / (u - s));
    else if (c === ll) (M = -u / (u - s)), (w = (-u * s) / (u - s));
    else
      throw new Error(
        "THREE.Matrix4.makePerspective(): Invalid coordinate system: " + c
      );
    return (
      (h[0] = p),
      (h[4] = 0),
      (h[8] = v),
      (h[12] = 0),
      (h[1] = 0),
      (h[5] = g),
      (h[9] = x),
      (h[13] = 0),
      (h[2] = 0),
      (h[6] = 0),
      (h[10] = M),
      (h[14] = w),
      (h[3] = 0),
      (h[7] = 0),
      (h[11] = -1),
      (h[15] = 0),
      this
    );
  }
  makeOrthographic(e, t, i, r, s, u, c = Ur) {
    const h = this.elements,
      p = 1 / (t - e),
      g = 1 / (i - r),
      v = 1 / (u - s),
      x = (t + e) * p,
      M = (i + r) * g;
    let w, C;
    if (c === Ur) (w = (u + s) * v), (C = -2 * v);
    else if (c === ll) (w = s * v), (C = -1 * v);
    else
      throw new Error(
        "THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + c
      );
    return (
      (h[0] = 2 * p),
      (h[4] = 0),
      (h[8] = 0),
      (h[12] = -x),
      (h[1] = 0),
      (h[5] = 2 * g),
      (h[9] = 0),
      (h[13] = -M),
      (h[2] = 0),
      (h[6] = 0),
      (h[10] = C),
      (h[14] = -w),
      (h[3] = 0),
      (h[7] = 0),
      (h[11] = 0),
      (h[15] = 1),
      this
    );
  }
  equals(e) {
    const t = this.elements,
      i = e.elements;
    for (let r = 0; r < 16; r++) if (t[r] !== i[r]) return !1;
    return !0;
  }
  fromArray(e, t = 0) {
    for (let i = 0; i < 16; i++) this.elements[i] = e[i + t];
    return this;
  }
  toArray(e = [], t = 0) {
    const i = this.elements;
    return (
      (e[t] = i[0]),
      (e[t + 1] = i[1]),
      (e[t + 2] = i[2]),
      (e[t + 3] = i[3]),
      (e[t + 4] = i[4]),
      (e[t + 5] = i[5]),
      (e[t + 6] = i[6]),
      (e[t + 7] = i[7]),
      (e[t + 8] = i[8]),
      (e[t + 9] = i[9]),
      (e[t + 10] = i[10]),
      (e[t + 11] = i[11]),
      (e[t + 12] = i[12]),
      (e[t + 13] = i[13]),
      (e[t + 14] = i[14]),
      (e[t + 15] = i[15]),
      e
    );
  }
}
const Ao = new te(),
  Xi = new dn(),
  Jv = new te(0, 0, 0),
  e_ = new te(1, 1, 1),
  Zr = new te(),
  fA = new te(),
  Mi = new te(),
  Ph = new dn(),
  Lh = new ks();
class fs {
  constructor(e = 0, t = 0, i = 0, r = fs.DEFAULT_ORDER) {
    (this.isEuler = !0),
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._order = r);
  }
  get x() {
    return this._x;
  }
  set x(e) {
    (this._x = e), this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    (this._y = e), this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    (this._z = e), this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(e) {
    (this._order = e), this._onChangeCallback();
  }
  set(e, t, i, r = this._order) {
    return (
      (this._x = e),
      (this._y = t),
      (this._z = i),
      (this._order = r),
      this._onChangeCallback(),
      this
    );
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return (
      (this._x = e._x),
      (this._y = e._y),
      (this._z = e._z),
      (this._order = e._order),
      this._onChangeCallback(),
      this
    );
  }
  setFromRotationMatrix(e, t = this._order, i = !0) {
    const r = e.elements,
      s = r[0],
      u = r[4],
      c = r[8],
      h = r[1],
      p = r[5],
      g = r[9],
      v = r[2],
      x = r[6],
      M = r[10];
    switch (t) {
      case "XYZ":
        (this._y = Math.asin(Dn(c, -1, 1))),
          Math.abs(c) < 0.9999999
            ? ((this._x = Math.atan2(-g, M)), (this._z = Math.atan2(-u, s)))
            : ((this._x = Math.atan2(x, p)), (this._z = 0));
        break;
      case "YXZ":
        (this._x = Math.asin(-Dn(g, -1, 1))),
          Math.abs(g) < 0.9999999
            ? ((this._y = Math.atan2(c, M)), (this._z = Math.atan2(h, p)))
            : ((this._y = Math.atan2(-v, s)), (this._z = 0));
        break;
      case "ZXY":
        (this._x = Math.asin(Dn(x, -1, 1))),
          Math.abs(x) < 0.9999999
            ? ((this._y = Math.atan2(-v, M)), (this._z = Math.atan2(-u, p)))
            : ((this._y = 0), (this._z = Math.atan2(h, s)));
        break;
      case "ZYX":
        (this._y = Math.asin(-Dn(v, -1, 1))),
          Math.abs(v) < 0.9999999
            ? ((this._x = Math.atan2(x, M)), (this._z = Math.atan2(h, s)))
            : ((this._x = 0), (this._z = Math.atan2(-u, p)));
        break;
      case "YZX":
        (this._z = Math.asin(Dn(h, -1, 1))),
          Math.abs(h) < 0.9999999
            ? ((this._x = Math.atan2(-g, p)), (this._y = Math.atan2(-v, s)))
            : ((this._x = 0), (this._y = Math.atan2(c, M)));
        break;
      case "XZY":
        (this._z = Math.asin(-Dn(u, -1, 1))),
          Math.abs(u) < 0.9999999
            ? ((this._x = Math.atan2(x, p)), (this._y = Math.atan2(c, s)))
            : ((this._x = Math.atan2(-g, M)), (this._y = 0));
        break;
      default:
        console.warn(
          "THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " +
            t
        );
    }
    return (this._order = t), i === !0 && this._onChangeCallback(), this;
  }
  setFromQuaternion(e, t, i) {
    return (
      Ph.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Ph, t, i)
    );
  }
  setFromVector3(e, t = this._order) {
    return this.set(e.x, e.y, e.z, t);
  }
  reorder(e) {
    return Lh.setFromEuler(this), this.setFromQuaternion(Lh, e);
  }
  equals(e) {
    return (
      e._x === this._x &&
      e._y === this._y &&
      e._z === this._z &&
      e._order === this._order
    );
  }
  fromArray(e) {
    return (
      (this._x = e[0]),
      (this._y = e[1]),
      (this._z = e[2]),
      e[3] !== void 0 && (this._order = e[3]),
      this._onChangeCallback(),
      this
    );
  }
  toArray(e = [], t = 0) {
    return (
      (e[t] = this._x),
      (e[t + 1] = this._y),
      (e[t + 2] = this._z),
      (e[t + 3] = this._order),
      e
    );
  }
  _onChange(e) {
    return (this._onChangeCallback = e), this;
  }
  _onChangeCallback() {}
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
}
fs.DEFAULT_ORDER = "XYZ";
class Ec {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = ((1 << e) | 0) >>> 0;
  }
  enable(e) {
    this.mask |= (1 << e) | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= (1 << e) | 0;
  }
  disable(e) {
    this.mask &= ~((1 << e) | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & ((1 << e) | 0)) !== 0;
  }
}
let t_ = 0;
const Dh = new te(),
  lo = new ks(),
  Cr = new dn(),
  hA = new te(),
  la = new te(),
  n_ = new te(),
  i_ = new ks(),
  Ih = new te(1, 0, 0),
  Oh = new te(0, 1, 0),
  qh = new te(0, 0, 1),
  r_ = { type: "added" },
  s_ = { type: "removed" };
class Rn extends js {
  constructor() {
    super(),
      (this.isObject3D = !0),
      Object.defineProperty(this, "id", { value: t_++ }),
      (this.uuid = pr()),
      (this.name = ""),
      (this.type = "Object3D"),
      (this.parent = null),
      (this.children = []),
      (this.up = Rn.DEFAULT_UP.clone());
    const e = new te(),
      t = new fs(),
      i = new ks(),
      r = new te(1, 1, 1);
    function s() {
      i.setFromEuler(t, !1);
    }
    function u() {
      t.setFromQuaternion(i, void 0, !1);
    }
    t._onChange(s),
      i._onChange(u),
      Object.defineProperties(this, {
        position: { configurable: !0, enumerable: !0, value: e },
        rotation: { configurable: !0, enumerable: !0, value: t },
        quaternion: { configurable: !0, enumerable: !0, value: i },
        scale: { configurable: !0, enumerable: !0, value: r },
        modelViewMatrix: { value: new dn() },
        normalMatrix: { value: new Gt() },
      }),
      (this.matrix = new dn()),
      (this.matrixWorld = new dn()),
      (this.matrixAutoUpdate = Rn.DEFAULT_MATRIX_AUTO_UPDATE),
      (this.matrixWorldNeedsUpdate = !1),
      (this.matrixWorldAutoUpdate = Rn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
      (this.layers = new Ec()),
      (this.visible = !0),
      (this.castShadow = !1),
      (this.receiveShadow = !1),
      (this.frustumCulled = !0),
      (this.renderOrder = 0),
      (this.animations = []),
      (this.userData = {});
  }
  onBeforeRender() {}
  onAfterRender() {}
  applyMatrix4(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      this.matrix.premultiply(e),
      this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(e) {
    return this.quaternion.premultiply(e), this;
  }
  setRotationFromAxisAngle(e, t) {
    this.quaternion.setFromAxisAngle(e, t);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, !0);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, t) {
    return lo.setFromAxisAngle(e, t), this.quaternion.multiply(lo), this;
  }
  rotateOnWorldAxis(e, t) {
    return lo.setFromAxisAngle(e, t), this.quaternion.premultiply(lo), this;
  }
  rotateX(e) {
    return this.rotateOnAxis(Ih, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(Oh, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(qh, e);
  }
  translateOnAxis(e, t) {
    return (
      Dh.copy(e).applyQuaternion(this.quaternion),
      this.position.add(Dh.multiplyScalar(t)),
      this
    );
  }
  translateX(e) {
    return this.translateOnAxis(Ih, e);
  }
  translateY(e) {
    return this.translateOnAxis(Oh, e);
  }
  translateZ(e) {
    return this.translateOnAxis(qh, e);
  }
  localToWorld(e) {
    return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      e.applyMatrix4(Cr.copy(this.matrixWorld).invert())
    );
  }
  lookAt(e, t, i) {
    e.isVector3 ? hA.copy(e) : hA.set(e, t, i);
    const r = this.parent;
    this.updateWorldMatrix(!0, !1),
      la.setFromMatrixPosition(this.matrixWorld),
      this.isCamera || this.isLight
        ? Cr.lookAt(la, hA, this.up)
        : Cr.lookAt(hA, la, this.up),
      this.quaternion.setFromRotationMatrix(Cr),
      r &&
        (Cr.extractRotation(r.matrixWorld),
        lo.setFromRotationMatrix(Cr),
        this.quaternion.premultiply(lo.invert()));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let t = 0; t < arguments.length; t++) this.add(arguments[t]);
      return this;
    }
    return e === this
      ? (console.error(
          "THREE.Object3D.add: object can't be added as a child of itself.",
          e
        ),
        this)
      : (e && e.isObject3D
          ? (e.parent !== null && e.parent.remove(e),
            (e.parent = this),
            this.children.push(e),
            e.dispatchEvent(r_))
          : console.error(
              "THREE.Object3D.add: object not an instance of THREE.Object3D.",
              e
            ),
        this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let i = 0; i < arguments.length; i++) this.remove(arguments[i]);
      return this;
    }
    const t = this.children.indexOf(e);
    return (
      t !== -1 &&
        ((e.parent = null), this.children.splice(t, 1), e.dispatchEvent(s_)),
      this
    );
  }
  removeFromParent() {
    const e = this.parent;
    return e !== null && e.remove(this), this;
  }
  clear() {
    return this.remove(...this.children);
  }
  attach(e) {
    return (
      this.updateWorldMatrix(!0, !1),
      Cr.copy(this.matrixWorld).invert(),
      e.parent !== null &&
        (e.parent.updateWorldMatrix(!0, !1), Cr.multiply(e.parent.matrixWorld)),
      e.applyMatrix4(Cr),
      this.add(e),
      e.updateWorldMatrix(!1, !0),
      this
    );
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, t) {
    if (this[e] === t) return this;
    for (let i = 0, r = this.children.length; i < r; i++) {
      const u = this.children[i].getObjectByProperty(e, t);
      if (u !== void 0) return u;
    }
  }
  getObjectsByProperty(e, t) {
    let i = [];
    this[e] === t && i.push(this);
    for (let r = 0, s = this.children.length; r < s; r++) {
      const u = this.children[r].getObjectsByProperty(e, t);
      u.length > 0 && (i = i.concat(u));
    }
    return i;
  }
  getWorldPosition(e) {
    return (
      this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld)
    );
  }
  getWorldQuaternion(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(la, e, n_), e
    );
  }
  getWorldScale(e) {
    return (
      this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(la, i_, e), e
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(t[8], t[9], t[10]).normalize();
  }
  raycast() {}
  traverse(e) {
    e(this);
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) t[i].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === !1) return;
    e(this);
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) t[i].traverseVisible(e);
  }
  traverseAncestors(e) {
    const t = this.parent;
    t !== null && (e(t), t.traverseAncestors(e));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale),
      (this.matrixWorldNeedsUpdate = !0);
  }
  updateMatrixWorld(e) {
    this.matrixAutoUpdate && this.updateMatrix(),
      (this.matrixWorldNeedsUpdate || e) &&
        (this.parent === null
          ? this.matrixWorld.copy(this.matrix)
          : this.matrixWorld.multiplyMatrices(
              this.parent.matrixWorld,
              this.matrix
            ),
        (this.matrixWorldNeedsUpdate = !1),
        (e = !0));
    const t = this.children;
    for (let i = 0, r = t.length; i < r; i++) {
      const s = t[i];
      (s.matrixWorldAutoUpdate === !0 || e === !0) && s.updateMatrixWorld(e);
    }
  }
  updateWorldMatrix(e, t) {
    const i = this.parent;
    if (
      (e === !0 &&
        i !== null &&
        i.matrixWorldAutoUpdate === !0 &&
        i.updateWorldMatrix(!0, !1),
      this.matrixAutoUpdate && this.updateMatrix(),
      this.parent === null
        ? this.matrixWorld.copy(this.matrix)
        : this.matrixWorld.multiplyMatrices(
            this.parent.matrixWorld,
            this.matrix
          ),
      t === !0)
    ) {
      const r = this.children;
      for (let s = 0, u = r.length; s < u; s++) {
        const c = r[s];
        c.matrixWorldAutoUpdate === !0 && c.updateWorldMatrix(!1, !0);
      }
    }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string",
      i = {};
    t &&
      ((e = {
        geometries: {},
        materials: {},
        textures: {},
        images: {},
        shapes: {},
        skeletons: {},
        animations: {},
        nodes: {},
      }),
      (i.metadata = {
        version: 4.6,
        type: "Object",
        generator: "Object3D.toJSON",
      }));
    const r = {};
    (r.uuid = this.uuid),
      (r.type = this.type),
      this.name !== "" && (r.name = this.name),
      this.castShadow === !0 && (r.castShadow = !0),
      this.receiveShadow === !0 && (r.receiveShadow = !0),
      this.visible === !1 && (r.visible = !1),
      this.frustumCulled === !1 && (r.frustumCulled = !1),
      this.renderOrder !== 0 && (r.renderOrder = this.renderOrder),
      Object.keys(this.userData).length > 0 && (r.userData = this.userData),
      (r.layers = this.layers.mask),
      (r.matrix = this.matrix.toArray()),
      (r.up = this.up.toArray()),
      this.matrixAutoUpdate === !1 && (r.matrixAutoUpdate = !1),
      this.isInstancedMesh &&
        ((r.type = "InstancedMesh"),
        (r.count = this.count),
        (r.instanceMatrix = this.instanceMatrix.toJSON()),
        this.instanceColor !== null &&
          (r.instanceColor = this.instanceColor.toJSON()));
    function s(c, h) {
      return c[h.uuid] === void 0 && (c[h.uuid] = h.toJSON(e)), h.uuid;
    }
    if (this.isScene)
      this.background &&
        (this.background.isColor
          ? (r.background = this.background.toJSON())
          : this.background.isTexture &&
            (r.background = this.background.toJSON(e).uuid)),
        this.environment &&
          this.environment.isTexture &&
          this.environment.isRenderTargetTexture !== !0 &&
          (r.environment = this.environment.toJSON(e).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      r.geometry = s(e.geometries, this.geometry);
      const c = this.geometry.parameters;
      if (c !== void 0 && c.shapes !== void 0) {
        const h = c.shapes;
        if (Array.isArray(h))
          for (let p = 0, g = h.length; p < g; p++) {
            const v = h[p];
            s(e.shapes, v);
          }
        else s(e.shapes, h);
      }
    }
    if (
      (this.isSkinnedMesh &&
        ((r.bindMode = this.bindMode),
        (r.bindMatrix = this.bindMatrix.toArray()),
        this.skeleton !== void 0 &&
          (s(e.skeletons, this.skeleton), (r.skeleton = this.skeleton.uuid))),
      this.material !== void 0)
    )
      if (Array.isArray(this.material)) {
        const c = [];
        for (let h = 0, p = this.material.length; h < p; h++)
          c.push(s(e.materials, this.material[h]));
        r.material = c;
      } else r.material = s(e.materials, this.material);
    if (this.children.length > 0) {
      r.children = [];
      for (let c = 0; c < this.children.length; c++)
        r.children.push(this.children[c].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      r.animations = [];
      for (let c = 0; c < this.animations.length; c++) {
        const h = this.animations[c];
        r.animations.push(s(e.animations, h));
      }
    }
    if (t) {
      const c = u(e.geometries),
        h = u(e.materials),
        p = u(e.textures),
        g = u(e.images),
        v = u(e.shapes),
        x = u(e.skeletons),
        M = u(e.animations),
        w = u(e.nodes);
      c.length > 0 && (i.geometries = c),
        h.length > 0 && (i.materials = h),
        p.length > 0 && (i.textures = p),
        g.length > 0 && (i.images = g),
        v.length > 0 && (i.shapes = v),
        x.length > 0 && (i.skeletons = x),
        M.length > 0 && (i.animations = M),
        w.length > 0 && (i.nodes = w);
    }
    return (i.object = r), i;
    function u(c) {
      const h = [];
      for (const p in c) {
        const g = c[p];
        delete g.metadata, h.push(g);
      }
      return h;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, t = !0) {
    if (
      ((this.name = e.name),
      this.up.copy(e.up),
      this.position.copy(e.position),
      (this.rotation.order = e.rotation.order),
      this.quaternion.copy(e.quaternion),
      this.scale.copy(e.scale),
      this.matrix.copy(e.matrix),
      this.matrixWorld.copy(e.matrixWorld),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
      (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
      (this.layers.mask = e.layers.mask),
      (this.visible = e.visible),
      (this.castShadow = e.castShadow),
      (this.receiveShadow = e.receiveShadow),
      (this.frustumCulled = e.frustumCulled),
      (this.renderOrder = e.renderOrder),
      (this.animations = e.animations.slice()),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      t === !0)
    )
      for (let i = 0; i < e.children.length; i++) {
        const r = e.children[i];
        this.add(r.clone());
      }
    return this;
  }
}
Rn.DEFAULT_UP = new te(0, 1, 0);
Rn.DEFAULT_MATRIX_AUTO_UPDATE = !0;
Rn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const Qi = new te(),
  Rr = new te(),
  H0 = new te(),
  Pr = new te(),
  uo = new te(),
  co = new te(),
  Uh = new te(),
  V0 = new te(),
  W0 = new te(),
  j0 = new te();
let dA = !1;
class Ji {
  constructor(e = new te(), t = new te(), i = new te()) {
    (this.a = e), (this.b = t), (this.c = i);
  }
  static getNormal(e, t, i, r) {
    r.subVectors(i, t), Qi.subVectors(e, t), r.cross(Qi);
    const s = r.lengthSq();
    return s > 0 ? r.multiplyScalar(1 / Math.sqrt(s)) : r.set(0, 0, 0);
  }
  static getBarycoord(e, t, i, r, s) {
    Qi.subVectors(r, t), Rr.subVectors(i, t), H0.subVectors(e, t);
    const u = Qi.dot(Qi),
      c = Qi.dot(Rr),
      h = Qi.dot(H0),
      p = Rr.dot(Rr),
      g = Rr.dot(H0),
      v = u * p - c * c;
    if (v === 0) return s.set(-2, -1, -1);
    const x = 1 / v,
      M = (p * h - c * g) * x,
      w = (u * g - c * h) * x;
    return s.set(1 - M - w, w, M);
  }
  static containsPoint(e, t, i, r) {
    return (
      this.getBarycoord(e, t, i, r, Pr),
      Pr.x >= 0 && Pr.y >= 0 && Pr.x + Pr.y <= 1
    );
  }
  static getUV(e, t, i, r, s, u, c, h) {
    return (
      dA === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (dA = !0)),
      this.getInterpolation(e, t, i, r, s, u, c, h)
    );
  }
  static getInterpolation(e, t, i, r, s, u, c, h) {
    return (
      this.getBarycoord(e, t, i, r, Pr),
      h.setScalar(0),
      h.addScaledVector(s, Pr.x),
      h.addScaledVector(u, Pr.y),
      h.addScaledVector(c, Pr.z),
      h
    );
  }
  static isFrontFacing(e, t, i, r) {
    return Qi.subVectors(i, t), Rr.subVectors(e, t), Qi.cross(Rr).dot(r) < 0;
  }
  set(e, t, i) {
    return this.a.copy(e), this.b.copy(t), this.c.copy(i), this;
  }
  setFromPointsAndIndices(e, t, i, r) {
    return this.a.copy(e[t]), this.b.copy(e[i]), this.c.copy(e[r]), this;
  }
  setFromAttributeAndIndices(e, t, i, r) {
    return (
      this.a.fromBufferAttribute(e, t),
      this.b.fromBufferAttribute(e, i),
      this.c.fromBufferAttribute(e, r),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }
  getArea() {
    return (
      Qi.subVectors(this.c, this.b),
      Rr.subVectors(this.a, this.b),
      Qi.cross(Rr).length() * 0.5
    );
  }
  getMidpoint(e) {
    return e
      .addVectors(this.a, this.b)
      .add(this.c)
      .multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return Ji.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, t) {
    return Ji.getBarycoord(e, this.a, this.b, this.c, t);
  }
  getUV(e, t, i, r, s) {
    return (
      dA === !1 &&
        (console.warn(
          "THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."
        ),
        (dA = !0)),
      Ji.getInterpolation(e, this.a, this.b, this.c, t, i, r, s)
    );
  }
  getInterpolation(e, t, i, r, s) {
    return Ji.getInterpolation(e, this.a, this.b, this.c, t, i, r, s);
  }
  containsPoint(e) {
    return Ji.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return Ji.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, t) {
    const i = this.a,
      r = this.b,
      s = this.c;
    let u, c;
    uo.subVectors(r, i), co.subVectors(s, i), V0.subVectors(e, i);
    const h = uo.dot(V0),
      p = co.dot(V0);
    if (h <= 0 && p <= 0) return t.copy(i);
    W0.subVectors(e, r);
    const g = uo.dot(W0),
      v = co.dot(W0);
    if (g >= 0 && v <= g) return t.copy(r);
    const x = h * v - g * p;
    if (x <= 0 && h >= 0 && g <= 0)
      return (u = h / (h - g)), t.copy(i).addScaledVector(uo, u);
    j0.subVectors(e, s);
    const M = uo.dot(j0),
      w = co.dot(j0);
    if (w >= 0 && M <= w) return t.copy(s);
    const C = M * p - h * w;
    if (C <= 0 && p >= 0 && w <= 0)
      return (c = p / (p - w)), t.copy(i).addScaledVector(co, c);
    const E = g * w - M * v;
    if (E <= 0 && v - g >= 0 && M - w >= 0)
      return (
        Uh.subVectors(s, r),
        (c = (v - g) / (v - g + (M - w))),
        t.copy(r).addScaledVector(Uh, c)
      );
    const b = 1 / (E + C + x);
    return (
      (u = C * b),
      (c = x * b),
      t.copy(i).addScaledVector(uo, u).addScaledVector(co, c)
    );
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
let o_ = 0;
class Qs extends js {
  constructor() {
    super(),
      (this.isMaterial = !0),
      Object.defineProperty(this, "id", { value: o_++ }),
      (this.uuid = pr()),
      (this.name = ""),
      (this.type = "Material"),
      (this.blending = As),
      (this.side = cs),
      (this.vertexColors = !1),
      (this.opacity = 1),
      (this.transparent = !1),
      (this.alphaHash = !1),
      (this.blendSrc = _1),
      (this.blendDst = x1),
      (this.blendEquation = wo),
      (this.blendSrcAlpha = null),
      (this.blendDstAlpha = null),
      (this.blendEquationAlpha = null),
      (this.depthFunc = Mu),
      (this.depthTest = !0),
      (this.depthWrite = !0),
      (this.stencilWriteMask = 255),
      (this.stencilFunc = vv),
      (this.stencilRef = 0),
      (this.stencilFuncMask = 255),
      (this.stencilFail = I0),
      (this.stencilZFail = I0),
      (this.stencilZPass = I0),
      (this.stencilWrite = !1),
      (this.clippingPlanes = null),
      (this.clipIntersection = !1),
      (this.clipShadows = !1),
      (this.shadowSide = null),
      (this.colorWrite = !0),
      (this.precision = null),
      (this.polygonOffset = !1),
      (this.polygonOffsetFactor = 0),
      (this.polygonOffsetUnits = 0),
      (this.dithering = !1),
      (this.alphaToCoverage = !1),
      (this.premultipliedAlpha = !1),
      (this.forceSinglePass = !1),
      (this.visible = !0),
      (this.toneMapped = !0),
      (this.userData = {}),
      (this.version = 0),
      (this._alphaTest = 0);
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
  }
  onBuild() {}
  onBeforeRender() {}
  onBeforeCompile() {}
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0)
      for (const t in e) {
        const i = e[t];
        if (i === void 0) {
          console.warn(
            `THREE.Material: parameter '${t}' has value of undefined.`
          );
          continue;
        }
        const r = this[t];
        if (r === void 0) {
          console.warn(
            `THREE.Material: '${t}' is not a property of THREE.${this.type}.`
          );
          continue;
        }
        r && r.isColor
          ? r.set(i)
          : r && r.isVector3 && i && i.isVector3
          ? r.copy(i)
          : (this[t] = i);
      }
  }
  toJSON(e) {
    const t = e === void 0 || typeof e == "string";
    t && (e = { textures: {}, images: {} });
    const i = {
      metadata: {
        version: 4.6,
        type: "Material",
        generator: "Material.toJSON",
      },
    };
    (i.uuid = this.uuid),
      (i.type = this.type),
      this.name !== "" && (i.name = this.name),
      this.color && this.color.isColor && (i.color = this.color.getHex()),
      this.roughness !== void 0 && (i.roughness = this.roughness),
      this.metalness !== void 0 && (i.metalness = this.metalness),
      this.sheen !== void 0 && (i.sheen = this.sheen),
      this.sheenColor &&
        this.sheenColor.isColor &&
        (i.sheenColor = this.sheenColor.getHex()),
      this.sheenRoughness !== void 0 &&
        (i.sheenRoughness = this.sheenRoughness),
      this.emissive &&
        this.emissive.isColor &&
        (i.emissive = this.emissive.getHex()),
      this.emissiveIntensity &&
        this.emissiveIntensity !== 1 &&
        (i.emissiveIntensity = this.emissiveIntensity),
      this.specular &&
        this.specular.isColor &&
        (i.specular = this.specular.getHex()),
      this.specularIntensity !== void 0 &&
        (i.specularIntensity = this.specularIntensity),
      this.specularColor &&
        this.specularColor.isColor &&
        (i.specularColor = this.specularColor.getHex()),
      this.shininess !== void 0 && (i.shininess = this.shininess),
      this.clearcoat !== void 0 && (i.clearcoat = this.clearcoat),
      this.clearcoatRoughness !== void 0 &&
        (i.clearcoatRoughness = this.clearcoatRoughness),
      this.clearcoatMap &&
        this.clearcoatMap.isTexture &&
        (i.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
      this.clearcoatRoughnessMap &&
        this.clearcoatRoughnessMap.isTexture &&
        (i.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
      this.clearcoatNormalMap &&
        this.clearcoatNormalMap.isTexture &&
        ((i.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
        (i.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
      this.iridescence !== void 0 && (i.iridescence = this.iridescence),
      this.iridescenceIOR !== void 0 &&
        (i.iridescenceIOR = this.iridescenceIOR),
      this.iridescenceThicknessRange !== void 0 &&
        (i.iridescenceThicknessRange = this.iridescenceThicknessRange),
      this.iridescenceMap &&
        this.iridescenceMap.isTexture &&
        (i.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
      this.iridescenceThicknessMap &&
        this.iridescenceThicknessMap.isTexture &&
        (i.iridescenceThicknessMap =
          this.iridescenceThicknessMap.toJSON(e).uuid),
      this.anisotropy !== void 0 && (i.anisotropy = this.anisotropy),
      this.anisotropyRotation !== void 0 &&
        (i.anisotropyRotation = this.anisotropyRotation),
      this.anisotropyMap &&
        this.anisotropyMap.isTexture &&
        (i.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
      this.map && this.map.isTexture && (i.map = this.map.toJSON(e).uuid),
      this.matcap &&
        this.matcap.isTexture &&
        (i.matcap = this.matcap.toJSON(e).uuid),
      this.alphaMap &&
        this.alphaMap.isTexture &&
        (i.alphaMap = this.alphaMap.toJSON(e).uuid),
      this.lightMap &&
        this.lightMap.isTexture &&
        ((i.lightMap = this.lightMap.toJSON(e).uuid),
        (i.lightMapIntensity = this.lightMapIntensity)),
      this.aoMap &&
        this.aoMap.isTexture &&
        ((i.aoMap = this.aoMap.toJSON(e).uuid),
        (i.aoMapIntensity = this.aoMapIntensity)),
      this.bumpMap &&
        this.bumpMap.isTexture &&
        ((i.bumpMap = this.bumpMap.toJSON(e).uuid),
        (i.bumpScale = this.bumpScale)),
      this.normalMap &&
        this.normalMap.isTexture &&
        ((i.normalMap = this.normalMap.toJSON(e).uuid),
        (i.normalMapType = this.normalMapType),
        (i.normalScale = this.normalScale.toArray())),
      this.displacementMap &&
        this.displacementMap.isTexture &&
        ((i.displacementMap = this.displacementMap.toJSON(e).uuid),
        (i.displacementScale = this.displacementScale),
        (i.displacementBias = this.displacementBias)),
      this.roughnessMap &&
        this.roughnessMap.isTexture &&
        (i.roughnessMap = this.roughnessMap.toJSON(e).uuid),
      this.metalnessMap &&
        this.metalnessMap.isTexture &&
        (i.metalnessMap = this.metalnessMap.toJSON(e).uuid),
      this.emissiveMap &&
        this.emissiveMap.isTexture &&
        (i.emissiveMap = this.emissiveMap.toJSON(e).uuid),
      this.specularMap &&
        this.specularMap.isTexture &&
        (i.specularMap = this.specularMap.toJSON(e).uuid),
      this.specularIntensityMap &&
        this.specularIntensityMap.isTexture &&
        (i.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid),
      this.specularColorMap &&
        this.specularColorMap.isTexture &&
        (i.specularColorMap = this.specularColorMap.toJSON(e).uuid),
      this.envMap &&
        this.envMap.isTexture &&
        ((i.envMap = this.envMap.toJSON(e).uuid),
        this.combine !== void 0 && (i.combine = this.combine)),
      this.envMapIntensity !== void 0 &&
        (i.envMapIntensity = this.envMapIntensity),
      this.reflectivity !== void 0 && (i.reflectivity = this.reflectivity),
      this.refractionRatio !== void 0 &&
        (i.refractionRatio = this.refractionRatio),
      this.gradientMap &&
        this.gradientMap.isTexture &&
        (i.gradientMap = this.gradientMap.toJSON(e).uuid),
      this.transmission !== void 0 && (i.transmission = this.transmission),
      this.transmissionMap &&
        this.transmissionMap.isTexture &&
        (i.transmissionMap = this.transmissionMap.toJSON(e).uuid),
      this.thickness !== void 0 && (i.thickness = this.thickness),
      this.thicknessMap &&
        this.thicknessMap.isTexture &&
        (i.thicknessMap = this.thicknessMap.toJSON(e).uuid),
      this.attenuationDistance !== void 0 &&
        this.attenuationDistance !== 1 / 0 &&
        (i.attenuationDistance = this.attenuationDistance),
      this.attenuationColor !== void 0 &&
        (i.attenuationColor = this.attenuationColor.getHex()),
      this.size !== void 0 && (i.size = this.size),
      this.shadowSide !== null && (i.shadowSide = this.shadowSide),
      this.sizeAttenuation !== void 0 &&
        (i.sizeAttenuation = this.sizeAttenuation),
      this.blending !== As && (i.blending = this.blending),
      this.side !== cs && (i.side = this.side),
      this.vertexColors && (i.vertexColors = !0),
      this.opacity < 1 && (i.opacity = this.opacity),
      this.transparent === !0 && (i.transparent = this.transparent),
      (i.depthFunc = this.depthFunc),
      (i.depthTest = this.depthTest),
      (i.depthWrite = this.depthWrite),
      (i.colorWrite = this.colorWrite),
      (i.stencilWrite = this.stencilWrite),
      (i.stencilWriteMask = this.stencilWriteMask),
      (i.stencilFunc = this.stencilFunc),
      (i.stencilRef = this.stencilRef),
      (i.stencilFuncMask = this.stencilFuncMask),
      (i.stencilFail = this.stencilFail),
      (i.stencilZFail = this.stencilZFail),
      (i.stencilZPass = this.stencilZPass),
      this.rotation !== void 0 &&
        this.rotation !== 0 &&
        (i.rotation = this.rotation),
      this.polygonOffset === !0 && (i.polygonOffset = !0),
      this.polygonOffsetFactor !== 0 &&
        (i.polygonOffsetFactor = this.polygonOffsetFactor),
      this.polygonOffsetUnits !== 0 &&
        (i.polygonOffsetUnits = this.polygonOffsetUnits),
      this.linewidth !== void 0 &&
        this.linewidth !== 1 &&
        (i.linewidth = this.linewidth),
      this.dashSize !== void 0 && (i.dashSize = this.dashSize),
      this.gapSize !== void 0 && (i.gapSize = this.gapSize),
      this.scale !== void 0 && (i.scale = this.scale),
      this.dithering === !0 && (i.dithering = !0),
      this.alphaTest > 0 && (i.alphaTest = this.alphaTest),
      this.alphaHash === !0 && (i.alphaHash = this.alphaHash),
      this.alphaToCoverage === !0 && (i.alphaToCoverage = this.alphaToCoverage),
      this.premultipliedAlpha === !0 &&
        (i.premultipliedAlpha = this.premultipliedAlpha),
      this.forceSinglePass === !0 && (i.forceSinglePass = this.forceSinglePass),
      this.wireframe === !0 && (i.wireframe = this.wireframe),
      this.wireframeLinewidth > 1 &&
        (i.wireframeLinewidth = this.wireframeLinewidth),
      this.wireframeLinecap !== "round" &&
        (i.wireframeLinecap = this.wireframeLinecap),
      this.wireframeLinejoin !== "round" &&
        (i.wireframeLinejoin = this.wireframeLinejoin),
      this.flatShading === !0 && (i.flatShading = this.flatShading),
      this.visible === !1 && (i.visible = !1),
      this.toneMapped === !1 && (i.toneMapped = !1),
      this.fog === !1 && (i.fog = !1),
      Object.keys(this.userData).length > 0 && (i.userData = this.userData);
    function r(s) {
      const u = [];
      for (const c in s) {
        const h = s[c];
        delete h.metadata, u.push(h);
      }
      return u;
    }
    if (t) {
      const s = r(e.textures),
        u = r(e.images);
      s.length > 0 && (i.textures = s), u.length > 0 && (i.images = u);
    }
    return i;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.name = e.name),
      (this.blending = e.blending),
      (this.side = e.side),
      (this.vertexColors = e.vertexColors),
      (this.opacity = e.opacity),
      (this.transparent = e.transparent),
      (this.blendSrc = e.blendSrc),
      (this.blendDst = e.blendDst),
      (this.blendEquation = e.blendEquation),
      (this.blendSrcAlpha = e.blendSrcAlpha),
      (this.blendDstAlpha = e.blendDstAlpha),
      (this.blendEquationAlpha = e.blendEquationAlpha),
      (this.depthFunc = e.depthFunc),
      (this.depthTest = e.depthTest),
      (this.depthWrite = e.depthWrite),
      (this.stencilWriteMask = e.stencilWriteMask),
      (this.stencilFunc = e.stencilFunc),
      (this.stencilRef = e.stencilRef),
      (this.stencilFuncMask = e.stencilFuncMask),
      (this.stencilFail = e.stencilFail),
      (this.stencilZFail = e.stencilZFail),
      (this.stencilZPass = e.stencilZPass),
      (this.stencilWrite = e.stencilWrite);
    const t = e.clippingPlanes;
    let i = null;
    if (t !== null) {
      const r = t.length;
      i = new Array(r);
      for (let s = 0; s !== r; ++s) i[s] = t[s].clone();
    }
    return (
      (this.clippingPlanes = i),
      (this.clipIntersection = e.clipIntersection),
      (this.clipShadows = e.clipShadows),
      (this.shadowSide = e.shadowSide),
      (this.colorWrite = e.colorWrite),
      (this.precision = e.precision),
      (this.polygonOffset = e.polygonOffset),
      (this.polygonOffsetFactor = e.polygonOffsetFactor),
      (this.polygonOffsetUnits = e.polygonOffsetUnits),
      (this.dithering = e.dithering),
      (this.alphaTest = e.alphaTest),
      (this.alphaHash = e.alphaHash),
      (this.alphaToCoverage = e.alphaToCoverage),
      (this.premultipliedAlpha = e.premultipliedAlpha),
      (this.forceSinglePass = e.forceSinglePass),
      (this.visible = e.visible),
      (this.toneMapped = e.toneMapped),
      (this.userData = JSON.parse(JSON.stringify(e.userData))),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
}
const O1 = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  },
  $i = { h: 0, s: 0, l: 0 },
  pA = { h: 0, s: 0, l: 0 };
function X0(n, e, t) {
  return (
    t < 0 && (t += 1),
    t > 1 && (t -= 1),
    t < 1 / 6
      ? n + (e - n) * 6 * t
      : t < 1 / 2
      ? e
      : t < 2 / 3
      ? n + (e - n) * 6 * (2 / 3 - t)
      : n
  );
}
let Dt = class {
  constructor(e, t, i) {
    return (
      (this.isColor = !0),
      (this.r = 1),
      (this.g = 1),
      (this.b = 1),
      this.set(e, t, i)
    );
  }
  set(e, t, i) {
    if (t === void 0 && i === void 0) {
      const r = e;
      r && r.isColor
        ? this.copy(r)
        : typeof r == "number"
        ? this.setHex(r)
        : typeof r == "string" && this.setStyle(r);
    } else this.setRGB(e, t, i);
    return this;
  }
  setScalar(e) {
    return (this.r = e), (this.g = e), (this.b = e), this;
  }
  setHex(e, t = hn) {
    return (
      (e = Math.floor(e)),
      (this.r = ((e >> 16) & 255) / 255),
      (this.g = ((e >> 8) & 255) / 255),
      (this.b = (e & 255) / 255),
      ji.toWorkingColorSpace(this, t),
      this
    );
  }
  setRGB(e, t, i, r = ji.workingColorSpace) {
    return (
      (this.r = e),
      (this.g = t),
      (this.b = i),
      ji.toWorkingColorSpace(this, r),
      this
    );
  }
  setHSL(e, t, i, r = ji.workingColorSpace) {
    if (((e = Mc(e, 1)), (t = Dn(t, 0, 1)), (i = Dn(i, 0, 1)), t === 0))
      this.r = this.g = this.b = i;
    else {
      const s = i <= 0.5 ? i * (1 + t) : i + t - i * t,
        u = 2 * i - s;
      (this.r = X0(u, s, e + 1 / 3)),
        (this.g = X0(u, s, e)),
        (this.b = X0(u, s, e - 1 / 3));
    }
    return ji.toWorkingColorSpace(this, r), this;
  }
  setStyle(e, t = hn) {
    function i(s) {
      s !== void 0 &&
        parseFloat(s) < 1 &&
        console.warn(
          "THREE.Color: Alpha component of " + e + " will be ignored."
        );
    }
    let r;
    if ((r = /^(\w+)\(([^\)]*)\)/.exec(e))) {
      let s;
      const u = r[1],
        c = r[2];
      switch (u) {
        case "rgb":
        case "rgba":
          if (
            (s =
              /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setRGB(
                Math.min(255, parseInt(s[1], 10)) / 255,
                Math.min(255, parseInt(s[2], 10)) / 255,
                Math.min(255, parseInt(s[3], 10)) / 255,
                t
              )
            );
          if (
            (s =
              /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setRGB(
                Math.min(100, parseInt(s[1], 10)) / 100,
                Math.min(100, parseInt(s[2], 10)) / 100,
                Math.min(100, parseInt(s[3], 10)) / 100,
                t
              )
            );
          break;
        case "hsl":
        case "hsla":
          if (
            (s =
              /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                c
              ))
          )
            return (
              i(s[4]),
              this.setHSL(
                parseFloat(s[1]) / 360,
                parseFloat(s[2]) / 100,
                parseFloat(s[3]) / 100,
                t
              )
            );
          break;
        default:
          console.warn("THREE.Color: Unknown color model " + e);
      }
    } else if ((r = /^\#([A-Fa-f\d]+)$/.exec(e))) {
      const s = r[1],
        u = s.length;
      if (u === 3)
        return this.setRGB(
          parseInt(s.charAt(0), 16) / 15,
          parseInt(s.charAt(1), 16) / 15,
          parseInt(s.charAt(2), 16) / 15,
          t
        );
      if (u === 6) return this.setHex(parseInt(s, 16), t);
      console.warn("THREE.Color: Invalid hex color " + e);
    } else if (e && e.length > 0) return this.setColorName(e, t);
    return this;
  }
  setColorName(e, t = hn) {
    const i = O1[e.toLowerCase()];
    return (
      i !== void 0
        ? this.setHex(i, t)
        : console.warn("THREE.Color: Unknown color " + e),
      this
    );
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
  }
  copySRGBToLinear(e) {
    return (this.r = Oo(e.r)), (this.g = Oo(e.g)), (this.b = Oo(e.b)), this;
  }
  copyLinearToSRGB(e) {
    return (this.r = q0(e.r)), (this.g = q0(e.g)), (this.b = q0(e.b)), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(e = hn) {
    return (
      ji.fromWorkingColorSpace($n.copy(this), e),
      Math.round(Dn($n.r * 255, 0, 255)) * 65536 +
        Math.round(Dn($n.g * 255, 0, 255)) * 256 +
        Math.round(Dn($n.b * 255, 0, 255))
    );
  }
  getHexString(e = hn) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, t = ji.workingColorSpace) {
    ji.fromWorkingColorSpace($n.copy(this), t);
    const i = $n.r,
      r = $n.g,
      s = $n.b,
      u = Math.max(i, r, s),
      c = Math.min(i, r, s);
    let h, p;
    const g = (c + u) / 2;
    if (c === u) (h = 0), (p = 0);
    else {
      const v = u - c;
      switch (((p = g <= 0.5 ? v / (u + c) : v / (2 - u - c)), u)) {
        case i:
          h = (r - s) / v + (r < s ? 6 : 0);
          break;
        case r:
          h = (s - i) / v + 2;
          break;
        case s:
          h = (i - r) / v + 4;
          break;
      }
      h /= 6;
    }
    return (e.h = h), (e.s = p), (e.l = g), e;
  }
  getRGB(e, t = ji.workingColorSpace) {
    return (
      ji.fromWorkingColorSpace($n.copy(this), t),
      (e.r = $n.r),
      (e.g = $n.g),
      (e.b = $n.b),
      e
    );
  }
  getStyle(e = hn) {
    ji.fromWorkingColorSpace($n.copy(this), e);
    const t = $n.r,
      i = $n.g,
      r = $n.b;
    return e !== hn
      ? `color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`
      : `rgb(${Math.round(t * 255)},${Math.round(i * 255)},${Math.round(
          r * 255
        )})`;
  }
  offsetHSL(e, t, i) {
    return (
      this.getHSL($i),
      ($i.h += e),
      ($i.s += t),
      ($i.l += i),
      this.setHSL($i.h, $i.s, $i.l),
      this
    );
  }
  add(e) {
    return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
  }
  addColors(e, t) {
    return (
      (this.r = e.r + t.r), (this.g = e.g + t.g), (this.b = e.b + t.b), this
    );
  }
  addScalar(e) {
    return (this.r += e), (this.g += e), (this.b += e), this;
  }
  sub(e) {
    return (
      (this.r = Math.max(0, this.r - e.r)),
      (this.g = Math.max(0, this.g - e.g)),
      (this.b = Math.max(0, this.b - e.b)),
      this
    );
  }
  multiply(e) {
    return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
  }
  multiplyScalar(e) {
    return (this.r *= e), (this.g *= e), (this.b *= e), this;
  }
  lerp(e, t) {
    return (
      (this.r += (e.r - this.r) * t),
      (this.g += (e.g - this.g) * t),
      (this.b += (e.b - this.b) * t),
      this
    );
  }
  lerpColors(e, t, i) {
    return (
      (this.r = e.r + (t.r - e.r) * i),
      (this.g = e.g + (t.g - e.g) * i),
      (this.b = e.b + (t.b - e.b) * i),
      this
    );
  }
  lerpHSL(e, t) {
    this.getHSL($i), e.getHSL(pA);
    const i = Ma($i.h, pA.h, t),
      r = Ma($i.s, pA.s, t),
      s = Ma($i.l, pA.l, t);
    return this.setHSL(i, r, s), this;
  }
  setFromVector3(e) {
    return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
  }
  applyMatrix3(e) {
    const t = this.r,
      i = this.g,
      r = this.b,
      s = e.elements;
    return (
      (this.r = s[0] * t + s[3] * i + s[6] * r),
      (this.g = s[1] * t + s[4] * i + s[7] * r),
      (this.b = s[2] * t + s[5] * i + s[8] * r),
      this
    );
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, t = 0) {
    return (this.r = e[t]), (this.g = e[t + 1]), (this.b = e[t + 2]), this;
  }
  toArray(e = [], t = 0) {
    return (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e;
  }
  fromBufferAttribute(e, t) {
    return (
      (this.r = e.getX(t)), (this.g = e.getY(t)), (this.b = e.getZ(t)), this
    );
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
};
const $n = new Dt();
Dt.NAMES = O1;
class Zl extends Qs {
  constructor(e) {
    super(),
      (this.isMeshBasicMaterial = !0),
      (this.type = "MeshBasicMaterial"),
      (this.color = new Dt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Xl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const Tn = new te(),
  mA = new ke();
class En {
  constructor(e, t, i = !1) {
    if (Array.isArray(e))
      throw new TypeError(
        "THREE.BufferAttribute: array should be a Typed Array."
      );
    (this.isBufferAttribute = !0),
      (this.name = ""),
      (this.array = e),
      (this.itemSize = t),
      (this.count = e !== void 0 ? e.length / t : 0),
      (this.normalized = i),
      (this.usage = Cu),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.gpuType = os),
      (this.version = 0);
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  copy(e) {
    return (
      (this.name = e.name),
      (this.array = new e.array.constructor(e.array)),
      (this.itemSize = e.itemSize),
      (this.count = e.count),
      (this.normalized = e.normalized),
      (this.usage = e.usage),
      (this.gpuType = e.gpuType),
      this
    );
  }
  copyAt(e, t, i) {
    (e *= this.itemSize), (i *= t.itemSize);
    for (let r = 0, s = this.itemSize; r < s; r++)
      this.array[e + r] = t.array[i + r];
    return this;
  }
  copyArray(e) {
    return this.array.set(e), this;
  }
  applyMatrix3(e) {
    if (this.itemSize === 2)
      for (let t = 0, i = this.count; t < i; t++)
        mA.fromBufferAttribute(this, t),
          mA.applyMatrix3(e),
          this.setXY(t, mA.x, mA.y);
    else if (this.itemSize === 3)
      for (let t = 0, i = this.count; t < i; t++)
        Tn.fromBufferAttribute(this, t),
          Tn.applyMatrix3(e),
          this.setXYZ(t, Tn.x, Tn.y, Tn.z);
    return this;
  }
  applyMatrix4(e) {
    for (let t = 0, i = this.count; t < i; t++)
      Tn.fromBufferAttribute(this, t),
        Tn.applyMatrix4(e),
        this.setXYZ(t, Tn.x, Tn.y, Tn.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, i = this.count; t < i; t++)
      Tn.fromBufferAttribute(this, t),
        Tn.applyNormalMatrix(e),
        this.setXYZ(t, Tn.x, Tn.y, Tn.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, i = this.count; t < i; t++)
      Tn.fromBufferAttribute(this, t),
        Tn.transformDirection(e),
        this.setXYZ(t, Tn.x, Tn.y, Tn.z);
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  getComponent(e, t) {
    let i = this.array[e * this.itemSize + t];
    return this.normalized && (i = dr(i, this.array)), i;
  }
  setComponent(e, t, i) {
    return (
      this.normalized && (i = on(i, this.array)),
      (this.array[e * this.itemSize + t] = i),
      this
    );
  }
  getX(e) {
    let t = this.array[e * this.itemSize];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  setX(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize] = t),
      this
    );
  }
  getY(e) {
    let t = this.array[e * this.itemSize + 1];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  setY(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 1] = t),
      this
    );
  }
  getZ(e) {
    let t = this.array[e * this.itemSize + 2];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  setZ(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 2] = t),
      this
    );
  }
  getW(e) {
    let t = this.array[e * this.itemSize + 3];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  setW(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.array[e * this.itemSize + 3] = t),
      this
    );
  }
  setXY(e, t, i) {
    return (
      (e *= this.itemSize),
      this.normalized && ((t = on(t, this.array)), (i = on(i, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      this
    );
  }
  setXYZ(e, t, i, r) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      (this.array[e + 2] = r),
      this
    );
  }
  setXYZW(e, t, i, r, s) {
    return (
      (e *= this.itemSize),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array)),
        (s = on(s, this.array))),
      (this.array[e + 0] = t),
      (this.array[e + 1] = i),
      (this.array[e + 2] = r),
      (this.array[e + 3] = s),
      this
    );
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = {
      itemSize: this.itemSize,
      type: this.array.constructor.name,
      array: Array.from(this.array),
      normalized: this.normalized,
    };
    return (
      this.name !== "" && (e.name = this.name),
      this.usage !== Cu && (e.usage = this.usage),
      (this.updateRange.offset !== 0 || this.updateRange.count !== -1) &&
        (e.updateRange = this.updateRange),
      e
    );
  }
}
class q1 extends En {
  constructor(e, t, i) {
    super(new Uint16Array(e), t, i);
  }
}
class U1 extends En {
  constructor(e, t, i) {
    super(new Uint32Array(e), t, i);
  }
}
class Jt extends En {
  constructor(e, t, i) {
    super(new Float32Array(e), t, i);
  }
}
let a_ = 0;
const Ui = new dn(),
  Q0 = new Rn(),
  fo = new te(),
  Ei = new Xs(),
  ua = new Xs(),
  Fn = new te();
class fn extends js {
  constructor() {
    super(),
      (this.isBufferGeometry = !0),
      Object.defineProperty(this, "id", { value: a_++ }),
      (this.uuid = pr()),
      (this.name = ""),
      (this.type = "BufferGeometry"),
      (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.morphTargetsRelative = !1),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null),
      (this.drawRange = { start: 0, count: 1 / 0 }),
      (this.userData = {});
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return (
      Array.isArray(e)
        ? (this.index = new (P1(e) ? U1 : q1)(e, 1))
        : (this.index = e),
      this
    );
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, t) {
    return (this.attributes[e] = t), this;
  }
  deleteAttribute(e) {
    return delete this.attributes[e], this;
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, t, i = 0) {
    this.groups.push({ start: e, count: t, materialIndex: i });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, t) {
    (this.drawRange.start = e), (this.drawRange.count = t);
  }
  applyMatrix4(e) {
    const t = this.attributes.position;
    t !== void 0 && (t.applyMatrix4(e), (t.needsUpdate = !0));
    const i = this.attributes.normal;
    if (i !== void 0) {
      const s = new Gt().getNormalMatrix(e);
      i.applyNormalMatrix(s), (i.needsUpdate = !0);
    }
    const r = this.attributes.tangent;
    return (
      r !== void 0 && (r.transformDirection(e), (r.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  applyQuaternion(e) {
    return Ui.makeRotationFromQuaternion(e), this.applyMatrix4(Ui), this;
  }
  rotateX(e) {
    return Ui.makeRotationX(e), this.applyMatrix4(Ui), this;
  }
  rotateY(e) {
    return Ui.makeRotationY(e), this.applyMatrix4(Ui), this;
  }
  rotateZ(e) {
    return Ui.makeRotationZ(e), this.applyMatrix4(Ui), this;
  }
  translate(e, t, i) {
    return Ui.makeTranslation(e, t, i), this.applyMatrix4(Ui), this;
  }
  scale(e, t, i) {
    return Ui.makeScale(e, t, i), this.applyMatrix4(Ui), this;
  }
  lookAt(e) {
    return Q0.lookAt(e), Q0.updateMatrix(), this.applyMatrix4(Q0.matrix), this;
  }
  center() {
    return (
      this.computeBoundingBox(),
      this.boundingBox.getCenter(fo).negate(),
      this.translate(fo.x, fo.y, fo.z),
      this
    );
  }
  setFromPoints(e) {
    const t = [];
    for (let i = 0, r = e.length; i < r; i++) {
      const s = e[i];
      t.push(s.x, s.y, s.z || 0);
    }
    return this.setAttribute("position", new Jt(t, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new Xs());
    const e = this.attributes.position,
      t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingBox.set(
          new te(-1 / 0, -1 / 0, -1 / 0),
          new te(1 / 0, 1 / 0, 1 / 0)
        );
      return;
    }
    if (e !== void 0) {
      if ((this.boundingBox.setFromBufferAttribute(e), t))
        for (let i = 0, r = t.length; i < r; i++) {
          const s = t[i];
          Ei.setFromBufferAttribute(s),
            this.morphTargetsRelative
              ? (Fn.addVectors(this.boundingBox.min, Ei.min),
                this.boundingBox.expandByPoint(Fn),
                Fn.addVectors(this.boundingBox.max, Ei.max),
                this.boundingBox.expandByPoint(Fn))
              : (this.boundingBox.expandByPoint(Ei.min),
                this.boundingBox.expandByPoint(Ei.max));
        }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) ||
      isNaN(this.boundingBox.min.y) ||
      isNaN(this.boundingBox.min.z)) &&
      console.error(
        'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
        this
      );
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new Qo());
    const e = this.attributes.position,
      t = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error(
        'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
        this
      ),
        this.boundingSphere.set(new te(), 1 / 0);
      return;
    }
    if (e) {
      const i = this.boundingSphere.center;
      if ((Ei.setFromBufferAttribute(e), t))
        for (let s = 0, u = t.length; s < u; s++) {
          const c = t[s];
          ua.setFromBufferAttribute(c),
            this.morphTargetsRelative
              ? (Fn.addVectors(Ei.min, ua.min),
                Ei.expandByPoint(Fn),
                Fn.addVectors(Ei.max, ua.max),
                Ei.expandByPoint(Fn))
              : (Ei.expandByPoint(ua.min), Ei.expandByPoint(ua.max));
        }
      Ei.getCenter(i);
      let r = 0;
      for (let s = 0, u = e.count; s < u; s++)
        Fn.fromBufferAttribute(e, s),
          (r = Math.max(r, i.distanceToSquared(Fn)));
      if (t)
        for (let s = 0, u = t.length; s < u; s++) {
          const c = t[s],
            h = this.morphTargetsRelative;
          for (let p = 0, g = c.count; p < g; p++)
            Fn.fromBufferAttribute(c, p),
              h && (fo.fromBufferAttribute(e, p), Fn.add(fo)),
              (r = Math.max(r, i.distanceToSquared(Fn)));
        }
      (this.boundingSphere.radius = Math.sqrt(r)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
            this
          );
    }
  }
  computeTangents() {
    const e = this.index,
      t = this.attributes;
    if (
      e === null ||
      t.position === void 0 ||
      t.normal === void 0 ||
      t.uv === void 0
    ) {
      console.error(
        "THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)"
      );
      return;
    }
    const i = e.array,
      r = t.position.array,
      s = t.normal.array,
      u = t.uv.array,
      c = r.length / 3;
    this.hasAttribute("tangent") === !1 &&
      this.setAttribute("tangent", new En(new Float32Array(4 * c), 4));
    const h = this.getAttribute("tangent").array,
      p = [],
      g = [];
    for (let O = 0; O < c; O++) (p[O] = new te()), (g[O] = new te());
    const v = new te(),
      x = new te(),
      M = new te(),
      w = new ke(),
      C = new ke(),
      E = new ke(),
      b = new te(),
      L = new te();
    function S(O, k, $) {
      v.fromArray(r, O * 3),
        x.fromArray(r, k * 3),
        M.fromArray(r, $ * 3),
        w.fromArray(u, O * 2),
        C.fromArray(u, k * 2),
        E.fromArray(u, $ * 2),
        x.sub(v),
        M.sub(v),
        C.sub(w),
        E.sub(w);
      const H = 1 / (C.x * E.y - E.x * C.y);
      isFinite(H) &&
        (b
          .copy(x)
          .multiplyScalar(E.y)
          .addScaledVector(M, -C.y)
          .multiplyScalar(H),
        L.copy(M)
          .multiplyScalar(C.x)
          .addScaledVector(x, -E.x)
          .multiplyScalar(H),
        p[O].add(b),
        p[k].add(b),
        p[$].add(b),
        g[O].add(L),
        g[k].add(L),
        g[$].add(L));
    }
    let R = this.groups;
    R.length === 0 && (R = [{ start: 0, count: i.length }]);
    for (let O = 0, k = R.length; O < k; ++O) {
      const $ = R[O],
        H = $.start,
        Q = $.count;
      for (let F = H, J = H + Q; F < J; F += 3) S(i[F + 0], i[F + 1], i[F + 2]);
    }
    const U = new te(),
      q = new te(),
      I = new te(),
      N = new te();
    function D(O) {
      I.fromArray(s, O * 3), N.copy(I);
      const k = p[O];
      U.copy(k),
        U.sub(I.multiplyScalar(I.dot(k))).normalize(),
        q.crossVectors(N, k);
      const H = q.dot(g[O]) < 0 ? -1 : 1;
      (h[O * 4] = U.x),
        (h[O * 4 + 1] = U.y),
        (h[O * 4 + 2] = U.z),
        (h[O * 4 + 3] = H);
    }
    for (let O = 0, k = R.length; O < k; ++O) {
      const $ = R[O],
        H = $.start,
        Q = $.count;
      for (let F = H, J = H + Q; F < J; F += 3)
        D(i[F + 0]), D(i[F + 1]), D(i[F + 2]);
    }
  }
  computeVertexNormals() {
    const e = this.index,
      t = this.getAttribute("position");
    if (t !== void 0) {
      let i = this.getAttribute("normal");
      if (i === void 0)
        (i = new En(new Float32Array(t.count * 3), 3)),
          this.setAttribute("normal", i);
      else for (let x = 0, M = i.count; x < M; x++) i.setXYZ(x, 0, 0, 0);
      const r = new te(),
        s = new te(),
        u = new te(),
        c = new te(),
        h = new te(),
        p = new te(),
        g = new te(),
        v = new te();
      if (e)
        for (let x = 0, M = e.count; x < M; x += 3) {
          const w = e.getX(x + 0),
            C = e.getX(x + 1),
            E = e.getX(x + 2);
          r.fromBufferAttribute(t, w),
            s.fromBufferAttribute(t, C),
            u.fromBufferAttribute(t, E),
            g.subVectors(u, s),
            v.subVectors(r, s),
            g.cross(v),
            c.fromBufferAttribute(i, w),
            h.fromBufferAttribute(i, C),
            p.fromBufferAttribute(i, E),
            c.add(g),
            h.add(g),
            p.add(g),
            i.setXYZ(w, c.x, c.y, c.z),
            i.setXYZ(C, h.x, h.y, h.z),
            i.setXYZ(E, p.x, p.y, p.z);
        }
      else
        for (let x = 0, M = t.count; x < M; x += 3)
          r.fromBufferAttribute(t, x + 0),
            s.fromBufferAttribute(t, x + 1),
            u.fromBufferAttribute(t, x + 2),
            g.subVectors(u, s),
            v.subVectors(r, s),
            g.cross(v),
            i.setXYZ(x + 0, g.x, g.y, g.z),
            i.setXYZ(x + 1, g.x, g.y, g.z),
            i.setXYZ(x + 2, g.x, g.y, g.z);
      this.normalizeNormals(), (i.needsUpdate = !0);
    }
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let t = 0, i = e.count; t < i; t++)
      Fn.fromBufferAttribute(e, t),
        Fn.normalize(),
        e.setXYZ(t, Fn.x, Fn.y, Fn.z);
  }
  toNonIndexed() {
    function e(c, h) {
      const p = c.array,
        g = c.itemSize,
        v = c.normalized,
        x = new p.constructor(h.length * g);
      let M = 0,
        w = 0;
      for (let C = 0, E = h.length; C < E; C++) {
        c.isInterleavedBufferAttribute
          ? (M = h[C] * c.data.stride + c.offset)
          : (M = h[C] * g);
        for (let b = 0; b < g; b++) x[w++] = p[M++];
      }
      return new En(x, g, v);
    }
    if (this.index === null)
      return (
        console.warn(
          "THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."
        ),
        this
      );
    const t = new fn(),
      i = this.index.array,
      r = this.attributes;
    for (const c in r) {
      const h = r[c],
        p = e(h, i);
      t.setAttribute(c, p);
    }
    const s = this.morphAttributes;
    for (const c in s) {
      const h = [],
        p = s[c];
      for (let g = 0, v = p.length; g < v; g++) {
        const x = p[g],
          M = e(x, i);
        h.push(M);
      }
      t.morphAttributes[c] = h;
    }
    t.morphTargetsRelative = this.morphTargetsRelative;
    const u = this.groups;
    for (let c = 0, h = u.length; c < h; c++) {
      const p = u[c];
      t.addGroup(p.start, p.count, p.materialIndex);
    }
    return t;
  }
  toJSON() {
    const e = {
      metadata: {
        version: 4.6,
        type: "BufferGeometry",
        generator: "BufferGeometry.toJSON",
      },
    };
    if (
      ((e.uuid = this.uuid),
      (e.type = this.type),
      this.name !== "" && (e.name = this.name),
      Object.keys(this.userData).length > 0 && (e.userData = this.userData),
      this.parameters !== void 0)
    ) {
      const h = this.parameters;
      for (const p in h) h[p] !== void 0 && (e[p] = h[p]);
      return e;
    }
    e.data = { attributes: {} };
    const t = this.index;
    t !== null &&
      (e.data.index = {
        type: t.array.constructor.name,
        array: Array.prototype.slice.call(t.array),
      });
    const i = this.attributes;
    for (const h in i) {
      const p = i[h];
      e.data.attributes[h] = p.toJSON(e.data);
    }
    const r = {};
    let s = !1;
    for (const h in this.morphAttributes) {
      const p = this.morphAttributes[h],
        g = [];
      for (let v = 0, x = p.length; v < x; v++) {
        const M = p[v];
        g.push(M.toJSON(e.data));
      }
      g.length > 0 && ((r[h] = g), (s = !0));
    }
    s &&
      ((e.data.morphAttributes = r),
      (e.data.morphTargetsRelative = this.morphTargetsRelative));
    const u = this.groups;
    u.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(u)));
    const c = this.boundingSphere;
    return (
      c !== null &&
        (e.data.boundingSphere = {
          center: c.center.toArray(),
          radius: c.radius,
        }),
      e
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    (this.index = null),
      (this.attributes = {}),
      (this.morphAttributes = {}),
      (this.groups = []),
      (this.boundingBox = null),
      (this.boundingSphere = null);
    const t = {};
    this.name = e.name;
    const i = e.index;
    i !== null && this.setIndex(i.clone(t));
    const r = e.attributes;
    for (const p in r) {
      const g = r[p];
      this.setAttribute(p, g.clone(t));
    }
    const s = e.morphAttributes;
    for (const p in s) {
      const g = [],
        v = s[p];
      for (let x = 0, M = v.length; x < M; x++) g.push(v[x].clone(t));
      this.morphAttributes[p] = g;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const u = e.groups;
    for (let p = 0, g = u.length; p < g; p++) {
      const v = u[p];
      this.addGroup(v.start, v.count, v.materialIndex);
    }
    const c = e.boundingBox;
    c !== null && (this.boundingBox = c.clone());
    const h = e.boundingSphere;
    return (
      h !== null && (this.boundingSphere = h.clone()),
      (this.drawRange.start = e.drawRange.start),
      (this.drawRange.count = e.drawRange.count),
      (this.userData = e.userData),
      this
    );
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const Bh = new dn(),
  Ss = new Yl(),
  gA = new Qo(),
  Nh = new te(),
  ho = new te(),
  po = new te(),
  mo = new te(),
  $0 = new te(),
  vA = new te(),
  _A = new ke(),
  xA = new ke(),
  yA = new ke(),
  Fh = new te(),
  kh = new te(),
  zh = new te(),
  bA = new te(),
  MA = new te();
class wn extends Rn {
  constructor(e = new fn(), t = new Zl()) {
    super(),
      (this.isMesh = !0),
      (this.type = "Mesh"),
      (this.geometry = e),
      (this.material = t),
      this.updateMorphTargets();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      e.morphTargetInfluences !== void 0 &&
        (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
      e.morphTargetDictionary !== void 0 &&
        (this.morphTargetDictionary = Object.assign(
          {},
          e.morphTargetDictionary
        )),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes,
      i = Object.keys(t);
    if (i.length > 0) {
      const r = t[i[0]];
      if (r !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let s = 0, u = r.length; s < u; s++) {
          const c = r[s].name || String(s);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[c] = s);
        }
      }
    }
  }
  getVertexPosition(e, t) {
    const i = this.geometry,
      r = i.attributes.position,
      s = i.morphAttributes.position,
      u = i.morphTargetsRelative;
    t.fromBufferAttribute(r, e);
    const c = this.morphTargetInfluences;
    if (s && c) {
      vA.set(0, 0, 0);
      for (let h = 0, p = s.length; h < p; h++) {
        const g = c[h],
          v = s[h];
        g !== 0 &&
          ($0.fromBufferAttribute(v, e),
          u ? vA.addScaledVector($0, g) : vA.addScaledVector($0.sub(t), g));
      }
      t.add(vA);
    }
    return t;
  }
  raycast(e, t) {
    const i = this.geometry,
      r = this.material,
      s = this.matrixWorld;
    r !== void 0 &&
      (i.boundingSphere === null && i.computeBoundingSphere(),
      gA.copy(i.boundingSphere),
      gA.applyMatrix4(s),
      Ss.copy(e.ray).recast(e.near),
      !(
        gA.containsPoint(Ss.origin) === !1 &&
        (Ss.intersectSphere(gA, Nh) === null ||
          Ss.origin.distanceToSquared(Nh) > (e.far - e.near) ** 2)
      ) &&
        (Bh.copy(s).invert(),
        Ss.copy(e.ray).applyMatrix4(Bh),
        !(i.boundingBox !== null && Ss.intersectsBox(i.boundingBox) === !1) &&
          this._computeIntersections(e, t, Ss)));
  }
  _computeIntersections(e, t, i) {
    let r;
    const s = this.geometry,
      u = this.material,
      c = s.index,
      h = s.attributes.position,
      p = s.attributes.uv,
      g = s.attributes.uv1,
      v = s.attributes.normal,
      x = s.groups,
      M = s.drawRange;
    if (c !== null)
      if (Array.isArray(u))
        for (let w = 0, C = x.length; w < C; w++) {
          const E = x[w],
            b = u[E.materialIndex],
            L = Math.max(E.start, M.start),
            S = Math.min(
              c.count,
              Math.min(E.start + E.count, M.start + M.count)
            );
          for (let R = L, U = S; R < U; R += 3) {
            const q = c.getX(R),
              I = c.getX(R + 1),
              N = c.getX(R + 2);
            (r = EA(this, b, e, i, p, g, v, q, I, N)),
              r &&
                ((r.faceIndex = Math.floor(R / 3)),
                (r.face.materialIndex = E.materialIndex),
                t.push(r));
          }
        }
      else {
        const w = Math.max(0, M.start),
          C = Math.min(c.count, M.start + M.count);
        for (let E = w, b = C; E < b; E += 3) {
          const L = c.getX(E),
            S = c.getX(E + 1),
            R = c.getX(E + 2);
          (r = EA(this, u, e, i, p, g, v, L, S, R)),
            r && ((r.faceIndex = Math.floor(E / 3)), t.push(r));
        }
      }
    else if (h !== void 0)
      if (Array.isArray(u))
        for (let w = 0, C = x.length; w < C; w++) {
          const E = x[w],
            b = u[E.materialIndex],
            L = Math.max(E.start, M.start),
            S = Math.min(
              h.count,
              Math.min(E.start + E.count, M.start + M.count)
            );
          for (let R = L, U = S; R < U; R += 3) {
            const q = R,
              I = R + 1,
              N = R + 2;
            (r = EA(this, b, e, i, p, g, v, q, I, N)),
              r &&
                ((r.faceIndex = Math.floor(R / 3)),
                (r.face.materialIndex = E.materialIndex),
                t.push(r));
          }
        }
      else {
        const w = Math.max(0, M.start),
          C = Math.min(h.count, M.start + M.count);
        for (let E = w, b = C; E < b; E += 3) {
          const L = E,
            S = E + 1,
            R = E + 2;
          (r = EA(this, u, e, i, p, g, v, L, S, R)),
            r && ((r.faceIndex = Math.floor(E / 3)), t.push(r));
        }
      }
  }
}
function A_(n, e, t, i, r, s, u, c) {
  let h;
  if (
    (e.side === fi
      ? (h = i.intersectTriangle(u, s, r, !0, c))
      : (h = i.intersectTriangle(r, s, u, e.side === cs, c)),
    h === null)
  )
    return null;
  MA.copy(c), MA.applyMatrix4(n.matrixWorld);
  const p = t.ray.origin.distanceTo(MA);
  return p < t.near || p > t.far
    ? null
    : { distance: p, point: MA.clone(), object: n };
}
function EA(n, e, t, i, r, s, u, c, h, p) {
  n.getVertexPosition(c, ho),
    n.getVertexPosition(h, po),
    n.getVertexPosition(p, mo);
  const g = A_(n, e, t, i, ho, po, mo, bA);
  if (g) {
    r &&
      (_A.fromBufferAttribute(r, c),
      xA.fromBufferAttribute(r, h),
      yA.fromBufferAttribute(r, p),
      (g.uv = Ji.getInterpolation(bA, ho, po, mo, _A, xA, yA, new ke()))),
      s &&
        (_A.fromBufferAttribute(s, c),
        xA.fromBufferAttribute(s, h),
        yA.fromBufferAttribute(s, p),
        (g.uv1 = Ji.getInterpolation(bA, ho, po, mo, _A, xA, yA, new ke())),
        (g.uv2 = g.uv1)),
      u &&
        (Fh.fromBufferAttribute(u, c),
        kh.fromBufferAttribute(u, h),
        zh.fromBufferAttribute(u, p),
        (g.normal = Ji.getInterpolation(bA, ho, po, mo, Fh, kh, zh, new te())),
        g.normal.dot(i.direction) > 0 && g.normal.multiplyScalar(-1));
    const v = { a: c, b: h, c: p, normal: new te(), materialIndex: 0 };
    Ji.getNormal(ho, po, mo, v.normal), (g.face = v);
  }
  return g;
}
class Qa extends fn {
  constructor(e = 1, t = 1, i = 1, r = 1, s = 1, u = 1) {
    super(),
      (this.type = "BoxGeometry"),
      (this.parameters = {
        width: e,
        height: t,
        depth: i,
        widthSegments: r,
        heightSegments: s,
        depthSegments: u,
      });
    const c = this;
    (r = Math.floor(r)), (s = Math.floor(s)), (u = Math.floor(u));
    const h = [],
      p = [],
      g = [],
      v = [];
    let x = 0,
      M = 0;
    w("z", "y", "x", -1, -1, i, t, e, u, s, 0),
      w("z", "y", "x", 1, -1, i, t, -e, u, s, 1),
      w("x", "z", "y", 1, 1, e, i, t, r, u, 2),
      w("x", "z", "y", 1, -1, e, i, -t, r, u, 3),
      w("x", "y", "z", 1, -1, e, t, i, r, s, 4),
      w("x", "y", "z", -1, -1, e, t, -i, r, s, 5),
      this.setIndex(h),
      this.setAttribute("position", new Jt(p, 3)),
      this.setAttribute("normal", new Jt(g, 3)),
      this.setAttribute("uv", new Jt(v, 2));
    function w(C, E, b, L, S, R, U, q, I, N, D) {
      const O = R / I,
        k = U / N,
        $ = R / 2,
        H = U / 2,
        Q = q / 2,
        F = I + 1,
        J = N + 1;
      let K = 0,
        ie = 0;
      const he = new te();
      for (let ce = 0; ce < J; ce++) {
        const oe = ce * k - H;
        for (let de = 0; de < F; de++) {
          const Se = de * O - $;
          (he[C] = Se * L),
            (he[E] = oe * S),
            (he[b] = Q),
            p.push(he.x, he.y, he.z),
            (he[C] = 0),
            (he[E] = 0),
            (he[b] = q > 0 ? 1 : -1),
            g.push(he.x, he.y, he.z),
            v.push(de / I),
            v.push(1 - ce / N),
            (K += 1);
        }
      }
      for (let ce = 0; ce < N; ce++)
        for (let oe = 0; oe < I; oe++) {
          const de = x + oe + F * ce,
            Se = x + oe + F * (ce + 1),
            Pe = x + (oe + 1) + F * (ce + 1),
            Oe = x + (oe + 1) + F * ce;
          h.push(de, Se, Oe), h.push(Se, Pe, Oe), (ie += 6);
        }
      c.addGroup(M, ie, D), (M += ie), (x += K);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Qa(
      e.width,
      e.height,
      e.depth,
      e.widthSegments,
      e.heightSegments,
      e.depthSegments
    );
  }
}
function zo(n) {
  const e = {};
  for (const t in n) {
    e[t] = {};
    for (const i in n[t]) {
      const r = n[t][i];
      r &&
      (r.isColor ||
        r.isMatrix3 ||
        r.isMatrix4 ||
        r.isVector2 ||
        r.isVector3 ||
        r.isVector4 ||
        r.isTexture ||
        r.isQuaternion)
        ? r.isRenderTargetTexture
          ? (console.warn(
              "UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."
            ),
            (e[t][i] = null))
          : (e[t][i] = r.clone())
        : Array.isArray(r)
        ? (e[t][i] = r.slice())
        : (e[t][i] = r);
    }
  }
  return e;
}
function oi(n) {
  const e = {};
  for (let t = 0; t < n.length; t++) {
    const i = zo(n[t]);
    for (const r in i) e[r] = i[r];
  }
  return e;
}
function l_(n) {
  const e = [];
  for (let t = 0; t < n.length; t++) e.push(n[t].clone());
  return e;
}
function B1(n) {
  return n.getRenderTarget() === null ? n.outputColorSpace : xr;
}
const N1 = { clone: zo, merge: oi };
var u_ = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,
  c_ = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class or extends Qs {
  constructor(e) {
    super(),
      (this.isShaderMaterial = !0),
      (this.type = "ShaderMaterial"),
      (this.defines = {}),
      (this.uniforms = {}),
      (this.uniformsGroups = []),
      (this.vertexShader = u_),
      (this.fragmentShader = c_),
      (this.linewidth = 1),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.fog = !1),
      (this.lights = !1),
      (this.clipping = !1),
      (this.forceSinglePass = !0),
      (this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1,
      }),
      (this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv1: [0, 0],
      }),
      (this.index0AttributeName = void 0),
      (this.uniformsNeedUpdate = !1),
      (this.glslVersion = null),
      e !== void 0 && this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.fragmentShader = e.fragmentShader),
      (this.vertexShader = e.vertexShader),
      (this.uniforms = zo(e.uniforms)),
      (this.uniformsGroups = l_(e.uniformsGroups)),
      (this.defines = Object.assign({}, e.defines)),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.fog = e.fog),
      (this.lights = e.lights),
      (this.clipping = e.clipping),
      (this.extensions = Object.assign({}, e.extensions)),
      (this.glslVersion = e.glslVersion),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    (t.glslVersion = this.glslVersion), (t.uniforms = {});
    for (const r in this.uniforms) {
      const u = this.uniforms[r].value;
      u && u.isTexture
        ? (t.uniforms[r] = { type: "t", value: u.toJSON(e).uuid })
        : u && u.isColor
        ? (t.uniforms[r] = { type: "c", value: u.getHex() })
        : u && u.isVector2
        ? (t.uniforms[r] = { type: "v2", value: u.toArray() })
        : u && u.isVector3
        ? (t.uniforms[r] = { type: "v3", value: u.toArray() })
        : u && u.isVector4
        ? (t.uniforms[r] = { type: "v4", value: u.toArray() })
        : u && u.isMatrix3
        ? (t.uniforms[r] = { type: "m3", value: u.toArray() })
        : u && u.isMatrix4
        ? (t.uniforms[r] = { type: "m4", value: u.toArray() })
        : (t.uniforms[r] = { value: u });
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines),
      (t.vertexShader = this.vertexShader),
      (t.fragmentShader = this.fragmentShader),
      (t.lights = this.lights),
      (t.clipping = this.clipping);
    const i = {};
    for (const r in this.extensions) this.extensions[r] === !0 && (i[r] = !0);
    return Object.keys(i).length > 0 && (t.extensions = i), t;
  }
}
class F1 extends Rn {
  constructor() {
    super(),
      (this.isCamera = !0),
      (this.type = "Camera"),
      (this.matrixWorldInverse = new dn()),
      (this.projectionMatrix = new dn()),
      (this.projectionMatrixInverse = new dn()),
      (this.coordinateSystem = Ur);
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      this.matrixWorldInverse.copy(e.matrixWorldInverse),
      this.projectionMatrix.copy(e.projectionMatrix),
      this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
      (this.coordinateSystem = e.coordinateSystem),
      this
    );
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(!0, !1);
    const t = this.matrixWorld.elements;
    return e.set(-t[8], -t[9], -t[10]).normalize();
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(e, t) {
    super.updateWorldMatrix(e, t),
      this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class ki extends F1 {
  constructor(e = 50, t = 1, i = 0.1, r = 2e3) {
    super(),
      (this.isPerspectiveCamera = !0),
      (this.type = "PerspectiveCamera"),
      (this.fov = e),
      (this.zoom = 1),
      (this.near = i),
      (this.far = r),
      (this.focus = 10),
      (this.aspect = t),
      (this.view = null),
      (this.filmGauge = 35),
      (this.filmOffset = 0),
      this.updateProjectionMatrix();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.fov = e.fov),
      (this.zoom = e.zoom),
      (this.near = e.near),
      (this.far = e.far),
      (this.focus = e.focus),
      (this.aspect = e.aspect),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      (this.filmGauge = e.filmGauge),
      (this.filmOffset = e.filmOffset),
      this
    );
  }
  setFocalLength(e) {
    const t = (0.5 * this.getFilmHeight()) / e;
    (this.fov = La * 2 * Math.atan(t)), this.updateProjectionMatrix();
  }
  getFocalLength() {
    const e = Math.tan(ba * 0.5 * this.fov);
    return (0.5 * this.getFilmHeight()) / e;
  }
  getEffectiveFOV() {
    return La * 2 * Math.atan(Math.tan(ba * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(e, t, i, r, s, u) {
    (this.aspect = e / t),
      this.view === null &&
        (this.view = {
          enabled: !0,
          fullWidth: 1,
          fullHeight: 1,
          offsetX: 0,
          offsetY: 0,
          width: 1,
          height: 1,
        }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = t),
      (this.view.offsetX = i),
      (this.view.offsetY = r),
      (this.view.width = s),
      (this.view.height = u),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = this.near;
    let t = (e * Math.tan(ba * 0.5 * this.fov)) / this.zoom,
      i = 2 * t,
      r = this.aspect * i,
      s = -0.5 * r;
    const u = this.view;
    if (this.view !== null && this.view.enabled) {
      const h = u.fullWidth,
        p = u.fullHeight;
      (s += (u.offsetX * r) / h),
        (t -= (u.offsetY * i) / p),
        (r *= u.width / h),
        (i *= u.height / p);
    }
    const c = this.filmOffset;
    c !== 0 && (s += (e * c) / this.getFilmWidth()),
      this.projectionMatrix.makePerspective(
        s,
        s + r,
        t,
        t - i,
        e,
        this.far,
        this.coordinateSystem
      ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.fov = this.fov),
      (t.object.zoom = this.zoom),
      (t.object.near = this.near),
      (t.object.far = this.far),
      (t.object.focus = this.focus),
      (t.object.aspect = this.aspect),
      this.view !== null && (t.object.view = Object.assign({}, this.view)),
      (t.object.filmGauge = this.filmGauge),
      (t.object.filmOffset = this.filmOffset),
      t
    );
  }
}
const go = -90,
  vo = 1;
class f_ extends Rn {
  constructor(e, t, i) {
    super(),
      (this.type = "CubeCamera"),
      (this.renderTarget = i),
      (this.coordinateSystem = null);
    const r = new ki(go, vo, e, t);
    (r.layers = this.layers), this.add(r);
    const s = new ki(go, vo, e, t);
    (s.layers = this.layers), this.add(s);
    const u = new ki(go, vo, e, t);
    (u.layers = this.layers), this.add(u);
    const c = new ki(go, vo, e, t);
    (c.layers = this.layers), this.add(c);
    const h = new ki(go, vo, e, t);
    (h.layers = this.layers), this.add(h);
    const p = new ki(go, vo, e, t);
    (p.layers = this.layers), this.add(p);
  }
  updateCoordinateSystem() {
    const e = this.coordinateSystem,
      t = this.children.concat(),
      [i, r, s, u, c, h] = t;
    for (const p of t) this.remove(p);
    if (e === Ur)
      i.up.set(0, 1, 0),
        i.lookAt(1, 0, 0),
        r.up.set(0, 1, 0),
        r.lookAt(-1, 0, 0),
        s.up.set(0, 0, -1),
        s.lookAt(0, 1, 0),
        u.up.set(0, 0, 1),
        u.lookAt(0, -1, 0),
        c.up.set(0, 1, 0),
        c.lookAt(0, 0, 1),
        h.up.set(0, 1, 0),
        h.lookAt(0, 0, -1);
    else if (e === ll)
      i.up.set(0, -1, 0),
        i.lookAt(-1, 0, 0),
        r.up.set(0, -1, 0),
        r.lookAt(1, 0, 0),
        s.up.set(0, 0, 1),
        s.lookAt(0, 1, 0),
        u.up.set(0, 0, -1),
        u.lookAt(0, -1, 0),
        c.up.set(0, -1, 0),
        c.lookAt(0, 0, 1),
        h.up.set(0, -1, 0),
        h.lookAt(0, 0, -1);
    else
      throw new Error(
        "THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " +
          e
      );
    for (const p of t) this.add(p), p.updateMatrixWorld();
  }
  update(e, t) {
    this.parent === null && this.updateMatrixWorld();
    const i = this.renderTarget;
    this.coordinateSystem !== e.coordinateSystem &&
      ((this.coordinateSystem = e.coordinateSystem),
      this.updateCoordinateSystem());
    const [r, s, u, c, h, p] = this.children,
      g = e.getRenderTarget(),
      v = e.xr.enabled;
    e.xr.enabled = !1;
    const x = i.texture.generateMipmaps;
    (i.texture.generateMipmaps = !1),
      e.setRenderTarget(i, 0),
      e.render(t, r),
      e.setRenderTarget(i, 1),
      e.render(t, s),
      e.setRenderTarget(i, 2),
      e.render(t, u),
      e.setRenderTarget(i, 3),
      e.render(t, c),
      e.setRenderTarget(i, 4),
      e.render(t, h),
      (i.texture.generateMipmaps = x),
      e.setRenderTarget(i, 5),
      e.render(t, p),
      e.setRenderTarget(g),
      (e.xr.enabled = v),
      (i.texture.needsPMREMUpdate = !0);
  }
}
class k1 extends vi {
  constructor(e, t, i, r, s, u, c, h, p, g) {
    (e = e !== void 0 ? e : []),
      (t = t !== void 0 ? t : No),
      super(e, t, i, r, s, u, c, h, p, g),
      (this.isCubeTexture = !0),
      (this.flipY = !1);
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class h_ extends Fs {
  constructor(e = 1, t = {}) {
    super(e, e, t), (this.isWebGLCubeRenderTarget = !0);
    const i = { width: e, height: e, depth: 1 },
      r = [i, i, i, i, i, i];
    t.encoding !== void 0 &&
      (Ea(
        "THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."
      ),
      (t.colorSpace = t.encoding === Us ? hn : Bs)),
      (this.texture = new k1(
        r,
        t.mapping,
        t.wrapS,
        t.wrapT,
        t.magFilter,
        t.minFilter,
        t.format,
        t.type,
        t.anisotropy,
        t.colorSpace
      )),
      (this.texture.isRenderTargetTexture = !0),
      (this.texture.generateMipmaps =
        t.generateMipmaps !== void 0 ? t.generateMipmaps : !1),
      (this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : Fi);
  }
  fromEquirectangularTexture(e, t) {
    (this.texture.type = t.type),
      (this.texture.colorSpace = t.colorSpace),
      (this.texture.generateMipmaps = t.generateMipmaps),
      (this.texture.minFilter = t.minFilter),
      (this.texture.magFilter = t.magFilter);
    const i = {
        uniforms: { tEquirect: { value: null } },
        vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
        fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
      },
      r = new Qa(5, 5, 5),
      s = new or({
        name: "CubemapFromEquirect",
        uniforms: zo(i.uniforms),
        vertexShader: i.vertexShader,
        fragmentShader: i.fragmentShader,
        side: fi,
        blending: as,
      });
    s.uniforms.tEquirect.value = t;
    const u = new wn(r, s),
      c = t.minFilter;
    return (
      t.minFilter === Ra && (t.minFilter = Fi),
      new f_(1, 10, this).update(e, u),
      (t.minFilter = c),
      u.geometry.dispose(),
      u.material.dispose(),
      this
    );
  }
  clear(e, t, i, r) {
    const s = e.getRenderTarget();
    for (let u = 0; u < 6; u++) e.setRenderTarget(this, u), e.clear(t, i, r);
    e.setRenderTarget(s);
  }
}
const Y0 = new te(),
  d_ = new te(),
  p_ = new Gt();
class is {
  constructor(e = new te(1, 0, 0), t = 0) {
    (this.isPlane = !0), (this.normal = e), (this.constant = t);
  }
  set(e, t) {
    return this.normal.copy(e), (this.constant = t), this;
  }
  setComponents(e, t, i, r) {
    return this.normal.set(e, t, i), (this.constant = r), this;
  }
  setFromNormalAndCoplanarPoint(e, t) {
    return this.normal.copy(e), (this.constant = -t.dot(this.normal)), this;
  }
  setFromCoplanarPoints(e, t, i) {
    const r = Y0.subVectors(i, t).cross(d_.subVectors(e, t)).normalize();
    return this.setFromNormalAndCoplanarPoint(r, e), this;
  }
  copy(e) {
    return this.normal.copy(e.normal), (this.constant = e.constant), this;
  }
  normalize() {
    const e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), (this.constant *= e), this;
  }
  negate() {
    return (this.constant *= -1), this.normal.negate(), this;
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, t) {
    return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
  }
  intersectLine(e, t) {
    const i = e.delta(Y0),
      r = this.normal.dot(i);
    if (r === 0)
      return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
    const s = -(e.start.dot(this.normal) + this.constant) / r;
    return s < 0 || s > 1 ? null : t.copy(e.start).addScaledVector(i, s);
  }
  intersectsLine(e) {
    const t = this.distanceToPoint(e.start),
      i = this.distanceToPoint(e.end);
    return (t < 0 && i > 0) || (i < 0 && t > 0);
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, t) {
    const i = t || p_.getNormalMatrix(e),
      r = this.coplanarPoint(Y0).applyMatrix4(e),
      s = this.normal.applyMatrix3(i).normalize();
    return (this.constant = -r.dot(s)), this;
  }
  translate(e) {
    return (this.constant -= e.dot(this.normal)), this;
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Ts = new Qo(),
  wA = new te();
class wc {
  constructor(
    e = new is(),
    t = new is(),
    i = new is(),
    r = new is(),
    s = new is(),
    u = new is()
  ) {
    this.planes = [e, t, i, r, s, u];
  }
  set(e, t, i, r, s, u) {
    const c = this.planes;
    return (
      c[0].copy(e),
      c[1].copy(t),
      c[2].copy(i),
      c[3].copy(r),
      c[4].copy(s),
      c[5].copy(u),
      this
    );
  }
  copy(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) t[i].copy(e.planes[i]);
    return this;
  }
  setFromProjectionMatrix(e, t = Ur) {
    const i = this.planes,
      r = e.elements,
      s = r[0],
      u = r[1],
      c = r[2],
      h = r[3],
      p = r[4],
      g = r[5],
      v = r[6],
      x = r[7],
      M = r[8],
      w = r[9],
      C = r[10],
      E = r[11],
      b = r[12],
      L = r[13],
      S = r[14],
      R = r[15];
    if (
      (i[0].setComponents(h - s, x - p, E - M, R - b).normalize(),
      i[1].setComponents(h + s, x + p, E + M, R + b).normalize(),
      i[2].setComponents(h + u, x + g, E + w, R + L).normalize(),
      i[3].setComponents(h - u, x - g, E - w, R - L).normalize(),
      i[4].setComponents(h - c, x - v, E - C, R - S).normalize(),
      t === Ur)
    )
      i[5].setComponents(h + c, x + v, E + C, R + S).normalize();
    else if (t === ll) i[5].setComponents(c, v, C, S).normalize();
    else
      throw new Error(
        "THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " +
          t
      );
    return this;
  }
  intersectsObject(e) {
    if (e.boundingSphere !== void 0)
      e.boundingSphere === null && e.computeBoundingSphere(),
        Ts.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
    else {
      const t = e.geometry;
      t.boundingSphere === null && t.computeBoundingSphere(),
        Ts.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
    }
    return this.intersectsSphere(Ts);
  }
  intersectsSprite(e) {
    return (
      Ts.center.set(0, 0, 0),
      (Ts.radius = 0.7071067811865476),
      Ts.applyMatrix4(e.matrixWorld),
      this.intersectsSphere(Ts)
    );
  }
  intersectsSphere(e) {
    const t = this.planes,
      i = e.center,
      r = -e.radius;
    for (let s = 0; s < 6; s++) if (t[s].distanceToPoint(i) < r) return !1;
    return !0;
  }
  intersectsBox(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) {
      const r = t[i];
      if (
        ((wA.x = r.normal.x > 0 ? e.max.x : e.min.x),
        (wA.y = r.normal.y > 0 ? e.max.y : e.min.y),
        (wA.z = r.normal.z > 0 ? e.max.z : e.min.z),
        r.distanceToPoint(wA) < 0)
      )
        return !1;
    }
    return !0;
  }
  containsPoint(e) {
    const t = this.planes;
    for (let i = 0; i < 6; i++) if (t[i].distanceToPoint(e) < 0) return !1;
    return !0;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function z1() {
  let n = null,
    e = !1,
    t = null,
    i = null;
  function r(s, u) {
    t(s, u), (i = n.requestAnimationFrame(r));
  }
  return {
    start: function () {
      e !== !0 && t !== null && ((i = n.requestAnimationFrame(r)), (e = !0));
    },
    stop: function () {
      n.cancelAnimationFrame(i), (e = !1);
    },
    setAnimationLoop: function (s) {
      t = s;
    },
    setContext: function (s) {
      n = s;
    },
  };
}
function m_(n, e) {
  const t = e.isWebGL2,
    i = new WeakMap();
  function r(p, g) {
    const v = p.array,
      x = p.usage,
      M = n.createBuffer();
    n.bindBuffer(g, M), n.bufferData(g, v, x), p.onUploadCallback();
    let w;
    if (v instanceof Float32Array) w = n.FLOAT;
    else if (v instanceof Uint16Array)
      if (p.isFloat16BufferAttribute)
        if (t) w = n.HALF_FLOAT;
        else
          throw new Error(
            "THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."
          );
      else w = n.UNSIGNED_SHORT;
    else if (v instanceof Int16Array) w = n.SHORT;
    else if (v instanceof Uint32Array) w = n.UNSIGNED_INT;
    else if (v instanceof Int32Array) w = n.INT;
    else if (v instanceof Int8Array) w = n.BYTE;
    else if (v instanceof Uint8Array) w = n.UNSIGNED_BYTE;
    else if (v instanceof Uint8ClampedArray) w = n.UNSIGNED_BYTE;
    else
      throw new Error(
        "THREE.WebGLAttributes: Unsupported buffer data format: " + v
      );
    return {
      buffer: M,
      type: w,
      bytesPerElement: v.BYTES_PER_ELEMENT,
      version: p.version,
    };
  }
  function s(p, g, v) {
    const x = g.array,
      M = g.updateRange;
    n.bindBuffer(v, p),
      M.count === -1
        ? n.bufferSubData(v, 0, x)
        : (t
            ? n.bufferSubData(
                v,
                M.offset * x.BYTES_PER_ELEMENT,
                x,
                M.offset,
                M.count
              )
            : n.bufferSubData(
                v,
                M.offset * x.BYTES_PER_ELEMENT,
                x.subarray(M.offset, M.offset + M.count)
              ),
          (M.count = -1)),
      g.onUploadCallback();
  }
  function u(p) {
    return p.isInterleavedBufferAttribute && (p = p.data), i.get(p);
  }
  function c(p) {
    p.isInterleavedBufferAttribute && (p = p.data);
    const g = i.get(p);
    g && (n.deleteBuffer(g.buffer), i.delete(p));
  }
  function h(p, g) {
    if (p.isGLBufferAttribute) {
      const x = i.get(p);
      (!x || x.version < p.version) &&
        i.set(p, {
          buffer: p.buffer,
          type: p.type,
          bytesPerElement: p.elementSize,
          version: p.version,
        });
      return;
    }
    p.isInterleavedBufferAttribute && (p = p.data);
    const v = i.get(p);
    v === void 0
      ? i.set(p, r(p, g))
      : v.version < p.version && (s(v.buffer, p, g), (v.version = p.version));
  }
  return { get: u, remove: c, update: h };
}
class Sc extends fn {
  constructor(e = 1, t = 1, i = 1, r = 1) {
    super(),
      (this.type = "PlaneGeometry"),
      (this.parameters = {
        width: e,
        height: t,
        widthSegments: i,
        heightSegments: r,
      });
    const s = e / 2,
      u = t / 2,
      c = Math.floor(i),
      h = Math.floor(r),
      p = c + 1,
      g = h + 1,
      v = e / c,
      x = t / h,
      M = [],
      w = [],
      C = [],
      E = [];
    for (let b = 0; b < g; b++) {
      const L = b * x - u;
      for (let S = 0; S < p; S++) {
        const R = S * v - s;
        w.push(R, -L, 0), C.push(0, 0, 1), E.push(S / c), E.push(1 - b / h);
      }
    }
    for (let b = 0; b < h; b++)
      for (let L = 0; L < c; L++) {
        const S = L + p * b,
          R = L + p * (b + 1),
          U = L + 1 + p * (b + 1),
          q = L + 1 + p * b;
        M.push(S, R, q), M.push(R, U, q);
      }
    this.setIndex(M),
      this.setAttribute("position", new Jt(w, 3)),
      this.setAttribute("normal", new Jt(C, 3)),
      this.setAttribute("uv", new Jt(E, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Sc(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var g_ = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,
  v_ = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,
  __ = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,
  x_ = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  y_ = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,
  b_ = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
  M_ = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
  E_ = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
  w_ = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,
  S_ = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
  T_ = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,
  C_ = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,
  R_ = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
  P_ = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,
  L_ = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
  D_ = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
  I_ = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
  O_ = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
  q_ = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
  U_ = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,
  B_ = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,
  N_ = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,
  F_ = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
  k_ = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
  z_ = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
  G_ = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,
  H_ = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
  V_ = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
  W_ = "gl_FragColor = linearToOutputTexel( gl_FragColor );",
  j_ = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,
  X_ = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
  Q_ = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,
  $_ = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
  Y_ = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
  Z_ = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
  K_ = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
  J_ = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
  e4 = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
  t4 = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
  n4 = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,
  i4 = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,
  r4 = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
  s4 = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,
  o4 = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,
  a4 = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
  A4 = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,
  l4 = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
  u4 = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,
  c4 = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
  f4 = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,
  h4 = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,
  d4 = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
  p4 = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
  m4 = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
  g4 = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,
  v4 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
  _4 = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
  x4 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,
  y4 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,
  b4 = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,
  M4 = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
  E4 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
  w4 = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
  S4 = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
  T4 = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
  C4 = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,
  R4 = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,
  P4 = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,
  L4 = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,
  D4 = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,
  I4 = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
  O4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  q4 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
  U4 = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
  B4 = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,
  N4 = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,
  F4 = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,
  k4 = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,
  z4 = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,
  G4 = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
  H4 = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,
  V4 = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
  W4 = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
  j4 = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
  X4 = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
  Q4 = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
  $4 = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
  Y4 = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,
  Z4 = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
  K4 = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,
  J4 = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
  ex = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
  tx = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,
  nx = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
  ix = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
  rx = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
  sx = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
  ox = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
  ax = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
  Ax = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,
  lx = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,
  ux = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  cx = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
  fx = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,
  hx = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const dx = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
  px = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  mx = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  gx = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  vx = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
  _x = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  xx = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
  yx = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
  bx = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
  Mx = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
  Ex = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
  wx = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
  Sx = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  Tx = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  Cx = `#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
  Rx = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Px = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  Lx = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Dx = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
  Ix = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Ox = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
  qx = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,
  Ux = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  Bx = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Nx = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
  Fx = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  kx = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  zx = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
  Gx = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
  Hx = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
  Vx = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
  Wx = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  jx = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
  Xx = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
  Ft = {
    alphahash_fragment: g_,
    alphahash_pars_fragment: v_,
    alphamap_fragment: __,
    alphamap_pars_fragment: x_,
    alphatest_fragment: y_,
    alphatest_pars_fragment: b_,
    aomap_fragment: M_,
    aomap_pars_fragment: E_,
    begin_vertex: w_,
    beginnormal_vertex: S_,
    bsdfs: T_,
    iridescence_fragment: C_,
    bumpmap_pars_fragment: R_,
    clipping_planes_fragment: P_,
    clipping_planes_pars_fragment: L_,
    clipping_planes_pars_vertex: D_,
    clipping_planes_vertex: I_,
    color_fragment: O_,
    color_pars_fragment: q_,
    color_pars_vertex: U_,
    color_vertex: B_,
    common: N_,
    cube_uv_reflection_fragment: F_,
    defaultnormal_vertex: k_,
    displacementmap_pars_vertex: z_,
    displacementmap_vertex: G_,
    emissivemap_fragment: H_,
    emissivemap_pars_fragment: V_,
    colorspace_fragment: W_,
    colorspace_pars_fragment: j_,
    envmap_fragment: X_,
    envmap_common_pars_fragment: Q_,
    envmap_pars_fragment: $_,
    envmap_pars_vertex: Y_,
    envmap_physical_pars_fragment: A4,
    envmap_vertex: Z_,
    fog_vertex: K_,
    fog_pars_vertex: J_,
    fog_fragment: e4,
    fog_pars_fragment: t4,
    gradientmap_pars_fragment: n4,
    lightmap_fragment: i4,
    lightmap_pars_fragment: r4,
    lights_lambert_fragment: s4,
    lights_lambert_pars_fragment: o4,
    lights_pars_begin: a4,
    lights_toon_fragment: l4,
    lights_toon_pars_fragment: u4,
    lights_phong_fragment: c4,
    lights_phong_pars_fragment: f4,
    lights_physical_fragment: h4,
    lights_physical_pars_fragment: d4,
    lights_fragment_begin: p4,
    lights_fragment_maps: m4,
    lights_fragment_end: g4,
    logdepthbuf_fragment: v4,
    logdepthbuf_pars_fragment: _4,
    logdepthbuf_pars_vertex: x4,
    logdepthbuf_vertex: y4,
    map_fragment: b4,
    map_pars_fragment: M4,
    map_particle_fragment: E4,
    map_particle_pars_fragment: w4,
    metalnessmap_fragment: S4,
    metalnessmap_pars_fragment: T4,
    morphcolor_vertex: C4,
    morphnormal_vertex: R4,
    morphtarget_pars_vertex: P4,
    morphtarget_vertex: L4,
    normal_fragment_begin: D4,
    normal_fragment_maps: I4,
    normal_pars_fragment: O4,
    normal_pars_vertex: q4,
    normal_vertex: U4,
    normalmap_pars_fragment: B4,
    clearcoat_normal_fragment_begin: N4,
    clearcoat_normal_fragment_maps: F4,
    clearcoat_pars_fragment: k4,
    iridescence_pars_fragment: z4,
    opaque_fragment: G4,
    packing: H4,
    premultiplied_alpha_fragment: V4,
    project_vertex: W4,
    dithering_fragment: j4,
    dithering_pars_fragment: X4,
    roughnessmap_fragment: Q4,
    roughnessmap_pars_fragment: $4,
    shadowmap_pars_fragment: Y4,
    shadowmap_pars_vertex: Z4,
    shadowmap_vertex: K4,
    shadowmask_pars_fragment: J4,
    skinbase_vertex: ex,
    skinning_pars_vertex: tx,
    skinning_vertex: nx,
    skinnormal_vertex: ix,
    specularmap_fragment: rx,
    specularmap_pars_fragment: sx,
    tonemapping_fragment: ox,
    tonemapping_pars_fragment: ax,
    transmission_fragment: Ax,
    transmission_pars_fragment: lx,
    uv_pars_fragment: ux,
    uv_pars_vertex: cx,
    uv_vertex: fx,
    worldpos_vertex: hx,
    background_vert: dx,
    background_frag: px,
    backgroundCube_vert: mx,
    backgroundCube_frag: gx,
    cube_vert: vx,
    cube_frag: _x,
    depth_vert: xx,
    depth_frag: yx,
    distanceRGBA_vert: bx,
    distanceRGBA_frag: Mx,
    equirect_vert: Ex,
    equirect_frag: wx,
    linedashed_vert: Sx,
    linedashed_frag: Tx,
    meshbasic_vert: Cx,
    meshbasic_frag: Rx,
    meshlambert_vert: Px,
    meshlambert_frag: Lx,
    meshmatcap_vert: Dx,
    meshmatcap_frag: Ix,
    meshnormal_vert: Ox,
    meshnormal_frag: qx,
    meshphong_vert: Ux,
    meshphong_frag: Bx,
    meshphysical_vert: Nx,
    meshphysical_frag: Fx,
    meshtoon_vert: kx,
    meshtoon_frag: zx,
    points_vert: Gx,
    points_frag: Hx,
    shadow_vert: Vx,
    shadow_frag: Wx,
    sprite_vert: jx,
    sprite_frag: Xx,
  },
  Je = {
    common: {
      diffuse: { value: new Dt(16777215) },
      opacity: { value: 1 },
      map: { value: null },
      mapTransform: { value: new Gt() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
    },
    specularmap: {
      specularMap: { value: null },
      specularMapTransform: { value: new Gt() },
    },
    envmap: {
      envMap: { value: null },
      flipEnvMap: { value: -1 },
      reflectivity: { value: 1 },
      ior: { value: 1.5 },
      refractionRatio: { value: 0.98 },
    },
    aomap: {
      aoMap: { value: null },
      aoMapIntensity: { value: 1 },
      aoMapTransform: { value: new Gt() },
    },
    lightmap: {
      lightMap: { value: null },
      lightMapIntensity: { value: 1 },
      lightMapTransform: { value: new Gt() },
    },
    bumpmap: {
      bumpMap: { value: null },
      bumpMapTransform: { value: new Gt() },
      bumpScale: { value: 1 },
    },
    normalmap: {
      normalMap: { value: null },
      normalMapTransform: { value: new Gt() },
      normalScale: { value: new ke(1, 1) },
    },
    displacementmap: {
      displacementMap: { value: null },
      displacementMapTransform: { value: new Gt() },
      displacementScale: { value: 1 },
      displacementBias: { value: 0 },
    },
    emissivemap: {
      emissiveMap: { value: null },
      emissiveMapTransform: { value: new Gt() },
    },
    metalnessmap: {
      metalnessMap: { value: null },
      metalnessMapTransform: { value: new Gt() },
    },
    roughnessmap: {
      roughnessMap: { value: null },
      roughnessMapTransform: { value: new Gt() },
    },
    gradientmap: { gradientMap: { value: null } },
    fog: {
      fogDensity: { value: 25e-5 },
      fogNear: { value: 1 },
      fogFar: { value: 2e3 },
      fogColor: { value: new Dt(16777215) },
    },
    lights: {
      ambientLightColor: { value: [] },
      lightProbe: { value: [] },
      directionalLights: {
        value: [],
        properties: { direction: {}, color: {} },
      },
      directionalLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      directionalShadowMap: { value: [] },
      directionalShadowMatrix: { value: [] },
      spotLights: {
        value: [],
        properties: {
          color: {},
          position: {},
          direction: {},
          distance: {},
          coneCos: {},
          penumbraCos: {},
          decay: {},
        },
      },
      spotLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
        },
      },
      spotLightMap: { value: [] },
      spotShadowMap: { value: [] },
      spotLightMatrix: { value: [] },
      pointLights: {
        value: [],
        properties: { color: {}, position: {}, decay: {}, distance: {} },
      },
      pointLightShadows: {
        value: [],
        properties: {
          shadowBias: {},
          shadowNormalBias: {},
          shadowRadius: {},
          shadowMapSize: {},
          shadowCameraNear: {},
          shadowCameraFar: {},
        },
      },
      pointShadowMap: { value: [] },
      pointShadowMatrix: { value: [] },
      hemisphereLights: {
        value: [],
        properties: { direction: {}, skyColor: {}, groundColor: {} },
      },
      rectAreaLights: {
        value: [],
        properties: { color: {}, position: {}, width: {}, height: {} },
      },
      ltc_1: { value: null },
      ltc_2: { value: null },
    },
    points: {
      diffuse: { value: new Dt(16777215) },
      opacity: { value: 1 },
      size: { value: 1 },
      scale: { value: 1 },
      map: { value: null },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
      uvTransform: { value: new Gt() },
    },
    sprite: {
      diffuse: { value: new Dt(16777215) },
      opacity: { value: 1 },
      center: { value: new ke(0.5, 0.5) },
      rotation: { value: 0 },
      map: { value: null },
      mapTransform: { value: new Gt() },
      alphaMap: { value: null },
      alphaMapTransform: { value: new Gt() },
      alphaTest: { value: 0 },
    },
  },
  er = {
    basic: {
      uniforms: oi([
        Je.common,
        Je.specularmap,
        Je.envmap,
        Je.aomap,
        Je.lightmap,
        Je.fog,
      ]),
      vertexShader: Ft.meshbasic_vert,
      fragmentShader: Ft.meshbasic_frag,
    },
    lambert: {
      uniforms: oi([
        Je.common,
        Je.specularmap,
        Je.envmap,
        Je.aomap,
        Je.lightmap,
        Je.emissivemap,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        Je.fog,
        Je.lights,
        { emissive: { value: new Dt(0) } },
      ]),
      vertexShader: Ft.meshlambert_vert,
      fragmentShader: Ft.meshlambert_frag,
    },
    phong: {
      uniforms: oi([
        Je.common,
        Je.specularmap,
        Je.envmap,
        Je.aomap,
        Je.lightmap,
        Je.emissivemap,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        Je.fog,
        Je.lights,
        {
          emissive: { value: new Dt(0) },
          specular: { value: new Dt(1118481) },
          shininess: { value: 30 },
        },
      ]),
      vertexShader: Ft.meshphong_vert,
      fragmentShader: Ft.meshphong_frag,
    },
    standard: {
      uniforms: oi([
        Je.common,
        Je.envmap,
        Je.aomap,
        Je.lightmap,
        Je.emissivemap,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        Je.roughnessmap,
        Je.metalnessmap,
        Je.fog,
        Je.lights,
        {
          emissive: { value: new Dt(0) },
          roughness: { value: 1 },
          metalness: { value: 0 },
          envMapIntensity: { value: 1 },
        },
      ]),
      vertexShader: Ft.meshphysical_vert,
      fragmentShader: Ft.meshphysical_frag,
    },
    toon: {
      uniforms: oi([
        Je.common,
        Je.aomap,
        Je.lightmap,
        Je.emissivemap,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        Je.gradientmap,
        Je.fog,
        Je.lights,
        { emissive: { value: new Dt(0) } },
      ]),
      vertexShader: Ft.meshtoon_vert,
      fragmentShader: Ft.meshtoon_frag,
    },
    matcap: {
      uniforms: oi([
        Je.common,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        Je.fog,
        { matcap: { value: null } },
      ]),
      vertexShader: Ft.meshmatcap_vert,
      fragmentShader: Ft.meshmatcap_frag,
    },
    points: {
      uniforms: oi([Je.points, Je.fog]),
      vertexShader: Ft.points_vert,
      fragmentShader: Ft.points_frag,
    },
    dashed: {
      uniforms: oi([
        Je.common,
        Je.fog,
        {
          scale: { value: 1 },
          dashSize: { value: 1 },
          totalSize: { value: 2 },
        },
      ]),
      vertexShader: Ft.linedashed_vert,
      fragmentShader: Ft.linedashed_frag,
    },
    depth: {
      uniforms: oi([Je.common, Je.displacementmap]),
      vertexShader: Ft.depth_vert,
      fragmentShader: Ft.depth_frag,
    },
    normal: {
      uniforms: oi([
        Je.common,
        Je.bumpmap,
        Je.normalmap,
        Je.displacementmap,
        { opacity: { value: 1 } },
      ]),
      vertexShader: Ft.meshnormal_vert,
      fragmentShader: Ft.meshnormal_frag,
    },
    sprite: {
      uniforms: oi([Je.sprite, Je.fog]),
      vertexShader: Ft.sprite_vert,
      fragmentShader: Ft.sprite_frag,
    },
    background: {
      uniforms: {
        uvTransform: { value: new Gt() },
        t2D: { value: null },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Ft.background_vert,
      fragmentShader: Ft.background_frag,
    },
    backgroundCube: {
      uniforms: {
        envMap: { value: null },
        flipEnvMap: { value: -1 },
        backgroundBlurriness: { value: 0 },
        backgroundIntensity: { value: 1 },
      },
      vertexShader: Ft.backgroundCube_vert,
      fragmentShader: Ft.backgroundCube_frag,
    },
    cube: {
      uniforms: {
        tCube: { value: null },
        tFlip: { value: -1 },
        opacity: { value: 1 },
      },
      vertexShader: Ft.cube_vert,
      fragmentShader: Ft.cube_frag,
    },
    equirect: {
      uniforms: { tEquirect: { value: null } },
      vertexShader: Ft.equirect_vert,
      fragmentShader: Ft.equirect_frag,
    },
    distanceRGBA: {
      uniforms: oi([
        Je.common,
        Je.displacementmap,
        {
          referencePosition: { value: new te() },
          nearDistance: { value: 1 },
          farDistance: { value: 1e3 },
        },
      ]),
      vertexShader: Ft.distanceRGBA_vert,
      fragmentShader: Ft.distanceRGBA_frag,
    },
    shadow: {
      uniforms: oi([
        Je.lights,
        Je.fog,
        { color: { value: new Dt(0) }, opacity: { value: 1 } },
      ]),
      vertexShader: Ft.shadow_vert,
      fragmentShader: Ft.shadow_frag,
    },
  };
er.physical = {
  uniforms: oi([
    er.standard.uniforms,
    {
      clearcoat: { value: 0 },
      clearcoatMap: { value: null },
      clearcoatMapTransform: { value: new Gt() },
      clearcoatNormalMap: { value: null },
      clearcoatNormalMapTransform: { value: new Gt() },
      clearcoatNormalScale: { value: new ke(1, 1) },
      clearcoatRoughness: { value: 0 },
      clearcoatRoughnessMap: { value: null },
      clearcoatRoughnessMapTransform: { value: new Gt() },
      iridescence: { value: 0 },
      iridescenceMap: { value: null },
      iridescenceMapTransform: { value: new Gt() },
      iridescenceIOR: { value: 1.3 },
      iridescenceThicknessMinimum: { value: 100 },
      iridescenceThicknessMaximum: { value: 400 },
      iridescenceThicknessMap: { value: null },
      iridescenceThicknessMapTransform: { value: new Gt() },
      sheen: { value: 0 },
      sheenColor: { value: new Dt(0) },
      sheenColorMap: { value: null },
      sheenColorMapTransform: { value: new Gt() },
      sheenRoughness: { value: 1 },
      sheenRoughnessMap: { value: null },
      sheenRoughnessMapTransform: { value: new Gt() },
      transmission: { value: 0 },
      transmissionMap: { value: null },
      transmissionMapTransform: { value: new Gt() },
      transmissionSamplerSize: { value: new ke() },
      transmissionSamplerMap: { value: null },
      thickness: { value: 0 },
      thicknessMap: { value: null },
      thicknessMapTransform: { value: new Gt() },
      attenuationDistance: { value: 0 },
      attenuationColor: { value: new Dt(0) },
      specularColor: { value: new Dt(1, 1, 1) },
      specularColorMap: { value: null },
      specularColorMapTransform: { value: new Gt() },
      specularIntensity: { value: 1 },
      specularIntensityMap: { value: null },
      specularIntensityMapTransform: { value: new Gt() },
      anisotropyVector: { value: new ke() },
      anisotropyMap: { value: null },
      anisotropyMapTransform: { value: new Gt() },
    },
  ]),
  vertexShader: Ft.meshphysical_vert,
  fragmentShader: Ft.meshphysical_frag,
};
const SA = { r: 0, b: 0, g: 0 };
function Qx(n, e, t, i, r, s, u) {
  const c = new Dt(0);
  let h = s === !0 ? 0 : 1,
    p,
    g,
    v = null,
    x = 0,
    M = null;
  function w(E, b) {
    let L = !1,
      S = b.isScene === !0 ? b.background : null;
    S && S.isTexture && (S = (b.backgroundBlurriness > 0 ? t : e).get(S)),
      S === null ? C(c, h) : S && S.isColor && (C(S, 1), (L = !0));
    const R = n.xr.getEnvironmentBlendMode();
    R === "additive"
      ? i.buffers.color.setClear(0, 0, 0, 1, u)
      : R === "alpha-blend" && i.buffers.color.setClear(0, 0, 0, 0, u),
      (n.autoClear || L) &&
        n.clear(n.autoClearColor, n.autoClearDepth, n.autoClearStencil),
      S && (S.isCubeTexture || S.mapping === Ql)
        ? (g === void 0 &&
            ((g = new wn(
              new Qa(1, 1, 1),
              new or({
                name: "BackgroundCubeMaterial",
                uniforms: zo(er.backgroundCube.uniforms),
                vertexShader: er.backgroundCube.vertexShader,
                fragmentShader: er.backgroundCube.fragmentShader,
                side: fi,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            g.geometry.deleteAttribute("normal"),
            g.geometry.deleteAttribute("uv"),
            (g.onBeforeRender = function (U, q, I) {
              this.matrixWorld.copyPosition(I.matrixWorld);
            }),
            Object.defineProperty(g.material, "envMap", {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            r.update(g)),
          (g.material.uniforms.envMap.value = S),
          (g.material.uniforms.flipEnvMap.value =
            S.isCubeTexture && S.isRenderTargetTexture === !1 ? -1 : 1),
          (g.material.uniforms.backgroundBlurriness.value =
            b.backgroundBlurriness),
          (g.material.uniforms.backgroundIntensity.value =
            b.backgroundIntensity),
          (g.material.toneMapped = S.colorSpace !== hn),
          (v !== S || x !== S.version || M !== n.toneMapping) &&
            ((g.material.needsUpdate = !0),
            (v = S),
            (x = S.version),
            (M = n.toneMapping)),
          g.layers.enableAll(),
          E.unshift(g, g.geometry, g.material, 0, 0, null))
        : S &&
          S.isTexture &&
          (p === void 0 &&
            ((p = new wn(
              new Sc(2, 2),
              new or({
                name: "BackgroundMaterial",
                uniforms: zo(er.background.uniforms),
                vertexShader: er.background.vertexShader,
                fragmentShader: er.background.fragmentShader,
                side: cs,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            p.geometry.deleteAttribute("normal"),
            Object.defineProperty(p.material, "map", {
              get: function () {
                return this.uniforms.t2D.value;
              },
            }),
            r.update(p)),
          (p.material.uniforms.t2D.value = S),
          (p.material.uniforms.backgroundIntensity.value =
            b.backgroundIntensity),
          (p.material.toneMapped = S.colorSpace !== hn),
          S.matrixAutoUpdate === !0 && S.updateMatrix(),
          p.material.uniforms.uvTransform.value.copy(S.matrix),
          (v !== S || x !== S.version || M !== n.toneMapping) &&
            ((p.material.needsUpdate = !0),
            (v = S),
            (x = S.version),
            (M = n.toneMapping)),
          p.layers.enableAll(),
          E.unshift(p, p.geometry, p.material, 0, 0, null));
  }
  function C(E, b) {
    E.getRGB(SA, B1(n)), i.buffers.color.setClear(SA.r, SA.g, SA.b, b, u);
  }
  return {
    getClearColor: function () {
      return c;
    },
    setClearColor: function (E, b = 1) {
      c.set(E), (h = b), C(c, h);
    },
    getClearAlpha: function () {
      return h;
    },
    setClearAlpha: function (E) {
      (h = E), C(c, h);
    },
    render: w,
  };
}
function $x(n, e, t, i) {
  const r = n.getParameter(n.MAX_VERTEX_ATTRIBS),
    s = i.isWebGL2 ? null : e.get("OES_vertex_array_object"),
    u = i.isWebGL2 || s !== null,
    c = {},
    h = E(null);
  let p = h,
    g = !1;
  function v(Q, F, J, K, ie) {
    let he = !1;
    if (u) {
      const ce = C(K, J, F);
      p !== ce && ((p = ce), M(p.object)),
        (he = b(Q, K, J, ie)),
        he && L(Q, K, J, ie);
    } else {
      const ce = F.wireframe === !0;
      (p.geometry !== K.id || p.program !== J.id || p.wireframe !== ce) &&
        ((p.geometry = K.id),
        (p.program = J.id),
        (p.wireframe = ce),
        (he = !0));
    }
    ie !== null && t.update(ie, n.ELEMENT_ARRAY_BUFFER),
      (he || g) &&
        ((g = !1),
        N(Q, F, J, K),
        ie !== null && n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, t.get(ie).buffer));
  }
  function x() {
    return i.isWebGL2 ? n.createVertexArray() : s.createVertexArrayOES();
  }
  function M(Q) {
    return i.isWebGL2 ? n.bindVertexArray(Q) : s.bindVertexArrayOES(Q);
  }
  function w(Q) {
    return i.isWebGL2 ? n.deleteVertexArray(Q) : s.deleteVertexArrayOES(Q);
  }
  function C(Q, F, J) {
    const K = J.wireframe === !0;
    let ie = c[Q.id];
    ie === void 0 && ((ie = {}), (c[Q.id] = ie));
    let he = ie[F.id];
    he === void 0 && ((he = {}), (ie[F.id] = he));
    let ce = he[K];
    return ce === void 0 && ((ce = E(x())), (he[K] = ce)), ce;
  }
  function E(Q) {
    const F = [],
      J = [],
      K = [];
    for (let ie = 0; ie < r; ie++) (F[ie] = 0), (J[ie] = 0), (K[ie] = 0);
    return {
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: F,
      enabledAttributes: J,
      attributeDivisors: K,
      object: Q,
      attributes: {},
      index: null,
    };
  }
  function b(Q, F, J, K) {
    const ie = p.attributes,
      he = F.attributes;
    let ce = 0;
    const oe = J.getAttributes();
    for (const de in oe)
      if (oe[de].location >= 0) {
        const Pe = ie[de];
        let Oe = he[de];
        if (
          (Oe === void 0 &&
            (de === "instanceMatrix" &&
              Q.instanceMatrix &&
              (Oe = Q.instanceMatrix),
            de === "instanceColor" &&
              Q.instanceColor &&
              (Oe = Q.instanceColor)),
          Pe === void 0 || Pe.attribute !== Oe || (Oe && Pe.data !== Oe.data))
        )
          return !0;
        ce++;
      }
    return p.attributesNum !== ce || p.index !== K;
  }
  function L(Q, F, J, K) {
    const ie = {},
      he = F.attributes;
    let ce = 0;
    const oe = J.getAttributes();
    for (const de in oe)
      if (oe[de].location >= 0) {
        let Pe = he[de];
        Pe === void 0 &&
          (de === "instanceMatrix" &&
            Q.instanceMatrix &&
            (Pe = Q.instanceMatrix),
          de === "instanceColor" && Q.instanceColor && (Pe = Q.instanceColor));
        const Oe = {};
        (Oe.attribute = Pe),
          Pe && Pe.data && (Oe.data = Pe.data),
          (ie[de] = Oe),
          ce++;
      }
    (p.attributes = ie), (p.attributesNum = ce), (p.index = K);
  }
  function S() {
    const Q = p.newAttributes;
    for (let F = 0, J = Q.length; F < J; F++) Q[F] = 0;
  }
  function R(Q) {
    U(Q, 0);
  }
  function U(Q, F) {
    const J = p.newAttributes,
      K = p.enabledAttributes,
      ie = p.attributeDivisors;
    (J[Q] = 1),
      K[Q] === 0 && (n.enableVertexAttribArray(Q), (K[Q] = 1)),
      ie[Q] !== F &&
        ((i.isWebGL2 ? n : e.get("ANGLE_instanced_arrays"))[
          i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
        ](Q, F),
        (ie[Q] = F));
  }
  function q() {
    const Q = p.newAttributes,
      F = p.enabledAttributes;
    for (let J = 0, K = F.length; J < K; J++)
      F[J] !== Q[J] && (n.disableVertexAttribArray(J), (F[J] = 0));
  }
  function I(Q, F, J, K, ie, he, ce) {
    ce === !0
      ? n.vertexAttribIPointer(Q, F, J, ie, he)
      : n.vertexAttribPointer(Q, F, J, K, ie, he);
  }
  function N(Q, F, J, K) {
    if (
      i.isWebGL2 === !1 &&
      (Q.isInstancedMesh || K.isInstancedBufferGeometry) &&
      e.get("ANGLE_instanced_arrays") === null
    )
      return;
    S();
    const ie = K.attributes,
      he = J.getAttributes(),
      ce = F.defaultAttributeValues;
    for (const oe in he) {
      const de = he[oe];
      if (de.location >= 0) {
        let Se = ie[oe];
        if (
          (Se === void 0 &&
            (oe === "instanceMatrix" &&
              Q.instanceMatrix &&
              (Se = Q.instanceMatrix),
            oe === "instanceColor" &&
              Q.instanceColor &&
              (Se = Q.instanceColor)),
          Se !== void 0)
        ) {
          const Pe = Se.normalized,
            Oe = Se.itemSize,
            $e = t.get(Se);
          if ($e === void 0) continue;
          const nt = $e.buffer,
            ot = $e.type,
            Rt = $e.bytesPerElement,
            Ot =
              i.isWebGL2 === !0 &&
              (ot === n.INT || ot === n.UNSIGNED_INT || Se.gpuType === b1);
          if (Se.isInterleavedBufferAttribute) {
            const ct = Se.data,
              ne = ct.stride,
              Ge = Se.offset;
            if (ct.isInstancedInterleavedBuffer) {
              for (let Ce = 0; Ce < de.locationSize; Ce++)
                U(de.location + Ce, ct.meshPerAttribute);
              Q.isInstancedMesh !== !0 &&
                K._maxInstanceCount === void 0 &&
                (K._maxInstanceCount = ct.meshPerAttribute * ct.count);
            } else
              for (let Ce = 0; Ce < de.locationSize; Ce++) R(de.location + Ce);
            n.bindBuffer(n.ARRAY_BUFFER, nt);
            for (let Ce = 0; Ce < de.locationSize; Ce++)
              I(
                de.location + Ce,
                Oe / de.locationSize,
                ot,
                Pe,
                ne * Rt,
                (Ge + (Oe / de.locationSize) * Ce) * Rt,
                Ot
              );
          } else {
            if (Se.isInstancedBufferAttribute) {
              for (let ct = 0; ct < de.locationSize; ct++)
                U(de.location + ct, Se.meshPerAttribute);
              Q.isInstancedMesh !== !0 &&
                K._maxInstanceCount === void 0 &&
                (K._maxInstanceCount = Se.meshPerAttribute * Se.count);
            } else
              for (let ct = 0; ct < de.locationSize; ct++) R(de.location + ct);
            n.bindBuffer(n.ARRAY_BUFFER, nt);
            for (let ct = 0; ct < de.locationSize; ct++)
              I(
                de.location + ct,
                Oe / de.locationSize,
                ot,
                Pe,
                Oe * Rt,
                (Oe / de.locationSize) * ct * Rt,
                Ot
              );
          }
        } else if (ce !== void 0) {
          const Pe = ce[oe];
          if (Pe !== void 0)
            switch (Pe.length) {
              case 2:
                n.vertexAttrib2fv(de.location, Pe);
                break;
              case 3:
                n.vertexAttrib3fv(de.location, Pe);
                break;
              case 4:
                n.vertexAttrib4fv(de.location, Pe);
                break;
              default:
                n.vertexAttrib1fv(de.location, Pe);
            }
        }
      }
    }
    q();
  }
  function D() {
    $();
    for (const Q in c) {
      const F = c[Q];
      for (const J in F) {
        const K = F[J];
        for (const ie in K) w(K[ie].object), delete K[ie];
        delete F[J];
      }
      delete c[Q];
    }
  }
  function O(Q) {
    if (c[Q.id] === void 0) return;
    const F = c[Q.id];
    for (const J in F) {
      const K = F[J];
      for (const ie in K) w(K[ie].object), delete K[ie];
      delete F[J];
    }
    delete c[Q.id];
  }
  function k(Q) {
    for (const F in c) {
      const J = c[F];
      if (J[Q.id] === void 0) continue;
      const K = J[Q.id];
      for (const ie in K) w(K[ie].object), delete K[ie];
      delete J[Q.id];
    }
  }
  function $() {
    H(), (g = !0), p !== h && ((p = h), M(p.object));
  }
  function H() {
    (h.geometry = null), (h.program = null), (h.wireframe = !1);
  }
  return {
    setup: v,
    reset: $,
    resetDefaultState: H,
    dispose: D,
    releaseStatesOfGeometry: O,
    releaseStatesOfProgram: k,
    initAttributes: S,
    enableAttribute: R,
    disableUnusedAttributes: q,
  };
}
function Yx(n, e, t, i) {
  const r = i.isWebGL2;
  let s;
  function u(p) {
    s = p;
  }
  function c(p, g) {
    n.drawArrays(s, p, g), t.update(g, s, 1);
  }
  function h(p, g, v) {
    if (v === 0) return;
    let x, M;
    if (r) (x = n), (M = "drawArraysInstanced");
    else if (
      ((x = e.get("ANGLE_instanced_arrays")),
      (M = "drawArraysInstancedANGLE"),
      x === null)
    ) {
      console.error(
        "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    x[M](s, p, g, v), t.update(g, s, v);
  }
  (this.setMode = u), (this.render = c), (this.renderInstances = h);
}
function Zx(n, e, t) {
  let i;
  function r() {
    if (i !== void 0) return i;
    if (e.has("EXT_texture_filter_anisotropic") === !0) {
      const I = e.get("EXT_texture_filter_anisotropic");
      i = n.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else i = 0;
    return i;
  }
  function s(I) {
    if (I === "highp") {
      if (
        n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT).precision >
          0 &&
        n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT).precision >
          0
      )
        return "highp";
      I = "mediump";
    }
    return I === "mediump" &&
      n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT).precision >
        0 &&
      n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT).precision >
        0
      ? "mediump"
      : "lowp";
  }
  const u =
    typeof WebGL2RenderingContext < "u" &&
    n.constructor.name === "WebGL2RenderingContext";
  let c = t.precision !== void 0 ? t.precision : "highp";
  const h = s(c);
  h !== c &&
    (console.warn(
      "THREE.WebGLRenderer:",
      c,
      "not supported, using",
      h,
      "instead."
    ),
    (c = h));
  const p = u || e.has("WEBGL_draw_buffers"),
    g = t.logarithmicDepthBuffer === !0,
    v = n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),
    x = n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
    M = n.getParameter(n.MAX_TEXTURE_SIZE),
    w = n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),
    C = n.getParameter(n.MAX_VERTEX_ATTRIBS),
    E = n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),
    b = n.getParameter(n.MAX_VARYING_VECTORS),
    L = n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),
    S = x > 0,
    R = u || e.has("OES_texture_float"),
    U = S && R,
    q = u ? n.getParameter(n.MAX_SAMPLES) : 0;
  return {
    isWebGL2: u,
    drawBuffers: p,
    getMaxAnisotropy: r,
    getMaxPrecision: s,
    precision: c,
    logarithmicDepthBuffer: g,
    maxTextures: v,
    maxVertexTextures: x,
    maxTextureSize: M,
    maxCubemapSize: w,
    maxAttributes: C,
    maxVertexUniforms: E,
    maxVaryings: b,
    maxFragmentUniforms: L,
    vertexTextures: S,
    floatFragmentTextures: R,
    floatVertexTextures: U,
    maxSamples: q,
  };
}
function Kx(n) {
  const e = this;
  let t = null,
    i = 0,
    r = !1,
    s = !1;
  const u = new is(),
    c = new Gt(),
    h = { value: null, needsUpdate: !1 };
  (this.uniform = h),
    (this.numPlanes = 0),
    (this.numIntersection = 0),
    (this.init = function (v, x) {
      const M = v.length !== 0 || x || i !== 0 || r;
      return (r = x), (i = v.length), M;
    }),
    (this.beginShadows = function () {
      (s = !0), g(null);
    }),
    (this.endShadows = function () {
      s = !1;
    }),
    (this.setGlobalState = function (v, x) {
      t = g(v, x, 0);
    }),
    (this.setState = function (v, x, M) {
      const w = v.clippingPlanes,
        C = v.clipIntersection,
        E = v.clipShadows,
        b = n.get(v);
      if (!r || w === null || w.length === 0 || (s && !E)) s ? g(null) : p();
      else {
        const L = s ? 0 : i,
          S = L * 4;
        let R = b.clippingState || null;
        (h.value = R), (R = g(w, x, S, M));
        for (let U = 0; U !== S; ++U) R[U] = t[U];
        (b.clippingState = R),
          (this.numIntersection = C ? this.numPlanes : 0),
          (this.numPlanes += L);
      }
    });
  function p() {
    h.value !== t && ((h.value = t), (h.needsUpdate = i > 0)),
      (e.numPlanes = i),
      (e.numIntersection = 0);
  }
  function g(v, x, M, w) {
    const C = v !== null ? v.length : 0;
    let E = null;
    if (C !== 0) {
      if (((E = h.value), w !== !0 || E === null)) {
        const b = M + C * 4,
          L = x.matrixWorldInverse;
        c.getNormalMatrix(L),
          (E === null || E.length < b) && (E = new Float32Array(b));
        for (let S = 0, R = M; S !== C; ++S, R += 4)
          u.copy(v[S]).applyMatrix4(L, c),
            u.normal.toArray(E, R),
            (E[R + 3] = u.constant);
      }
      (h.value = E), (h.needsUpdate = !0);
    }
    return (e.numPlanes = C), (e.numIntersection = 0), E;
  }
}
function Jx(n) {
  let e = new WeakMap();
  function t(u, c) {
    return c === Eu ? (u.mapping = No) : c === wu && (u.mapping = Fo), u;
  }
  function i(u) {
    if (u && u.isTexture && u.isRenderTargetTexture === !1) {
      const c = u.mapping;
      if (c === Eu || c === wu)
        if (e.has(u)) {
          const h = e.get(u).texture;
          return t(h, u.mapping);
        } else {
          const h = u.image;
          if (h && h.height > 0) {
            const p = new h_(h.height / 2);
            return (
              p.fromEquirectangularTexture(n, u),
              e.set(u, p),
              u.addEventListener("dispose", r),
              t(p.texture, u.mapping)
            );
          } else return null;
        }
    }
    return u;
  }
  function r(u) {
    const c = u.target;
    c.removeEventListener("dispose", r);
    const h = e.get(c);
    h !== void 0 && (e.delete(c), h.dispose());
  }
  function s() {
    e = new WeakMap();
  }
  return { get: i, dispose: s };
}
class G1 extends F1 {
  constructor(e = -1, t = 1, i = 1, r = -1, s = 0.1, u = 2e3) {
    super(),
      (this.isOrthographicCamera = !0),
      (this.type = "OrthographicCamera"),
      (this.zoom = 1),
      (this.view = null),
      (this.left = e),
      (this.right = t),
      (this.top = i),
      (this.bottom = r),
      (this.near = s),
      (this.far = u),
      this.updateProjectionMatrix();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.left = e.left),
      (this.right = e.right),
      (this.top = e.top),
      (this.bottom = e.bottom),
      (this.near = e.near),
      (this.far = e.far),
      (this.zoom = e.zoom),
      (this.view = e.view === null ? null : Object.assign({}, e.view)),
      this
    );
  }
  setViewOffset(e, t, i, r, s, u) {
    this.view === null &&
      (this.view = {
        enabled: !0,
        fullWidth: 1,
        fullHeight: 1,
        offsetX: 0,
        offsetY: 0,
        width: 1,
        height: 1,
      }),
      (this.view.enabled = !0),
      (this.view.fullWidth = e),
      (this.view.fullHeight = t),
      (this.view.offsetX = i),
      (this.view.offsetY = r),
      (this.view.width = s),
      (this.view.height = u),
      this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = !1),
      this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom),
      t = (this.top - this.bottom) / (2 * this.zoom),
      i = (this.right + this.left) / 2,
      r = (this.top + this.bottom) / 2;
    let s = i - e,
      u = i + e,
      c = r + t,
      h = r - t;
    if (this.view !== null && this.view.enabled) {
      const p = (this.right - this.left) / this.view.fullWidth / this.zoom,
        g = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      (s += p * this.view.offsetX),
        (u = s + p * this.view.width),
        (c -= g * this.view.offsetY),
        (h = c - g * this.view.height);
    }
    this.projectionMatrix.makeOrthographic(
      s,
      u,
      c,
      h,
      this.near,
      this.far,
      this.coordinateSystem
    ),
      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.zoom = this.zoom),
      (t.object.left = this.left),
      (t.object.right = this.right),
      (t.object.top = this.top),
      (t.object.bottom = this.bottom),
      (t.object.near = this.near),
      (t.object.far = this.far),
      this.view !== null && (t.object.view = Object.assign({}, this.view)),
      t
    );
  }
}
const So = 4,
  Gh = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
  Ls = 20,
  Z0 = new G1(),
  Hh = new Dt();
let K0 = null;
const Rs = (1 + Math.sqrt(5)) / 2,
  _o = 1 / Rs,
  Vh = [
    new te(1, 1, 1),
    new te(-1, 1, 1),
    new te(1, 1, -1),
    new te(-1, 1, -1),
    new te(0, Rs, _o),
    new te(0, Rs, -_o),
    new te(_o, 0, Rs),
    new te(-_o, 0, Rs),
    new te(Rs, _o, 0),
    new te(-Rs, _o, 0),
  ];
class Wh {
  constructor(e) {
    (this._renderer = e),
      (this._pingPongRenderTarget = null),
      (this._lodMax = 0),
      (this._cubeSize = 0),
      (this._lodPlanes = []),
      (this._sizeLods = []),
      (this._sigmas = []),
      (this._blurMaterial = null),
      (this._cubemapMaterial = null),
      (this._equirectMaterial = null),
      this._compileMaterial(this._blurMaterial);
  }
  fromScene(e, t = 0, i = 0.1, r = 100) {
    (K0 = this._renderer.getRenderTarget()), this._setSize(256);
    const s = this._allocateTargets();
    return (
      (s.depthBuffer = !0),
      this._sceneToCubeUV(e, i, r, s),
      t > 0 && this._blur(s, 0, 0, t),
      this._applyPMREM(s),
      this._cleanup(s),
      s
    );
  }
  fromEquirectangular(e, t = null) {
    return this._fromTexture(e, t);
  }
  fromCubemap(e, t = null) {
    return this._fromTexture(e, t);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null &&
      ((this._cubemapMaterial = Qh()),
      this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null &&
      ((this._equirectMaterial = Xh()),
      this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    this._dispose(),
      this._cubemapMaterial !== null && this._cubemapMaterial.dispose(),
      this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  _setSize(e) {
    (this._lodMax = Math.floor(Math.log2(e))),
      (this._cubeSize = Math.pow(2, this._lodMax));
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(),
      this._pingPongRenderTarget !== null &&
        this._pingPongRenderTarget.dispose();
    for (let e = 0; e < this._lodPlanes.length; e++)
      this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    this._renderer.setRenderTarget(K0),
      (e.scissorTest = !1),
      TA(e, 0, 0, e.width, e.height);
  }
  _fromTexture(e, t) {
    e.mapping === No || e.mapping === Fo
      ? this._setSize(
          e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width
        )
      : this._setSize(e.image.width / 4),
      (K0 = this._renderer.getRenderTarget());
    const i = t || this._allocateTargets();
    return (
      this._textureToCubeUV(e, i), this._applyPMREM(i), this._cleanup(i), i
    );
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112),
      t = 4 * this._cubeSize,
      i = {
        magFilter: Fi,
        minFilter: Fi,
        generateMipmaps: !1,
        type: Pa,
        format: nr,
        colorSpace: xr,
        depthBuffer: !1,
      },
      r = jh(e, t, i);
    if (
      this._pingPongRenderTarget === null ||
      this._pingPongRenderTarget.width !== e ||
      this._pingPongRenderTarget.height !== t
    ) {
      this._pingPongRenderTarget !== null && this._dispose(),
        (this._pingPongRenderTarget = jh(e, t, i));
      const { _lodMax: s } = this;
      ({
        sizeLods: this._sizeLods,
        lodPlanes: this._lodPlanes,
        sigmas: this._sigmas,
      } = ey(s)),
        (this._blurMaterial = ty(s, e, t));
    }
    return r;
  }
  _compileMaterial(e) {
    const t = new wn(this._lodPlanes[0], e);
    this._renderer.compile(t, Z0);
  }
  _sceneToCubeUV(e, t, i, r) {
    const c = new ki(90, 1, t, i),
      h = [1, -1, 1, 1, 1, 1],
      p = [1, 1, 1, -1, -1, -1],
      g = this._renderer,
      v = g.autoClear,
      x = g.toneMapping;
    g.getClearColor(Hh), (g.toneMapping = ls), (g.autoClear = !1);
    const M = new Zl({
        name: "PMREM.Background",
        side: fi,
        depthWrite: !1,
        depthTest: !1,
      }),
      w = new wn(new Qa(), M);
    let C = !1;
    const E = e.background;
    E
      ? E.isColor && (M.color.copy(E), (e.background = null), (C = !0))
      : (M.color.copy(Hh), (C = !0));
    for (let b = 0; b < 6; b++) {
      const L = b % 3;
      L === 0
        ? (c.up.set(0, h[b], 0), c.lookAt(p[b], 0, 0))
        : L === 1
        ? (c.up.set(0, 0, h[b]), c.lookAt(0, p[b], 0))
        : (c.up.set(0, h[b], 0), c.lookAt(0, 0, p[b]));
      const S = this._cubeSize;
      TA(r, L * S, b > 2 ? S : 0, S, S),
        g.setRenderTarget(r),
        C && g.render(w, c),
        g.render(e, c);
    }
    w.geometry.dispose(),
      w.material.dispose(),
      (g.toneMapping = x),
      (g.autoClear = v),
      (e.background = E);
  }
  _textureToCubeUV(e, t) {
    const i = this._renderer,
      r = e.mapping === No || e.mapping === Fo;
    r
      ? (this._cubemapMaterial === null && (this._cubemapMaterial = Qh()),
        (this._cubemapMaterial.uniforms.flipEnvMap.value =
          e.isRenderTargetTexture === !1 ? -1 : 1))
      : this._equirectMaterial === null && (this._equirectMaterial = Xh());
    const s = r ? this._cubemapMaterial : this._equirectMaterial,
      u = new wn(this._lodPlanes[0], s),
      c = s.uniforms;
    c.envMap.value = e;
    const h = this._cubeSize;
    TA(t, 0, 0, 3 * h, 2 * h), i.setRenderTarget(t), i.render(u, Z0);
  }
  _applyPMREM(e) {
    const t = this._renderer,
      i = t.autoClear;
    t.autoClear = !1;
    for (let r = 1; r < this._lodPlanes.length; r++) {
      const s = Math.sqrt(
          this._sigmas[r] * this._sigmas[r] -
            this._sigmas[r - 1] * this._sigmas[r - 1]
        ),
        u = Vh[(r - 1) % Vh.length];
      this._blur(e, r - 1, r, s, u);
    }
    t.autoClear = i;
  }
  _blur(e, t, i, r, s) {
    const u = this._pingPongRenderTarget;
    this._halfBlur(e, u, t, i, r, "latitudinal", s),
      this._halfBlur(u, e, i, i, r, "longitudinal", s);
  }
  _halfBlur(e, t, i, r, s, u, c) {
    const h = this._renderer,
      p = this._blurMaterial;
    u !== "latitudinal" &&
      u !== "longitudinal" &&
      console.error(
        "blur direction must be either latitudinal or longitudinal!"
      );
    const g = 3,
      v = new wn(this._lodPlanes[r], p),
      x = p.uniforms,
      M = this._sizeLods[i] - 1,
      w = isFinite(s) ? Math.PI / (2 * M) : (2 * Math.PI) / (2 * Ls - 1),
      C = s / w,
      E = isFinite(s) ? 1 + Math.floor(g * C) : Ls;
    E > Ls &&
      console.warn(
        `sigmaRadians, ${s}, is too large and will clip, as it requested ${E} samples when the maximum is set to ${Ls}`
      );
    const b = [];
    let L = 0;
    for (let I = 0; I < Ls; ++I) {
      const N = I / C,
        D = Math.exp((-N * N) / 2);
      b.push(D), I === 0 ? (L += D) : I < E && (L += 2 * D);
    }
    for (let I = 0; I < b.length; I++) b[I] = b[I] / L;
    (x.envMap.value = e.texture),
      (x.samples.value = E),
      (x.weights.value = b),
      (x.latitudinal.value = u === "latitudinal"),
      c && (x.poleAxis.value = c);
    const { _lodMax: S } = this;
    (x.dTheta.value = w), (x.mipInt.value = S - i);
    const R = this._sizeLods[r],
      U = 3 * R * (r > S - So ? r - S + So : 0),
      q = 4 * (this._cubeSize - R);
    TA(t, U, q, 3 * R, 2 * R), h.setRenderTarget(t), h.render(v, Z0);
  }
}
function ey(n) {
  const e = [],
    t = [],
    i = [];
  let r = n;
  const s = n - So + 1 + Gh.length;
  for (let u = 0; u < s; u++) {
    const c = Math.pow(2, r);
    t.push(c);
    let h = 1 / c;
    u > n - So ? (h = Gh[u - n + So - 1]) : u === 0 && (h = 0), i.push(h);
    const p = 1 / (c - 2),
      g = -p,
      v = 1 + p,
      x = [g, g, v, g, v, v, g, g, v, v, g, v],
      M = 6,
      w = 6,
      C = 3,
      E = 2,
      b = 1,
      L = new Float32Array(C * w * M),
      S = new Float32Array(E * w * M),
      R = new Float32Array(b * w * M);
    for (let q = 0; q < M; q++) {
      const I = ((q % 3) * 2) / 3 - 1,
        N = q > 2 ? 0 : -1,
        D = [
          I,
          N,
          0,
          I + 2 / 3,
          N,
          0,
          I + 2 / 3,
          N + 1,
          0,
          I,
          N,
          0,
          I + 2 / 3,
          N + 1,
          0,
          I,
          N + 1,
          0,
        ];
      L.set(D, C * w * q), S.set(x, E * w * q);
      const O = [q, q, q, q, q, q];
      R.set(O, b * w * q);
    }
    const U = new fn();
    U.setAttribute("position", new En(L, C)),
      U.setAttribute("uv", new En(S, E)),
      U.setAttribute("faceIndex", new En(R, b)),
      e.push(U),
      r > So && r--;
  }
  return { lodPlanes: e, sizeLods: t, sigmas: i };
}
function jh(n, e, t) {
  const i = new Fs(n, e, t);
  return (
    (i.texture.mapping = Ql),
    (i.texture.name = "PMREM.cubeUv"),
    (i.scissorTest = !0),
    i
  );
}
function TA(n, e, t, i, r) {
  n.viewport.set(e, t, i, r), n.scissor.set(e, t, i, r);
}
function ty(n, e, t) {
  const i = new Float32Array(Ls),
    r = new te(0, 1, 0);
  return new or({
    name: "SphericalGaussianBlur",
    defines: {
      n: Ls,
      CUBEUV_TEXEL_WIDTH: 1 / e,
      CUBEUV_TEXEL_HEIGHT: 1 / t,
      CUBEUV_MAX_MIP: `${n}.0`,
    },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: i },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: r },
    },
    vertexShader: Tc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
    blending: as,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Xh() {
  return new or({
    name: "EquirectangularToCubeUV",
    uniforms: { envMap: { value: null } },
    vertexShader: Tc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
    blending: as,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Qh() {
  return new or({
    name: "CubemapToCubeUV",
    uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
    vertexShader: Tc(),
    fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
    blending: as,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Tc() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function ny(n) {
  let e = new WeakMap(),
    t = null;
  function i(c) {
    if (c && c.isTexture) {
      const h = c.mapping,
        p = h === Eu || h === wu,
        g = h === No || h === Fo;
      if (p || g)
        if (c.isRenderTargetTexture && c.needsPMREMUpdate === !0) {
          c.needsPMREMUpdate = !1;
          let v = e.get(c);
          return (
            t === null && (t = new Wh(n)),
            (v = p ? t.fromEquirectangular(c, v) : t.fromCubemap(c, v)),
            e.set(c, v),
            v.texture
          );
        } else {
          if (e.has(c)) return e.get(c).texture;
          {
            const v = c.image;
            if ((p && v && v.height > 0) || (g && v && r(v))) {
              t === null && (t = new Wh(n));
              const x = p ? t.fromEquirectangular(c) : t.fromCubemap(c);
              return e.set(c, x), c.addEventListener("dispose", s), x.texture;
            } else return null;
          }
        }
    }
    return c;
  }
  function r(c) {
    let h = 0;
    const p = 6;
    for (let g = 0; g < p; g++) c[g] !== void 0 && h++;
    return h === p;
  }
  function s(c) {
    const h = c.target;
    h.removeEventListener("dispose", s);
    const p = e.get(h);
    p !== void 0 && (e.delete(h), p.dispose());
  }
  function u() {
    (e = new WeakMap()), t !== null && (t.dispose(), (t = null));
  }
  return { get: i, dispose: u };
}
function iy(n) {
  const e = {};
  function t(i) {
    if (e[i] !== void 0) return e[i];
    let r;
    switch (i) {
      case "WEBGL_depth_texture":
        r =
          n.getExtension("WEBGL_depth_texture") ||
          n.getExtension("MOZ_WEBGL_depth_texture") ||
          n.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        r =
          n.getExtension("EXT_texture_filter_anisotropic") ||
          n.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
          n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        r =
          n.getExtension("WEBGL_compressed_texture_s3tc") ||
          n.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
          n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        r =
          n.getExtension("WEBGL_compressed_texture_pvrtc") ||
          n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        r = n.getExtension(i);
    }
    return (e[i] = r), r;
  }
  return {
    has: function (i) {
      return t(i) !== null;
    },
    init: function (i) {
      i.isWebGL2
        ? t("EXT_color_buffer_float")
        : (t("WEBGL_depth_texture"),
          t("OES_texture_float"),
          t("OES_texture_half_float"),
          t("OES_texture_half_float_linear"),
          t("OES_standard_derivatives"),
          t("OES_element_index_uint"),
          t("OES_vertex_array_object"),
          t("ANGLE_instanced_arrays")),
        t("OES_texture_float_linear"),
        t("EXT_color_buffer_half_float"),
        t("WEBGL_multisampled_render_to_texture");
    },
    get: function (i) {
      const r = t(i);
      return (
        r === null &&
          console.warn(
            "THREE.WebGLRenderer: " + i + " extension not supported."
          ),
        r
      );
    },
  };
}
function ry(n, e, t, i) {
  const r = {},
    s = new WeakMap();
  function u(v) {
    const x = v.target;
    x.index !== null && e.remove(x.index);
    for (const w in x.attributes) e.remove(x.attributes[w]);
    for (const w in x.morphAttributes) {
      const C = x.morphAttributes[w];
      for (let E = 0, b = C.length; E < b; E++) e.remove(C[E]);
    }
    x.removeEventListener("dispose", u), delete r[x.id];
    const M = s.get(x);
    M && (e.remove(M), s.delete(x)),
      i.releaseStatesOfGeometry(x),
      x.isInstancedBufferGeometry === !0 && delete x._maxInstanceCount,
      t.memory.geometries--;
  }
  function c(v, x) {
    return (
      r[x.id] === !0 ||
        (x.addEventListener("dispose", u),
        (r[x.id] = !0),
        t.memory.geometries++),
      x
    );
  }
  function h(v) {
    const x = v.attributes;
    for (const w in x) e.update(x[w], n.ARRAY_BUFFER);
    const M = v.morphAttributes;
    for (const w in M) {
      const C = M[w];
      for (let E = 0, b = C.length; E < b; E++) e.update(C[E], n.ARRAY_BUFFER);
    }
  }
  function p(v) {
    const x = [],
      M = v.index,
      w = v.attributes.position;
    let C = 0;
    if (M !== null) {
      const L = M.array;
      C = M.version;
      for (let S = 0, R = L.length; S < R; S += 3) {
        const U = L[S + 0],
          q = L[S + 1],
          I = L[S + 2];
        x.push(U, q, q, I, I, U);
      }
    } else if (w !== void 0) {
      const L = w.array;
      C = w.version;
      for (let S = 0, R = L.length / 3 - 1; S < R; S += 3) {
        const U = S + 0,
          q = S + 1,
          I = S + 2;
        x.push(U, q, q, I, I, U);
      }
    } else return;
    const E = new (P1(x) ? U1 : q1)(x, 1);
    E.version = C;
    const b = s.get(v);
    b && e.remove(b), s.set(v, E);
  }
  function g(v) {
    const x = s.get(v);
    if (x) {
      const M = v.index;
      M !== null && x.version < M.version && p(v);
    } else p(v);
    return s.get(v);
  }
  return { get: c, update: h, getWireframeAttribute: g };
}
function sy(n, e, t, i) {
  const r = i.isWebGL2;
  let s;
  function u(x) {
    s = x;
  }
  let c, h;
  function p(x) {
    (c = x.type), (h = x.bytesPerElement);
  }
  function g(x, M) {
    n.drawElements(s, M, c, x * h), t.update(M, s, 1);
  }
  function v(x, M, w) {
    if (w === 0) return;
    let C, E;
    if (r) (C = n), (E = "drawElementsInstanced");
    else if (
      ((C = e.get("ANGLE_instanced_arrays")),
      (E = "drawElementsInstancedANGLE"),
      C === null)
    ) {
      console.error(
        "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
      );
      return;
    }
    C[E](s, M, c, x * h, w), t.update(M, s, w);
  }
  (this.setMode = u),
    (this.setIndex = p),
    (this.render = g),
    (this.renderInstances = v);
}
function oy(n) {
  const e = { geometries: 0, textures: 0 },
    t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function i(s, u, c) {
    switch ((t.calls++, u)) {
      case n.TRIANGLES:
        t.triangles += c * (s / 3);
        break;
      case n.LINES:
        t.lines += c * (s / 2);
        break;
      case n.LINE_STRIP:
        t.lines += c * (s - 1);
        break;
      case n.LINE_LOOP:
        t.lines += c * s;
        break;
      case n.POINTS:
        t.points += c * s;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", u);
        break;
    }
  }
  function r() {
    (t.calls = 0), (t.triangles = 0), (t.points = 0), (t.lines = 0);
  }
  return {
    memory: e,
    render: t,
    programs: null,
    autoReset: !0,
    reset: r,
    update: i,
  };
}
function ay(n, e) {
  return n[0] - e[0];
}
function Ay(n, e) {
  return Math.abs(e[1]) - Math.abs(n[1]);
}
function ly(n, e, t) {
  const i = {},
    r = new Float32Array(8),
    s = new WeakMap(),
    u = new In(),
    c = [];
  for (let p = 0; p < 8; p++) c[p] = [p, 0];
  function h(p, g, v) {
    const x = p.morphTargetInfluences;
    if (e.isWebGL2 === !0) {
      const w =
          g.morphAttributes.position ||
          g.morphAttributes.normal ||
          g.morphAttributes.color,
        C = w !== void 0 ? w.length : 0;
      let E = s.get(g);
      if (E === void 0 || E.count !== C) {
        let F = function () {
          H.dispose(), s.delete(g), g.removeEventListener("dispose", F);
        };
        var M = F;
        E !== void 0 && E.texture.dispose();
        const S = g.morphAttributes.position !== void 0,
          R = g.morphAttributes.normal !== void 0,
          U = g.morphAttributes.color !== void 0,
          q = g.morphAttributes.position || [],
          I = g.morphAttributes.normal || [],
          N = g.morphAttributes.color || [];
        let D = 0;
        S === !0 && (D = 1), R === !0 && (D = 2), U === !0 && (D = 3);
        let O = g.attributes.position.count * D,
          k = 1;
        O > e.maxTextureSize &&
          ((k = Math.ceil(O / e.maxTextureSize)), (O = e.maxTextureSize));
        const $ = new Float32Array(O * k * 4 * C),
          H = new I1($, O, k, C);
        (H.type = os), (H.needsUpdate = !0);
        const Q = D * 4;
        for (let J = 0; J < C; J++) {
          const K = q[J],
            ie = I[J],
            he = N[J],
            ce = O * k * 4 * J;
          for (let oe = 0; oe < K.count; oe++) {
            const de = oe * Q;
            S === !0 &&
              (u.fromBufferAttribute(K, oe),
              ($[ce + de + 0] = u.x),
              ($[ce + de + 1] = u.y),
              ($[ce + de + 2] = u.z),
              ($[ce + de + 3] = 0)),
              R === !0 &&
                (u.fromBufferAttribute(ie, oe),
                ($[ce + de + 4] = u.x),
                ($[ce + de + 5] = u.y),
                ($[ce + de + 6] = u.z),
                ($[ce + de + 7] = 0)),
              U === !0 &&
                (u.fromBufferAttribute(he, oe),
                ($[ce + de + 8] = u.x),
                ($[ce + de + 9] = u.y),
                ($[ce + de + 10] = u.z),
                ($[ce + de + 11] = he.itemSize === 4 ? u.w : 1));
          }
        }
        (E = { count: C, texture: H, size: new ke(O, k) }),
          s.set(g, E),
          g.addEventListener("dispose", F);
      }
      let b = 0;
      for (let S = 0; S < x.length; S++) b += x[S];
      const L = g.morphTargetsRelative ? 1 : 1 - b;
      v.getUniforms().setValue(n, "morphTargetBaseInfluence", L),
        v.getUniforms().setValue(n, "morphTargetInfluences", x),
        v.getUniforms().setValue(n, "morphTargetsTexture", E.texture, t),
        v.getUniforms().setValue(n, "morphTargetsTextureSize", E.size);
    } else {
      const w = x === void 0 ? 0 : x.length;
      let C = i[g.id];
      if (C === void 0 || C.length !== w) {
        C = [];
        for (let R = 0; R < w; R++) C[R] = [R, 0];
        i[g.id] = C;
      }
      for (let R = 0; R < w; R++) {
        const U = C[R];
        (U[0] = R), (U[1] = x[R]);
      }
      C.sort(Ay);
      for (let R = 0; R < 8; R++)
        R < w && C[R][1]
          ? ((c[R][0] = C[R][0]), (c[R][1] = C[R][1]))
          : ((c[R][0] = Number.MAX_SAFE_INTEGER), (c[R][1] = 0));
      c.sort(ay);
      const E = g.morphAttributes.position,
        b = g.morphAttributes.normal;
      let L = 0;
      for (let R = 0; R < 8; R++) {
        const U = c[R],
          q = U[0],
          I = U[1];
        q !== Number.MAX_SAFE_INTEGER && I
          ? (E &&
              g.getAttribute("morphTarget" + R) !== E[q] &&
              g.setAttribute("morphTarget" + R, E[q]),
            b &&
              g.getAttribute("morphNormal" + R) !== b[q] &&
              g.setAttribute("morphNormal" + R, b[q]),
            (r[R] = I),
            (L += I))
          : (E &&
              g.hasAttribute("morphTarget" + R) === !0 &&
              g.deleteAttribute("morphTarget" + R),
            b &&
              g.hasAttribute("morphNormal" + R) === !0 &&
              g.deleteAttribute("morphNormal" + R),
            (r[R] = 0));
      }
      const S = g.morphTargetsRelative ? 1 : 1 - L;
      v.getUniforms().setValue(n, "morphTargetBaseInfluence", S),
        v.getUniforms().setValue(n, "morphTargetInfluences", r);
    }
  }
  return { update: h };
}
function uy(n, e, t, i) {
  let r = new WeakMap();
  function s(h) {
    const p = i.render.frame,
      g = h.geometry,
      v = e.get(h, g);
    if (
      (r.get(v) !== p && (e.update(v), r.set(v, p)),
      h.isInstancedMesh &&
        (h.hasEventListener("dispose", c) === !1 &&
          h.addEventListener("dispose", c),
        r.get(h) !== p &&
          (t.update(h.instanceMatrix, n.ARRAY_BUFFER),
          h.instanceColor !== null && t.update(h.instanceColor, n.ARRAY_BUFFER),
          r.set(h, p))),
      h.isSkinnedMesh)
    ) {
      const x = h.skeleton;
      r.get(x) !== p && (x.update(), r.set(x, p));
    }
    return v;
  }
  function u() {
    r = new WeakMap();
  }
  function c(h) {
    const p = h.target;
    p.removeEventListener("dispose", c),
      t.remove(p.instanceMatrix),
      p.instanceColor !== null && t.remove(p.instanceColor);
  }
  return { update: s, dispose: u };
}
const H1 = new vi(),
  V1 = new I1(),
  W1 = new Zv(),
  j1 = new k1(),
  $h = [],
  Yh = [],
  Zh = new Float32Array(16),
  Kh = new Float32Array(9),
  Jh = new Float32Array(4);
function $o(n, e, t) {
  const i = n[0];
  if (i <= 0 || i > 0) return n;
  const r = e * t;
  let s = $h[r];
  if ((s === void 0 && ((s = new Float32Array(r)), ($h[r] = s)), e !== 0)) {
    i.toArray(s, 0);
    for (let u = 1, c = 0; u !== e; ++u) (c += t), n[u].toArray(s, c);
  }
  return s;
}
function qn(n, e) {
  if (n.length !== e.length) return !1;
  for (let t = 0, i = n.length; t < i; t++) if (n[t] !== e[t]) return !1;
  return !0;
}
function Un(n, e) {
  for (let t = 0, i = e.length; t < i; t++) n[t] = e[t];
}
function Kl(n, e) {
  let t = Yh[e];
  t === void 0 && ((t = new Int32Array(e)), (Yh[e] = t));
  for (let i = 0; i !== e; ++i) t[i] = n.allocateTextureUnit();
  return t;
}
function cy(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1f(this.addr, e), (t[0] = e));
}
function fy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2f(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (qn(t, e)) return;
    n.uniform2fv(this.addr, e), Un(t, e);
  }
}
function hy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3f(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else if (e.r !== void 0)
    (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) &&
      (n.uniform3f(this.addr, e.r, e.g, e.b),
      (t[0] = e.r),
      (t[1] = e.g),
      (t[2] = e.b));
  else {
    if (qn(t, e)) return;
    n.uniform3fv(this.addr, e), Un(t, e);
  }
}
function dy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4f(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (qn(t, e)) return;
    n.uniform4fv(this.addr, e), Un(t, e);
  }
}
function py(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (qn(t, e)) return;
    n.uniformMatrix2fv(this.addr, !1, e), Un(t, e);
  } else {
    if (qn(t, i)) return;
    Jh.set(i), n.uniformMatrix2fv(this.addr, !1, Jh), Un(t, i);
  }
}
function my(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (qn(t, e)) return;
    n.uniformMatrix3fv(this.addr, !1, e), Un(t, e);
  } else {
    if (qn(t, i)) return;
    Kh.set(i), n.uniformMatrix3fv(this.addr, !1, Kh), Un(t, i);
  }
}
function gy(n, e) {
  const t = this.cache,
    i = e.elements;
  if (i === void 0) {
    if (qn(t, e)) return;
    n.uniformMatrix4fv(this.addr, !1, e), Un(t, e);
  } else {
    if (qn(t, i)) return;
    Zh.set(i), n.uniformMatrix4fv(this.addr, !1, Zh), Un(t, i);
  }
}
function vy(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1i(this.addr, e), (t[0] = e));
}
function _y(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2i(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (qn(t, e)) return;
    n.uniform2iv(this.addr, e), Un(t, e);
  }
}
function xy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3i(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else {
    if (qn(t, e)) return;
    n.uniform3iv(this.addr, e), Un(t, e);
  }
}
function yy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4i(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (qn(t, e)) return;
    n.uniform4iv(this.addr, e), Un(t, e);
  }
}
function by(n, e) {
  const t = this.cache;
  t[0] !== e && (n.uniform1ui(this.addr, e), (t[0] = e));
}
function My(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y) &&
      (n.uniform2ui(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
  else {
    if (qn(t, e)) return;
    n.uniform2uiv(this.addr, e), Un(t, e);
  }
}
function Ey(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
      (n.uniform3ui(this.addr, e.x, e.y, e.z),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z));
  else {
    if (qn(t, e)) return;
    n.uniform3uiv(this.addr, e), Un(t, e);
  }
}
function wy(n, e) {
  const t = this.cache;
  if (e.x !== void 0)
    (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
      (n.uniform4ui(this.addr, e.x, e.y, e.z, e.w),
      (t[0] = e.x),
      (t[1] = e.y),
      (t[2] = e.z),
      (t[3] = e.w));
  else {
    if (qn(t, e)) return;
    n.uniform4uiv(this.addr, e), Un(t, e);
  }
}
function Sy(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture2D(e || H1, r);
}
function Ty(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture3D(e || W1, r);
}
function Cy(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTextureCube(e || j1, r);
}
function Ry(n, e, t) {
  const i = this.cache,
    r = t.allocateTextureUnit();
  i[0] !== r && (n.uniform1i(this.addr, r), (i[0] = r)),
    t.setTexture2DArray(e || V1, r);
}
function Py(n) {
  switch (n) {
    case 5126:
      return cy;
    case 35664:
      return fy;
    case 35665:
      return hy;
    case 35666:
      return dy;
    case 35674:
      return py;
    case 35675:
      return my;
    case 35676:
      return gy;
    case 5124:
    case 35670:
      return vy;
    case 35667:
    case 35671:
      return _y;
    case 35668:
    case 35672:
      return xy;
    case 35669:
    case 35673:
      return yy;
    case 5125:
      return by;
    case 36294:
      return My;
    case 36295:
      return Ey;
    case 36296:
      return wy;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return Sy;
    case 35679:
    case 36299:
    case 36307:
      return Ty;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return Cy;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return Ry;
  }
}
function Ly(n, e) {
  n.uniform1fv(this.addr, e);
}
function Dy(n, e) {
  const t = $o(e, this.size, 2);
  n.uniform2fv(this.addr, t);
}
function Iy(n, e) {
  const t = $o(e, this.size, 3);
  n.uniform3fv(this.addr, t);
}
function Oy(n, e) {
  const t = $o(e, this.size, 4);
  n.uniform4fv(this.addr, t);
}
function qy(n, e) {
  const t = $o(e, this.size, 4);
  n.uniformMatrix2fv(this.addr, !1, t);
}
function Uy(n, e) {
  const t = $o(e, this.size, 9);
  n.uniformMatrix3fv(this.addr, !1, t);
}
function By(n, e) {
  const t = $o(e, this.size, 16);
  n.uniformMatrix4fv(this.addr, !1, t);
}
function Ny(n, e) {
  n.uniform1iv(this.addr, e);
}
function Fy(n, e) {
  n.uniform2iv(this.addr, e);
}
function ky(n, e) {
  n.uniform3iv(this.addr, e);
}
function zy(n, e) {
  n.uniform4iv(this.addr, e);
}
function Gy(n, e) {
  n.uniform1uiv(this.addr, e);
}
function Hy(n, e) {
  n.uniform2uiv(this.addr, e);
}
function Vy(n, e) {
  n.uniform3uiv(this.addr, e);
}
function Wy(n, e) {
  n.uniform4uiv(this.addr, e);
}
function jy(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Kl(t, r);
  qn(i, s) || (n.uniform1iv(this.addr, s), Un(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture2D(e[u] || H1, s[u]);
}
function Xy(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Kl(t, r);
  qn(i, s) || (n.uniform1iv(this.addr, s), Un(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture3D(e[u] || W1, s[u]);
}
function Qy(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Kl(t, r);
  qn(i, s) || (n.uniform1iv(this.addr, s), Un(i, s));
  for (let u = 0; u !== r; ++u) t.setTextureCube(e[u] || j1, s[u]);
}
function $y(n, e, t) {
  const i = this.cache,
    r = e.length,
    s = Kl(t, r);
  qn(i, s) || (n.uniform1iv(this.addr, s), Un(i, s));
  for (let u = 0; u !== r; ++u) t.setTexture2DArray(e[u] || V1, s[u]);
}
function Yy(n) {
  switch (n) {
    case 5126:
      return Ly;
    case 35664:
      return Dy;
    case 35665:
      return Iy;
    case 35666:
      return Oy;
    case 35674:
      return qy;
    case 35675:
      return Uy;
    case 35676:
      return By;
    case 5124:
    case 35670:
      return Ny;
    case 35667:
    case 35671:
      return Fy;
    case 35668:
    case 35672:
      return ky;
    case 35669:
    case 35673:
      return zy;
    case 5125:
      return Gy;
    case 36294:
      return Hy;
    case 36295:
      return Vy;
    case 36296:
      return Wy;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return jy;
    case 35679:
    case 36299:
    case 36307:
      return Xy;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return Qy;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return $y;
  }
}
class Zy {
  constructor(e, t, i) {
    (this.id = e),
      (this.addr = i),
      (this.cache = []),
      (this.setValue = Py(t.type));
  }
}
class Ky {
  constructor(e, t, i) {
    (this.id = e),
      (this.addr = i),
      (this.cache = []),
      (this.size = t.size),
      (this.setValue = Yy(t.type));
  }
}
class Jy {
  constructor(e) {
    (this.id = e), (this.seq = []), (this.map = {});
  }
  setValue(e, t, i) {
    const r = this.seq;
    for (let s = 0, u = r.length; s !== u; ++s) {
      const c = r[s];
      c.setValue(e, t[c.id], i);
    }
  }
}
const J0 = /(\w+)(\])?(\[|\.)?/g;
function ed(n, e) {
  n.seq.push(e), (n.map[e.id] = e);
}
function e5(n, e, t) {
  const i = n.name,
    r = i.length;
  for (J0.lastIndex = 0; ; ) {
    const s = J0.exec(i),
      u = J0.lastIndex;
    let c = s[1];
    const h = s[2] === "]",
      p = s[3];
    if ((h && (c = c | 0), p === void 0 || (p === "[" && u + 2 === r))) {
      ed(t, p === void 0 ? new Zy(c, n, e) : new Ky(c, n, e));
      break;
    } else {
      let v = t.map[c];
      v === void 0 && ((v = new Jy(c)), ed(t, v)), (t = v);
    }
  }
}
class tl {
  constructor(e, t) {
    (this.seq = []), (this.map = {});
    const i = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
    for (let r = 0; r < i; ++r) {
      const s = e.getActiveUniform(t, r),
        u = e.getUniformLocation(t, s.name);
      e5(s, u, this);
    }
  }
  setValue(e, t, i, r) {
    const s = this.map[t];
    s !== void 0 && s.setValue(e, i, r);
  }
  setOptional(e, t, i) {
    const r = t[i];
    r !== void 0 && this.setValue(e, i, r);
  }
  static upload(e, t, i, r) {
    for (let s = 0, u = t.length; s !== u; ++s) {
      const c = t[s],
        h = i[c.id];
      h.needsUpdate !== !1 && c.setValue(e, h.value, r);
    }
  }
  static seqWithValue(e, t) {
    const i = [];
    for (let r = 0, s = e.length; r !== s; ++r) {
      const u = e[r];
      u.id in t && i.push(u);
    }
    return i;
  }
}
function td(n, e, t) {
  const i = n.createShader(e);
  return n.shaderSource(i, t), n.compileShader(i), i;
}
let t5 = 0;
function n5(n, e) {
  const t = n.split(`
`),
    i = [],
    r = Math.max(e - 6, 0),
    s = Math.min(e + 6, t.length);
  for (let u = r; u < s; u++) {
    const c = u + 1;
    i.push(`${c === e ? ">" : " "} ${c}: ${t[u]}`);
  }
  return i.join(`
`);
}
function i5(n) {
  switch (n) {
    case xr:
      return ["Linear", "( value )"];
    case hn:
      return ["sRGB", "( value )"];
    default:
      return (
        console.warn("THREE.WebGLProgram: Unsupported color space:", n),
        ["Linear", "( value )"]
      );
  }
}
function nd(n, e, t) {
  const i = n.getShaderParameter(e, n.COMPILE_STATUS),
    r = n.getShaderInfoLog(e).trim();
  if (i && r === "") return "";
  const s = /ERROR: 0:(\d+)/.exec(r);
  if (s) {
    const u = parseInt(s[1]);
    return (
      t.toUpperCase() +
      `

` +
      r +
      `

` +
      n5(n.getShaderSource(e), u)
    );
  } else return r;
}
function r5(n, e) {
  const t = i5(e);
  return "vec4 " + n + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function s5(n, e) {
  let t;
  switch (e) {
    case K3:
      t = "Linear";
      break;
    case J3:
      t = "Reinhard";
      break;
    case ev:
      t = "OptimizedCineon";
      break;
    case tv:
      t = "ACESFilmic";
      break;
    case nv:
      t = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e),
        (t = "Linear");
  }
  return (
    "vec3 " + n + "( vec3 color ) { return " + t + "ToneMapping( color ); }"
  );
}
function o5(n) {
  return [
    n.extensionDerivatives ||
    n.envMapCubeUVHeight ||
    n.bumpMap ||
    n.normalMapTangentSpace ||
    n.clearcoatNormalMap ||
    n.flatShading ||
    n.shaderID === "physical"
      ? "#extension GL_OES_standard_derivatives : enable"
      : "",
    (n.extensionFragDepth || n.logarithmicDepthBuffer) &&
    n.rendererExtensionFragDepth
      ? "#extension GL_EXT_frag_depth : enable"
      : "",
    n.extensionDrawBuffers && n.rendererExtensionDrawBuffers
      ? "#extension GL_EXT_draw_buffers : require"
      : "",
    (n.extensionShaderTextureLOD || n.envMap || n.transmission) &&
    n.rendererExtensionShaderTextureLod
      ? "#extension GL_EXT_shader_texture_lod : enable"
      : "",
  ].filter(ga).join(`
`);
}
function a5(n) {
  const e = [];
  for (const t in n) {
    const i = n[t];
    i !== !1 && e.push("#define " + t + " " + i);
  }
  return e.join(`
`);
}
function A5(n, e) {
  const t = {},
    i = n.getProgramParameter(e, n.ACTIVE_ATTRIBUTES);
  for (let r = 0; r < i; r++) {
    const s = n.getActiveAttrib(e, r),
      u = s.name;
    let c = 1;
    s.type === n.FLOAT_MAT2 && (c = 2),
      s.type === n.FLOAT_MAT3 && (c = 3),
      s.type === n.FLOAT_MAT4 && (c = 4),
      (t[u] = {
        type: s.type,
        location: n.getAttribLocation(e, u),
        locationSize: c,
      });
  }
  return t;
}
function ga(n) {
  return n !== "";
}
function id(n, e) {
  const t =
    e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
  return n
    .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
    .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
    .replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps)
    .replace(/NUM_SPOT_LIGHT_COORDS/g, t)
    .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
    .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
    .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    .replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
    .replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps)
    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
    .replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function rd(n, e) {
  return n
    .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
    .replace(
      /UNION_CLIPPING_PLANES/g,
      e.numClippingPlanes - e.numClipIntersection
    );
}
const l5 = /^[ \t]*#include +<([\w\d./]+)>/gm;
function Lu(n) {
  return n.replace(l5, c5);
}
const u5 = new Map([
  ["encodings_fragment", "colorspace_fragment"],
  ["encodings_pars_fragment", "colorspace_pars_fragment"],
  ["output_fragment", "opaque_fragment"],
]);
function c5(n, e) {
  let t = Ft[e];
  if (t === void 0) {
    const i = u5.get(e);
    if (i !== void 0)
      (t = Ft[i]),
        console.warn(
          'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
          e,
          i
        );
    else throw new Error("Can not resolve #include <" + e + ">");
  }
  return Lu(t);
}
const f5 =
  /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function sd(n) {
  return n.replace(f5, h5);
}
function h5(n, e, t, i) {
  let r = "";
  for (let s = parseInt(e); s < parseInt(t); s++)
    r += i
      .replace(/\[\s*i\s*\]/g, "[ " + s + " ]")
      .replace(/UNROLLED_LOOP_INDEX/g, s);
  return r;
}
function od(n) {
  let e =
    "precision " +
    n.precision +
    ` float;
precision ` +
    n.precision +
    " int;";
  return (
    n.precision === "highp"
      ? (e += `
#define HIGH_PRECISION`)
      : n.precision === "mediump"
      ? (e += `
#define MEDIUM_PRECISION`)
      : n.precision === "lowp" &&
        (e += `
#define LOW_PRECISION`),
    e
  );
}
function d5(n) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return (
    n.shadowMapType === v1
      ? (e = "SHADOWMAP_TYPE_PCF")
      : n.shadowMapType === P3
      ? (e = "SHADOWMAP_TYPE_PCF_SOFT")
      : n.shadowMapType === Or && (e = "SHADOWMAP_TYPE_VSM"),
    e
  );
}
function p5(n) {
  let e = "ENVMAP_TYPE_CUBE";
  if (n.envMap)
    switch (n.envMapMode) {
      case No:
      case Fo:
        e = "ENVMAP_TYPE_CUBE";
        break;
      case Ql:
        e = "ENVMAP_TYPE_CUBE_UV";
        break;
    }
  return e;
}
function m5(n) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (n.envMap)
    switch (n.envMapMode) {
      case Fo:
        e = "ENVMAP_MODE_REFRACTION";
        break;
    }
  return e;
}
function g5(n) {
  let e = "ENVMAP_BLENDING_NONE";
  if (n.envMap)
    switch (n.combine) {
      case Xl:
        e = "ENVMAP_BLENDING_MULTIPLY";
        break;
      case Y3:
        e = "ENVMAP_BLENDING_MIX";
        break;
      case Z3:
        e = "ENVMAP_BLENDING_ADD";
        break;
    }
  return e;
}
function v5(n) {
  const e = n.envMapCubeUVHeight;
  if (e === null) return null;
  const t = Math.log2(e) - 2,
    i = 1 / e;
  return {
    texelWidth: 1 / (3 * Math.max(Math.pow(2, t), 7 * 16)),
    texelHeight: i,
    maxMip: t,
  };
}
function _5(n, e, t, i) {
  const r = n.getContext(),
    s = t.defines;
  let u = t.vertexShader,
    c = t.fragmentShader;
  const h = d5(t),
    p = p5(t),
    g = m5(t),
    v = g5(t),
    x = v5(t),
    M = t.isWebGL2 ? "" : o5(t),
    w = a5(s),
    C = r.createProgram();
  let E,
    b,
    L = t.glslVersion
      ? "#version " +
        t.glslVersion +
        `
`
      : "";
  t.isRawShaderMaterial
    ? ((E = [
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        w,
      ].filter(ga).join(`
`)),
      E.length > 0 &&
        (E += `
`),
      (b = [
        M,
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        w,
      ].filter(ga).join(`
`)),
      b.length > 0 &&
        (b += `
`))
    : ((E = [
        od(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        w,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + g : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.mapUv ? "#define MAP_UV " + t.mapUv : "",
        t.alphaMapUv ? "#define ALPHAMAP_UV " + t.alphaMapUv : "",
        t.lightMapUv ? "#define LIGHTMAP_UV " + t.lightMapUv : "",
        t.aoMapUv ? "#define AOMAP_UV " + t.aoMapUv : "",
        t.emissiveMapUv ? "#define EMISSIVEMAP_UV " + t.emissiveMapUv : "",
        t.bumpMapUv ? "#define BUMPMAP_UV " + t.bumpMapUv : "",
        t.normalMapUv ? "#define NORMALMAP_UV " + t.normalMapUv : "",
        t.displacementMapUv
          ? "#define DISPLACEMENTMAP_UV " + t.displacementMapUv
          : "",
        t.metalnessMapUv ? "#define METALNESSMAP_UV " + t.metalnessMapUv : "",
        t.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + t.roughnessMapUv : "",
        t.anisotropyMapUv
          ? "#define ANISOTROPYMAP_UV " + t.anisotropyMapUv
          : "",
        t.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + t.clearcoatMapUv : "",
        t.clearcoatNormalMapUv
          ? "#define CLEARCOAT_NORMALMAP_UV " + t.clearcoatNormalMapUv
          : "",
        t.clearcoatRoughnessMapUv
          ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + t.clearcoatRoughnessMapUv
          : "",
        t.iridescenceMapUv
          ? "#define IRIDESCENCEMAP_UV " + t.iridescenceMapUv
          : "",
        t.iridescenceThicknessMapUv
          ? "#define IRIDESCENCE_THICKNESSMAP_UV " + t.iridescenceThicknessMapUv
          : "",
        t.sheenColorMapUv
          ? "#define SHEEN_COLORMAP_UV " + t.sheenColorMapUv
          : "",
        t.sheenRoughnessMapUv
          ? "#define SHEEN_ROUGHNESSMAP_UV " + t.sheenRoughnessMapUv
          : "",
        t.specularMapUv ? "#define SPECULARMAP_UV " + t.specularMapUv : "",
        t.specularColorMapUv
          ? "#define SPECULAR_COLORMAP_UV " + t.specularColorMapUv
          : "",
        t.specularIntensityMapUv
          ? "#define SPECULAR_INTENSITYMAP_UV " + t.specularIntensityMapUv
          : "",
        t.transmissionMapUv
          ? "#define TRANSMISSIONMAP_UV " + t.transmissionMapUv
          : "",
        t.thicknessMapUv ? "#define THICKNESSMAP_UV " + t.thicknessMapUv : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1
          ? "#define USE_MORPHNORMALS"
          : "",
        t.morphColors && t.isWebGL2 ? "#define USE_MORPHCOLORS" : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE"
          : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_TEXTURE_STRIDE " + t.morphTextureStride
          : "",
        t.morphTargetsCount > 0 && t.isWebGL2
          ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount
          : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + h : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_UV1",
        "	attribute vec2 uv1;",
        "#endif",
        "#ifdef USE_UV2",
        "	attribute vec2 uv2;",
        "#endif",
        "#ifdef USE_UV3",
        "	attribute vec2 uv3;",
        "#endif",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`,
      ].filter(ga).join(`
`)),
      (b = [
        M,
        od(t),
        "#define SHADER_TYPE " + t.shaderType,
        "#define SHADER_NAME " + t.shaderName,
        w,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + p : "",
        t.envMap ? "#define " + g : "",
        t.envMap ? "#define " + v : "",
        x ? "#define CUBEUV_TEXEL_WIDTH " + x.texelWidth : "",
        x ? "#define CUBEUV_TEXEL_HEIGHT " + x.texelHeight : "",
        x ? "#define CUBEUV_MAX_MIP " + x.maxMip + ".0" : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
        t.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.anisotropy ? "#define USE_ANISOTROPY" : "",
        t.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.iridescence ? "#define USE_IRIDESCENCE" : "",
        t.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
        t.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.alphaHash ? "#define USE_ALPHAHASH" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents && t.flatShading === !1 ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUv1s ? "#define USE_UV1" : "",
        t.vertexUv2s ? "#define USE_UV2" : "",
        t.vertexUv3s ? "#define USE_UV3" : "",
        t.pointsUvs ? "#define USE_POINTS_UV" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + h : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.useLegacyLights ? "#define LEGACY_LIGHTS" : "",
        t.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth
          ? "#define USE_LOGDEPTHBUF_EXT"
          : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== ls ? "#define TONE_MAPPING" : "",
        t.toneMapping !== ls ? Ft.tonemapping_pars_fragment : "",
        t.toneMapping !== ls ? s5("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.opaque ? "#define OPAQUE" : "",
        Ft.colorspace_pars_fragment,
        r5("linearToOutputTexel", t.outputColorSpace),
        t.useDepthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`,
      ].filter(ga).join(`
`))),
    (u = Lu(u)),
    (u = id(u, t)),
    (u = rd(u, t)),
    (c = Lu(c)),
    (c = id(c, t)),
    (c = rd(c, t)),
    (u = sd(u)),
    (c = sd(c)),
    t.isWebGL2 &&
      t.isRawShaderMaterial !== !0 &&
      ((L = `#version 300 es
`),
      (E =
        [
          "precision mediump sampler2DArray;",
          "#define attribute in",
          "#define varying out",
          "#define texture2D texture",
        ].join(`
`) +
        `
` +
        E),
      (b =
        [
          "#define varying in",
          t.glslVersion === Sh
            ? ""
            : "layout(location = 0) out highp vec4 pc_fragColor;",
          t.glslVersion === Sh ? "" : "#define gl_FragColor pc_fragColor",
          "#define gl_FragDepthEXT gl_FragDepth",
          "#define texture2D texture",
          "#define textureCube texture",
          "#define texture2DProj textureProj",
          "#define texture2DLodEXT textureLod",
          "#define texture2DProjLodEXT textureProjLod",
          "#define textureCubeLodEXT textureLod",
          "#define texture2DGradEXT textureGrad",
          "#define texture2DProjGradEXT textureProjGrad",
          "#define textureCubeGradEXT textureGrad",
        ].join(`
`) +
        `
` +
        b));
  const S = L + E + u,
    R = L + b + c,
    U = td(r, r.VERTEX_SHADER, S),
    q = td(r, r.FRAGMENT_SHADER, R);
  if (
    (r.attachShader(C, U),
    r.attachShader(C, q),
    t.index0AttributeName !== void 0
      ? r.bindAttribLocation(C, 0, t.index0AttributeName)
      : t.morphTargets === !0 && r.bindAttribLocation(C, 0, "position"),
    r.linkProgram(C),
    n.debug.checkShaderErrors)
  ) {
    const D = r.getProgramInfoLog(C).trim(),
      O = r.getShaderInfoLog(U).trim(),
      k = r.getShaderInfoLog(q).trim();
    let $ = !0,
      H = !0;
    if (r.getProgramParameter(C, r.LINK_STATUS) === !1)
      if ((($ = !1), typeof n.debug.onShaderError == "function"))
        n.debug.onShaderError(r, C, U, q);
      else {
        const Q = nd(r, U, "vertex"),
          F = nd(r, q, "fragment");
        console.error(
          "THREE.WebGLProgram: Shader Error " +
            r.getError() +
            " - VALIDATE_STATUS " +
            r.getProgramParameter(C, r.VALIDATE_STATUS) +
            `

Program Info Log: ` +
            D +
            `
` +
            Q +
            `
` +
            F
        );
      }
    else
      D !== ""
        ? console.warn("THREE.WebGLProgram: Program Info Log:", D)
        : (O === "" || k === "") && (H = !1);
    H &&
      (this.diagnostics = {
        runnable: $,
        programLog: D,
        vertexShader: { log: O, prefix: E },
        fragmentShader: { log: k, prefix: b },
      });
  }
  r.deleteShader(U), r.deleteShader(q);
  let I;
  this.getUniforms = function () {
    return I === void 0 && (I = new tl(r, C)), I;
  };
  let N;
  return (
    (this.getAttributes = function () {
      return N === void 0 && (N = A5(r, C)), N;
    }),
    (this.destroy = function () {
      i.releaseStatesOfProgram(this),
        r.deleteProgram(C),
        (this.program = void 0);
    }),
    (this.type = t.shaderType),
    (this.name = t.shaderName),
    (this.id = t5++),
    (this.cacheKey = e),
    (this.usedTimes = 1),
    (this.program = C),
    (this.vertexShader = U),
    (this.fragmentShader = q),
    this
  );
}
let x5 = 0;
class y5 {
  constructor() {
    (this.shaderCache = new Map()), (this.materialCache = new Map());
  }
  update(e) {
    const t = e.vertexShader,
      i = e.fragmentShader,
      r = this._getShaderStage(t),
      s = this._getShaderStage(i),
      u = this._getShaderCacheForMaterial(e);
    return (
      u.has(r) === !1 && (u.add(r), r.usedTimes++),
      u.has(s) === !1 && (u.add(s), s.usedTimes++),
      this
    );
  }
  remove(e) {
    const t = this.materialCache.get(e);
    for (const i of t)
      i.usedTimes--, i.usedTimes === 0 && this.shaderCache.delete(i.code);
    return this.materialCache.delete(e), this;
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(e) {
    const t = this.materialCache;
    let i = t.get(e);
    return i === void 0 && ((i = new Set()), t.set(e, i)), i;
  }
  _getShaderStage(e) {
    const t = this.shaderCache;
    let i = t.get(e);
    return i === void 0 && ((i = new b5(e)), t.set(e, i)), i;
  }
}
class b5 {
  constructor(e) {
    (this.id = x5++), (this.code = e), (this.usedTimes = 0);
  }
}
function M5(n, e, t, i, r, s, u) {
  const c = new Ec(),
    h = new y5(),
    p = [],
    g = r.isWebGL2,
    v = r.logarithmicDepthBuffer,
    x = r.vertexTextures;
  let M = r.precision;
  const w = {
    MeshDepthMaterial: "depth",
    MeshDistanceMaterial: "distanceRGBA",
    MeshNormalMaterial: "normal",
    MeshBasicMaterial: "basic",
    MeshLambertMaterial: "lambert",
    MeshPhongMaterial: "phong",
    MeshToonMaterial: "toon",
    MeshStandardMaterial: "physical",
    MeshPhysicalMaterial: "physical",
    MeshMatcapMaterial: "matcap",
    LineBasicMaterial: "basic",
    LineDashedMaterial: "dashed",
    PointsMaterial: "points",
    ShadowMaterial: "shadow",
    SpriteMaterial: "sprite",
  };
  function C(D) {
    return D === 0 ? "uv" : `uv${D}`;
  }
  function E(D, O, k, $, H) {
    const Q = $.fog,
      F = H.geometry,
      J = D.isMeshStandardMaterial ? $.environment : null,
      K = (D.isMeshStandardMaterial ? t : e).get(D.envMap || J),
      ie = K && K.mapping === Ql ? K.image.height : null,
      he = w[D.type];
    D.precision !== null &&
      ((M = r.getMaxPrecision(D.precision)),
      M !== D.precision &&
        console.warn(
          "THREE.WebGLProgram.getParameters:",
          D.precision,
          "not supported, using",
          M,
          "instead."
        ));
    const ce =
        F.morphAttributes.position ||
        F.morphAttributes.normal ||
        F.morphAttributes.color,
      oe = ce !== void 0 ? ce.length : 0;
    let de = 0;
    F.morphAttributes.position !== void 0 && (de = 1),
      F.morphAttributes.normal !== void 0 && (de = 2),
      F.morphAttributes.color !== void 0 && (de = 3);
    let Se, Pe, Oe, $e;
    if (he) {
      const en = er[he];
      (Se = en.vertexShader), (Pe = en.fragmentShader);
    } else
      (Se = D.vertexShader),
        (Pe = D.fragmentShader),
        h.update(D),
        (Oe = h.getVertexShaderID(D)),
        ($e = h.getFragmentShaderID(D));
    const nt = n.getRenderTarget(),
      ot = H.isInstancedMesh === !0,
      Rt = !!D.map,
      Ot = !!D.matcap,
      ct = !!K,
      ne = !!D.aoMap,
      Ge = !!D.lightMap,
      Ce = !!D.bumpMap,
      Fe = !!D.normalMap,
      Le = !!D.displacementMap,
      At = !!D.emissiveMap,
      it = !!D.metalnessMap,
      at = !!D.roughnessMap,
      mt = D.anisotropy > 0,
      xt = D.clearcoat > 0,
      nn = D.iridescence > 0,
      Y = D.sheen > 0,
      G = D.transmission > 0,
      xe = mt && !!D.anisotropyMap,
      Be = xt && !!D.clearcoatMap,
      Ie = xt && !!D.clearcoatNormalMap,
      Ne = xt && !!D.clearcoatRoughnessMap,
      ut = nn && !!D.iridescenceMap,
      ze = nn && !!D.iridescenceThicknessMap,
      be = Y && !!D.sheenColorMap,
      re = Y && !!D.sheenRoughnessMap,
      Re = !!D.specularMap,
      tt = !!D.specularColorMap,
      Xe = !!D.specularIntensityMap,
      et = G && !!D.transmissionMap,
      wt = G && !!D.thicknessMap,
      Vt = !!D.gradientMap,
      ae = !!D.alphaMap,
      Ye = D.alphaTest > 0,
      Me = !!D.alphaHash,
      Ue = !!D.extensions,
      pe = !!F.attributes.uv1,
      kt = !!F.attributes.uv2,
      Yt = !!F.attributes.uv3;
    let rn = ls;
    return (
      D.toneMapped &&
        (nt === null || nt.isXRRenderTarget === !0) &&
        (rn = n.toneMapping),
      {
        isWebGL2: g,
        shaderID: he,
        shaderType: D.type,
        shaderName: D.name,
        vertexShader: Se,
        fragmentShader: Pe,
        defines: D.defines,
        customVertexShaderID: Oe,
        customFragmentShaderID: $e,
        isRawShaderMaterial: D.isRawShaderMaterial === !0,
        glslVersion: D.glslVersion,
        precision: M,
        instancing: ot,
        instancingColor: ot && H.instanceColor !== null,
        supportsVertexTextures: x,
        outputColorSpace:
          nt === null
            ? n.outputColorSpace
            : nt.isXRRenderTarget === !0
            ? nt.texture.colorSpace
            : xr,
        map: Rt,
        matcap: Ot,
        envMap: ct,
        envMapMode: ct && K.mapping,
        envMapCubeUVHeight: ie,
        aoMap: ne,
        lightMap: Ge,
        bumpMap: Ce,
        normalMap: Fe,
        displacementMap: x && Le,
        emissiveMap: At,
        normalMapObjectSpace: Fe && D.normalMapType === gv,
        normalMapTangentSpace: Fe && D.normalMapType === bc,
        metalnessMap: it,
        roughnessMap: at,
        anisotropy: mt,
        anisotropyMap: xe,
        clearcoat: xt,
        clearcoatMap: Be,
        clearcoatNormalMap: Ie,
        clearcoatRoughnessMap: Ne,
        iridescence: nn,
        iridescenceMap: ut,
        iridescenceThicknessMap: ze,
        sheen: Y,
        sheenColorMap: be,
        sheenRoughnessMap: re,
        specularMap: Re,
        specularColorMap: tt,
        specularIntensityMap: Xe,
        transmission: G,
        transmissionMap: et,
        thicknessMap: wt,
        gradientMap: Vt,
        opaque: D.transparent === !1 && D.blending === As,
        alphaMap: ae,
        alphaTest: Ye,
        alphaHash: Me,
        combine: D.combine,
        mapUv: Rt && C(D.map.channel),
        aoMapUv: ne && C(D.aoMap.channel),
        lightMapUv: Ge && C(D.lightMap.channel),
        bumpMapUv: Ce && C(D.bumpMap.channel),
        normalMapUv: Fe && C(D.normalMap.channel),
        displacementMapUv: Le && C(D.displacementMap.channel),
        emissiveMapUv: At && C(D.emissiveMap.channel),
        metalnessMapUv: it && C(D.metalnessMap.channel),
        roughnessMapUv: at && C(D.roughnessMap.channel),
        anisotropyMapUv: xe && C(D.anisotropyMap.channel),
        clearcoatMapUv: Be && C(D.clearcoatMap.channel),
        clearcoatNormalMapUv: Ie && C(D.clearcoatNormalMap.channel),
        clearcoatRoughnessMapUv: Ne && C(D.clearcoatRoughnessMap.channel),
        iridescenceMapUv: ut && C(D.iridescenceMap.channel),
        iridescenceThicknessMapUv: ze && C(D.iridescenceThicknessMap.channel),
        sheenColorMapUv: be && C(D.sheenColorMap.channel),
        sheenRoughnessMapUv: re && C(D.sheenRoughnessMap.channel),
        specularMapUv: Re && C(D.specularMap.channel),
        specularColorMapUv: tt && C(D.specularColorMap.channel),
        specularIntensityMapUv: Xe && C(D.specularIntensityMap.channel),
        transmissionMapUv: et && C(D.transmissionMap.channel),
        thicknessMapUv: wt && C(D.thicknessMap.channel),
        alphaMapUv: ae && C(D.alphaMap.channel),
        vertexTangents: !!F.attributes.tangent && (Fe || mt),
        vertexColors: D.vertexColors,
        vertexAlphas:
          D.vertexColors === !0 &&
          !!F.attributes.color &&
          F.attributes.color.itemSize === 4,
        vertexUv1s: pe,
        vertexUv2s: kt,
        vertexUv3s: Yt,
        pointsUvs: H.isPoints === !0 && !!F.attributes.uv && (Rt || ae),
        fog: !!Q,
        useFog: D.fog === !0,
        fogExp2: Q && Q.isFogExp2,
        flatShading: D.flatShading === !0,
        sizeAttenuation: D.sizeAttenuation === !0,
        logarithmicDepthBuffer: v,
        skinning: H.isSkinnedMesh === !0,
        morphTargets: F.morphAttributes.position !== void 0,
        morphNormals: F.morphAttributes.normal !== void 0,
        morphColors: F.morphAttributes.color !== void 0,
        morphTargetsCount: oe,
        morphTextureStride: de,
        numDirLights: O.directional.length,
        numPointLights: O.point.length,
        numSpotLights: O.spot.length,
        numSpotLightMaps: O.spotLightMap.length,
        numRectAreaLights: O.rectArea.length,
        numHemiLights: O.hemi.length,
        numDirLightShadows: O.directionalShadowMap.length,
        numPointLightShadows: O.pointShadowMap.length,
        numSpotLightShadows: O.spotShadowMap.length,
        numSpotLightShadowsWithMaps: O.numSpotLightShadowsWithMaps,
        numClippingPlanes: u.numPlanes,
        numClipIntersection: u.numIntersection,
        dithering: D.dithering,
        shadowMapEnabled: n.shadowMap.enabled && k.length > 0,
        shadowMapType: n.shadowMap.type,
        toneMapping: rn,
        useLegacyLights: n._useLegacyLights,
        decodeVideoTexture:
          Rt && D.map.isVideoTexture === !0 && D.map.colorSpace === hn,
        premultipliedAlpha: D.premultipliedAlpha,
        doubleSided: D.side === mi,
        flipSided: D.side === fi,
        useDepthPacking: D.depthPacking >= 0,
        depthPacking: D.depthPacking || 0,
        index0AttributeName: D.index0AttributeName,
        extensionDerivatives: Ue && D.extensions.derivatives === !0,
        extensionFragDepth: Ue && D.extensions.fragDepth === !0,
        extensionDrawBuffers: Ue && D.extensions.drawBuffers === !0,
        extensionShaderTextureLOD: Ue && D.extensions.shaderTextureLOD === !0,
        rendererExtensionFragDepth: g || i.has("EXT_frag_depth"),
        rendererExtensionDrawBuffers: g || i.has("WEBGL_draw_buffers"),
        rendererExtensionShaderTextureLod: g || i.has("EXT_shader_texture_lod"),
        customProgramCacheKey: D.customProgramCacheKey(),
      }
    );
  }
  function b(D) {
    const O = [];
    if (
      (D.shaderID
        ? O.push(D.shaderID)
        : (O.push(D.customVertexShaderID), O.push(D.customFragmentShaderID)),
      D.defines !== void 0)
    )
      for (const k in D.defines) O.push(k), O.push(D.defines[k]);
    return (
      D.isRawShaderMaterial === !1 &&
        (L(O, D), S(O, D), O.push(n.outputColorSpace)),
      O.push(D.customProgramCacheKey),
      O.join()
    );
  }
  function L(D, O) {
    D.push(O.precision),
      D.push(O.outputColorSpace),
      D.push(O.envMapMode),
      D.push(O.envMapCubeUVHeight),
      D.push(O.mapUv),
      D.push(O.alphaMapUv),
      D.push(O.lightMapUv),
      D.push(O.aoMapUv),
      D.push(O.bumpMapUv),
      D.push(O.normalMapUv),
      D.push(O.displacementMapUv),
      D.push(O.emissiveMapUv),
      D.push(O.metalnessMapUv),
      D.push(O.roughnessMapUv),
      D.push(O.anisotropyMapUv),
      D.push(O.clearcoatMapUv),
      D.push(O.clearcoatNormalMapUv),
      D.push(O.clearcoatRoughnessMapUv),
      D.push(O.iridescenceMapUv),
      D.push(O.iridescenceThicknessMapUv),
      D.push(O.sheenColorMapUv),
      D.push(O.sheenRoughnessMapUv),
      D.push(O.specularMapUv),
      D.push(O.specularColorMapUv),
      D.push(O.specularIntensityMapUv),
      D.push(O.transmissionMapUv),
      D.push(O.thicknessMapUv),
      D.push(O.combine),
      D.push(O.fogExp2),
      D.push(O.sizeAttenuation),
      D.push(O.morphTargetsCount),
      D.push(O.morphAttributeCount),
      D.push(O.numDirLights),
      D.push(O.numPointLights),
      D.push(O.numSpotLights),
      D.push(O.numSpotLightMaps),
      D.push(O.numHemiLights),
      D.push(O.numRectAreaLights),
      D.push(O.numDirLightShadows),
      D.push(O.numPointLightShadows),
      D.push(O.numSpotLightShadows),
      D.push(O.numSpotLightShadowsWithMaps),
      D.push(O.shadowMapType),
      D.push(O.toneMapping),
      D.push(O.numClippingPlanes),
      D.push(O.numClipIntersection),
      D.push(O.depthPacking);
  }
  function S(D, O) {
    c.disableAll(),
      O.isWebGL2 && c.enable(0),
      O.supportsVertexTextures && c.enable(1),
      O.instancing && c.enable(2),
      O.instancingColor && c.enable(3),
      O.matcap && c.enable(4),
      O.envMap && c.enable(5),
      O.normalMapObjectSpace && c.enable(6),
      O.normalMapTangentSpace && c.enable(7),
      O.clearcoat && c.enable(8),
      O.iridescence && c.enable(9),
      O.alphaTest && c.enable(10),
      O.vertexColors && c.enable(11),
      O.vertexAlphas && c.enable(12),
      O.vertexUv1s && c.enable(13),
      O.vertexUv2s && c.enable(14),
      O.vertexUv3s && c.enable(15),
      O.vertexTangents && c.enable(16),
      O.anisotropy && c.enable(17),
      D.push(c.mask),
      c.disableAll(),
      O.fog && c.enable(0),
      O.useFog && c.enable(1),
      O.flatShading && c.enable(2),
      O.logarithmicDepthBuffer && c.enable(3),
      O.skinning && c.enable(4),
      O.morphTargets && c.enable(5),
      O.morphNormals && c.enable(6),
      O.morphColors && c.enable(7),
      O.premultipliedAlpha && c.enable(8),
      O.shadowMapEnabled && c.enable(9),
      O.useLegacyLights && c.enable(10),
      O.doubleSided && c.enable(11),
      O.flipSided && c.enable(12),
      O.useDepthPacking && c.enable(13),
      O.dithering && c.enable(14),
      O.transmission && c.enable(15),
      O.sheen && c.enable(16),
      O.opaque && c.enable(17),
      O.pointsUvs && c.enable(18),
      O.decodeVideoTexture && c.enable(19),
      D.push(c.mask);
  }
  function R(D) {
    const O = w[D.type];
    let k;
    if (O) {
      const $ = er[O];
      k = N1.clone($.uniforms);
    } else k = D.uniforms;
    return k;
  }
  function U(D, O) {
    let k;
    for (let $ = 0, H = p.length; $ < H; $++) {
      const Q = p[$];
      if (Q.cacheKey === O) {
        (k = Q), ++k.usedTimes;
        break;
      }
    }
    return k === void 0 && ((k = new _5(n, O, D, s)), p.push(k)), k;
  }
  function q(D) {
    if (--D.usedTimes === 0) {
      const O = p.indexOf(D);
      (p[O] = p[p.length - 1]), p.pop(), D.destroy();
    }
  }
  function I(D) {
    h.remove(D);
  }
  function N() {
    h.dispose();
  }
  return {
    getParameters: E,
    getProgramCacheKey: b,
    getUniforms: R,
    acquireProgram: U,
    releaseProgram: q,
    releaseShaderCache: I,
    programs: p,
    dispose: N,
  };
}
function E5() {
  let n = new WeakMap();
  function e(s) {
    let u = n.get(s);
    return u === void 0 && ((u = {}), n.set(s, u)), u;
  }
  function t(s) {
    n.delete(s);
  }
  function i(s, u, c) {
    n.get(s)[u] = c;
  }
  function r() {
    n = new WeakMap();
  }
  return { get: e, remove: t, update: i, dispose: r };
}
function w5(n, e) {
  return n.groupOrder !== e.groupOrder
    ? n.groupOrder - e.groupOrder
    : n.renderOrder !== e.renderOrder
    ? n.renderOrder - e.renderOrder
    : n.material.id !== e.material.id
    ? n.material.id - e.material.id
    : n.z !== e.z
    ? n.z - e.z
    : n.id - e.id;
}
function ad(n, e) {
  return n.groupOrder !== e.groupOrder
    ? n.groupOrder - e.groupOrder
    : n.renderOrder !== e.renderOrder
    ? n.renderOrder - e.renderOrder
    : n.z !== e.z
    ? e.z - n.z
    : n.id - e.id;
}
function Ad() {
  const n = [];
  let e = 0;
  const t = [],
    i = [],
    r = [];
  function s() {
    (e = 0), (t.length = 0), (i.length = 0), (r.length = 0);
  }
  function u(v, x, M, w, C, E) {
    let b = n[e];
    return (
      b === void 0
        ? ((b = {
            id: v.id,
            object: v,
            geometry: x,
            material: M,
            groupOrder: w,
            renderOrder: v.renderOrder,
            z: C,
            group: E,
          }),
          (n[e] = b))
        : ((b.id = v.id),
          (b.object = v),
          (b.geometry = x),
          (b.material = M),
          (b.groupOrder = w),
          (b.renderOrder = v.renderOrder),
          (b.z = C),
          (b.group = E)),
      e++,
      b
    );
  }
  function c(v, x, M, w, C, E) {
    const b = u(v, x, M, w, C, E);
    M.transmission > 0
      ? i.push(b)
      : M.transparent === !0
      ? r.push(b)
      : t.push(b);
  }
  function h(v, x, M, w, C, E) {
    const b = u(v, x, M, w, C, E);
    M.transmission > 0
      ? i.unshift(b)
      : M.transparent === !0
      ? r.unshift(b)
      : t.unshift(b);
  }
  function p(v, x) {
    t.length > 1 && t.sort(v || w5),
      i.length > 1 && i.sort(x || ad),
      r.length > 1 && r.sort(x || ad);
  }
  function g() {
    for (let v = e, x = n.length; v < x; v++) {
      const M = n[v];
      if (M.id === null) break;
      (M.id = null),
        (M.object = null),
        (M.geometry = null),
        (M.material = null),
        (M.group = null);
    }
  }
  return {
    opaque: t,
    transmissive: i,
    transparent: r,
    init: s,
    push: c,
    unshift: h,
    finish: g,
    sort: p,
  };
}
function S5() {
  let n = new WeakMap();
  function e(i, r) {
    const s = n.get(i);
    let u;
    return (
      s === void 0
        ? ((u = new Ad()), n.set(i, [u]))
        : r >= s.length
        ? ((u = new Ad()), s.push(u))
        : (u = s[r]),
      u
    );
  }
  function t() {
    n = new WeakMap();
  }
  return { get: e, dispose: t };
}
function T5() {
  const n = {};
  return {
    get: function (e) {
      if (n[e.id] !== void 0) return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = { direction: new te(), color: new Dt() };
          break;
        case "SpotLight":
          t = {
            position: new te(),
            direction: new te(),
            color: new Dt(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0,
          };
          break;
        case "PointLight":
          t = { position: new te(), color: new Dt(), distance: 0, decay: 0 };
          break;
        case "HemisphereLight":
          t = {
            direction: new te(),
            skyColor: new Dt(),
            groundColor: new Dt(),
          };
          break;
        case "RectAreaLight":
          t = {
            color: new Dt(),
            position: new te(),
            halfWidth: new te(),
            halfHeight: new te(),
          };
          break;
      }
      return (n[e.id] = t), t;
    },
  };
}
function C5() {
  const n = {};
  return {
    get: function (e) {
      if (n[e.id] !== void 0) return n[e.id];
      let t;
      switch (e.type) {
        case "DirectionalLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
          };
          break;
        case "SpotLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
          };
          break;
        case "PointLight":
          t = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new ke(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3,
          };
          break;
      }
      return (n[e.id] = t), t;
    },
  };
}
let R5 = 0;
function P5(n, e) {
  return (
    (e.castShadow ? 2 : 0) -
    (n.castShadow ? 2 : 0) +
    (e.map ? 1 : 0) -
    (n.map ? 1 : 0)
  );
}
function L5(n, e) {
  const t = new T5(),
    i = C5(),
    r = {
      version: 0,
      hash: {
        directionalLength: -1,
        pointLength: -1,
        spotLength: -1,
        rectAreaLength: -1,
        hemiLength: -1,
        numDirectionalShadows: -1,
        numPointShadows: -1,
        numSpotShadows: -1,
        numSpotMaps: -1,
      },
      ambient: [0, 0, 0],
      probe: [],
      directional: [],
      directionalShadow: [],
      directionalShadowMap: [],
      directionalShadowMatrix: [],
      spot: [],
      spotLightMap: [],
      spotShadow: [],
      spotShadowMap: [],
      spotLightMatrix: [],
      rectArea: [],
      rectAreaLTC1: null,
      rectAreaLTC2: null,
      point: [],
      pointShadow: [],
      pointShadowMap: [],
      pointShadowMatrix: [],
      hemi: [],
      numSpotLightShadowsWithMaps: 0,
    };
  for (let g = 0; g < 9; g++) r.probe.push(new te());
  const s = new te(),
    u = new dn(),
    c = new dn();
  function h(g, v) {
    let x = 0,
      M = 0,
      w = 0;
    for (let k = 0; k < 9; k++) r.probe[k].set(0, 0, 0);
    let C = 0,
      E = 0,
      b = 0,
      L = 0,
      S = 0,
      R = 0,
      U = 0,
      q = 0,
      I = 0,
      N = 0;
    g.sort(P5);
    const D = v === !0 ? Math.PI : 1;
    for (let k = 0, $ = g.length; k < $; k++) {
      const H = g[k],
        Q = H.color,
        F = H.intensity,
        J = H.distance,
        K = H.shadow && H.shadow.map ? H.shadow.map.texture : null;
      if (H.isAmbientLight)
        (x += Q.r * F * D), (M += Q.g * F * D), (w += Q.b * F * D);
      else if (H.isLightProbe)
        for (let ie = 0; ie < 9; ie++)
          r.probe[ie].addScaledVector(H.sh.coefficients[ie], F);
      else if (H.isDirectionalLight) {
        const ie = t.get(H);
        if (
          (ie.color.copy(H.color).multiplyScalar(H.intensity * D), H.castShadow)
        ) {
          const he = H.shadow,
            ce = i.get(H);
          (ce.shadowBias = he.bias),
            (ce.shadowNormalBias = he.normalBias),
            (ce.shadowRadius = he.radius),
            (ce.shadowMapSize = he.mapSize),
            (r.directionalShadow[C] = ce),
            (r.directionalShadowMap[C] = K),
            (r.directionalShadowMatrix[C] = H.shadow.matrix),
            R++;
        }
        (r.directional[C] = ie), C++;
      } else if (H.isSpotLight) {
        const ie = t.get(H);
        ie.position.setFromMatrixPosition(H.matrixWorld),
          ie.color.copy(Q).multiplyScalar(F * D),
          (ie.distance = J),
          (ie.coneCos = Math.cos(H.angle)),
          (ie.penumbraCos = Math.cos(H.angle * (1 - H.penumbra))),
          (ie.decay = H.decay),
          (r.spot[b] = ie);
        const he = H.shadow;
        if (
          (H.map &&
            ((r.spotLightMap[I] = H.map),
            I++,
            he.updateMatrices(H),
            H.castShadow && N++),
          (r.spotLightMatrix[b] = he.matrix),
          H.castShadow)
        ) {
          const ce = i.get(H);
          (ce.shadowBias = he.bias),
            (ce.shadowNormalBias = he.normalBias),
            (ce.shadowRadius = he.radius),
            (ce.shadowMapSize = he.mapSize),
            (r.spotShadow[b] = ce),
            (r.spotShadowMap[b] = K),
            q++;
        }
        b++;
      } else if (H.isRectAreaLight) {
        const ie = t.get(H);
        ie.color.copy(Q).multiplyScalar(F),
          ie.halfWidth.set(H.width * 0.5, 0, 0),
          ie.halfHeight.set(0, H.height * 0.5, 0),
          (r.rectArea[L] = ie),
          L++;
      } else if (H.isPointLight) {
        const ie = t.get(H);
        if (
          (ie.color.copy(H.color).multiplyScalar(H.intensity * D),
          (ie.distance = H.distance),
          (ie.decay = H.decay),
          H.castShadow)
        ) {
          const he = H.shadow,
            ce = i.get(H);
          (ce.shadowBias = he.bias),
            (ce.shadowNormalBias = he.normalBias),
            (ce.shadowRadius = he.radius),
            (ce.shadowMapSize = he.mapSize),
            (ce.shadowCameraNear = he.camera.near),
            (ce.shadowCameraFar = he.camera.far),
            (r.pointShadow[E] = ce),
            (r.pointShadowMap[E] = K),
            (r.pointShadowMatrix[E] = H.shadow.matrix),
            U++;
        }
        (r.point[E] = ie), E++;
      } else if (H.isHemisphereLight) {
        const ie = t.get(H);
        ie.skyColor.copy(H.color).multiplyScalar(F * D),
          ie.groundColor.copy(H.groundColor).multiplyScalar(F * D),
          (r.hemi[S] = ie),
          S++;
      }
    }
    L > 0 &&
      (e.isWebGL2 || n.has("OES_texture_float_linear") === !0
        ? ((r.rectAreaLTC1 = Je.LTC_FLOAT_1), (r.rectAreaLTC2 = Je.LTC_FLOAT_2))
        : n.has("OES_texture_half_float_linear") === !0
        ? ((r.rectAreaLTC1 = Je.LTC_HALF_1), (r.rectAreaLTC2 = Je.LTC_HALF_2))
        : console.error(
            "THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."
          )),
      (r.ambient[0] = x),
      (r.ambient[1] = M),
      (r.ambient[2] = w);
    const O = r.hash;
    (O.directionalLength !== C ||
      O.pointLength !== E ||
      O.spotLength !== b ||
      O.rectAreaLength !== L ||
      O.hemiLength !== S ||
      O.numDirectionalShadows !== R ||
      O.numPointShadows !== U ||
      O.numSpotShadows !== q ||
      O.numSpotMaps !== I) &&
      ((r.directional.length = C),
      (r.spot.length = b),
      (r.rectArea.length = L),
      (r.point.length = E),
      (r.hemi.length = S),
      (r.directionalShadow.length = R),
      (r.directionalShadowMap.length = R),
      (r.pointShadow.length = U),
      (r.pointShadowMap.length = U),
      (r.spotShadow.length = q),
      (r.spotShadowMap.length = q),
      (r.directionalShadowMatrix.length = R),
      (r.pointShadowMatrix.length = U),
      (r.spotLightMatrix.length = q + I - N),
      (r.spotLightMap.length = I),
      (r.numSpotLightShadowsWithMaps = N),
      (O.directionalLength = C),
      (O.pointLength = E),
      (O.spotLength = b),
      (O.rectAreaLength = L),
      (O.hemiLength = S),
      (O.numDirectionalShadows = R),
      (O.numPointShadows = U),
      (O.numSpotShadows = q),
      (O.numSpotMaps = I),
      (r.version = R5++));
  }
  function p(g, v) {
    let x = 0,
      M = 0,
      w = 0,
      C = 0,
      E = 0;
    const b = v.matrixWorldInverse;
    for (let L = 0, S = g.length; L < S; L++) {
      const R = g[L];
      if (R.isDirectionalLight) {
        const U = r.directional[x];
        U.direction.setFromMatrixPosition(R.matrixWorld),
          s.setFromMatrixPosition(R.target.matrixWorld),
          U.direction.sub(s),
          U.direction.transformDirection(b),
          x++;
      } else if (R.isSpotLight) {
        const U = r.spot[w];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          U.direction.setFromMatrixPosition(R.matrixWorld),
          s.setFromMatrixPosition(R.target.matrixWorld),
          U.direction.sub(s),
          U.direction.transformDirection(b),
          w++;
      } else if (R.isRectAreaLight) {
        const U = r.rectArea[C];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          c.identity(),
          u.copy(R.matrixWorld),
          u.premultiply(b),
          c.extractRotation(u),
          U.halfWidth.set(R.width * 0.5, 0, 0),
          U.halfHeight.set(0, R.height * 0.5, 0),
          U.halfWidth.applyMatrix4(c),
          U.halfHeight.applyMatrix4(c),
          C++;
      } else if (R.isPointLight) {
        const U = r.point[M];
        U.position.setFromMatrixPosition(R.matrixWorld),
          U.position.applyMatrix4(b),
          M++;
      } else if (R.isHemisphereLight) {
        const U = r.hemi[E];
        U.direction.setFromMatrixPosition(R.matrixWorld),
          U.direction.transformDirection(b),
          E++;
      }
    }
  }
  return { setup: h, setupView: p, state: r };
}
function ld(n, e) {
  const t = new L5(n, e),
    i = [],
    r = [];
  function s() {
    (i.length = 0), (r.length = 0);
  }
  function u(v) {
    i.push(v);
  }
  function c(v) {
    r.push(v);
  }
  function h(v) {
    t.setup(i, v);
  }
  function p(v) {
    t.setupView(i, v);
  }
  return {
    init: s,
    state: { lightsArray: i, shadowsArray: r, lights: t },
    setupLights: h,
    setupLightsView: p,
    pushLight: u,
    pushShadow: c,
  };
}
function D5(n, e) {
  let t = new WeakMap();
  function i(s, u = 0) {
    const c = t.get(s);
    let h;
    return (
      c === void 0
        ? ((h = new ld(n, e)), t.set(s, [h]))
        : u >= c.length
        ? ((h = new ld(n, e)), c.push(h))
        : (h = c[u]),
      h
    );
  }
  function r() {
    t = new WeakMap();
  }
  return { get: i, dispose: r };
}
class I5 extends Qs {
  constructor(e) {
    super(),
      (this.isMeshDepthMaterial = !0),
      (this.type = "MeshDepthMaterial"),
      (this.depthPacking = pv),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.depthPacking = e.depthPacking),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      this
    );
  }
}
class O5 extends Qs {
  constructor(e) {
    super(),
      (this.isMeshDistanceMaterial = !0),
      (this.type = "MeshDistanceMaterial"),
      (this.map = null),
      (this.alphaMap = null),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.map = e.map),
      (this.alphaMap = e.alphaMap),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      this
    );
  }
}
const q5 = `void main() {
	gl_Position = vec4( position, 1.0 );
}`,
  U5 = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function B5(n, e, t) {
  let i = new wc();
  const r = new ke(),
    s = new ke(),
    u = new In(),
    c = new I5({ depthPacking: mv }),
    h = new O5(),
    p = {},
    g = t.maxTextureSize,
    v = { [cs]: fi, [fi]: cs, [mi]: mi },
    x = new or({
      defines: { VSM_SAMPLES: 8 },
      uniforms: {
        shadow_pass: { value: null },
        resolution: { value: new ke() },
        radius: { value: 4 },
      },
      vertexShader: q5,
      fragmentShader: U5,
    }),
    M = x.clone();
  M.defines.HORIZONTAL_PASS = 1;
  const w = new fn();
  w.setAttribute(
    "position",
    new En(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
  );
  const C = new wn(w, x),
    E = this;
  (this.enabled = !1),
    (this.autoUpdate = !0),
    (this.needsUpdate = !1),
    (this.type = v1);
  let b = this.type;
  this.render = function (U, q, I) {
    if (
      E.enabled === !1 ||
      (E.autoUpdate === !1 && E.needsUpdate === !1) ||
      U.length === 0
    )
      return;
    const N = n.getRenderTarget(),
      D = n.getActiveCubeFace(),
      O = n.getActiveMipmapLevel(),
      k = n.state;
    k.setBlending(as),
      k.buffers.color.setClear(1, 1, 1, 1),
      k.buffers.depth.setTest(!0),
      k.setScissorTest(!1);
    const $ = b !== Or && this.type === Or,
      H = b === Or && this.type !== Or;
    for (let Q = 0, F = U.length; Q < F; Q++) {
      const J = U[Q],
        K = J.shadow;
      if (K === void 0) {
        console.warn("THREE.WebGLShadowMap:", J, "has no shadow.");
        continue;
      }
      if (K.autoUpdate === !1 && K.needsUpdate === !1) continue;
      r.copy(K.mapSize);
      const ie = K.getFrameExtents();
      if (
        (r.multiply(ie),
        s.copy(K.mapSize),
        (r.x > g || r.y > g) &&
          (r.x > g &&
            ((s.x = Math.floor(g / ie.x)),
            (r.x = s.x * ie.x),
            (K.mapSize.x = s.x)),
          r.y > g &&
            ((s.y = Math.floor(g / ie.y)),
            (r.y = s.y * ie.y),
            (K.mapSize.y = s.y))),
        K.map === null || $ === !0 || H === !0)
      ) {
        const ce = this.type !== Or ? { minFilter: Ai, magFilter: Ai } : {};
        K.map !== null && K.map.dispose(),
          (K.map = new Fs(r.x, r.y, ce)),
          (K.map.texture.name = J.name + ".shadowMap"),
          K.camera.updateProjectionMatrix();
      }
      n.setRenderTarget(K.map), n.clear();
      const he = K.getViewportCount();
      for (let ce = 0; ce < he; ce++) {
        const oe = K.getViewport(ce);
        u.set(s.x * oe.x, s.y * oe.y, s.x * oe.z, s.y * oe.w),
          k.viewport(u),
          K.updateMatrices(J, ce),
          (i = K.getFrustum()),
          R(q, I, K.camera, J, this.type);
      }
      K.isPointLightShadow !== !0 && this.type === Or && L(K, I),
        (K.needsUpdate = !1);
    }
    (b = this.type), (E.needsUpdate = !1), n.setRenderTarget(N, D, O);
  };
  function L(U, q) {
    const I = e.update(C);
    x.defines.VSM_SAMPLES !== U.blurSamples &&
      ((x.defines.VSM_SAMPLES = U.blurSamples),
      (M.defines.VSM_SAMPLES = U.blurSamples),
      (x.needsUpdate = !0),
      (M.needsUpdate = !0)),
      U.mapPass === null && (U.mapPass = new Fs(r.x, r.y)),
      (x.uniforms.shadow_pass.value = U.map.texture),
      (x.uniforms.resolution.value = U.mapSize),
      (x.uniforms.radius.value = U.radius),
      n.setRenderTarget(U.mapPass),
      n.clear(),
      n.renderBufferDirect(q, null, I, x, C, null),
      (M.uniforms.shadow_pass.value = U.mapPass.texture),
      (M.uniforms.resolution.value = U.mapSize),
      (M.uniforms.radius.value = U.radius),
      n.setRenderTarget(U.map),
      n.clear(),
      n.renderBufferDirect(q, null, I, M, C, null);
  }
  function S(U, q, I, N) {
    let D = null;
    const O =
      I.isPointLight === !0 ? U.customDistanceMaterial : U.customDepthMaterial;
    if (O !== void 0) D = O;
    else if (
      ((D = I.isPointLight === !0 ? h : c),
      (n.localClippingEnabled &&
        q.clipShadows === !0 &&
        Array.isArray(q.clippingPlanes) &&
        q.clippingPlanes.length !== 0) ||
        (q.displacementMap && q.displacementScale !== 0) ||
        (q.alphaMap && q.alphaTest > 0) ||
        (q.map && q.alphaTest > 0))
    ) {
      const k = D.uuid,
        $ = q.uuid;
      let H = p[k];
      H === void 0 && ((H = {}), (p[k] = H));
      let Q = H[$];
      Q === void 0 && ((Q = D.clone()), (H[$] = Q)), (D = Q);
    }
    if (
      ((D.visible = q.visible),
      (D.wireframe = q.wireframe),
      N === Or
        ? (D.side = q.shadowSide !== null ? q.shadowSide : q.side)
        : (D.side = q.shadowSide !== null ? q.shadowSide : v[q.side]),
      (D.alphaMap = q.alphaMap),
      (D.alphaTest = q.alphaTest),
      (D.map = q.map),
      (D.clipShadows = q.clipShadows),
      (D.clippingPlanes = q.clippingPlanes),
      (D.clipIntersection = q.clipIntersection),
      (D.displacementMap = q.displacementMap),
      (D.displacementScale = q.displacementScale),
      (D.displacementBias = q.displacementBias),
      (D.wireframeLinewidth = q.wireframeLinewidth),
      (D.linewidth = q.linewidth),
      I.isPointLight === !0 && D.isMeshDistanceMaterial === !0)
    ) {
      const k = n.properties.get(D);
      k.light = I;
    }
    return D;
  }
  function R(U, q, I, N, D) {
    if (U.visible === !1) return;
    if (
      U.layers.test(q.layers) &&
      (U.isMesh || U.isLine || U.isPoints) &&
      (U.castShadow || (U.receiveShadow && D === Or)) &&
      (!U.frustumCulled || i.intersectsObject(U))
    ) {
      U.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse, U.matrixWorld);
      const $ = e.update(U),
        H = U.material;
      if (Array.isArray(H)) {
        const Q = $.groups;
        for (let F = 0, J = Q.length; F < J; F++) {
          const K = Q[F],
            ie = H[K.materialIndex];
          if (ie && ie.visible) {
            const he = S(U, ie, N, D);
            n.renderBufferDirect(I, null, $, he, U, K);
          }
        }
      } else if (H.visible) {
        const Q = S(U, H, N, D);
        n.renderBufferDirect(I, null, $, Q, U, null);
      }
    }
    const k = U.children;
    for (let $ = 0, H = k.length; $ < H; $++) R(k[$], q, I, N, D);
  }
}
function N5(n, e, t) {
  const i = t.isWebGL2;
  function r() {
    let ae = !1;
    const Ye = new In();
    let Me = null;
    const Ue = new In(0, 0, 0, 0);
    return {
      setMask: function (pe) {
        Me !== pe && !ae && (n.colorMask(pe, pe, pe, pe), (Me = pe));
      },
      setLocked: function (pe) {
        ae = pe;
      },
      setClear: function (pe, kt, Yt, rn, ei) {
        ei === !0 && ((pe *= rn), (kt *= rn), (Yt *= rn)),
          Ye.set(pe, kt, Yt, rn),
          Ue.equals(Ye) === !1 && (n.clearColor(pe, kt, Yt, rn), Ue.copy(Ye));
      },
      reset: function () {
        (ae = !1), (Me = null), Ue.set(-1, 0, 0, 0);
      },
    };
  }
  function s() {
    let ae = !1,
      Ye = null,
      Me = null,
      Ue = null;
    return {
      setTest: function (pe) {
        pe ? nt(n.DEPTH_TEST) : ot(n.DEPTH_TEST);
      },
      setMask: function (pe) {
        Ye !== pe && !ae && (n.depthMask(pe), (Ye = pe));
      },
      setFunc: function (pe) {
        if (Me !== pe) {
          switch (pe) {
            case H3:
              n.depthFunc(n.NEVER);
              break;
            case V3:
              n.depthFunc(n.ALWAYS);
              break;
            case W3:
              n.depthFunc(n.LESS);
              break;
            case Mu:
              n.depthFunc(n.LEQUAL);
              break;
            case j3:
              n.depthFunc(n.EQUAL);
              break;
            case X3:
              n.depthFunc(n.GEQUAL);
              break;
            case Q3:
              n.depthFunc(n.GREATER);
              break;
            case $3:
              n.depthFunc(n.NOTEQUAL);
              break;
            default:
              n.depthFunc(n.LEQUAL);
          }
          Me = pe;
        }
      },
      setLocked: function (pe) {
        ae = pe;
      },
      setClear: function (pe) {
        Ue !== pe && (n.clearDepth(pe), (Ue = pe));
      },
      reset: function () {
        (ae = !1), (Ye = null), (Me = null), (Ue = null);
      },
    };
  }
  function u() {
    let ae = !1,
      Ye = null,
      Me = null,
      Ue = null,
      pe = null,
      kt = null,
      Yt = null,
      rn = null,
      ei = null;
    return {
      setTest: function (en) {
        ae || (en ? nt(n.STENCIL_TEST) : ot(n.STENCIL_TEST));
      },
      setMask: function (en) {
        Ye !== en && !ae && (n.stencilMask(en), (Ye = en));
      },
      setFunc: function (en, yi, Bn) {
        (Me !== en || Ue !== yi || pe !== Bn) &&
          (n.stencilFunc(en, yi, Bn), (Me = en), (Ue = yi), (pe = Bn));
      },
      setOp: function (en, yi, Bn) {
        (kt !== en || Yt !== yi || rn !== Bn) &&
          (n.stencilOp(en, yi, Bn), (kt = en), (Yt = yi), (rn = Bn));
      },
      setLocked: function (en) {
        ae = en;
      },
      setClear: function (en) {
        ei !== en && (n.clearStencil(en), (ei = en));
      },
      reset: function () {
        (ae = !1),
          (Ye = null),
          (Me = null),
          (Ue = null),
          (pe = null),
          (kt = null),
          (Yt = null),
          (rn = null),
          (ei = null);
      },
    };
  }
  const c = new r(),
    h = new s(),
    p = new u(),
    g = new WeakMap(),
    v = new WeakMap();
  let x = {},
    M = {},
    w = new WeakMap(),
    C = [],
    E = null,
    b = !1,
    L = null,
    S = null,
    R = null,
    U = null,
    q = null,
    I = null,
    N = null,
    D = !1,
    O = null,
    k = null,
    $ = null,
    H = null,
    Q = null;
  const F = n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
  let J = !1,
    K = 0;
  const ie = n.getParameter(n.VERSION);
  ie.indexOf("WebGL") !== -1
    ? ((K = parseFloat(/^WebGL (\d)/.exec(ie)[1])), (J = K >= 1))
    : ie.indexOf("OpenGL ES") !== -1 &&
      ((K = parseFloat(/^OpenGL ES (\d)/.exec(ie)[1])), (J = K >= 2));
  let he = null,
    ce = {};
  const oe = n.getParameter(n.SCISSOR_BOX),
    de = n.getParameter(n.VIEWPORT),
    Se = new In().fromArray(oe),
    Pe = new In().fromArray(de);
  function Oe(ae, Ye, Me, Ue) {
    const pe = new Uint8Array(4),
      kt = n.createTexture();
    n.bindTexture(ae, kt),
      n.texParameteri(ae, n.TEXTURE_MIN_FILTER, n.NEAREST),
      n.texParameteri(ae, n.TEXTURE_MAG_FILTER, n.NEAREST);
    for (let Yt = 0; Yt < Me; Yt++)
      i && (ae === n.TEXTURE_3D || ae === n.TEXTURE_2D_ARRAY)
        ? n.texImage3D(Ye, 0, n.RGBA, 1, 1, Ue, 0, n.RGBA, n.UNSIGNED_BYTE, pe)
        : n.texImage2D(
            Ye + Yt,
            0,
            n.RGBA,
            1,
            1,
            0,
            n.RGBA,
            n.UNSIGNED_BYTE,
            pe
          );
    return kt;
  }
  const $e = {};
  ($e[n.TEXTURE_2D] = Oe(n.TEXTURE_2D, n.TEXTURE_2D, 1)),
    ($e[n.TEXTURE_CUBE_MAP] = Oe(
      n.TEXTURE_CUBE_MAP,
      n.TEXTURE_CUBE_MAP_POSITIVE_X,
      6
    )),
    i &&
      (($e[n.TEXTURE_2D_ARRAY] = Oe(
        n.TEXTURE_2D_ARRAY,
        n.TEXTURE_2D_ARRAY,
        1,
        1
      )),
      ($e[n.TEXTURE_3D] = Oe(n.TEXTURE_3D, n.TEXTURE_3D, 1, 1))),
    c.setClear(0, 0, 0, 1),
    h.setClear(1),
    p.setClear(0),
    nt(n.DEPTH_TEST),
    h.setFunc(Mu),
    Le(!1),
    At(Xf),
    nt(n.CULL_FACE),
    Ce(as);
  function nt(ae) {
    x[ae] !== !0 && (n.enable(ae), (x[ae] = !0));
  }
  function ot(ae) {
    x[ae] !== !1 && (n.disable(ae), (x[ae] = !1));
  }
  function Rt(ae, Ye) {
    return M[ae] !== Ye
      ? (n.bindFramebuffer(ae, Ye),
        (M[ae] = Ye),
        i &&
          (ae === n.DRAW_FRAMEBUFFER && (M[n.FRAMEBUFFER] = Ye),
          ae === n.FRAMEBUFFER && (M[n.DRAW_FRAMEBUFFER] = Ye)),
        !0)
      : !1;
  }
  function Ot(ae, Ye) {
    let Me = C,
      Ue = !1;
    if (ae)
      if (
        ((Me = w.get(Ye)),
        Me === void 0 && ((Me = []), w.set(Ye, Me)),
        ae.isWebGLMultipleRenderTargets)
      ) {
        const pe = ae.texture;
        if (Me.length !== pe.length || Me[0] !== n.COLOR_ATTACHMENT0) {
          for (let kt = 0, Yt = pe.length; kt < Yt; kt++)
            Me[kt] = n.COLOR_ATTACHMENT0 + kt;
          (Me.length = pe.length), (Ue = !0);
        }
      } else
        Me[0] !== n.COLOR_ATTACHMENT0 &&
          ((Me[0] = n.COLOR_ATTACHMENT0), (Ue = !0));
    else Me[0] !== n.BACK && ((Me[0] = n.BACK), (Ue = !0));
    Ue &&
      (t.isWebGL2
        ? n.drawBuffers(Me)
        : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Me));
  }
  function ct(ae) {
    return E !== ae ? (n.useProgram(ae), (E = ae), !0) : !1;
  }
  const ne = {
    [wo]: n.FUNC_ADD,
    [D3]: n.FUNC_SUBTRACT,
    [I3]: n.FUNC_REVERSE_SUBTRACT,
  };
  if (i) (ne[Zf] = n.MIN), (ne[Kf] = n.MAX);
  else {
    const ae = e.get("EXT_blend_minmax");
    ae !== null && ((ne[Zf] = ae.MIN_EXT), (ne[Kf] = ae.MAX_EXT));
  }
  const Ge = {
    [O3]: n.ZERO,
    [q3]: n.ONE,
    [U3]: n.SRC_COLOR,
    [_1]: n.SRC_ALPHA,
    [G3]: n.SRC_ALPHA_SATURATE,
    [k3]: n.DST_COLOR,
    [N3]: n.DST_ALPHA,
    [B3]: n.ONE_MINUS_SRC_COLOR,
    [x1]: n.ONE_MINUS_SRC_ALPHA,
    [z3]: n.ONE_MINUS_DST_COLOR,
    [F3]: n.ONE_MINUS_DST_ALPHA,
  };
  function Ce(ae, Ye, Me, Ue, pe, kt, Yt, rn) {
    if (ae === as) {
      b === !0 && (ot(n.BLEND), (b = !1));
      return;
    }
    if ((b === !1 && (nt(n.BLEND), (b = !0)), ae !== L3)) {
      if (ae !== L || rn !== D) {
        if (
          ((S !== wo || q !== wo) &&
            (n.blendEquation(n.FUNC_ADD), (S = wo), (q = wo)),
          rn)
        )
          switch (ae) {
            case As:
              n.blendFuncSeparate(
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA,
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA
              );
              break;
            case Qf:
              n.blendFunc(n.ONE, n.ONE);
              break;
            case $f:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case Yf:
              n.blendFuncSeparate(n.ZERO, n.SRC_COLOR, n.ZERO, n.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ae);
              break;
          }
        else
          switch (ae) {
            case As:
              n.blendFuncSeparate(
                n.SRC_ALPHA,
                n.ONE_MINUS_SRC_ALPHA,
                n.ONE,
                n.ONE_MINUS_SRC_ALPHA
              );
              break;
            case Qf:
              n.blendFunc(n.SRC_ALPHA, n.ONE);
              break;
            case $f:
              n.blendFuncSeparate(n.ZERO, n.ONE_MINUS_SRC_COLOR, n.ZERO, n.ONE);
              break;
            case Yf:
              n.blendFunc(n.ZERO, n.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", ae);
              break;
          }
        (R = null), (U = null), (I = null), (N = null), (L = ae), (D = rn);
      }
      return;
    }
    (pe = pe || Ye),
      (kt = kt || Me),
      (Yt = Yt || Ue),
      (Ye !== S || pe !== q) &&
        (n.blendEquationSeparate(ne[Ye], ne[pe]), (S = Ye), (q = pe)),
      (Me !== R || Ue !== U || kt !== I || Yt !== N) &&
        (n.blendFuncSeparate(Ge[Me], Ge[Ue], Ge[kt], Ge[Yt]),
        (R = Me),
        (U = Ue),
        (I = kt),
        (N = Yt)),
      (L = ae),
      (D = !1);
  }
  function Fe(ae, Ye) {
    ae.side === mi ? ot(n.CULL_FACE) : nt(n.CULL_FACE);
    let Me = ae.side === fi;
    Ye && (Me = !Me),
      Le(Me),
      ae.blending === As && ae.transparent === !1
        ? Ce(as)
        : Ce(
            ae.blending,
            ae.blendEquation,
            ae.blendSrc,
            ae.blendDst,
            ae.blendEquationAlpha,
            ae.blendSrcAlpha,
            ae.blendDstAlpha,
            ae.premultipliedAlpha
          ),
      h.setFunc(ae.depthFunc),
      h.setTest(ae.depthTest),
      h.setMask(ae.depthWrite),
      c.setMask(ae.colorWrite);
    const Ue = ae.stencilWrite;
    p.setTest(Ue),
      Ue &&
        (p.setMask(ae.stencilWriteMask),
        p.setFunc(ae.stencilFunc, ae.stencilRef, ae.stencilFuncMask),
        p.setOp(ae.stencilFail, ae.stencilZFail, ae.stencilZPass)),
      at(ae.polygonOffset, ae.polygonOffsetFactor, ae.polygonOffsetUnits),
      ae.alphaToCoverage === !0
        ? nt(n.SAMPLE_ALPHA_TO_COVERAGE)
        : ot(n.SAMPLE_ALPHA_TO_COVERAGE);
  }
  function Le(ae) {
    O !== ae && (ae ? n.frontFace(n.CW) : n.frontFace(n.CCW), (O = ae));
  }
  function At(ae) {
    ae !== C3
      ? (nt(n.CULL_FACE),
        ae !== k &&
          (ae === Xf
            ? n.cullFace(n.BACK)
            : ae === R3
            ? n.cullFace(n.FRONT)
            : n.cullFace(n.FRONT_AND_BACK)))
      : ot(n.CULL_FACE),
      (k = ae);
  }
  function it(ae) {
    ae !== $ && (J && n.lineWidth(ae), ($ = ae));
  }
  function at(ae, Ye, Me) {
    ae
      ? (nt(n.POLYGON_OFFSET_FILL),
        (H !== Ye || Q !== Me) && (n.polygonOffset(Ye, Me), (H = Ye), (Q = Me)))
      : ot(n.POLYGON_OFFSET_FILL);
  }
  function mt(ae) {
    ae ? nt(n.SCISSOR_TEST) : ot(n.SCISSOR_TEST);
  }
  function xt(ae) {
    ae === void 0 && (ae = n.TEXTURE0 + F - 1),
      he !== ae && (n.activeTexture(ae), (he = ae));
  }
  function nn(ae, Ye, Me) {
    Me === void 0 && (he === null ? (Me = n.TEXTURE0 + F - 1) : (Me = he));
    let Ue = ce[Me];
    Ue === void 0 && ((Ue = { type: void 0, texture: void 0 }), (ce[Me] = Ue)),
      (Ue.type !== ae || Ue.texture !== Ye) &&
        (he !== Me && (n.activeTexture(Me), (he = Me)),
        n.bindTexture(ae, Ye || $e[ae]),
        (Ue.type = ae),
        (Ue.texture = Ye));
  }
  function Y() {
    const ae = ce[he];
    ae !== void 0 &&
      ae.type !== void 0 &&
      (n.bindTexture(ae.type, null), (ae.type = void 0), (ae.texture = void 0));
  }
  function G() {
    try {
      n.compressedTexImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function xe() {
    try {
      n.compressedTexImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Be() {
    try {
      n.texSubImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Ie() {
    try {
      n.texSubImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Ne() {
    try {
      n.compressedTexSubImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function ut() {
    try {
      n.compressedTexSubImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function ze() {
    try {
      n.texStorage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function be() {
    try {
      n.texStorage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function re() {
    try {
      n.texImage2D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function Re() {
    try {
      n.texImage3D.apply(n, arguments);
    } catch (ae) {
      console.error("THREE.WebGLState:", ae);
    }
  }
  function tt(ae) {
    Se.equals(ae) === !1 && (n.scissor(ae.x, ae.y, ae.z, ae.w), Se.copy(ae));
  }
  function Xe(ae) {
    Pe.equals(ae) === !1 && (n.viewport(ae.x, ae.y, ae.z, ae.w), Pe.copy(ae));
  }
  function et(ae, Ye) {
    let Me = v.get(Ye);
    Me === void 0 && ((Me = new WeakMap()), v.set(Ye, Me));
    let Ue = Me.get(ae);
    Ue === void 0 &&
      ((Ue = n.getUniformBlockIndex(Ye, ae.name)), Me.set(ae, Ue));
  }
  function wt(ae, Ye) {
    const Ue = v.get(Ye).get(ae);
    g.get(Ye) !== Ue &&
      (n.uniformBlockBinding(Ye, Ue, ae.__bindingPointIndex), g.set(Ye, Ue));
  }
  function Vt() {
    n.disable(n.BLEND),
      n.disable(n.CULL_FACE),
      n.disable(n.DEPTH_TEST),
      n.disable(n.POLYGON_OFFSET_FILL),
      n.disable(n.SCISSOR_TEST),
      n.disable(n.STENCIL_TEST),
      n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),
      n.blendEquation(n.FUNC_ADD),
      n.blendFunc(n.ONE, n.ZERO),
      n.blendFuncSeparate(n.ONE, n.ZERO, n.ONE, n.ZERO),
      n.colorMask(!0, !0, !0, !0),
      n.clearColor(0, 0, 0, 0),
      n.depthMask(!0),
      n.depthFunc(n.LESS),
      n.clearDepth(1),
      n.stencilMask(4294967295),
      n.stencilFunc(n.ALWAYS, 0, 4294967295),
      n.stencilOp(n.KEEP, n.KEEP, n.KEEP),
      n.clearStencil(0),
      n.cullFace(n.BACK),
      n.frontFace(n.CCW),
      n.polygonOffset(0, 0),
      n.activeTexture(n.TEXTURE0),
      n.bindFramebuffer(n.FRAMEBUFFER, null),
      i === !0 &&
        (n.bindFramebuffer(n.DRAW_FRAMEBUFFER, null),
        n.bindFramebuffer(n.READ_FRAMEBUFFER, null)),
      n.useProgram(null),
      n.lineWidth(1),
      n.scissor(0, 0, n.canvas.width, n.canvas.height),
      n.viewport(0, 0, n.canvas.width, n.canvas.height),
      (x = {}),
      (he = null),
      (ce = {}),
      (M = {}),
      (w = new WeakMap()),
      (C = []),
      (E = null),
      (b = !1),
      (L = null),
      (S = null),
      (R = null),
      (U = null),
      (q = null),
      (I = null),
      (N = null),
      (D = !1),
      (O = null),
      (k = null),
      ($ = null),
      (H = null),
      (Q = null),
      Se.set(0, 0, n.canvas.width, n.canvas.height),
      Pe.set(0, 0, n.canvas.width, n.canvas.height),
      c.reset(),
      h.reset(),
      p.reset();
  }
  return {
    buffers: { color: c, depth: h, stencil: p },
    enable: nt,
    disable: ot,
    bindFramebuffer: Rt,
    drawBuffers: Ot,
    useProgram: ct,
    setBlending: Ce,
    setMaterial: Fe,
    setFlipSided: Le,
    setCullFace: At,
    setLineWidth: it,
    setPolygonOffset: at,
    setScissorTest: mt,
    activeTexture: xt,
    bindTexture: nn,
    unbindTexture: Y,
    compressedTexImage2D: G,
    compressedTexImage3D: xe,
    texImage2D: re,
    texImage3D: Re,
    updateUBOMapping: et,
    uniformBlockBinding: wt,
    texStorage2D: ze,
    texStorage3D: be,
    texSubImage2D: Be,
    texSubImage3D: Ie,
    compressedTexSubImage2D: Ne,
    compressedTexSubImage3D: ut,
    scissor: tt,
    viewport: Xe,
    reset: Vt,
  };
}
function F5(n, e, t, i, r, s, u) {
  const c = r.isWebGL2,
    h = r.maxTextures,
    p = r.maxCubemapSize,
    g = r.maxTextureSize,
    v = r.maxSamples,
    x = e.has("WEBGL_multisampled_render_to_texture")
      ? e.get("WEBGL_multisampled_render_to_texture")
      : null,
    M =
      typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent),
    w = new WeakMap();
  let C;
  const E = new WeakMap();
  let b = !1;
  try {
    b =
      typeof OffscreenCanvas < "u" &&
      new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {}
  function L(Y, G) {
    return b ? new OffscreenCanvas(Y, G) : Da("canvas");
  }
  function S(Y, G, xe, Be) {
    let Ie = 1;
    if (
      ((Y.width > Be || Y.height > Be) &&
        (Ie = Be / Math.max(Y.width, Y.height)),
      Ie < 1 || G === !0)
    )
      if (
        (typeof HTMLImageElement < "u" && Y instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < "u" && Y instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < "u" && Y instanceof ImageBitmap)
      ) {
        const Ne = G ? ul : Math.floor,
          ut = Ne(Ie * Y.width),
          ze = Ne(Ie * Y.height);
        C === void 0 && (C = L(ut, ze));
        const be = xe ? L(ut, ze) : C;
        return (
          (be.width = ut),
          (be.height = ze),
          be.getContext("2d").drawImage(Y, 0, 0, ut, ze),
          console.warn(
            "THREE.WebGLRenderer: Texture has been resized from (" +
              Y.width +
              "x" +
              Y.height +
              ") to (" +
              ut +
              "x" +
              ze +
              ")."
          ),
          be
        );
      } else
        return (
          "data" in Y &&
            console.warn(
              "THREE.WebGLRenderer: Image in DataTexture is too big (" +
                Y.width +
                "x" +
                Y.height +
                ")."
            ),
          Y
        );
    return Y;
  }
  function R(Y) {
    return Pu(Y.width) && Pu(Y.height);
  }
  function U(Y) {
    return c
      ? !1
      : Y.wrapS !== tr ||
          Y.wrapT !== tr ||
          (Y.minFilter !== Ai && Y.minFilter !== Fi);
  }
  function q(Y, G) {
    return Y.generateMipmaps && G && Y.minFilter !== Ai && Y.minFilter !== Fi;
  }
  function I(Y) {
    n.generateMipmap(Y);
  }
  function N(Y, G, xe, Be, Ie = !1) {
    if (c === !1) return G;
    if (Y !== null) {
      if (n[Y] !== void 0) return n[Y];
      console.warn(
        "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
          Y +
          "'"
      );
    }
    let Ne = G;
    return (
      G === n.RED &&
        (xe === n.FLOAT && (Ne = n.R32F),
        xe === n.HALF_FLOAT && (Ne = n.R16F),
        xe === n.UNSIGNED_BYTE && (Ne = n.R8)),
      G === n.RED_INTEGER &&
        (xe === n.UNSIGNED_BYTE && (Ne = n.R8UI),
        xe === n.UNSIGNED_SHORT && (Ne = n.R16UI),
        xe === n.UNSIGNED_INT && (Ne = n.R32UI),
        xe === n.BYTE && (Ne = n.R8I),
        xe === n.SHORT && (Ne = n.R16I),
        xe === n.INT && (Ne = n.R32I)),
      G === n.RG &&
        (xe === n.FLOAT && (Ne = n.RG32F),
        xe === n.HALF_FLOAT && (Ne = n.RG16F),
        xe === n.UNSIGNED_BYTE && (Ne = n.RG8)),
      G === n.RGBA &&
        (xe === n.FLOAT && (Ne = n.RGBA32F),
        xe === n.HALF_FLOAT && (Ne = n.RGBA16F),
        xe === n.UNSIGNED_BYTE &&
          (Ne = Be === hn && Ie === !1 ? n.SRGB8_ALPHA8 : n.RGBA8),
        xe === n.UNSIGNED_SHORT_4_4_4_4 && (Ne = n.RGBA4),
        xe === n.UNSIGNED_SHORT_5_5_5_1 && (Ne = n.RGB5_A1)),
      (Ne === n.R16F ||
        Ne === n.R32F ||
        Ne === n.RG16F ||
        Ne === n.RG32F ||
        Ne === n.RGBA16F ||
        Ne === n.RGBA32F) &&
        e.get("EXT_color_buffer_float"),
      Ne
    );
  }
  function D(Y, G, xe) {
    return q(Y, xe) === !0 ||
      (Y.isFramebufferTexture && Y.minFilter !== Ai && Y.minFilter !== Fi)
      ? Math.log2(Math.max(G.width, G.height)) + 1
      : Y.mipmaps !== void 0 && Y.mipmaps.length > 0
      ? Y.mipmaps.length
      : Y.isCompressedTexture && Array.isArray(Y.image)
      ? G.mipmaps.length
      : 1;
  }
  function O(Y) {
    return Y === Ai || Y === Jf || Y === T0 ? n.NEAREST : n.LINEAR;
  }
  function k(Y) {
    const G = Y.target;
    G.removeEventListener("dispose", k), H(G), G.isVideoTexture && w.delete(G);
  }
  function $(Y) {
    const G = Y.target;
    G.removeEventListener("dispose", $), F(G);
  }
  function H(Y) {
    const G = i.get(Y);
    if (G.__webglInit === void 0) return;
    const xe = Y.source,
      Be = E.get(xe);
    if (Be) {
      const Ie = Be[G.__cacheKey];
      Ie.usedTimes--,
        Ie.usedTimes === 0 && Q(Y),
        Object.keys(Be).length === 0 && E.delete(xe);
    }
    i.remove(Y);
  }
  function Q(Y) {
    const G = i.get(Y);
    n.deleteTexture(G.__webglTexture);
    const xe = Y.source,
      Be = E.get(xe);
    delete Be[G.__cacheKey], u.memory.textures--;
  }
  function F(Y) {
    const G = Y.texture,
      xe = i.get(Y),
      Be = i.get(G);
    if (
      (Be.__webglTexture !== void 0 &&
        (n.deleteTexture(Be.__webglTexture), u.memory.textures--),
      Y.depthTexture && Y.depthTexture.dispose(),
      Y.isWebGLCubeRenderTarget)
    )
      for (let Ie = 0; Ie < 6; Ie++) {
        if (Array.isArray(xe.__webglFramebuffer[Ie]))
          for (let Ne = 0; Ne < xe.__webglFramebuffer[Ie].length; Ne++)
            n.deleteFramebuffer(xe.__webglFramebuffer[Ie][Ne]);
        else n.deleteFramebuffer(xe.__webglFramebuffer[Ie]);
        xe.__webglDepthbuffer &&
          n.deleteRenderbuffer(xe.__webglDepthbuffer[Ie]);
      }
    else {
      if (Array.isArray(xe.__webglFramebuffer))
        for (let Ie = 0; Ie < xe.__webglFramebuffer.length; Ie++)
          n.deleteFramebuffer(xe.__webglFramebuffer[Ie]);
      else n.deleteFramebuffer(xe.__webglFramebuffer);
      if (
        (xe.__webglDepthbuffer && n.deleteRenderbuffer(xe.__webglDepthbuffer),
        xe.__webglMultisampledFramebuffer &&
          n.deleteFramebuffer(xe.__webglMultisampledFramebuffer),
        xe.__webglColorRenderbuffer)
      )
        for (let Ie = 0; Ie < xe.__webglColorRenderbuffer.length; Ie++)
          xe.__webglColorRenderbuffer[Ie] &&
            n.deleteRenderbuffer(xe.__webglColorRenderbuffer[Ie]);
      xe.__webglDepthRenderbuffer &&
        n.deleteRenderbuffer(xe.__webglDepthRenderbuffer);
    }
    if (Y.isWebGLMultipleRenderTargets)
      for (let Ie = 0, Ne = G.length; Ie < Ne; Ie++) {
        const ut = i.get(G[Ie]);
        ut.__webglTexture &&
          (n.deleteTexture(ut.__webglTexture), u.memory.textures--),
          i.remove(G[Ie]);
      }
    i.remove(G), i.remove(Y);
  }
  let J = 0;
  function K() {
    J = 0;
  }
  function ie() {
    const Y = J;
    return (
      Y >= h &&
        console.warn(
          "THREE.WebGLTextures: Trying to use " +
            Y +
            " texture units while this GPU supports only " +
            h
        ),
      (J += 1),
      Y
    );
  }
  function he(Y) {
    const G = [];
    return (
      G.push(Y.wrapS),
      G.push(Y.wrapT),
      G.push(Y.wrapR || 0),
      G.push(Y.magFilter),
      G.push(Y.minFilter),
      G.push(Y.anisotropy),
      G.push(Y.internalFormat),
      G.push(Y.format),
      G.push(Y.type),
      G.push(Y.generateMipmaps),
      G.push(Y.premultiplyAlpha),
      G.push(Y.flipY),
      G.push(Y.unpackAlignment),
      G.push(Y.colorSpace),
      G.join()
    );
  }
  function ce(Y, G) {
    const xe = i.get(Y);
    if (
      (Y.isVideoTexture && xt(Y),
      Y.isRenderTargetTexture === !1 &&
        Y.version > 0 &&
        xe.__version !== Y.version)
    ) {
      const Be = Y.image;
      if (Be === null)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but no image data found."
        );
      else if (Be.complete === !1)
        console.warn(
          "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
        );
      else {
        Rt(xe, Y, G);
        return;
      }
    }
    t.bindTexture(n.TEXTURE_2D, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function oe(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      Rt(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_2D_ARRAY, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function de(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      Rt(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_3D, xe.__webglTexture, n.TEXTURE0 + G);
  }
  function Se(Y, G) {
    const xe = i.get(Y);
    if (Y.version > 0 && xe.__version !== Y.version) {
      Ot(xe, Y, G);
      return;
    }
    t.bindTexture(n.TEXTURE_CUBE_MAP, xe.__webglTexture, n.TEXTURE0 + G);
  }
  const Pe = { [Su]: n.REPEAT, [tr]: n.CLAMP_TO_EDGE, [Tu]: n.MIRRORED_REPEAT },
    Oe = {
      [Ai]: n.NEAREST,
      [Jf]: n.NEAREST_MIPMAP_NEAREST,
      [T0]: n.NEAREST_MIPMAP_LINEAR,
      [Fi]: n.LINEAR,
      [iv]: n.LINEAR_MIPMAP_NEAREST,
      [Ra]: n.LINEAR_MIPMAP_LINEAR,
    },
    $e = {
      [_v]: n.NEVER,
      [Sv]: n.ALWAYS,
      [xv]: n.LESS,
      [bv]: n.LEQUAL,
      [yv]: n.EQUAL,
      [wv]: n.GEQUAL,
      [Mv]: n.GREATER,
      [Ev]: n.NOTEQUAL,
    };
  function nt(Y, G, xe) {
    if (
      (xe
        ? (n.texParameteri(Y, n.TEXTURE_WRAP_S, Pe[G.wrapS]),
          n.texParameteri(Y, n.TEXTURE_WRAP_T, Pe[G.wrapT]),
          (Y === n.TEXTURE_3D || Y === n.TEXTURE_2D_ARRAY) &&
            n.texParameteri(Y, n.TEXTURE_WRAP_R, Pe[G.wrapR]),
          n.texParameteri(Y, n.TEXTURE_MAG_FILTER, Oe[G.magFilter]),
          n.texParameteri(Y, n.TEXTURE_MIN_FILTER, Oe[G.minFilter]))
        : (n.texParameteri(Y, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE),
          n.texParameteri(Y, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE),
          (Y === n.TEXTURE_3D || Y === n.TEXTURE_2D_ARRAY) &&
            n.texParameteri(Y, n.TEXTURE_WRAP_R, n.CLAMP_TO_EDGE),
          (G.wrapS !== tr || G.wrapT !== tr) &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
            ),
          n.texParameteri(Y, n.TEXTURE_MAG_FILTER, O(G.magFilter)),
          n.texParameteri(Y, n.TEXTURE_MIN_FILTER, O(G.minFilter)),
          G.minFilter !== Ai &&
            G.minFilter !== Fi &&
            console.warn(
              "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
            )),
      G.compareFunction &&
        (n.texParameteri(Y, n.TEXTURE_COMPARE_MODE, n.COMPARE_REF_TO_TEXTURE),
        n.texParameteri(Y, n.TEXTURE_COMPARE_FUNC, $e[G.compareFunction])),
      e.has("EXT_texture_filter_anisotropic") === !0)
    ) {
      const Be = e.get("EXT_texture_filter_anisotropic");
      if (
        G.magFilter === Ai ||
        (G.minFilter !== T0 && G.minFilter !== Ra) ||
        (G.type === os && e.has("OES_texture_float_linear") === !1) ||
        (c === !1 &&
          G.type === Pa &&
          e.has("OES_texture_half_float_linear") === !1)
      )
        return;
      (G.anisotropy > 1 || i.get(G).__currentAnisotropy) &&
        (n.texParameterf(
          Y,
          Be.TEXTURE_MAX_ANISOTROPY_EXT,
          Math.min(G.anisotropy, r.getMaxAnisotropy())
        ),
        (i.get(G).__currentAnisotropy = G.anisotropy));
    }
  }
  function ot(Y, G) {
    let xe = !1;
    Y.__webglInit === void 0 &&
      ((Y.__webglInit = !0), G.addEventListener("dispose", k));
    const Be = G.source;
    let Ie = E.get(Be);
    Ie === void 0 && ((Ie = {}), E.set(Be, Ie));
    const Ne = he(G);
    if (Ne !== Y.__cacheKey) {
      Ie[Ne] === void 0 &&
        ((Ie[Ne] = { texture: n.createTexture(), usedTimes: 0 }),
        u.memory.textures++,
        (xe = !0)),
        Ie[Ne].usedTimes++;
      const ut = Ie[Y.__cacheKey];
      ut !== void 0 &&
        (Ie[Y.__cacheKey].usedTimes--, ut.usedTimes === 0 && Q(G)),
        (Y.__cacheKey = Ne),
        (Y.__webglTexture = Ie[Ne].texture);
    }
    return xe;
  }
  function Rt(Y, G, xe) {
    let Be = n.TEXTURE_2D;
    (G.isDataArrayTexture || G.isCompressedArrayTexture) &&
      (Be = n.TEXTURE_2D_ARRAY),
      G.isData3DTexture && (Be = n.TEXTURE_3D);
    const Ie = ot(Y, G),
      Ne = G.source;
    t.bindTexture(Be, Y.__webglTexture, n.TEXTURE0 + xe);
    const ut = i.get(Ne);
    if (Ne.version !== ut.__version || Ie === !0) {
      t.activeTexture(n.TEXTURE0 + xe),
        n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, G.flipY),
        n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha),
        n.pixelStorei(n.UNPACK_ALIGNMENT, G.unpackAlignment),
        n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const ze = U(G) && R(G.image) === !1;
      let be = S(G.image, ze, !1, g);
      be = nn(G, be);
      const re = R(be) || c,
        Re = s.convert(G.format, G.colorSpace);
      let tt = s.convert(G.type),
        Xe = N(G.internalFormat, Re, tt, G.colorSpace, G.isVideoTexture);
      nt(Be, G, re);
      let et;
      const wt = G.mipmaps,
        Vt = c && G.isVideoTexture !== !0,
        ae = ut.__version === void 0 || Ie === !0,
        Ye = D(G, be, re);
      if (G.isDepthTexture)
        (Xe = n.DEPTH_COMPONENT),
          c
            ? G.type === os
              ? (Xe = n.DEPTH_COMPONENT32F)
              : G.type === ss
              ? (Xe = n.DEPTH_COMPONENT24)
              : G.type === Os
              ? (Xe = n.DEPTH24_STENCIL8)
              : (Xe = n.DEPTH_COMPONENT16)
            : G.type === os &&
              console.error(
                "WebGLRenderer: Floating point depth texture requires WebGL2."
              ),
          G.format === qs &&
            Xe === n.DEPTH_COMPONENT &&
            G.type !== yc &&
            G.type !== ss &&
            (console.warn(
              "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
            ),
            (G.type = ss),
            (tt = s.convert(G.type))),
          G.format === ko &&
            Xe === n.DEPTH_COMPONENT &&
            ((Xe = n.DEPTH_STENCIL),
            G.type !== Os &&
              (console.warn(
                "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
              ),
              (G.type = Os),
              (tt = s.convert(G.type)))),
          ae &&
            (Vt
              ? t.texStorage2D(n.TEXTURE_2D, 1, Xe, be.width, be.height)
              : t.texImage2D(
                  n.TEXTURE_2D,
                  0,
                  Xe,
                  be.width,
                  be.height,
                  0,
                  Re,
                  tt,
                  null
                ));
      else if (G.isDataTexture)
        if (wt.length > 0 && re) {
          Vt &&
            ae &&
            t.texStorage2D(n.TEXTURE_2D, Ye, Xe, wt[0].width, wt[0].height);
          for (let Me = 0, Ue = wt.length; Me < Ue; Me++)
            (et = wt[Me]),
              Vt
                ? t.texSubImage2D(
                    n.TEXTURE_2D,
                    Me,
                    0,
                    0,
                    et.width,
                    et.height,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage2D(
                    n.TEXTURE_2D,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    0,
                    Re,
                    tt,
                    et.data
                  );
          G.generateMipmaps = !1;
        } else
          Vt
            ? (ae && t.texStorage2D(n.TEXTURE_2D, Ye, Xe, be.width, be.height),
              t.texSubImage2D(
                n.TEXTURE_2D,
                0,
                0,
                0,
                be.width,
                be.height,
                Re,
                tt,
                be.data
              ))
            : t.texImage2D(
                n.TEXTURE_2D,
                0,
                Xe,
                be.width,
                be.height,
                0,
                Re,
                tt,
                be.data
              );
      else if (G.isCompressedTexture)
        if (G.isCompressedArrayTexture) {
          Vt &&
            ae &&
            t.texStorage3D(
              n.TEXTURE_2D_ARRAY,
              Ye,
              Xe,
              wt[0].width,
              wt[0].height,
              be.depth
            );
          for (let Me = 0, Ue = wt.length; Me < Ue; Me++)
            (et = wt[Me]),
              G.format !== nr
                ? Re !== null
                  ? Vt
                    ? t.compressedTexSubImage3D(
                        n.TEXTURE_2D_ARRAY,
                        Me,
                        0,
                        0,
                        0,
                        et.width,
                        et.height,
                        be.depth,
                        Re,
                        et.data,
                        0,
                        0
                      )
                    : t.compressedTexImage3D(
                        n.TEXTURE_2D_ARRAY,
                        Me,
                        Xe,
                        et.width,
                        et.height,
                        be.depth,
                        0,
                        et.data,
                        0,
                        0
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : Vt
                ? t.texSubImage3D(
                    n.TEXTURE_2D_ARRAY,
                    Me,
                    0,
                    0,
                    0,
                    et.width,
                    et.height,
                    be.depth,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage3D(
                    n.TEXTURE_2D_ARRAY,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    be.depth,
                    0,
                    Re,
                    tt,
                    et.data
                  );
        } else {
          Vt &&
            ae &&
            t.texStorage2D(n.TEXTURE_2D, Ye, Xe, wt[0].width, wt[0].height);
          for (let Me = 0, Ue = wt.length; Me < Ue; Me++)
            (et = wt[Me]),
              G.format !== nr
                ? Re !== null
                  ? Vt
                    ? t.compressedTexSubImage2D(
                        n.TEXTURE_2D,
                        Me,
                        0,
                        0,
                        et.width,
                        et.height,
                        Re,
                        et.data
                      )
                    : t.compressedTexImage2D(
                        n.TEXTURE_2D,
                        Me,
                        Xe,
                        et.width,
                        et.height,
                        0,
                        et.data
                      )
                  : console.warn(
                      "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                    )
                : Vt
                ? t.texSubImage2D(
                    n.TEXTURE_2D,
                    Me,
                    0,
                    0,
                    et.width,
                    et.height,
                    Re,
                    tt,
                    et.data
                  )
                : t.texImage2D(
                    n.TEXTURE_2D,
                    Me,
                    Xe,
                    et.width,
                    et.height,
                    0,
                    Re,
                    tt,
                    et.data
                  );
        }
      else if (G.isDataArrayTexture)
        Vt
          ? (ae &&
              t.texStorage3D(
                n.TEXTURE_2D_ARRAY,
                Ye,
                Xe,
                be.width,
                be.height,
                be.depth
              ),
            t.texSubImage3D(
              n.TEXTURE_2D_ARRAY,
              0,
              0,
              0,
              0,
              be.width,
              be.height,
              be.depth,
              Re,
              tt,
              be.data
            ))
          : t.texImage3D(
              n.TEXTURE_2D_ARRAY,
              0,
              Xe,
              be.width,
              be.height,
              be.depth,
              0,
              Re,
              tt,
              be.data
            );
      else if (G.isData3DTexture)
        Vt
          ? (ae &&
              t.texStorage3D(
                n.TEXTURE_3D,
                Ye,
                Xe,
                be.width,
                be.height,
                be.depth
              ),
            t.texSubImage3D(
              n.TEXTURE_3D,
              0,
              0,
              0,
              0,
              be.width,
              be.height,
              be.depth,
              Re,
              tt,
              be.data
            ))
          : t.texImage3D(
              n.TEXTURE_3D,
              0,
              Xe,
              be.width,
              be.height,
              be.depth,
              0,
              Re,
              tt,
              be.data
            );
      else if (G.isFramebufferTexture) {
        if (ae)
          if (Vt) t.texStorage2D(n.TEXTURE_2D, Ye, Xe, be.width, be.height);
          else {
            let Me = be.width,
              Ue = be.height;
            for (let pe = 0; pe < Ye; pe++)
              t.texImage2D(n.TEXTURE_2D, pe, Xe, Me, Ue, 0, Re, tt, null),
                (Me >>= 1),
                (Ue >>= 1);
          }
      } else if (wt.length > 0 && re) {
        Vt &&
          ae &&
          t.texStorage2D(n.TEXTURE_2D, Ye, Xe, wt[0].width, wt[0].height);
        for (let Me = 0, Ue = wt.length; Me < Ue; Me++)
          (et = wt[Me]),
            Vt
              ? t.texSubImage2D(n.TEXTURE_2D, Me, 0, 0, Re, tt, et)
              : t.texImage2D(n.TEXTURE_2D, Me, Xe, Re, tt, et);
        G.generateMipmaps = !1;
      } else
        Vt
          ? (ae && t.texStorage2D(n.TEXTURE_2D, Ye, Xe, be.width, be.height),
            t.texSubImage2D(n.TEXTURE_2D, 0, 0, 0, Re, tt, be))
          : t.texImage2D(n.TEXTURE_2D, 0, Xe, Re, tt, be);
      q(G, re) && I(Be),
        (ut.__version = Ne.version),
        G.onUpdate && G.onUpdate(G);
    }
    Y.__version = G.version;
  }
  function Ot(Y, G, xe) {
    if (G.image.length !== 6) return;
    const Be = ot(Y, G),
      Ie = G.source;
    t.bindTexture(n.TEXTURE_CUBE_MAP, Y.__webglTexture, n.TEXTURE0 + xe);
    const Ne = i.get(Ie);
    if (Ie.version !== Ne.__version || Be === !0) {
      t.activeTexture(n.TEXTURE0 + xe),
        n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL, G.flipY),
        n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha),
        n.pixelStorei(n.UNPACK_ALIGNMENT, G.unpackAlignment),
        n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL, n.NONE);
      const ut = G.isCompressedTexture || G.image[0].isCompressedTexture,
        ze = G.image[0] && G.image[0].isDataTexture,
        be = [];
      for (let Me = 0; Me < 6; Me++)
        !ut && !ze
          ? (be[Me] = S(G.image[Me], !1, !0, p))
          : (be[Me] = ze ? G.image[Me].image : G.image[Me]),
          (be[Me] = nn(G, be[Me]));
      const re = be[0],
        Re = R(re) || c,
        tt = s.convert(G.format, G.colorSpace),
        Xe = s.convert(G.type),
        et = N(G.internalFormat, tt, Xe, G.colorSpace),
        wt = c && G.isVideoTexture !== !0,
        Vt = Ne.__version === void 0 || Be === !0;
      let ae = D(G, re, Re);
      nt(n.TEXTURE_CUBE_MAP, G, Re);
      let Ye;
      if (ut) {
        wt &&
          Vt &&
          t.texStorage2D(n.TEXTURE_CUBE_MAP, ae, et, re.width, re.height);
        for (let Me = 0; Me < 6; Me++) {
          Ye = be[Me].mipmaps;
          for (let Ue = 0; Ue < Ye.length; Ue++) {
            const pe = Ye[Ue];
            G.format !== nr
              ? tt !== null
                ? wt
                  ? t.compressedTexSubImage2D(
                      n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                      Ue,
                      0,
                      0,
                      pe.width,
                      pe.height,
                      tt,
                      pe.data
                    )
                  : t.compressedTexImage2D(
                      n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                      Ue,
                      et,
                      pe.width,
                      pe.height,
                      0,
                      pe.data
                    )
                : console.warn(
                    "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                  )
              : wt
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  Ue,
                  0,
                  0,
                  pe.width,
                  pe.height,
                  tt,
                  Xe,
                  pe.data
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  Ue,
                  et,
                  pe.width,
                  pe.height,
                  0,
                  tt,
                  Xe,
                  pe.data
                );
          }
        }
      } else {
        (Ye = G.mipmaps),
          wt &&
            Vt &&
            (Ye.length > 0 && ae++,
            t.texStorage2D(
              n.TEXTURE_CUBE_MAP,
              ae,
              et,
              be[0].width,
              be[0].height
            ));
        for (let Me = 0; Me < 6; Me++)
          if (ze) {
            wt
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  0,
                  0,
                  be[Me].width,
                  be[Me].height,
                  tt,
                  Xe,
                  be[Me].data
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  et,
                  be[Me].width,
                  be[Me].height,
                  0,
                  tt,
                  Xe,
                  be[Me].data
                );
            for (let Ue = 0; Ue < Ye.length; Ue++) {
              const kt = Ye[Ue].image[Me].image;
              wt
                ? t.texSubImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    0,
                    0,
                    kt.width,
                    kt.height,
                    tt,
                    Xe,
                    kt.data
                  )
                : t.texImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    et,
                    kt.width,
                    kt.height,
                    0,
                    tt,
                    Xe,
                    kt.data
                  );
            }
          } else {
            wt
              ? t.texSubImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  0,
                  0,
                  tt,
                  Xe,
                  be[Me]
                )
              : t.texImage2D(
                  n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                  0,
                  et,
                  tt,
                  Xe,
                  be[Me]
                );
            for (let Ue = 0; Ue < Ye.length; Ue++) {
              const pe = Ye[Ue];
              wt
                ? t.texSubImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    0,
                    0,
                    tt,
                    Xe,
                    pe.image[Me]
                  )
                : t.texImage2D(
                    n.TEXTURE_CUBE_MAP_POSITIVE_X + Me,
                    Ue + 1,
                    et,
                    tt,
                    Xe,
                    pe.image[Me]
                  );
            }
          }
      }
      q(G, Re) && I(n.TEXTURE_CUBE_MAP),
        (Ne.__version = Ie.version),
        G.onUpdate && G.onUpdate(G);
    }
    Y.__version = G.version;
  }
  function ct(Y, G, xe, Be, Ie, Ne) {
    const ut = s.convert(xe.format, xe.colorSpace),
      ze = s.convert(xe.type),
      be = N(xe.internalFormat, ut, ze, xe.colorSpace);
    if (!i.get(G).__hasExternalTextures) {
      const Re = Math.max(1, G.width >> Ne),
        tt = Math.max(1, G.height >> Ne);
      Ie === n.TEXTURE_3D || Ie === n.TEXTURE_2D_ARRAY
        ? t.texImage3D(Ie, Ne, be, Re, tt, G.depth, 0, ut, ze, null)
        : t.texImage2D(Ie, Ne, be, Re, tt, 0, ut, ze, null);
    }
    t.bindFramebuffer(n.FRAMEBUFFER, Y),
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            Be,
            Ie,
            i.get(xe).__webglTexture,
            0,
            at(G)
          )
        : (Ie === n.TEXTURE_2D ||
            (Ie >= n.TEXTURE_CUBE_MAP_POSITIVE_X &&
              Ie <= n.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
          n.framebufferTexture2D(
            n.FRAMEBUFFER,
            Be,
            Ie,
            i.get(xe).__webglTexture,
            Ne
          ),
      t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function ne(Y, G, xe) {
    if (
      (n.bindRenderbuffer(n.RENDERBUFFER, Y), G.depthBuffer && !G.stencilBuffer)
    ) {
      let Be = n.DEPTH_COMPONENT16;
      if (xe || mt(G)) {
        const Ie = G.depthTexture;
        Ie &&
          Ie.isDepthTexture &&
          (Ie.type === os
            ? (Be = n.DEPTH_COMPONENT32F)
            : Ie.type === ss && (Be = n.DEPTH_COMPONENT24));
        const Ne = at(G);
        mt(G)
          ? x.renderbufferStorageMultisampleEXT(
              n.RENDERBUFFER,
              Ne,
              Be,
              G.width,
              G.height
            )
          : n.renderbufferStorageMultisample(
              n.RENDERBUFFER,
              Ne,
              Be,
              G.width,
              G.height
            );
      } else n.renderbufferStorage(n.RENDERBUFFER, Be, G.width, G.height);
      n.framebufferRenderbuffer(
        n.FRAMEBUFFER,
        n.DEPTH_ATTACHMENT,
        n.RENDERBUFFER,
        Y
      );
    } else if (G.depthBuffer && G.stencilBuffer) {
      const Be = at(G);
      xe && mt(G) === !1
        ? n.renderbufferStorageMultisample(
            n.RENDERBUFFER,
            Be,
            n.DEPTH24_STENCIL8,
            G.width,
            G.height
          )
        : mt(G)
        ? x.renderbufferStorageMultisampleEXT(
            n.RENDERBUFFER,
            Be,
            n.DEPTH24_STENCIL8,
            G.width,
            G.height
          )
        : n.renderbufferStorage(
            n.RENDERBUFFER,
            n.DEPTH_STENCIL,
            G.width,
            G.height
          ),
        n.framebufferRenderbuffer(
          n.FRAMEBUFFER,
          n.DEPTH_STENCIL_ATTACHMENT,
          n.RENDERBUFFER,
          Y
        );
    } else {
      const Be =
        G.isWebGLMultipleRenderTargets === !0 ? G.texture : [G.texture];
      for (let Ie = 0; Ie < Be.length; Ie++) {
        const Ne = Be[Ie],
          ut = s.convert(Ne.format, Ne.colorSpace),
          ze = s.convert(Ne.type),
          be = N(Ne.internalFormat, ut, ze, Ne.colorSpace),
          re = at(G);
        xe && mt(G) === !1
          ? n.renderbufferStorageMultisample(
              n.RENDERBUFFER,
              re,
              be,
              G.width,
              G.height
            )
          : mt(G)
          ? x.renderbufferStorageMultisampleEXT(
              n.RENDERBUFFER,
              re,
              be,
              G.width,
              G.height
            )
          : n.renderbufferStorage(n.RENDERBUFFER, be, G.width, G.height);
      }
    }
    n.bindRenderbuffer(n.RENDERBUFFER, null);
  }
  function Ge(Y, G) {
    if (G && G.isWebGLCubeRenderTarget)
      throw new Error(
        "Depth Texture with cube render targets is not supported"
      );
    if (
      (t.bindFramebuffer(n.FRAMEBUFFER, Y),
      !(G.depthTexture && G.depthTexture.isDepthTexture))
    )
      throw new Error(
        "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
      );
    (!i.get(G.depthTexture).__webglTexture ||
      G.depthTexture.image.width !== G.width ||
      G.depthTexture.image.height !== G.height) &&
      ((G.depthTexture.image.width = G.width),
      (G.depthTexture.image.height = G.height),
      (G.depthTexture.needsUpdate = !0)),
      ce(G.depthTexture, 0);
    const Be = i.get(G.depthTexture).__webglTexture,
      Ie = at(G);
    if (G.depthTexture.format === qs)
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            n.DEPTH_ATTACHMENT,
            n.TEXTURE_2D,
            Be,
            0,
            Ie
          )
        : n.framebufferTexture2D(
            n.FRAMEBUFFER,
            n.DEPTH_ATTACHMENT,
            n.TEXTURE_2D,
            Be,
            0
          );
    else if (G.depthTexture.format === ko)
      mt(G)
        ? x.framebufferTexture2DMultisampleEXT(
            n.FRAMEBUFFER,
            n.DEPTH_STENCIL_ATTACHMENT,
            n.TEXTURE_2D,
            Be,
            0,
            Ie
          )
        : n.framebufferTexture2D(
            n.FRAMEBUFFER,
            n.DEPTH_STENCIL_ATTACHMENT,
            n.TEXTURE_2D,
            Be,
            0
          );
    else throw new Error("Unknown depthTexture format");
  }
  function Ce(Y) {
    const G = i.get(Y),
      xe = Y.isWebGLCubeRenderTarget === !0;
    if (Y.depthTexture && !G.__autoAllocateDepthBuffer) {
      if (xe)
        throw new Error(
          "target.depthTexture not supported in Cube render targets"
        );
      Ge(G.__webglFramebuffer, Y);
    } else if (xe) {
      G.__webglDepthbuffer = [];
      for (let Be = 0; Be < 6; Be++)
        t.bindFramebuffer(n.FRAMEBUFFER, G.__webglFramebuffer[Be]),
          (G.__webglDepthbuffer[Be] = n.createRenderbuffer()),
          ne(G.__webglDepthbuffer[Be], Y, !1);
    } else
      t.bindFramebuffer(n.FRAMEBUFFER, G.__webglFramebuffer),
        (G.__webglDepthbuffer = n.createRenderbuffer()),
        ne(G.__webglDepthbuffer, Y, !1);
    t.bindFramebuffer(n.FRAMEBUFFER, null);
  }
  function Fe(Y, G, xe) {
    const Be = i.get(Y);
    G !== void 0 &&
      ct(
        Be.__webglFramebuffer,
        Y,
        Y.texture,
        n.COLOR_ATTACHMENT0,
        n.TEXTURE_2D,
        0
      ),
      xe !== void 0 && Ce(Y);
  }
  function Le(Y) {
    const G = Y.texture,
      xe = i.get(Y),
      Be = i.get(G);
    Y.addEventListener("dispose", $),
      Y.isWebGLMultipleRenderTargets !== !0 &&
        (Be.__webglTexture === void 0 &&
          (Be.__webglTexture = n.createTexture()),
        (Be.__version = G.version),
        u.memory.textures++);
    const Ie = Y.isWebGLCubeRenderTarget === !0,
      Ne = Y.isWebGLMultipleRenderTargets === !0,
      ut = R(Y) || c;
    if (Ie) {
      xe.__webglFramebuffer = [];
      for (let ze = 0; ze < 6; ze++)
        if (c && G.mipmaps && G.mipmaps.length > 0) {
          xe.__webglFramebuffer[ze] = [];
          for (let be = 0; be < G.mipmaps.length; be++)
            xe.__webglFramebuffer[ze][be] = n.createFramebuffer();
        } else xe.__webglFramebuffer[ze] = n.createFramebuffer();
    } else {
      if (c && G.mipmaps && G.mipmaps.length > 0) {
        xe.__webglFramebuffer = [];
        for (let ze = 0; ze < G.mipmaps.length; ze++)
          xe.__webglFramebuffer[ze] = n.createFramebuffer();
      } else xe.__webglFramebuffer = n.createFramebuffer();
      if (Ne)
        if (r.drawBuffers) {
          const ze = Y.texture;
          for (let be = 0, re = ze.length; be < re; be++) {
            const Re = i.get(ze[be]);
            Re.__webglTexture === void 0 &&
              ((Re.__webglTexture = n.createTexture()), u.memory.textures++);
          }
        } else
          console.warn(
            "THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension."
          );
      if (c && Y.samples > 0 && mt(Y) === !1) {
        const ze = Ne ? G : [G];
        (xe.__webglMultisampledFramebuffer = n.createFramebuffer()),
          (xe.__webglColorRenderbuffer = []),
          t.bindFramebuffer(n.FRAMEBUFFER, xe.__webglMultisampledFramebuffer);
        for (let be = 0; be < ze.length; be++) {
          const re = ze[be];
          (xe.__webglColorRenderbuffer[be] = n.createRenderbuffer()),
            n.bindRenderbuffer(n.RENDERBUFFER, xe.__webglColorRenderbuffer[be]);
          const Re = s.convert(re.format, re.colorSpace),
            tt = s.convert(re.type),
            Xe = N(
              re.internalFormat,
              Re,
              tt,
              re.colorSpace,
              Y.isXRRenderTarget === !0
            ),
            et = at(Y);
          n.renderbufferStorageMultisample(
            n.RENDERBUFFER,
            et,
            Xe,
            Y.width,
            Y.height
          ),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + be,
              n.RENDERBUFFER,
              xe.__webglColorRenderbuffer[be]
            );
        }
        n.bindRenderbuffer(n.RENDERBUFFER, null),
          Y.depthBuffer &&
            ((xe.__webglDepthRenderbuffer = n.createRenderbuffer()),
            ne(xe.__webglDepthRenderbuffer, Y, !0)),
          t.bindFramebuffer(n.FRAMEBUFFER, null);
      }
    }
    if (Ie) {
      t.bindTexture(n.TEXTURE_CUBE_MAP, Be.__webglTexture),
        nt(n.TEXTURE_CUBE_MAP, G, ut);
      for (let ze = 0; ze < 6; ze++)
        if (c && G.mipmaps && G.mipmaps.length > 0)
          for (let be = 0; be < G.mipmaps.length; be++)
            ct(
              xe.__webglFramebuffer[ze][be],
              Y,
              G,
              n.COLOR_ATTACHMENT0,
              n.TEXTURE_CUBE_MAP_POSITIVE_X + ze,
              be
            );
        else
          ct(
            xe.__webglFramebuffer[ze],
            Y,
            G,
            n.COLOR_ATTACHMENT0,
            n.TEXTURE_CUBE_MAP_POSITIVE_X + ze,
            0
          );
      q(G, ut) && I(n.TEXTURE_CUBE_MAP), t.unbindTexture();
    } else if (Ne) {
      const ze = Y.texture;
      for (let be = 0, re = ze.length; be < re; be++) {
        const Re = ze[be],
          tt = i.get(Re);
        t.bindTexture(n.TEXTURE_2D, tt.__webglTexture),
          nt(n.TEXTURE_2D, Re, ut),
          ct(
            xe.__webglFramebuffer,
            Y,
            Re,
            n.COLOR_ATTACHMENT0 + be,
            n.TEXTURE_2D,
            0
          ),
          q(Re, ut) && I(n.TEXTURE_2D);
      }
      t.unbindTexture();
    } else {
      let ze = n.TEXTURE_2D;
      if (
        ((Y.isWebGL3DRenderTarget || Y.isWebGLArrayRenderTarget) &&
          (c
            ? (ze = Y.isWebGL3DRenderTarget ? n.TEXTURE_3D : n.TEXTURE_2D_ARRAY)
            : console.error(
                "THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."
              )),
        t.bindTexture(ze, Be.__webglTexture),
        nt(ze, G, ut),
        c && G.mipmaps && G.mipmaps.length > 0)
      )
        for (let be = 0; be < G.mipmaps.length; be++)
          ct(xe.__webglFramebuffer[be], Y, G, n.COLOR_ATTACHMENT0, ze, be);
      else ct(xe.__webglFramebuffer, Y, G, n.COLOR_ATTACHMENT0, ze, 0);
      q(G, ut) && I(ze), t.unbindTexture();
    }
    Y.depthBuffer && Ce(Y);
  }
  function At(Y) {
    const G = R(Y) || c,
      xe = Y.isWebGLMultipleRenderTargets === !0 ? Y.texture : [Y.texture];
    for (let Be = 0, Ie = xe.length; Be < Ie; Be++) {
      const Ne = xe[Be];
      if (q(Ne, G)) {
        const ut = Y.isWebGLCubeRenderTarget
            ? n.TEXTURE_CUBE_MAP
            : n.TEXTURE_2D,
          ze = i.get(Ne).__webglTexture;
        t.bindTexture(ut, ze), I(ut), t.unbindTexture();
      }
    }
  }
  function it(Y) {
    if (c && Y.samples > 0 && mt(Y) === !1) {
      const G = Y.isWebGLMultipleRenderTargets ? Y.texture : [Y.texture],
        xe = Y.width,
        Be = Y.height;
      let Ie = n.COLOR_BUFFER_BIT;
      const Ne = [],
        ut = Y.stencilBuffer ? n.DEPTH_STENCIL_ATTACHMENT : n.DEPTH_ATTACHMENT,
        ze = i.get(Y),
        be = Y.isWebGLMultipleRenderTargets === !0;
      if (be)
        for (let re = 0; re < G.length; re++)
          t.bindFramebuffer(n.FRAMEBUFFER, ze.__webglMultisampledFramebuffer),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + re,
              n.RENDERBUFFER,
              null
            ),
            t.bindFramebuffer(n.FRAMEBUFFER, ze.__webglFramebuffer),
            n.framebufferTexture2D(
              n.DRAW_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + re,
              n.TEXTURE_2D,
              null,
              0
            );
      t.bindFramebuffer(n.READ_FRAMEBUFFER, ze.__webglMultisampledFramebuffer),
        t.bindFramebuffer(n.DRAW_FRAMEBUFFER, ze.__webglFramebuffer);
      for (let re = 0; re < G.length; re++) {
        Ne.push(n.COLOR_ATTACHMENT0 + re), Y.depthBuffer && Ne.push(ut);
        const Re =
          ze.__ignoreDepthValues !== void 0 ? ze.__ignoreDepthValues : !1;
        if (
          (Re === !1 &&
            (Y.depthBuffer && (Ie |= n.DEPTH_BUFFER_BIT),
            Y.stencilBuffer && (Ie |= n.STENCIL_BUFFER_BIT)),
          be &&
            n.framebufferRenderbuffer(
              n.READ_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0,
              n.RENDERBUFFER,
              ze.__webglColorRenderbuffer[re]
            ),
          Re === !0 &&
            (n.invalidateFramebuffer(n.READ_FRAMEBUFFER, [ut]),
            n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER, [ut])),
          be)
        ) {
          const tt = i.get(G[re]).__webglTexture;
          n.framebufferTexture2D(
            n.DRAW_FRAMEBUFFER,
            n.COLOR_ATTACHMENT0,
            n.TEXTURE_2D,
            tt,
            0
          );
        }
        n.blitFramebuffer(0, 0, xe, Be, 0, 0, xe, Be, Ie, n.NEAREST),
          M && n.invalidateFramebuffer(n.READ_FRAMEBUFFER, Ne);
      }
      if (
        (t.bindFramebuffer(n.READ_FRAMEBUFFER, null),
        t.bindFramebuffer(n.DRAW_FRAMEBUFFER, null),
        be)
      )
        for (let re = 0; re < G.length; re++) {
          t.bindFramebuffer(n.FRAMEBUFFER, ze.__webglMultisampledFramebuffer),
            n.framebufferRenderbuffer(
              n.FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + re,
              n.RENDERBUFFER,
              ze.__webglColorRenderbuffer[re]
            );
          const Re = i.get(G[re]).__webglTexture;
          t.bindFramebuffer(n.FRAMEBUFFER, ze.__webglFramebuffer),
            n.framebufferTexture2D(
              n.DRAW_FRAMEBUFFER,
              n.COLOR_ATTACHMENT0 + re,
              n.TEXTURE_2D,
              Re,
              0
            );
        }
      t.bindFramebuffer(n.DRAW_FRAMEBUFFER, ze.__webglMultisampledFramebuffer);
    }
  }
  function at(Y) {
    return Math.min(v, Y.samples);
  }
  function mt(Y) {
    const G = i.get(Y);
    return (
      c &&
      Y.samples > 0 &&
      e.has("WEBGL_multisampled_render_to_texture") === !0 &&
      G.__useRenderToTexture !== !1
    );
  }
  function xt(Y) {
    const G = u.render.frame;
    w.get(Y) !== G && (w.set(Y, G), Y.update());
  }
  function nn(Y, G) {
    const xe = Y.colorSpace,
      Be = Y.format,
      Ie = Y.type;
    return (
      Y.isCompressedTexture === !0 ||
        Y.isVideoTexture === !0 ||
        Y.format === Ru ||
        (xe !== xr &&
          xe !== Bs &&
          (xe === hn || xe === $l
            ? c === !1
              ? e.has("EXT_sRGB") === !0 && Be === nr
                ? ((Y.format = Ru),
                  (Y.minFilter = Fi),
                  (Y.generateMipmaps = !1))
                : (G = L1.sRGBToLinear(G))
              : (Be !== nr || Ie !== us) &&
                console.warn(
                  "THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."
                )
            : console.error(
                "THREE.WebGLTextures: Unsupported texture color space:",
                xe
              ))),
      G
    );
  }
  (this.allocateTextureUnit = ie),
    (this.resetTextureUnits = K),
    (this.setTexture2D = ce),
    (this.setTexture2DArray = oe),
    (this.setTexture3D = de),
    (this.setTextureCube = Se),
    (this.rebindTextures = Fe),
    (this.setupRenderTarget = Le),
    (this.updateRenderTargetMipmap = At),
    (this.updateMultisampleRenderTarget = it),
    (this.setupDepthRenderbuffer = Ce),
    (this.setupFrameBufferTexture = ct),
    (this.useMultisampledRTT = mt);
}
const k5 = 0,
  Ln = 1;
function z5(n, e, t) {
  const i = t.isWebGL2;
  function r(s, u = Bs) {
    let c;
    const h = u === hn || u === $l ? Ln : k5;
    if (s === us) return n.UNSIGNED_BYTE;
    if (s === M1) return n.UNSIGNED_SHORT_4_4_4_4;
    if (s === E1) return n.UNSIGNED_SHORT_5_5_5_1;
    if (s === rv) return n.BYTE;
    if (s === sv) return n.SHORT;
    if (s === yc) return n.UNSIGNED_SHORT;
    if (s === b1) return n.INT;
    if (s === ss) return n.UNSIGNED_INT;
    if (s === os) return n.FLOAT;
    if (s === Pa)
      return i
        ? n.HALF_FLOAT
        : ((c = e.get("OES_texture_half_float")),
          c !== null ? c.HALF_FLOAT_OES : null);
    if (s === ov) return n.ALPHA;
    if (s === nr) return n.RGBA;
    if (s === av) return n.LUMINANCE;
    if (s === Av) return n.LUMINANCE_ALPHA;
    if (s === qs) return n.DEPTH_COMPONENT;
    if (s === ko) return n.DEPTH_STENCIL;
    if (s === Ru)
      return (c = e.get("EXT_sRGB")), c !== null ? c.SRGB_ALPHA_EXT : null;
    if (s === lv) return n.RED;
    if (s === w1) return n.RED_INTEGER;
    if (s === uv) return n.RG;
    if (s === S1) return n.RG_INTEGER;
    if (s === T1) return n.RGBA_INTEGER;
    if (s === C0 || s === R0 || s === P0 || s === L0)
      if (h === Ln)
        if (((c = e.get("WEBGL_compressed_texture_s3tc_srgb")), c !== null)) {
          if (s === C0) return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;
          if (s === R0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
          if (s === P0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
          if (s === L0) return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
        } else return null;
      else if (((c = e.get("WEBGL_compressed_texture_s3tc")), c !== null)) {
        if (s === C0) return c.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (s === R0) return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (s === P0) return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (s === L0) return c.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      } else return null;
    if (s === eh || s === th || s === nh || s === ih)
      if (((c = e.get("WEBGL_compressed_texture_pvrtc")), c !== null)) {
        if (s === eh) return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (s === th) return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (s === nh) return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (s === ih) return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      } else return null;
    if (s === cv)
      return (
        (c = e.get("WEBGL_compressed_texture_etc1")),
        c !== null ? c.COMPRESSED_RGB_ETC1_WEBGL : null
      );
    if (s === rh || s === sh)
      if (((c = e.get("WEBGL_compressed_texture_etc")), c !== null)) {
        if (s === rh)
          return h === Ln ? c.COMPRESSED_SRGB8_ETC2 : c.COMPRESSED_RGB8_ETC2;
        if (s === sh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
            : c.COMPRESSED_RGBA8_ETC2_EAC;
      } else return null;
    if (
      s === oh ||
      s === ah ||
      s === Ah ||
      s === lh ||
      s === uh ||
      s === ch ||
      s === fh ||
      s === hh ||
      s === dh ||
      s === ph ||
      s === mh ||
      s === gh ||
      s === vh ||
      s === _h
    )
      if (((c = e.get("WEBGL_compressed_texture_astc")), c !== null)) {
        if (s === oh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
            : c.COMPRESSED_RGBA_ASTC_4x4_KHR;
        if (s === ah)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
            : c.COMPRESSED_RGBA_ASTC_5x4_KHR;
        if (s === Ah)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
            : c.COMPRESSED_RGBA_ASTC_5x5_KHR;
        if (s === lh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
            : c.COMPRESSED_RGBA_ASTC_6x5_KHR;
        if (s === uh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
            : c.COMPRESSED_RGBA_ASTC_6x6_KHR;
        if (s === ch)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
            : c.COMPRESSED_RGBA_ASTC_8x5_KHR;
        if (s === fh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
            : c.COMPRESSED_RGBA_ASTC_8x6_KHR;
        if (s === hh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
            : c.COMPRESSED_RGBA_ASTC_8x8_KHR;
        if (s === dh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
            : c.COMPRESSED_RGBA_ASTC_10x5_KHR;
        if (s === ph)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
            : c.COMPRESSED_RGBA_ASTC_10x6_KHR;
        if (s === mh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
            : c.COMPRESSED_RGBA_ASTC_10x8_KHR;
        if (s === gh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
            : c.COMPRESSED_RGBA_ASTC_10x10_KHR;
        if (s === vh)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
            : c.COMPRESSED_RGBA_ASTC_12x10_KHR;
        if (s === _h)
          return h === Ln
            ? c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
            : c.COMPRESSED_RGBA_ASTC_12x12_KHR;
      } else return null;
    if (s === D0 || s === xh || s === yh)
      if (((c = e.get("EXT_texture_compression_bptc")), c !== null)) {
        if (s === D0)
          return h === Ln
            ? c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
            : c.COMPRESSED_RGBA_BPTC_UNORM_EXT;
        if (s === xh) return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
        if (s === yh) return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
      } else return null;
    if (s === fv || s === bh || s === Mh || s === Eh)
      if (((c = e.get("EXT_texture_compression_rgtc")), c !== null)) {
        if (s === D0) return c.COMPRESSED_RED_RGTC1_EXT;
        if (s === bh) return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;
        if (s === Mh) return c.COMPRESSED_RED_GREEN_RGTC2_EXT;
        if (s === Eh) return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
      } else return null;
    return s === Os
      ? i
        ? n.UNSIGNED_INT_24_8
        : ((c = e.get("WEBGL_depth_texture")),
          c !== null ? c.UNSIGNED_INT_24_8_WEBGL : null)
      : n[s] !== void 0
      ? n[s]
      : null;
  }
  return { convert: r };
}
class G5 extends ki {
  constructor(e = []) {
    super(), (this.isArrayCamera = !0), (this.cameras = e);
  }
}
let Gi = class extends Rn {
  constructor() {
    super(), (this.isGroup = !0), (this.type = "Group");
  }
};
const H5 = { type: "move" };
class eu {
  constructor() {
    (this._targetRay = null), (this._grip = null), (this._hand = null);
  }
  getHandSpace() {
    return (
      this._hand === null &&
        ((this._hand = new Gi()),
        (this._hand.matrixAutoUpdate = !1),
        (this._hand.visible = !1),
        (this._hand.joints = {}),
        (this._hand.inputState = { pinching: !1 })),
      this._hand
    );
  }
  getTargetRaySpace() {
    return (
      this._targetRay === null &&
        ((this._targetRay = new Gi()),
        (this._targetRay.matrixAutoUpdate = !1),
        (this._targetRay.visible = !1),
        (this._targetRay.hasLinearVelocity = !1),
        (this._targetRay.linearVelocity = new te()),
        (this._targetRay.hasAngularVelocity = !1),
        (this._targetRay.angularVelocity = new te())),
      this._targetRay
    );
  }
  getGripSpace() {
    return (
      this._grip === null &&
        ((this._grip = new Gi()),
        (this._grip.matrixAutoUpdate = !1),
        (this._grip.visible = !1),
        (this._grip.hasLinearVelocity = !1),
        (this._grip.linearVelocity = new te()),
        (this._grip.hasAngularVelocity = !1),
        (this._grip.angularVelocity = new te())),
      this._grip
    );
  }
  dispatchEvent(e) {
    return (
      this._targetRay !== null && this._targetRay.dispatchEvent(e),
      this._grip !== null && this._grip.dispatchEvent(e),
      this._hand !== null && this._hand.dispatchEvent(e),
      this
    );
  }
  connect(e) {
    if (e && e.hand) {
      const t = this._hand;
      if (t) for (const i of e.hand.values()) this._getHandJoint(t, i);
    }
    return this.dispatchEvent({ type: "connected", data: e }), this;
  }
  disconnect(e) {
    return (
      this.dispatchEvent({ type: "disconnected", data: e }),
      this._targetRay !== null && (this._targetRay.visible = !1),
      this._grip !== null && (this._grip.visible = !1),
      this._hand !== null && (this._hand.visible = !1),
      this
    );
  }
  update(e, t, i) {
    let r = null,
      s = null,
      u = null;
    const c = this._targetRay,
      h = this._grip,
      p = this._hand;
    if (e && t.session.visibilityState !== "visible-blurred") {
      if (p && e.hand) {
        u = !0;
        for (const C of e.hand.values()) {
          const E = t.getJointPose(C, i),
            b = this._getHandJoint(p, C);
          E !== null &&
            (b.matrix.fromArray(E.transform.matrix),
            b.matrix.decompose(b.position, b.rotation, b.scale),
            (b.matrixWorldNeedsUpdate = !0),
            (b.jointRadius = E.radius)),
            (b.visible = E !== null);
        }
        const g = p.joints["index-finger-tip"],
          v = p.joints["thumb-tip"],
          x = g.position.distanceTo(v.position),
          M = 0.02,
          w = 0.005;
        p.inputState.pinching && x > M + w
          ? ((p.inputState.pinching = !1),
            this.dispatchEvent({
              type: "pinchend",
              handedness: e.handedness,
              target: this,
            }))
          : !p.inputState.pinching &&
            x <= M - w &&
            ((p.inputState.pinching = !0),
            this.dispatchEvent({
              type: "pinchstart",
              handedness: e.handedness,
              target: this,
            }));
      } else
        h !== null &&
          e.gripSpace &&
          ((s = t.getPose(e.gripSpace, i)),
          s !== null &&
            (h.matrix.fromArray(s.transform.matrix),
            h.matrix.decompose(h.position, h.rotation, h.scale),
            (h.matrixWorldNeedsUpdate = !0),
            s.linearVelocity
              ? ((h.hasLinearVelocity = !0),
                h.linearVelocity.copy(s.linearVelocity))
              : (h.hasLinearVelocity = !1),
            s.angularVelocity
              ? ((h.hasAngularVelocity = !0),
                h.angularVelocity.copy(s.angularVelocity))
              : (h.hasAngularVelocity = !1)));
      c !== null &&
        ((r = t.getPose(e.targetRaySpace, i)),
        r === null && s !== null && (r = s),
        r !== null &&
          (c.matrix.fromArray(r.transform.matrix),
          c.matrix.decompose(c.position, c.rotation, c.scale),
          (c.matrixWorldNeedsUpdate = !0),
          r.linearVelocity
            ? ((c.hasLinearVelocity = !0),
              c.linearVelocity.copy(r.linearVelocity))
            : (c.hasLinearVelocity = !1),
          r.angularVelocity
            ? ((c.hasAngularVelocity = !0),
              c.angularVelocity.copy(r.angularVelocity))
            : (c.hasAngularVelocity = !1),
          this.dispatchEvent(H5)));
    }
    return (
      c !== null && (c.visible = r !== null),
      h !== null && (h.visible = s !== null),
      p !== null && (p.visible = u !== null),
      this
    );
  }
  _getHandJoint(e, t) {
    if (e.joints[t.jointName] === void 0) {
      const i = new Gi();
      (i.matrixAutoUpdate = !1),
        (i.visible = !1),
        (e.joints[t.jointName] = i),
        e.add(i);
    }
    return e.joints[t.jointName];
  }
}
class V5 extends vi {
  constructor(e, t, i, r, s, u, c, h, p, g) {
    if (((g = g !== void 0 ? g : qs), g !== qs && g !== ko))
      throw new Error(
        "DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat"
      );
    i === void 0 && g === qs && (i = ss),
      i === void 0 && g === ko && (i = Os),
      super(null, r, s, u, c, h, g, i, p),
      (this.isDepthTexture = !0),
      (this.image = { width: e, height: t }),
      (this.magFilter = c !== void 0 ? c : Ai),
      (this.minFilter = h !== void 0 ? h : Ai),
      (this.flipY = !1),
      (this.generateMipmaps = !1),
      (this.compareFunction = null);
  }
  copy(e) {
    return super.copy(e), (this.compareFunction = e.compareFunction), this;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      this.compareFunction !== null &&
        (t.compareFunction = this.compareFunction),
      t
    );
  }
}
class W5 extends js {
  constructor(e, t) {
    super();
    const i = this;
    let r = null,
      s = 1,
      u = null,
      c = "local-floor",
      h = 1,
      p = null,
      g = null,
      v = null,
      x = null,
      M = null,
      w = null;
    const C = t.getContextAttributes();
    let E = null,
      b = null;
    const L = [],
      S = [],
      R = new ki();
    R.layers.enable(1), (R.viewport = new In());
    const U = new ki();
    U.layers.enable(2), (U.viewport = new In());
    const q = [R, U],
      I = new G5();
    I.layers.enable(1), I.layers.enable(2);
    let N = null,
      D = null;
    (this.cameraAutoUpdate = !0),
      (this.enabled = !1),
      (this.isPresenting = !1),
      (this.getController = function (oe) {
        let de = L[oe];
        return (
          de === void 0 && ((de = new eu()), (L[oe] = de)),
          de.getTargetRaySpace()
        );
      }),
      (this.getControllerGrip = function (oe) {
        let de = L[oe];
        return (
          de === void 0 && ((de = new eu()), (L[oe] = de)), de.getGripSpace()
        );
      }),
      (this.getHand = function (oe) {
        let de = L[oe];
        return (
          de === void 0 && ((de = new eu()), (L[oe] = de)), de.getHandSpace()
        );
      });
    function O(oe) {
      const de = S.indexOf(oe.inputSource);
      if (de === -1) return;
      const Se = L[de];
      Se !== void 0 &&
        (Se.update(oe.inputSource, oe.frame, p || u),
        Se.dispatchEvent({ type: oe.type, data: oe.inputSource }));
    }
    function k() {
      r.removeEventListener("select", O),
        r.removeEventListener("selectstart", O),
        r.removeEventListener("selectend", O),
        r.removeEventListener("squeeze", O),
        r.removeEventListener("squeezestart", O),
        r.removeEventListener("squeezeend", O),
        r.removeEventListener("end", k),
        r.removeEventListener("inputsourceschange", $);
      for (let oe = 0; oe < L.length; oe++) {
        const de = S[oe];
        de !== null && ((S[oe] = null), L[oe].disconnect(de));
      }
      (N = null),
        (D = null),
        e.setRenderTarget(E),
        (M = null),
        (x = null),
        (v = null),
        (r = null),
        (b = null),
        ce.stop(),
        (i.isPresenting = !1),
        i.dispatchEvent({ type: "sessionend" });
    }
    (this.setFramebufferScaleFactor = function (oe) {
      (s = oe),
        i.isPresenting === !0 &&
          console.warn(
            "THREE.WebXRManager: Cannot change framebuffer scale while presenting."
          );
    }),
      (this.setReferenceSpaceType = function (oe) {
        (c = oe),
          i.isPresenting === !0 &&
            console.warn(
              "THREE.WebXRManager: Cannot change reference space type while presenting."
            );
      }),
      (this.getReferenceSpace = function () {
        return p || u;
      }),
      (this.setReferenceSpace = function (oe) {
        p = oe;
      }),
      (this.getBaseLayer = function () {
        return x !== null ? x : M;
      }),
      (this.getBinding = function () {
        return v;
      }),
      (this.getFrame = function () {
        return w;
      }),
      (this.getSession = function () {
        return r;
      }),
      (this.setSession = async function (oe) {
        if (((r = oe), r !== null)) {
          if (
            ((E = e.getRenderTarget()),
            r.addEventListener("select", O),
            r.addEventListener("selectstart", O),
            r.addEventListener("selectend", O),
            r.addEventListener("squeeze", O),
            r.addEventListener("squeezestart", O),
            r.addEventListener("squeezeend", O),
            r.addEventListener("end", k),
            r.addEventListener("inputsourceschange", $),
            C.xrCompatible !== !0 && (await t.makeXRCompatible()),
            r.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1)
          ) {
            const de = {
              antialias: r.renderState.layers === void 0 ? C.antialias : !0,
              alpha: !0,
              depth: C.depth,
              stencil: C.stencil,
              framebufferScaleFactor: s,
            };
            (M = new XRWebGLLayer(r, t, de)),
              r.updateRenderState({ baseLayer: M }),
              (b = new Fs(M.framebufferWidth, M.framebufferHeight, {
                format: nr,
                type: us,
                colorSpace: e.outputColorSpace,
                stencilBuffer: C.stencil,
              }));
          } else {
            let de = null,
              Se = null,
              Pe = null;
            C.depth &&
              ((Pe = C.stencil ? t.DEPTH24_STENCIL8 : t.DEPTH_COMPONENT24),
              (de = C.stencil ? ko : qs),
              (Se = C.stencil ? Os : ss));
            const Oe = {
              colorFormat: t.RGBA8,
              depthFormat: Pe,
              scaleFactor: s,
            };
            (v = new XRWebGLBinding(r, t)),
              (x = v.createProjectionLayer(Oe)),
              r.updateRenderState({ layers: [x] }),
              (b = new Fs(x.textureWidth, x.textureHeight, {
                format: nr,
                type: us,
                depthTexture: new V5(
                  x.textureWidth,
                  x.textureHeight,
                  Se,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  de
                ),
                stencilBuffer: C.stencil,
                colorSpace: e.outputColorSpace,
                samples: C.antialias ? 4 : 0,
              }));
            const $e = e.properties.get(b);
            $e.__ignoreDepthValues = x.ignoreDepthValues;
          }
          (b.isXRRenderTarget = !0),
            this.setFoveation(h),
            (p = null),
            (u = await r.requestReferenceSpace(c)),
            ce.setContext(r),
            ce.start(),
            (i.isPresenting = !0),
            i.dispatchEvent({ type: "sessionstart" });
        }
      }),
      (this.getEnvironmentBlendMode = function () {
        if (r !== null) return r.environmentBlendMode;
      });
    function $(oe) {
      for (let de = 0; de < oe.removed.length; de++) {
        const Se = oe.removed[de],
          Pe = S.indexOf(Se);
        Pe >= 0 && ((S[Pe] = null), L[Pe].disconnect(Se));
      }
      for (let de = 0; de < oe.added.length; de++) {
        const Se = oe.added[de];
        let Pe = S.indexOf(Se);
        if (Pe === -1) {
          for (let $e = 0; $e < L.length; $e++)
            if ($e >= S.length) {
              S.push(Se), (Pe = $e);
              break;
            } else if (S[$e] === null) {
              (S[$e] = Se), (Pe = $e);
              break;
            }
          if (Pe === -1) break;
        }
        const Oe = L[Pe];
        Oe && Oe.connect(Se);
      }
    }
    const H = new te(),
      Q = new te();
    function F(oe, de, Se) {
      H.setFromMatrixPosition(de.matrixWorld),
        Q.setFromMatrixPosition(Se.matrixWorld);
      const Pe = H.distanceTo(Q),
        Oe = de.projectionMatrix.elements,
        $e = Se.projectionMatrix.elements,
        nt = Oe[14] / (Oe[10] - 1),
        ot = Oe[14] / (Oe[10] + 1),
        Rt = (Oe[9] + 1) / Oe[5],
        Ot = (Oe[9] - 1) / Oe[5],
        ct = (Oe[8] - 1) / Oe[0],
        ne = ($e[8] + 1) / $e[0],
        Ge = nt * ct,
        Ce = nt * ne,
        Fe = Pe / (-ct + ne),
        Le = Fe * -ct;
      de.matrixWorld.decompose(oe.position, oe.quaternion, oe.scale),
        oe.translateX(Le),
        oe.translateZ(Fe),
        oe.matrixWorld.compose(oe.position, oe.quaternion, oe.scale),
        oe.matrixWorldInverse.copy(oe.matrixWorld).invert();
      const At = nt + Fe,
        it = ot + Fe,
        at = Ge - Le,
        mt = Ce + (Pe - Le),
        xt = ((Rt * ot) / it) * At,
        nn = ((Ot * ot) / it) * At;
      oe.projectionMatrix.makePerspective(at, mt, xt, nn, At, it),
        oe.projectionMatrixInverse.copy(oe.projectionMatrix).invert();
    }
    function J(oe, de) {
      de === null
        ? oe.matrixWorld.copy(oe.matrix)
        : oe.matrixWorld.multiplyMatrices(de.matrixWorld, oe.matrix),
        oe.matrixWorldInverse.copy(oe.matrixWorld).invert();
    }
    this.updateCamera = function (oe) {
      if (r === null) return;
      (I.near = U.near = R.near = oe.near),
        (I.far = U.far = R.far = oe.far),
        (N !== I.near || D !== I.far) &&
          (r.updateRenderState({ depthNear: I.near, depthFar: I.far }),
          (N = I.near),
          (D = I.far));
      const de = oe.parent,
        Se = I.cameras;
      J(I, de);
      for (let Pe = 0; Pe < Se.length; Pe++) J(Se[Pe], de);
      Se.length === 2
        ? F(I, R, U)
        : I.projectionMatrix.copy(R.projectionMatrix),
        K(oe, I, de);
    };
    function K(oe, de, Se) {
      Se === null
        ? oe.matrix.copy(de.matrixWorld)
        : (oe.matrix.copy(Se.matrixWorld),
          oe.matrix.invert(),
          oe.matrix.multiply(de.matrixWorld)),
        oe.matrix.decompose(oe.position, oe.quaternion, oe.scale),
        oe.updateMatrixWorld(!0),
        oe.projectionMatrix.copy(de.projectionMatrix),
        oe.projectionMatrixInverse.copy(de.projectionMatrixInverse),
        oe.isPerspectiveCamera &&
          ((oe.fov = La * 2 * Math.atan(1 / oe.projectionMatrix.elements[5])),
          (oe.zoom = 1));
    }
    (this.getCamera = function () {
      return I;
    }),
      (this.getFoveation = function () {
        if (!(x === null && M === null)) return h;
      }),
      (this.setFoveation = function (oe) {
        (h = oe),
          x !== null && (x.fixedFoveation = oe),
          M !== null && M.fixedFoveation !== void 0 && (M.fixedFoveation = oe);
      });
    let ie = null;
    function he(oe, de) {
      if (((g = de.getViewerPose(p || u)), (w = de), g !== null)) {
        const Se = g.views;
        M !== null &&
          (e.setRenderTargetFramebuffer(b, M.framebuffer),
          e.setRenderTarget(b));
        let Pe = !1;
        Se.length !== I.cameras.length && ((I.cameras.length = 0), (Pe = !0));
        for (let Oe = 0; Oe < Se.length; Oe++) {
          const $e = Se[Oe];
          let nt = null;
          if (M !== null) nt = M.getViewport($e);
          else {
            const Rt = v.getViewSubImage(x, $e);
            (nt = Rt.viewport),
              Oe === 0 &&
                (e.setRenderTargetTextures(
                  b,
                  Rt.colorTexture,
                  x.ignoreDepthValues ? void 0 : Rt.depthStencilTexture
                ),
                e.setRenderTarget(b));
          }
          let ot = q[Oe];
          ot === void 0 &&
            ((ot = new ki()),
            ot.layers.enable(Oe),
            (ot.viewport = new In()),
            (q[Oe] = ot)),
            ot.matrix.fromArray($e.transform.matrix),
            ot.matrix.decompose(ot.position, ot.quaternion, ot.scale),
            ot.projectionMatrix.fromArray($e.projectionMatrix),
            ot.projectionMatrixInverse.copy(ot.projectionMatrix).invert(),
            ot.viewport.set(nt.x, nt.y, nt.width, nt.height),
            Oe === 0 &&
              (I.matrix.copy(ot.matrix),
              I.matrix.decompose(I.position, I.quaternion, I.scale)),
            Pe === !0 && I.cameras.push(ot);
        }
      }
      for (let Se = 0; Se < L.length; Se++) {
        const Pe = S[Se],
          Oe = L[Se];
        Pe !== null && Oe !== void 0 && Oe.update(Pe, de, p || u);
      }
      ie && ie(oe, de),
        de.detectedPlanes &&
          i.dispatchEvent({ type: "planesdetected", data: de }),
        (w = null);
    }
    const ce = new z1();
    ce.setAnimationLoop(he),
      (this.setAnimationLoop = function (oe) {
        ie = oe;
      }),
      (this.dispose = function () {});
  }
}
function j5(n, e) {
  function t(E, b) {
    E.matrixAutoUpdate === !0 && E.updateMatrix(), b.value.copy(E.matrix);
  }
  function i(E, b) {
    b.color.getRGB(E.fogColor.value, B1(n)),
      b.isFog
        ? ((E.fogNear.value = b.near), (E.fogFar.value = b.far))
        : b.isFogExp2 && (E.fogDensity.value = b.density);
  }
  function r(E, b, L, S, R) {
    b.isMeshBasicMaterial || b.isMeshLambertMaterial
      ? s(E, b)
      : b.isMeshToonMaterial
      ? (s(E, b), v(E, b))
      : b.isMeshPhongMaterial
      ? (s(E, b), g(E, b))
      : b.isMeshStandardMaterial
      ? (s(E, b), x(E, b), b.isMeshPhysicalMaterial && M(E, b, R))
      : b.isMeshMatcapMaterial
      ? (s(E, b), w(E, b))
      : b.isMeshDepthMaterial
      ? s(E, b)
      : b.isMeshDistanceMaterial
      ? (s(E, b), C(E, b))
      : b.isMeshNormalMaterial
      ? s(E, b)
      : b.isLineBasicMaterial
      ? (u(E, b), b.isLineDashedMaterial && c(E, b))
      : b.isPointsMaterial
      ? h(E, b, L, S)
      : b.isSpriteMaterial
      ? p(E, b)
      : b.isShadowMaterial
      ? (E.color.value.copy(b.color), (E.opacity.value = b.opacity))
      : b.isShaderMaterial && (b.uniformsNeedUpdate = !1);
  }
  function s(E, b) {
    (E.opacity.value = b.opacity),
      b.color && E.diffuse.value.copy(b.color),
      b.emissive &&
        E.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity),
      b.map && ((E.map.value = b.map), t(b.map, E.mapTransform)),
      b.alphaMap &&
        ((E.alphaMap.value = b.alphaMap), t(b.alphaMap, E.alphaMapTransform)),
      b.bumpMap &&
        ((E.bumpMap.value = b.bumpMap),
        t(b.bumpMap, E.bumpMapTransform),
        (E.bumpScale.value = b.bumpScale),
        b.side === fi && (E.bumpScale.value *= -1)),
      b.normalMap &&
        ((E.normalMap.value = b.normalMap),
        t(b.normalMap, E.normalMapTransform),
        E.normalScale.value.copy(b.normalScale),
        b.side === fi && E.normalScale.value.negate()),
      b.displacementMap &&
        ((E.displacementMap.value = b.displacementMap),
        t(b.displacementMap, E.displacementMapTransform),
        (E.displacementScale.value = b.displacementScale),
        (E.displacementBias.value = b.displacementBias)),
      b.emissiveMap &&
        ((E.emissiveMap.value = b.emissiveMap),
        t(b.emissiveMap, E.emissiveMapTransform)),
      b.specularMap &&
        ((E.specularMap.value = b.specularMap),
        t(b.specularMap, E.specularMapTransform)),
      b.alphaTest > 0 && (E.alphaTest.value = b.alphaTest);
    const L = e.get(b).envMap;
    if (
      (L &&
        ((E.envMap.value = L),
        (E.flipEnvMap.value =
          L.isCubeTexture && L.isRenderTargetTexture === !1 ? -1 : 1),
        (E.reflectivity.value = b.reflectivity),
        (E.ior.value = b.ior),
        (E.refractionRatio.value = b.refractionRatio)),
      b.lightMap)
    ) {
      E.lightMap.value = b.lightMap;
      const S = n._useLegacyLights === !0 ? Math.PI : 1;
      (E.lightMapIntensity.value = b.lightMapIntensity * S),
        t(b.lightMap, E.lightMapTransform);
    }
    b.aoMap &&
      ((E.aoMap.value = b.aoMap),
      (E.aoMapIntensity.value = b.aoMapIntensity),
      t(b.aoMap, E.aoMapTransform));
  }
  function u(E, b) {
    E.diffuse.value.copy(b.color),
      (E.opacity.value = b.opacity),
      b.map && ((E.map.value = b.map), t(b.map, E.mapTransform));
  }
  function c(E, b) {
    (E.dashSize.value = b.dashSize),
      (E.totalSize.value = b.dashSize + b.gapSize),
      (E.scale.value = b.scale);
  }
  function h(E, b, L, S) {
    E.diffuse.value.copy(b.color),
      (E.opacity.value = b.opacity),
      (E.size.value = b.size * L),
      (E.scale.value = S * 0.5),
      b.map && ((E.map.value = b.map), t(b.map, E.uvTransform)),
      b.alphaMap &&
        ((E.alphaMap.value = b.alphaMap), t(b.alphaMap, E.alphaMapTransform)),
      b.alphaTest > 0 && (E.alphaTest.value = b.alphaTest);
  }
  function p(E, b) {
    E.diffuse.value.copy(b.color),
      (E.opacity.value = b.opacity),
      (E.rotation.value = b.rotation),
      b.map && ((E.map.value = b.map), t(b.map, E.mapTransform)),
      b.alphaMap &&
        ((E.alphaMap.value = b.alphaMap), t(b.alphaMap, E.alphaMapTransform)),
      b.alphaTest > 0 && (E.alphaTest.value = b.alphaTest);
  }
  function g(E, b) {
    E.specular.value.copy(b.specular),
      (E.shininess.value = Math.max(b.shininess, 1e-4));
  }
  function v(E, b) {
    b.gradientMap && (E.gradientMap.value = b.gradientMap);
  }
  function x(E, b) {
    (E.metalness.value = b.metalness),
      b.metalnessMap &&
        ((E.metalnessMap.value = b.metalnessMap),
        t(b.metalnessMap, E.metalnessMapTransform)),
      (E.roughness.value = b.roughness),
      b.roughnessMap &&
        ((E.roughnessMap.value = b.roughnessMap),
        t(b.roughnessMap, E.roughnessMapTransform)),
      e.get(b).envMap && (E.envMapIntensity.value = b.envMapIntensity);
  }
  function M(E, b, L) {
    (E.ior.value = b.ior),
      b.sheen > 0 &&
        (E.sheenColor.value.copy(b.sheenColor).multiplyScalar(b.sheen),
        (E.sheenRoughness.value = b.sheenRoughness),
        b.sheenColorMap &&
          ((E.sheenColorMap.value = b.sheenColorMap),
          t(b.sheenColorMap, E.sheenColorMapTransform)),
        b.sheenRoughnessMap &&
          ((E.sheenRoughnessMap.value = b.sheenRoughnessMap),
          t(b.sheenRoughnessMap, E.sheenRoughnessMapTransform))),
      b.clearcoat > 0 &&
        ((E.clearcoat.value = b.clearcoat),
        (E.clearcoatRoughness.value = b.clearcoatRoughness),
        b.clearcoatMap &&
          ((E.clearcoatMap.value = b.clearcoatMap),
          t(b.clearcoatMap, E.clearcoatMapTransform)),
        b.clearcoatRoughnessMap &&
          ((E.clearcoatRoughnessMap.value = b.clearcoatRoughnessMap),
          t(b.clearcoatRoughnessMap, E.clearcoatRoughnessMapTransform)),
        b.clearcoatNormalMap &&
          ((E.clearcoatNormalMap.value = b.clearcoatNormalMap),
          t(b.clearcoatNormalMap, E.clearcoatNormalMapTransform),
          E.clearcoatNormalScale.value.copy(b.clearcoatNormalScale),
          b.side === fi && E.clearcoatNormalScale.value.negate())),
      b.iridescence > 0 &&
        ((E.iridescence.value = b.iridescence),
        (E.iridescenceIOR.value = b.iridescenceIOR),
        (E.iridescenceThicknessMinimum.value = b.iridescenceThicknessRange[0]),
        (E.iridescenceThicknessMaximum.value = b.iridescenceThicknessRange[1]),
        b.iridescenceMap &&
          ((E.iridescenceMap.value = b.iridescenceMap),
          t(b.iridescenceMap, E.iridescenceMapTransform)),
        b.iridescenceThicknessMap &&
          ((E.iridescenceThicknessMap.value = b.iridescenceThicknessMap),
          t(b.iridescenceThicknessMap, E.iridescenceThicknessMapTransform))),
      b.transmission > 0 &&
        ((E.transmission.value = b.transmission),
        (E.transmissionSamplerMap.value = L.texture),
        E.transmissionSamplerSize.value.set(L.width, L.height),
        b.transmissionMap &&
          ((E.transmissionMap.value = b.transmissionMap),
          t(b.transmissionMap, E.transmissionMapTransform)),
        (E.thickness.value = b.thickness),
        b.thicknessMap &&
          ((E.thicknessMap.value = b.thicknessMap),
          t(b.thicknessMap, E.thicknessMapTransform)),
        (E.attenuationDistance.value = b.attenuationDistance),
        E.attenuationColor.value.copy(b.attenuationColor)),
      b.anisotropy > 0 &&
        (E.anisotropyVector.value.set(
          b.anisotropy * Math.cos(b.anisotropyRotation),
          b.anisotropy * Math.sin(b.anisotropyRotation)
        ),
        b.anisotropyMap &&
          ((E.anisotropyMap.value = b.anisotropyMap),
          t(b.anisotropyMap, E.anisotropyMapTransform))),
      (E.specularIntensity.value = b.specularIntensity),
      E.specularColor.value.copy(b.specularColor),
      b.specularColorMap &&
        ((E.specularColorMap.value = b.specularColorMap),
        t(b.specularColorMap, E.specularColorMapTransform)),
      b.specularIntensityMap &&
        ((E.specularIntensityMap.value = b.specularIntensityMap),
        t(b.specularIntensityMap, E.specularIntensityMapTransform));
  }
  function w(E, b) {
    b.matcap && (E.matcap.value = b.matcap);
  }
  function C(E, b) {
    const L = e.get(b).light;
    E.referencePosition.value.setFromMatrixPosition(L.matrixWorld),
      (E.nearDistance.value = L.shadow.camera.near),
      (E.farDistance.value = L.shadow.camera.far);
  }
  return { refreshFogUniforms: i, refreshMaterialUniforms: r };
}
function X5(n, e, t, i) {
  let r = {},
    s = {},
    u = [];
  const c = t.isWebGL2 ? n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS) : 0;
  function h(L, S) {
    const R = S.program;
    i.uniformBlockBinding(L, R);
  }
  function p(L, S) {
    let R = r[L.id];
    R === void 0 &&
      (w(L), (R = g(L)), (r[L.id] = R), L.addEventListener("dispose", E));
    const U = S.program;
    i.updateUBOMapping(L, U);
    const q = e.render.frame;
    s[L.id] !== q && (x(L), (s[L.id] = q));
  }
  function g(L) {
    const S = v();
    L.__bindingPointIndex = S;
    const R = n.createBuffer(),
      U = L.__size,
      q = L.usage;
    return (
      n.bindBuffer(n.UNIFORM_BUFFER, R),
      n.bufferData(n.UNIFORM_BUFFER, U, q),
      n.bindBuffer(n.UNIFORM_BUFFER, null),
      n.bindBufferBase(n.UNIFORM_BUFFER, S, R),
      R
    );
  }
  function v() {
    for (let L = 0; L < c; L++) if (u.indexOf(L) === -1) return u.push(L), L;
    return (
      console.error(
        "THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."
      ),
      0
    );
  }
  function x(L) {
    const S = r[L.id],
      R = L.uniforms,
      U = L.__cache;
    n.bindBuffer(n.UNIFORM_BUFFER, S);
    for (let q = 0, I = R.length; q < I; q++) {
      const N = R[q];
      if (M(N, q, U) === !0) {
        const D = N.__offset,
          O = Array.isArray(N.value) ? N.value : [N.value];
        let k = 0;
        for (let $ = 0; $ < O.length; $++) {
          const H = O[$],
            Q = C(H);
          typeof H == "number"
            ? ((N.__data[0] = H),
              n.bufferSubData(n.UNIFORM_BUFFER, D + k, N.__data))
            : H.isMatrix3
            ? ((N.__data[0] = H.elements[0]),
              (N.__data[1] = H.elements[1]),
              (N.__data[2] = H.elements[2]),
              (N.__data[3] = H.elements[0]),
              (N.__data[4] = H.elements[3]),
              (N.__data[5] = H.elements[4]),
              (N.__data[6] = H.elements[5]),
              (N.__data[7] = H.elements[0]),
              (N.__data[8] = H.elements[6]),
              (N.__data[9] = H.elements[7]),
              (N.__data[10] = H.elements[8]),
              (N.__data[11] = H.elements[0]))
            : (H.toArray(N.__data, k),
              (k += Q.storage / Float32Array.BYTES_PER_ELEMENT));
        }
        n.bufferSubData(n.UNIFORM_BUFFER, D, N.__data);
      }
    }
    n.bindBuffer(n.UNIFORM_BUFFER, null);
  }
  function M(L, S, R) {
    const U = L.value;
    if (R[S] === void 0) {
      if (typeof U == "number") R[S] = U;
      else {
        const q = Array.isArray(U) ? U : [U],
          I = [];
        for (let N = 0; N < q.length; N++) I.push(q[N].clone());
        R[S] = I;
      }
      return !0;
    } else if (typeof U == "number") {
      if (R[S] !== U) return (R[S] = U), !0;
    } else {
      const q = Array.isArray(R[S]) ? R[S] : [R[S]],
        I = Array.isArray(U) ? U : [U];
      for (let N = 0; N < q.length; N++) {
        const D = q[N];
        if (D.equals(I[N]) === !1) return D.copy(I[N]), !0;
      }
    }
    return !1;
  }
  function w(L) {
    const S = L.uniforms;
    let R = 0;
    const U = 16;
    let q = 0;
    for (let I = 0, N = S.length; I < N; I++) {
      const D = S[I],
        O = { boundary: 0, storage: 0 },
        k = Array.isArray(D.value) ? D.value : [D.value];
      for (let $ = 0, H = k.length; $ < H; $++) {
        const Q = k[$],
          F = C(Q);
        (O.boundary += F.boundary), (O.storage += F.storage);
      }
      if (
        ((D.__data = new Float32Array(
          O.storage / Float32Array.BYTES_PER_ELEMENT
        )),
        (D.__offset = R),
        I > 0)
      ) {
        q = R % U;
        const $ = U - q;
        q !== 0 && $ - O.boundary < 0 && ((R += U - q), (D.__offset = R));
      }
      R += O.storage;
    }
    return (
      (q = R % U), q > 0 && (R += U - q), (L.__size = R), (L.__cache = {}), this
    );
  }
  function C(L) {
    const S = { boundary: 0, storage: 0 };
    return (
      typeof L == "number"
        ? ((S.boundary = 4), (S.storage = 4))
        : L.isVector2
        ? ((S.boundary = 8), (S.storage = 8))
        : L.isVector3 || L.isColor
        ? ((S.boundary = 16), (S.storage = 12))
        : L.isVector4
        ? ((S.boundary = 16), (S.storage = 16))
        : L.isMatrix3
        ? ((S.boundary = 48), (S.storage = 48))
        : L.isMatrix4
        ? ((S.boundary = 64), (S.storage = 64))
        : L.isTexture
        ? console.warn(
            "THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."
          )
        : console.warn(
            "THREE.WebGLRenderer: Unsupported uniform value type.",
            L
          ),
      S
    );
  }
  function E(L) {
    const S = L.target;
    S.removeEventListener("dispose", E);
    const R = u.indexOf(S.__bindingPointIndex);
    u.splice(R, 1), n.deleteBuffer(r[S.id]), delete r[S.id], delete s[S.id];
  }
  function b() {
    for (const L in r) n.deleteBuffer(r[L]);
    (u = []), (r = {}), (s = {});
  }
  return { bind: h, update: p, dispose: b };
}
class X1 {
  constructor(e = {}) {
    const {
      canvas: t = zv(),
      context: i = null,
      depth: r = !0,
      stencil: s = !0,
      alpha: u = !1,
      antialias: c = !1,
      premultipliedAlpha: h = !0,
      preserveDrawingBuffer: p = !1,
      powerPreference: g = "default",
      failIfMajorPerformanceCaveat: v = !1,
    } = e;
    this.isWebGLRenderer = !0;
    let x;
    i !== null ? (x = i.getContextAttributes().alpha) : (x = u);
    const M = new Uint32Array(4),
      w = new Int32Array(4);
    let C = null,
      E = null;
    const b = [],
      L = [];
    (this.domElement = t),
      (this.debug = { checkShaderErrors: !0, onShaderError: null }),
      (this.autoClear = !0),
      (this.autoClearColor = !0),
      (this.autoClearDepth = !0),
      (this.autoClearStencil = !0),
      (this.sortObjects = !0),
      (this.clippingPlanes = []),
      (this.localClippingEnabled = !1),
      (this.outputColorSpace = hn),
      (this._useLegacyLights = !1),
      (this.toneMapping = ls),
      (this.toneMappingExposure = 1);
    const S = this;
    let R = !1,
      U = 0,
      q = 0,
      I = null,
      N = -1,
      D = null;
    const O = new In(),
      k = new In();
    let $ = null;
    const H = new Dt(0);
    let Q = 0,
      F = t.width,
      J = t.height,
      K = 1,
      ie = null,
      he = null;
    const ce = new In(0, 0, F, J),
      oe = new In(0, 0, F, J);
    let de = !1;
    const Se = new wc();
    let Pe = !1,
      Oe = !1,
      $e = null;
    const nt = new dn(),
      ot = new ke(),
      Rt = new te(),
      Ot = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0,
      };
    function ct() {
      return I === null ? K : 1;
    }
    let ne = i;
    function Ge(X, le) {
      for (let ye = 0; ye < X.length; ye++) {
        const Ae = X[ye],
          ge = t.getContext(Ae, le);
        if (ge !== null) return ge;
      }
      return null;
    }
    try {
      const X = {
        alpha: !0,
        depth: r,
        stencil: s,
        antialias: c,
        premultipliedAlpha: h,
        preserveDrawingBuffer: p,
        powerPreference: g,
        failIfMajorPerformanceCaveat: v,
      };
      if (
        ("setAttribute" in t &&
          t.setAttribute("data-engine", `three.js r${xc}`),
        t.addEventListener("webglcontextlost", Ye, !1),
        t.addEventListener("webglcontextrestored", Me, !1),
        t.addEventListener("webglcontextcreationerror", Ue, !1),
        ne === null)
      ) {
        const le = ["webgl2", "webgl", "experimental-webgl"];
        if (
          (S.isWebGL1Renderer === !0 && le.shift(),
          (ne = Ge(le, X)),
          ne === null)
        )
          throw Ge(le)
            ? new Error(
                "Error creating WebGL context with your selected attributes."
              )
            : new Error("Error creating WebGL context.");
      }
      typeof WebGLRenderingContext < "u" &&
        ne instanceof WebGLRenderingContext &&
        console.warn(
          "THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."
        ),
        ne.getShaderPrecisionFormat === void 0 &&
          (ne.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
    } catch (X) {
      throw (console.error("THREE.WebGLRenderer: " + X.message), X);
    }
    let Ce,
      Fe,
      Le,
      At,
      it,
      at,
      mt,
      xt,
      nn,
      Y,
      G,
      xe,
      Be,
      Ie,
      Ne,
      ut,
      ze,
      be,
      re,
      Re,
      tt,
      Xe,
      et,
      wt;
    function Vt() {
      (Ce = new iy(ne)),
        (Fe = new Zx(ne, Ce, e)),
        Ce.init(Fe),
        (Xe = new z5(ne, Ce, Fe)),
        (Le = new N5(ne, Ce, Fe)),
        (At = new oy(ne)),
        (it = new E5()),
        (at = new F5(ne, Ce, Le, it, Fe, Xe, At)),
        (mt = new Jx(S)),
        (xt = new ny(S)),
        (nn = new m_(ne, Fe)),
        (et = new $x(ne, Ce, nn, Fe)),
        (Y = new ry(ne, nn, At, et)),
        (G = new uy(ne, Y, nn, At)),
        (re = new ly(ne, Fe, at)),
        (ut = new Kx(it)),
        (xe = new M5(S, mt, xt, Ce, Fe, et, ut)),
        (Be = new j5(S, it)),
        (Ie = new S5()),
        (Ne = new D5(Ce, Fe)),
        (be = new Qx(S, mt, xt, Le, G, x, h)),
        (ze = new B5(S, G, Fe)),
        (wt = new X5(ne, At, Fe, Le)),
        (Re = new Yx(ne, Ce, At, Fe)),
        (tt = new sy(ne, Ce, At, Fe)),
        (At.programs = xe.programs),
        (S.capabilities = Fe),
        (S.extensions = Ce),
        (S.properties = it),
        (S.renderLists = Ie),
        (S.shadowMap = ze),
        (S.state = Le),
        (S.info = At);
    }
    Vt();
    const ae = new W5(S, ne);
    (this.xr = ae),
      (this.getContext = function () {
        return ne;
      }),
      (this.getContextAttributes = function () {
        return ne.getContextAttributes();
      }),
      (this.forceContextLoss = function () {
        const X = Ce.get("WEBGL_lose_context");
        X && X.loseContext();
      }),
      (this.forceContextRestore = function () {
        const X = Ce.get("WEBGL_lose_context");
        X && X.restoreContext();
      }),
      (this.getPixelRatio = function () {
        return K;
      }),
      (this.setPixelRatio = function (X) {
        X !== void 0 && ((K = X), this.setSize(F, J, !1));
      }),
      (this.getSize = function (X) {
        return X.set(F, J);
      }),
      (this.setSize = function (X, le, ye = !0) {
        if (ae.isPresenting) {
          console.warn(
            "THREE.WebGLRenderer: Can't change size while VR device is presenting."
          );
          return;
        }
        (F = X),
          (J = le),
          (t.width = Math.floor(X * K)),
          (t.height = Math.floor(le * K)),
          ye === !0 &&
            ((t.style.width = X + "px"), (t.style.height = le + "px")),
          this.setViewport(0, 0, X, le);
      }),
      (this.getDrawingBufferSize = function (X) {
        return X.set(F * K, J * K).floor();
      }),
      (this.setDrawingBufferSize = function (X, le, ye) {
        (F = X),
          (J = le),
          (K = ye),
          (t.width = Math.floor(X * ye)),
          (t.height = Math.floor(le * ye)),
          this.setViewport(0, 0, X, le);
      }),
      (this.getCurrentViewport = function (X) {
        return X.copy(O);
      }),
      (this.getViewport = function (X) {
        return X.copy(ce);
      }),
      (this.setViewport = function (X, le, ye, Ae) {
        X.isVector4 ? ce.set(X.x, X.y, X.z, X.w) : ce.set(X, le, ye, Ae),
          Le.viewport(O.copy(ce).multiplyScalar(K).floor());
      }),
      (this.getScissor = function (X) {
        return X.copy(oe);
      }),
      (this.setScissor = function (X, le, ye, Ae) {
        X.isVector4 ? oe.set(X.x, X.y, X.z, X.w) : oe.set(X, le, ye, Ae),
          Le.scissor(k.copy(oe).multiplyScalar(K).floor());
      }),
      (this.getScissorTest = function () {
        return de;
      }),
      (this.setScissorTest = function (X) {
        Le.setScissorTest((de = X));
      }),
      (this.setOpaqueSort = function (X) {
        ie = X;
      }),
      (this.setTransparentSort = function (X) {
        he = X;
      }),
      (this.getClearColor = function (X) {
        return X.copy(be.getClearColor());
      }),
      (this.setClearColor = function () {
        be.setClearColor.apply(be, arguments);
      }),
      (this.getClearAlpha = function () {
        return be.getClearAlpha();
      }),
      (this.setClearAlpha = function () {
        be.setClearAlpha.apply(be, arguments);
      }),
      (this.clear = function (X = !0, le = !0, ye = !0) {
        let Ae = 0;
        if (X) {
          let ge = !1;
          if (I !== null) {
            const rt = I.texture.format;
            ge = rt === T1 || rt === S1 || rt === w1;
          }
          if (ge) {
            const rt = I.texture.type,
              Qe =
                rt === us ||
                rt === ss ||
                rt === yc ||
                rt === Os ||
                rt === M1 ||
                rt === E1,
              He = be.getClearColor(),
              ft = be.getClearAlpha(),
              Nt = He.r,
              vt = He.g,
              Pt = He.b;
            Qe
              ? ((M[0] = Nt),
                (M[1] = vt),
                (M[2] = Pt),
                (M[3] = ft),
                ne.clearBufferuiv(ne.COLOR, 0, M))
              : ((w[0] = Nt),
                (w[1] = vt),
                (w[2] = Pt),
                (w[3] = ft),
                ne.clearBufferiv(ne.COLOR, 0, w));
          } else Ae |= ne.COLOR_BUFFER_BIT;
        }
        le && (Ae |= ne.DEPTH_BUFFER_BIT),
          ye && (Ae |= ne.STENCIL_BUFFER_BIT),
          ne.clear(Ae);
      }),
      (this.clearColor = function () {
        this.clear(!0, !1, !1);
      }),
      (this.clearDepth = function () {
        this.clear(!1, !0, !1);
      }),
      (this.clearStencil = function () {
        this.clear(!1, !1, !0);
      }),
      (this.dispose = function () {
        t.removeEventListener("webglcontextlost", Ye, !1),
          t.removeEventListener("webglcontextrestored", Me, !1),
          t.removeEventListener("webglcontextcreationerror", Ue, !1),
          Ie.dispose(),
          Ne.dispose(),
          it.dispose(),
          mt.dispose(),
          xt.dispose(),
          G.dispose(),
          et.dispose(),
          wt.dispose(),
          xe.dispose(),
          ae.dispose(),
          ae.removeEventListener("sessionstart", en),
          ae.removeEventListener("sessionend", yi),
          $e && ($e.dispose(), ($e = null)),
          Bn.stop();
      });
    function Ye(X) {
      X.preventDefault(),
        console.log("THREE.WebGLRenderer: Context Lost."),
        (R = !0);
    }
    function Me() {
      console.log("THREE.WebGLRenderer: Context Restored."), (R = !1);
      const X = At.autoReset,
        le = ze.enabled,
        ye = ze.autoUpdate,
        Ae = ze.needsUpdate,
        ge = ze.type;
      Vt(),
        (At.autoReset = X),
        (ze.enabled = le),
        (ze.autoUpdate = ye),
        (ze.needsUpdate = Ae),
        (ze.type = ge);
    }
    function Ue(X) {
      console.error(
        "THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",
        X.statusMessage
      );
    }
    function pe(X) {
      const le = X.target;
      le.removeEventListener("dispose", pe), kt(le);
    }
    function kt(X) {
      Yt(X), it.remove(X);
    }
    function Yt(X) {
      const le = it.get(X).programs;
      le !== void 0 &&
        (le.forEach(function (ye) {
          xe.releaseProgram(ye);
        }),
        X.isShaderMaterial && xe.releaseShaderCache(X));
    }
    (this.renderBufferDirect = function (X, le, ye, Ae, ge, rt) {
      le === null && (le = Ot);
      const Qe = ge.isMesh && ge.matrixWorld.determinant() < 0,
        He = pt(X, le, ye, Ae, ge);
      Le.setMaterial(Ae, Qe);
      let ft = ye.index,
        Nt = 1;
      if (Ae.wireframe === !0) {
        if (((ft = Y.getWireframeAttribute(ye)), ft === void 0)) return;
        Nt = 2;
      }
      const vt = ye.drawRange,
        Pt = ye.attributes.position;
      let jt = vt.start * Nt,
        sn = (vt.start + vt.count) * Nt;
      rt !== null &&
        ((jt = Math.max(jt, rt.start * Nt)),
        (sn = Math.min(sn, (rt.start + rt.count) * Nt))),
        ft !== null
          ? ((jt = Math.max(jt, 0)), (sn = Math.min(sn, ft.count)))
          : Pt != null &&
            ((jt = Math.max(jt, 0)), (sn = Math.min(sn, Pt.count)));
      const gn = sn - jt;
      if (gn < 0 || gn === 1 / 0) return;
      et.setup(ge, Ae, He, ye, ft);
      let bi,
        yn = Re;
      if (
        (ft !== null && ((bi = nn.get(ft)), (yn = tt), yn.setIndex(bi)),
        ge.isMesh)
      )
        Ae.wireframe === !0
          ? (Le.setLineWidth(Ae.wireframeLinewidth * ct()),
            yn.setMode(ne.LINES))
          : yn.setMode(ne.TRIANGLES);
      else if (ge.isLine) {
        let Lt = Ae.linewidth;
        Lt === void 0 && (Lt = 1),
          Le.setLineWidth(Lt * ct()),
          ge.isLineSegments
            ? yn.setMode(ne.LINES)
            : ge.isLineLoop
            ? yn.setMode(ne.LINE_LOOP)
            : yn.setMode(ne.LINE_STRIP);
      } else
        ge.isPoints
          ? yn.setMode(ne.POINTS)
          : ge.isSprite && yn.setMode(ne.TRIANGLES);
      if (ge.isInstancedMesh) yn.renderInstances(jt, gn, ge.count);
      else if (ye.isInstancedBufferGeometry) {
        const Lt =
            ye._maxInstanceCount !== void 0 ? ye._maxInstanceCount : 1 / 0,
          St = Math.min(ye.instanceCount, Lt);
        yn.renderInstances(jt, gn, St);
      } else yn.render(jt, gn);
    }),
      (this.compile = function (X, le) {
        function ye(Ae, ge, rt) {
          Ae.transparent === !0 && Ae.side === mi && Ae.forceSinglePass === !1
            ? ((Ae.side = fi),
              (Ae.needsUpdate = !0),
              Te(Ae, ge, rt),
              (Ae.side = cs),
              (Ae.needsUpdate = !0),
              Te(Ae, ge, rt),
              (Ae.side = mi))
            : Te(Ae, ge, rt);
        }
        (E = Ne.get(X)),
          E.init(),
          L.push(E),
          X.traverseVisible(function (Ae) {
            Ae.isLight &&
              Ae.layers.test(le.layers) &&
              (E.pushLight(Ae), Ae.castShadow && E.pushShadow(Ae));
          }),
          E.setupLights(S._useLegacyLights),
          X.traverse(function (Ae) {
            const ge = Ae.material;
            if (ge)
              if (Array.isArray(ge))
                for (let rt = 0; rt < ge.length; rt++) {
                  const Qe = ge[rt];
                  ye(Qe, X, Ae);
                }
              else ye(ge, X, Ae);
          }),
          L.pop(),
          (E = null);
      });
    let rn = null;
    function ei(X) {
      rn && rn(X);
    }
    function en() {
      Bn.stop();
    }
    function yi() {
      Bn.start();
    }
    const Bn = new z1();
    Bn.setAnimationLoop(ei),
      typeof self < "u" && Bn.setContext(self),
      (this.setAnimationLoop = function (X) {
        (rn = X), ae.setAnimationLoop(X), X === null ? Bn.stop() : Bn.start();
      }),
      ae.addEventListener("sessionstart", en),
      ae.addEventListener("sessionend", yi),
      (this.render = function (X, le) {
        if (le !== void 0 && le.isCamera !== !0) {
          console.error(
            "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
          );
          return;
        }
        if (R === !0) return;
        X.matrixWorldAutoUpdate === !0 && X.updateMatrixWorld(),
          le.parent === null &&
            le.matrixWorldAutoUpdate === !0 &&
            le.updateMatrixWorld(),
          ae.enabled === !0 &&
            ae.isPresenting === !0 &&
            (ae.cameraAutoUpdate === !0 && ae.updateCamera(le),
            (le = ae.getCamera())),
          X.isScene === !0 && X.onBeforeRender(S, X, le, I),
          (E = Ne.get(X, L.length)),
          E.init(),
          L.push(E),
          nt.multiplyMatrices(le.projectionMatrix, le.matrixWorldInverse),
          Se.setFromProjectionMatrix(nt),
          (Oe = this.localClippingEnabled),
          (Pe = ut.init(this.clippingPlanes, Oe)),
          (C = Ie.get(X, b.length)),
          C.init(),
          b.push(C),
          Yo(X, le, 0, S.sortObjects),
          C.finish(),
          S.sortObjects === !0 && C.sort(ie, he),
          this.info.render.frame++,
          Pe === !0 && ut.beginShadows();
        const ye = E.state.shadowsArray;
        if (
          (ze.render(ye, X, le),
          Pe === !0 && ut.endShadows(),
          this.info.autoReset === !0 && this.info.reset(),
          be.render(C, X),
          E.setupLights(S._useLegacyLights),
          le.isArrayCamera)
        ) {
          const Ae = le.cameras;
          for (let ge = 0, rt = Ae.length; ge < rt; ge++) {
            const Qe = Ae[ge];
            ms(C, X, Qe, Qe.viewport);
          }
        } else ms(C, X, le);
        I !== null &&
          (at.updateMultisampleRenderTarget(I), at.updateRenderTargetMipmap(I)),
          X.isScene === !0 && X.onAfterRender(S, X, le),
          et.resetDefaultState(),
          (N = -1),
          (D = null),
          L.pop(),
          L.length > 0 ? (E = L[L.length - 1]) : (E = null),
          b.pop(),
          b.length > 0 ? (C = b[b.length - 1]) : (C = null);
      });
    function Yo(X, le, ye, Ae) {
      if (X.visible === !1) return;
      if (X.layers.test(le.layers)) {
        if (X.isGroup) ye = X.renderOrder;
        else if (X.isLOD) X.autoUpdate === !0 && X.update(le);
        else if (X.isLight) E.pushLight(X), X.castShadow && E.pushShadow(X);
        else if (X.isSprite) {
          if (!X.frustumCulled || Se.intersectsSprite(X)) {
            Ae && Rt.setFromMatrixPosition(X.matrixWorld).applyMatrix4(nt);
            const Qe = G.update(X),
              He = X.material;
            He.visible && C.push(X, Qe, He, ye, Rt.z, null);
          }
        } else if (
          (X.isMesh || X.isLine || X.isPoints) &&
          (!X.frustumCulled || Se.intersectsObject(X))
        ) {
          const Qe = G.update(X),
            He = X.material;
          if (
            (Ae &&
              (X.boundingSphere !== void 0
                ? (X.boundingSphere === null && X.computeBoundingSphere(),
                  Rt.copy(X.boundingSphere.center))
                : (Qe.boundingSphere === null && Qe.computeBoundingSphere(),
                  Rt.copy(Qe.boundingSphere.center)),
              Rt.applyMatrix4(X.matrixWorld).applyMatrix4(nt)),
            Array.isArray(He))
          ) {
            const ft = Qe.groups;
            for (let Nt = 0, vt = ft.length; Nt < vt; Nt++) {
              const Pt = ft[Nt],
                jt = He[Pt.materialIndex];
              jt && jt.visible && C.push(X, Qe, jt, ye, Rt.z, Pt);
            }
          } else He.visible && C.push(X, Qe, He, ye, Rt.z, null);
        }
      }
      const rt = X.children;
      for (let Qe = 0, He = rt.length; Qe < He; Qe++) Yo(rt[Qe], le, ye, Ae);
    }
    function ms(X, le, ye, Ae) {
      const ge = X.opaque,
        rt = X.transmissive,
        Qe = X.transparent;
      E.setupLightsView(ye),
        Pe === !0 && ut.setGlobalState(S.clippingPlanes, ye),
        rt.length > 0 && Zo(ge, rt, le, ye),
        Ae && Le.viewport(O.copy(Ae)),
        ge.length > 0 && Ii(ge, le, ye),
        rt.length > 0 && Ii(rt, le, ye),
        Qe.length > 0 && Ii(Qe, le, ye),
        Le.buffers.depth.setTest(!0),
        Le.buffers.depth.setMask(!0),
        Le.buffers.color.setMask(!0),
        Le.setPolygonOffset(!1);
    }
    function Zo(X, le, ye, Ae) {
      const ge = Fe.isWebGL2;
      $e === null &&
        ($e = new Fs(1, 1, {
          generateMipmaps: !0,
          type: Ce.has("EXT_color_buffer_half_float") ? Pa : us,
          minFilter: Ra,
          samples: ge ? 4 : 0,
        })),
        S.getDrawingBufferSize(ot),
        ge ? $e.setSize(ot.x, ot.y) : $e.setSize(ul(ot.x), ul(ot.y));
      const rt = S.getRenderTarget();
      S.setRenderTarget($e),
        S.getClearColor(H),
        (Q = S.getClearAlpha()),
        Q < 1 && S.setClearColor(16777215, 0.5),
        S.clear();
      const Qe = S.toneMapping;
      (S.toneMapping = ls),
        Ii(X, ye, Ae),
        at.updateMultisampleRenderTarget($e),
        at.updateRenderTargetMipmap($e);
      let He = !1;
      for (let ft = 0, Nt = le.length; ft < Nt; ft++) {
        const vt = le[ft],
          Pt = vt.object,
          jt = vt.geometry,
          sn = vt.material,
          gn = vt.group;
        if (sn.side === mi && Pt.layers.test(Ae.layers)) {
          const bi = sn.side;
          (sn.side = fi),
            (sn.needsUpdate = !0),
            me(Pt, ye, Ae, jt, sn, gn),
            (sn.side = bi),
            (sn.needsUpdate = !0),
            (He = !0);
        }
      }
      He === !0 &&
        (at.updateMultisampleRenderTarget($e), at.updateRenderTargetMipmap($e)),
        S.setRenderTarget(rt),
        S.setClearColor(H, Q),
        (S.toneMapping = Qe);
    }
    function Ii(X, le, ye) {
      const Ae = le.isScene === !0 ? le.overrideMaterial : null;
      for (let ge = 0, rt = X.length; ge < rt; ge++) {
        const Qe = X[ge],
          He = Qe.object,
          ft = Qe.geometry,
          Nt = Ae === null ? Qe.material : Ae,
          vt = Qe.group;
        He.layers.test(ye.layers) && me(He, le, ye, ft, Nt, vt);
      }
    }
    function me(X, le, ye, Ae, ge, rt) {
      X.onBeforeRender(S, le, ye, Ae, ge, rt),
        X.modelViewMatrix.multiplyMatrices(
          ye.matrixWorldInverse,
          X.matrixWorld
        ),
        X.normalMatrix.getNormalMatrix(X.modelViewMatrix),
        ge.onBeforeRender(S, le, ye, Ae, X, rt),
        ge.transparent === !0 && ge.side === mi && ge.forceSinglePass === !1
          ? ((ge.side = fi),
            (ge.needsUpdate = !0),
            S.renderBufferDirect(ye, le, Ae, ge, X, rt),
            (ge.side = cs),
            (ge.needsUpdate = !0),
            S.renderBufferDirect(ye, le, Ae, ge, X, rt),
            (ge.side = mi))
          : S.renderBufferDirect(ye, le, Ae, ge, X, rt),
        X.onAfterRender(S, le, ye, Ae, ge, rt);
    }
    function Te(X, le, ye) {
      le.isScene !== !0 && (le = Ot);
      const Ae = it.get(X),
        ge = E.state.lights,
        rt = E.state.shadowsArray,
        Qe = ge.state.version,
        He = xe.getParameters(X, ge.state, rt, le, ye),
        ft = xe.getProgramCacheKey(He);
      let Nt = Ae.programs;
      (Ae.environment = X.isMeshStandardMaterial ? le.environment : null),
        (Ae.fog = le.fog),
        (Ae.envMap = (X.isMeshStandardMaterial ? xt : mt).get(
          X.envMap || Ae.environment
        )),
        Nt === void 0 &&
          (X.addEventListener("dispose", pe),
          (Nt = new Map()),
          (Ae.programs = Nt));
      let vt = Nt.get(ft);
      if (vt !== void 0) {
        if (Ae.currentProgram === vt && Ae.lightsStateVersion === Qe)
          return We(X, He), vt;
      } else
        (He.uniforms = xe.getUniforms(X)),
          X.onBuild(ye, He, S),
          X.onBeforeCompile(He, S),
          (vt = xe.acquireProgram(He, ft)),
          Nt.set(ft, vt),
          (Ae.uniforms = He.uniforms);
      const Pt = Ae.uniforms;
      ((!X.isShaderMaterial && !X.isRawShaderMaterial) || X.clipping === !0) &&
        (Pt.clippingPlanes = ut.uniform),
        We(X, He),
        (Ae.needsLights = V(X)),
        (Ae.lightsStateVersion = Qe),
        Ae.needsLights &&
          ((Pt.ambientLightColor.value = ge.state.ambient),
          (Pt.lightProbe.value = ge.state.probe),
          (Pt.directionalLights.value = ge.state.directional),
          (Pt.directionalLightShadows.value = ge.state.directionalShadow),
          (Pt.spotLights.value = ge.state.spot),
          (Pt.spotLightShadows.value = ge.state.spotShadow),
          (Pt.rectAreaLights.value = ge.state.rectArea),
          (Pt.ltc_1.value = ge.state.rectAreaLTC1),
          (Pt.ltc_2.value = ge.state.rectAreaLTC2),
          (Pt.pointLights.value = ge.state.point),
          (Pt.pointLightShadows.value = ge.state.pointShadow),
          (Pt.hemisphereLights.value = ge.state.hemi),
          (Pt.directionalShadowMap.value = ge.state.directionalShadowMap),
          (Pt.directionalShadowMatrix.value = ge.state.directionalShadowMatrix),
          (Pt.spotShadowMap.value = ge.state.spotShadowMap),
          (Pt.spotLightMatrix.value = ge.state.spotLightMatrix),
          (Pt.spotLightMap.value = ge.state.spotLightMap),
          (Pt.pointShadowMap.value = ge.state.pointShadowMap),
          (Pt.pointShadowMatrix.value = ge.state.pointShadowMatrix));
      const jt = vt.getUniforms(),
        sn = tl.seqWithValue(jt.seq, Pt);
      return (Ae.currentProgram = vt), (Ae.uniformsList = sn), vt;
    }
    function We(X, le) {
      const ye = it.get(X);
      (ye.outputColorSpace = le.outputColorSpace),
        (ye.instancing = le.instancing),
        (ye.instancingColor = le.instancingColor),
        (ye.skinning = le.skinning),
        (ye.morphTargets = le.morphTargets),
        (ye.morphNormals = le.morphNormals),
        (ye.morphColors = le.morphColors),
        (ye.morphTargetsCount = le.morphTargetsCount),
        (ye.numClippingPlanes = le.numClippingPlanes),
        (ye.numIntersection = le.numClipIntersection),
        (ye.vertexAlphas = le.vertexAlphas),
        (ye.vertexTangents = le.vertexTangents),
        (ye.toneMapping = le.toneMapping);
    }
    function pt(X, le, ye, Ae, ge) {
      le.isScene !== !0 && (le = Ot), at.resetTextureUnits();
      const rt = le.fog,
        Qe = Ae.isMeshStandardMaterial ? le.environment : null,
        He =
          I === null
            ? S.outputColorSpace
            : I.isXRRenderTarget === !0
            ? I.texture.colorSpace
            : xr,
        ft = (Ae.isMeshStandardMaterial ? xt : mt).get(Ae.envMap || Qe),
        Nt =
          Ae.vertexColors === !0 &&
          !!ye.attributes.color &&
          ye.attributes.color.itemSize === 4,
        vt = !!ye.attributes.tangent && (!!Ae.normalMap || Ae.anisotropy > 0),
        Pt = !!ye.morphAttributes.position,
        jt = !!ye.morphAttributes.normal,
        sn = !!ye.morphAttributes.color;
      let gn = ls;
      Ae.toneMapped &&
        (I === null || I.isXRRenderTarget === !0) &&
        (gn = S.toneMapping);
      const bi =
          ye.morphAttributes.position ||
          ye.morphAttributes.normal ||
          ye.morphAttributes.color,
        yn = bi !== void 0 ? bi.length : 0,
        Lt = it.get(Ae),
        St = E.state.lights;
      if (Pe === !0 && (Oe === !0 || X !== D)) {
        const ti = X === D && Ae.id === N;
        ut.setState(Ae, X, ti);
      }
      let W = !1;
      Ae.version === Lt.__version
        ? ((Lt.needsLights && Lt.lightsStateVersion !== St.state.version) ||
            Lt.outputColorSpace !== He ||
            (ge.isInstancedMesh && Lt.instancing === !1) ||
            (!ge.isInstancedMesh && Lt.instancing === !0) ||
            (ge.isSkinnedMesh && Lt.skinning === !1) ||
            (!ge.isSkinnedMesh && Lt.skinning === !0) ||
            (ge.isInstancedMesh &&
              Lt.instancingColor === !0 &&
              ge.instanceColor === null) ||
            (ge.isInstancedMesh &&
              Lt.instancingColor === !1 &&
              ge.instanceColor !== null) ||
            Lt.envMap !== ft ||
            (Ae.fog === !0 && Lt.fog !== rt) ||
            (Lt.numClippingPlanes !== void 0 &&
              (Lt.numClippingPlanes !== ut.numPlanes ||
                Lt.numIntersection !== ut.numIntersection)) ||
            Lt.vertexAlphas !== Nt ||
            Lt.vertexTangents !== vt ||
            Lt.morphTargets !== Pt ||
            Lt.morphNormals !== jt ||
            Lt.morphColors !== sn ||
            Lt.toneMapping !== gn ||
            (Fe.isWebGL2 === !0 && Lt.morphTargetsCount !== yn)) &&
          (W = !0)
        : ((W = !0), (Lt.__version = Ae.version));
      let ht = Lt.currentProgram;
      W === !0 && (ht = Te(Ae, le, ge));
      let Ko = !1,
        gs = !1,
        Jo = !1;
      const kn = ht.getUniforms(),
        br = Lt.uniforms;
      if (
        (Le.useProgram(ht.program) && ((Ko = !0), (gs = !0), (Jo = !0)),
        Ae.id !== N && ((N = Ae.id), (gs = !0)),
        Ko || D !== X)
      ) {
        kn.setValue(ne, "projectionMatrix", X.projectionMatrix),
          kn.setValue(ne, "viewMatrix", X.matrixWorldInverse);
        const ti = kn.map.cameraPosition;
        ti !== void 0 &&
          ti.setValue(ne, Rt.setFromMatrixPosition(X.matrixWorld)),
          Fe.logarithmicDepthBuffer &&
            kn.setValue(
              ne,
              "logDepthBufFC",
              2 / (Math.log(X.far + 1) / Math.LN2)
            ),
          (Ae.isMeshPhongMaterial ||
            Ae.isMeshToonMaterial ||
            Ae.isMeshLambertMaterial ||
            Ae.isMeshBasicMaterial ||
            Ae.isMeshStandardMaterial ||
            Ae.isShaderMaterial) &&
            kn.setValue(ne, "isOrthographic", X.isOrthographicCamera === !0),
          D !== X && ((D = X), (gs = !0), (Jo = !0));
      }
      if (ge.isSkinnedMesh) {
        kn.setOptional(ne, ge, "bindMatrix"),
          kn.setOptional(ne, ge, "bindMatrixInverse");
        const ti = ge.skeleton;
        ti &&
          (Fe.floatVertexTextures
            ? (ti.boneTexture === null && ti.computeBoneTexture(),
              kn.setValue(ne, "boneTexture", ti.boneTexture, at),
              kn.setValue(ne, "boneTextureSize", ti.boneTextureSize))
            : console.warn(
                "THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."
              ));
      }
      const z = ye.morphAttributes;
      if (
        ((z.position !== void 0 ||
          z.normal !== void 0 ||
          (z.color !== void 0 && Fe.isWebGL2 === !0)) &&
          re.update(ge, ye, ht),
        (gs || Lt.receiveShadow !== ge.receiveShadow) &&
          ((Lt.receiveShadow = ge.receiveShadow),
          kn.setValue(ne, "receiveShadow", ge.receiveShadow)),
        Ae.isMeshGouraudMaterial &&
          Ae.envMap !== null &&
          ((br.envMap.value = ft),
          (br.flipEnvMap.value =
            ft.isCubeTexture && ft.isRenderTargetTexture === !1 ? -1 : 1)),
        gs &&
          (kn.setValue(ne, "toneMappingExposure", S.toneMappingExposure),
          Lt.needsLights && A(br, Jo),
          rt && Ae.fog === !0 && Be.refreshFogUniforms(br, rt),
          Be.refreshMaterialUniforms(br, Ae, K, J, $e),
          tl.upload(ne, Lt.uniformsList, br, at)),
        Ae.isShaderMaterial &&
          Ae.uniformsNeedUpdate === !0 &&
          (tl.upload(ne, Lt.uniformsList, br, at),
          (Ae.uniformsNeedUpdate = !1)),
        Ae.isSpriteMaterial && kn.setValue(ne, "center", ge.center),
        kn.setValue(ne, "modelViewMatrix", ge.modelViewMatrix),
        kn.setValue(ne, "normalMatrix", ge.normalMatrix),
        kn.setValue(ne, "modelMatrix", ge.matrixWorld),
        Ae.isShaderMaterial || Ae.isRawShaderMaterial)
      ) {
        const ti = Ae.uniformsGroups;
        for (let ea = 0, A0 = ti.length; ea < A0; ea++)
          if (Fe.isWebGL2) {
            const Ja = ti[ea];
            wt.update(Ja, ht), wt.bind(Ja, ht);
          } else
            console.warn(
              "THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2."
            );
      }
      return ht;
    }
    function A(X, le) {
      (X.ambientLightColor.needsUpdate = le),
        (X.lightProbe.needsUpdate = le),
        (X.directionalLights.needsUpdate = le),
        (X.directionalLightShadows.needsUpdate = le),
        (X.pointLights.needsUpdate = le),
        (X.pointLightShadows.needsUpdate = le),
        (X.spotLights.needsUpdate = le),
        (X.spotLightShadows.needsUpdate = le),
        (X.rectAreaLights.needsUpdate = le),
        (X.hemisphereLights.needsUpdate = le);
    }
    function V(X) {
      return (
        X.isMeshLambertMaterial ||
        X.isMeshToonMaterial ||
        X.isMeshPhongMaterial ||
        X.isMeshStandardMaterial ||
        X.isShadowMaterial ||
        (X.isShaderMaterial && X.lights === !0)
      );
    }
    (this.getActiveCubeFace = function () {
      return U;
    }),
      (this.getActiveMipmapLevel = function () {
        return q;
      }),
      (this.getRenderTarget = function () {
        return I;
      }),
      (this.setRenderTargetTextures = function (X, le, ye) {
        (it.get(X.texture).__webglTexture = le),
          (it.get(X.depthTexture).__webglTexture = ye);
        const Ae = it.get(X);
        (Ae.__hasExternalTextures = !0),
          Ae.__hasExternalTextures &&
            ((Ae.__autoAllocateDepthBuffer = ye === void 0),
            Ae.__autoAllocateDepthBuffer ||
              (Ce.has("WEBGL_multisampled_render_to_texture") === !0 &&
                (console.warn(
                  "THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"
                ),
                (Ae.__useRenderToTexture = !1))));
      }),
      (this.setRenderTargetFramebuffer = function (X, le) {
        const ye = it.get(X);
        (ye.__webglFramebuffer = le),
          (ye.__useDefaultFramebuffer = le === void 0);
      }),
      (this.setRenderTarget = function (X, le = 0, ye = 0) {
        (I = X), (U = le), (q = ye);
        let Ae = !0,
          ge = null,
          rt = !1,
          Qe = !1;
        if (X) {
          const ft = it.get(X);
          ft.__useDefaultFramebuffer !== void 0
            ? (Le.bindFramebuffer(ne.FRAMEBUFFER, null), (Ae = !1))
            : ft.__webglFramebuffer === void 0
            ? at.setupRenderTarget(X)
            : ft.__hasExternalTextures &&
              at.rebindTextures(
                X,
                it.get(X.texture).__webglTexture,
                it.get(X.depthTexture).__webglTexture
              );
          const Nt = X.texture;
          (Nt.isData3DTexture ||
            Nt.isDataArrayTexture ||
            Nt.isCompressedArrayTexture) &&
            (Qe = !0);
          const vt = it.get(X).__webglFramebuffer;
          X.isWebGLCubeRenderTarget
            ? (Array.isArray(vt[le]) ? (ge = vt[le][ye]) : (ge = vt[le]),
              (rt = !0))
            : Fe.isWebGL2 && X.samples > 0 && at.useMultisampledRTT(X) === !1
            ? (ge = it.get(X).__webglMultisampledFramebuffer)
            : Array.isArray(vt)
            ? (ge = vt[ye])
            : (ge = vt),
            O.copy(X.viewport),
            k.copy(X.scissor),
            ($ = X.scissorTest);
        } else
          O.copy(ce).multiplyScalar(K).floor(),
            k.copy(oe).multiplyScalar(K).floor(),
            ($ = de);
        if (
          (Le.bindFramebuffer(ne.FRAMEBUFFER, ge) &&
            Fe.drawBuffers &&
            Ae &&
            Le.drawBuffers(X, ge),
          Le.viewport(O),
          Le.scissor(k),
          Le.setScissorTest($),
          rt)
        ) {
          const ft = it.get(X.texture);
          ne.framebufferTexture2D(
            ne.FRAMEBUFFER,
            ne.COLOR_ATTACHMENT0,
            ne.TEXTURE_CUBE_MAP_POSITIVE_X + le,
            ft.__webglTexture,
            ye
          );
        } else if (Qe) {
          const ft = it.get(X.texture),
            Nt = le || 0;
          ne.framebufferTextureLayer(
            ne.FRAMEBUFFER,
            ne.COLOR_ATTACHMENT0,
            ft.__webglTexture,
            ye || 0,
            Nt
          );
        }
        N = -1;
      }),
      (this.readRenderTargetPixels = function (X, le, ye, Ae, ge, rt, Qe) {
        if (!(X && X.isWebGLRenderTarget)) {
          console.error(
            "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
          );
          return;
        }
        let He = it.get(X).__webglFramebuffer;
        if ((X.isWebGLCubeRenderTarget && Qe !== void 0 && (He = He[Qe]), He)) {
          Le.bindFramebuffer(ne.FRAMEBUFFER, He);
          try {
            const ft = X.texture,
              Nt = ft.format,
              vt = ft.type;
            if (
              Nt !== nr &&
              Xe.convert(Nt) !==
                ne.getParameter(ne.IMPLEMENTATION_COLOR_READ_FORMAT)
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
              );
              return;
            }
            const Pt =
              vt === Pa &&
              (Ce.has("EXT_color_buffer_half_float") ||
                (Fe.isWebGL2 && Ce.has("EXT_color_buffer_float")));
            if (
              vt !== us &&
              Xe.convert(vt) !==
                ne.getParameter(ne.IMPLEMENTATION_COLOR_READ_TYPE) &&
              !(
                vt === os &&
                (Fe.isWebGL2 ||
                  Ce.has("OES_texture_float") ||
                  Ce.has("WEBGL_color_buffer_float"))
              ) &&
              !Pt
            ) {
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
              );
              return;
            }
            le >= 0 &&
              le <= X.width - Ae &&
              ye >= 0 &&
              ye <= X.height - ge &&
              ne.readPixels(le, ye, Ae, ge, Xe.convert(Nt), Xe.convert(vt), rt);
          } finally {
            const ft = I !== null ? it.get(I).__webglFramebuffer : null;
            Le.bindFramebuffer(ne.FRAMEBUFFER, ft);
          }
        }
      }),
      (this.copyFramebufferToTexture = function (X, le, ye = 0) {
        const Ae = Math.pow(2, -ye),
          ge = Math.floor(le.image.width * Ae),
          rt = Math.floor(le.image.height * Ae);
        at.setTexture2D(le, 0),
          ne.copyTexSubImage2D(ne.TEXTURE_2D, ye, 0, 0, X.x, X.y, ge, rt),
          Le.unbindTexture();
      }),
      (this.copyTextureToTexture = function (X, le, ye, Ae = 0) {
        const ge = le.image.width,
          rt = le.image.height,
          Qe = Xe.convert(ye.format),
          He = Xe.convert(ye.type);
        at.setTexture2D(ye, 0),
          ne.pixelStorei(ne.UNPACK_FLIP_Y_WEBGL, ye.flipY),
          ne.pixelStorei(
            ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
            ye.premultiplyAlpha
          ),
          ne.pixelStorei(ne.UNPACK_ALIGNMENT, ye.unpackAlignment),
          le.isDataTexture
            ? ne.texSubImage2D(
                ne.TEXTURE_2D,
                Ae,
                X.x,
                X.y,
                ge,
                rt,
                Qe,
                He,
                le.image.data
              )
            : le.isCompressedTexture
            ? ne.compressedTexSubImage2D(
                ne.TEXTURE_2D,
                Ae,
                X.x,
                X.y,
                le.mipmaps[0].width,
                le.mipmaps[0].height,
                Qe,
                le.mipmaps[0].data
              )
            : ne.texSubImage2D(ne.TEXTURE_2D, Ae, X.x, X.y, Qe, He, le.image),
          Ae === 0 && ye.generateMipmaps && ne.generateMipmap(ne.TEXTURE_2D),
          Le.unbindTexture();
      }),
      (this.copyTextureToTexture3D = function (X, le, ye, Ae, ge = 0) {
        if (S.isWebGL1Renderer) {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2."
          );
          return;
        }
        const rt = X.max.x - X.min.x + 1,
          Qe = X.max.y - X.min.y + 1,
          He = X.max.z - X.min.z + 1,
          ft = Xe.convert(Ae.format),
          Nt = Xe.convert(Ae.type);
        let vt;
        if (Ae.isData3DTexture) at.setTexture3D(Ae, 0), (vt = ne.TEXTURE_3D);
        else if (Ae.isDataArrayTexture)
          at.setTexture2DArray(Ae, 0), (vt = ne.TEXTURE_2D_ARRAY);
        else {
          console.warn(
            "THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray."
          );
          return;
        }
        ne.pixelStorei(ne.UNPACK_FLIP_Y_WEBGL, Ae.flipY),
          ne.pixelStorei(
            ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
            Ae.premultiplyAlpha
          ),
          ne.pixelStorei(ne.UNPACK_ALIGNMENT, Ae.unpackAlignment);
        const Pt = ne.getParameter(ne.UNPACK_ROW_LENGTH),
          jt = ne.getParameter(ne.UNPACK_IMAGE_HEIGHT),
          sn = ne.getParameter(ne.UNPACK_SKIP_PIXELS),
          gn = ne.getParameter(ne.UNPACK_SKIP_ROWS),
          bi = ne.getParameter(ne.UNPACK_SKIP_IMAGES),
          yn = ye.isCompressedTexture ? ye.mipmaps[0] : ye.image;
        ne.pixelStorei(ne.UNPACK_ROW_LENGTH, yn.width),
          ne.pixelStorei(ne.UNPACK_IMAGE_HEIGHT, yn.height),
          ne.pixelStorei(ne.UNPACK_SKIP_PIXELS, X.min.x),
          ne.pixelStorei(ne.UNPACK_SKIP_ROWS, X.min.y),
          ne.pixelStorei(ne.UNPACK_SKIP_IMAGES, X.min.z),
          ye.isDataTexture || ye.isData3DTexture
            ? ne.texSubImage3D(
                vt,
                ge,
                le.x,
                le.y,
                le.z,
                rt,
                Qe,
                He,
                ft,
                Nt,
                yn.data
              )
            : ye.isCompressedArrayTexture
            ? (console.warn(
                "THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."
              ),
              ne.compressedTexSubImage3D(
                vt,
                ge,
                le.x,
                le.y,
                le.z,
                rt,
                Qe,
                He,
                ft,
                yn.data
              ))
            : ne.texSubImage3D(
                vt,
                ge,
                le.x,
                le.y,
                le.z,
                rt,
                Qe,
                He,
                ft,
                Nt,
                yn
              ),
          ne.pixelStorei(ne.UNPACK_ROW_LENGTH, Pt),
          ne.pixelStorei(ne.UNPACK_IMAGE_HEIGHT, jt),
          ne.pixelStorei(ne.UNPACK_SKIP_PIXELS, sn),
          ne.pixelStorei(ne.UNPACK_SKIP_ROWS, gn),
          ne.pixelStorei(ne.UNPACK_SKIP_IMAGES, bi),
          ge === 0 && Ae.generateMipmaps && ne.generateMipmap(vt),
          Le.unbindTexture();
      }),
      (this.initTexture = function (X) {
        X.isCubeTexture
          ? at.setTextureCube(X, 0)
          : X.isData3DTexture
          ? at.setTexture3D(X, 0)
          : X.isDataArrayTexture || X.isCompressedArrayTexture
          ? at.setTexture2DArray(X, 0)
          : at.setTexture2D(X, 0),
          Le.unbindTexture();
      }),
      (this.resetState = function () {
        (U = 0), (q = 0), (I = null), Le.reset(), et.reset();
      }),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  get coordinateSystem() {
    return Ur;
  }
  get physicallyCorrectLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
      ),
      !this.useLegacyLights
    );
  }
  set physicallyCorrectLights(e) {
    console.warn(
      "THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."
    ),
      (this.useLegacyLights = !e);
  }
  get outputEncoding() {
    return (
      console.warn(
        "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
      ),
      this.outputColorSpace === hn ? Us : C1
    );
  }
  set outputEncoding(e) {
    console.warn(
      "THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."
    ),
      (this.outputColorSpace = e === Us ? hn : xr);
  }
  get useLegacyLights() {
    return (
      console.warn(
        "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
      ),
      this._useLegacyLights
    );
  }
  set useLegacyLights(e) {
    console.warn(
      "THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."
    ),
      (this._useLegacyLights = e);
  }
}
class Q5 extends X1 {}
Q5.prototype.isWebGL1Renderer = !0;
class Cc {
  constructor(e, t = 1, i = 1e3) {
    (this.isFog = !0),
      (this.name = ""),
      (this.color = new Dt(e)),
      (this.near = t),
      (this.far = i);
  }
  clone() {
    return new Cc(this.color, this.near, this.far);
  }
  toJSON() {
    return {
      type: "Fog",
      color: this.color.getHex(),
      near: this.near,
      far: this.far,
    };
  }
}
class $5 extends Rn {
  constructor() {
    super(),
      (this.isScene = !0),
      (this.type = "Scene"),
      (this.background = null),
      (this.environment = null),
      (this.fog = null),
      (this.backgroundBlurriness = 0),
      (this.backgroundIntensity = 1),
      (this.overrideMaterial = null),
      typeof __THREE_DEVTOOLS__ < "u" &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent("observe", { detail: this })
        );
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      e.background !== null && (this.background = e.background.clone()),
      e.environment !== null && (this.environment = e.environment.clone()),
      e.fog !== null && (this.fog = e.fog.clone()),
      (this.backgroundBlurriness = e.backgroundBlurriness),
      (this.backgroundIntensity = e.backgroundIntensity),
      e.overrideMaterial !== null &&
        (this.overrideMaterial = e.overrideMaterial.clone()),
      (this.matrixAutoUpdate = e.matrixAutoUpdate),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      this.fog !== null && (t.object.fog = this.fog.toJSON()),
      this.backgroundBlurriness > 0 &&
        (t.object.backgroundBlurriness = this.backgroundBlurriness),
      this.backgroundIntensity !== 1 &&
        (t.object.backgroundIntensity = this.backgroundIntensity),
      t
    );
  }
}
class Q1 {
  constructor(e, t) {
    (this.isInterleavedBuffer = !0),
      (this.array = e),
      (this.stride = t),
      (this.count = e !== void 0 ? e.length / t : 0),
      (this.usage = Cu),
      (this.updateRange = { offset: 0, count: -1 }),
      (this.version = 0),
      (this.uuid = pr());
  }
  onUploadCallback() {}
  set needsUpdate(e) {
    e === !0 && this.version++;
  }
  setUsage(e) {
    return (this.usage = e), this;
  }
  copy(e) {
    return (
      (this.array = new e.array.constructor(e.array)),
      (this.count = e.count),
      (this.stride = e.stride),
      (this.usage = e.usage),
      this
    );
  }
  copyAt(e, t, i) {
    (e *= this.stride), (i *= t.stride);
    for (let r = 0, s = this.stride; r < s; r++)
      this.array[e + r] = t.array[i + r];
    return this;
  }
  set(e, t = 0) {
    return this.array.set(e, t), this;
  }
  clone(e) {
    e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = pr()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
    const t = new this.array.constructor(
        e.arrayBuffers[this.array.buffer._uuid]
      ),
      i = new this.constructor(t, this.stride);
    return i.setUsage(this.usage), i;
  }
  onUpload(e) {
    return (this.onUploadCallback = e), this;
  }
  toJSON(e) {
    return (
      e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
      this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = pr()),
      e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
        (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
          new Uint32Array(this.array.buffer)
        )),
      {
        uuid: this.uuid,
        buffer: this.array.buffer._uuid,
        type: this.array.constructor.name,
        stride: this.stride,
      }
    );
  }
}
const ri = new te();
class $a {
  constructor(e, t, i, r = !1) {
    (this.isInterleavedBufferAttribute = !0),
      (this.name = ""),
      (this.data = e),
      (this.itemSize = t),
      (this.offset = i),
      (this.normalized = r);
  }
  get count() {
    return this.data.count;
  }
  get array() {
    return this.data.array;
  }
  set needsUpdate(e) {
    this.data.needsUpdate = e;
  }
  applyMatrix4(e) {
    for (let t = 0, i = this.data.count; t < i; t++)
      ri.fromBufferAttribute(this, t),
        ri.applyMatrix4(e),
        this.setXYZ(t, ri.x, ri.y, ri.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let t = 0, i = this.count; t < i; t++)
      ri.fromBufferAttribute(this, t),
        ri.applyNormalMatrix(e),
        this.setXYZ(t, ri.x, ri.y, ri.z);
    return this;
  }
  transformDirection(e) {
    for (let t = 0, i = this.count; t < i; t++)
      ri.fromBufferAttribute(this, t),
        ri.transformDirection(e),
        this.setXYZ(t, ri.x, ri.y, ri.z);
    return this;
  }
  setX(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset] = t),
      this
    );
  }
  setY(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 1] = t),
      this
    );
  }
  setZ(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 2] = t),
      this
    );
  }
  setW(e, t) {
    return (
      this.normalized && (t = on(t, this.array)),
      (this.data.array[e * this.data.stride + this.offset + 3] = t),
      this
    );
  }
  getX(e) {
    let t = this.data.array[e * this.data.stride + this.offset];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  getY(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 1];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  getZ(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 2];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  getW(e) {
    let t = this.data.array[e * this.data.stride + this.offset + 3];
    return this.normalized && (t = dr(t, this.array)), t;
  }
  setXY(e, t, i) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized && ((t = on(t, this.array)), (i = on(i, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      this
    );
  }
  setXYZ(e, t, i, r) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      (this.data.array[e + 2] = r),
      this
    );
  }
  setXYZW(e, t, i, r, s) {
    return (
      (e = e * this.data.stride + this.offset),
      this.normalized &&
        ((t = on(t, this.array)),
        (i = on(i, this.array)),
        (r = on(r, this.array)),
        (s = on(s, this.array))),
      (this.data.array[e + 0] = t),
      (this.data.array[e + 1] = i),
      (this.data.array[e + 2] = r),
      (this.data.array[e + 3] = s),
      this
    );
  }
  clone(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data."
      );
      const t = [];
      for (let i = 0; i < this.count; i++) {
        const r = i * this.data.stride + this.offset;
        for (let s = 0; s < this.itemSize; s++) t.push(this.data.array[r + s]);
      }
      return new En(
        new this.array.constructor(t),
        this.itemSize,
        this.normalized
      );
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
        new $a(
          e.interleavedBuffers[this.data.uuid],
          this.itemSize,
          this.offset,
          this.normalized
        )
      );
  }
  toJSON(e) {
    if (e === void 0) {
      console.log(
        "THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data."
      );
      const t = [];
      for (let i = 0; i < this.count; i++) {
        const r = i * this.data.stride + this.offset;
        for (let s = 0; s < this.itemSize; s++) t.push(this.data.array[r + s]);
      }
      return {
        itemSize: this.itemSize,
        type: this.array.constructor.name,
        array: t,
        normalized: this.normalized,
      };
    } else
      return (
        e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
        e.interleavedBuffers[this.data.uuid] === void 0 &&
          (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
        {
          isInterleavedBufferAttribute: !0,
          itemSize: this.itemSize,
          data: this.data.uuid,
          offset: this.offset,
          normalized: this.normalized,
        }
      );
  }
}
class $1 extends En {
  constructor(e, t, i, r = 1) {
    super(e, t, i),
      (this.isInstancedBufferAttribute = !0),
      (this.meshPerAttribute = r);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.meshPerAttribute = this.meshPerAttribute),
      (e.isInstancedBufferAttribute = !0),
      e
    );
  }
}
class Jl extends Qs {
  constructor(e) {
    super(),
      (this.isLineBasicMaterial = !0),
      (this.type = "LineBasicMaterial"),
      (this.color = new Dt(16777215)),
      (this.map = null),
      (this.linewidth = 1),
      (this.linecap = "round"),
      (this.linejoin = "round"),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.linewidth = e.linewidth),
      (this.linecap = e.linecap),
      (this.linejoin = e.linejoin),
      (this.fog = e.fog),
      this
    );
  }
}
const ud = new te(),
  cd = new te(),
  fd = new dn(),
  tu = new Yl(),
  CA = new Qo();
class e0 extends Rn {
  constructor(e = new fn(), t = new Jl()) {
    super(),
      (this.isLine = !0),
      (this.type = "Line"),
      (this.geometry = e),
      (this.material = t),
      this.updateMorphTargets();
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.material = Array.isArray(e.material)
        ? e.material.slice()
        : e.material),
      (this.geometry = e.geometry),
      this
    );
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position,
        i = [0];
      for (let r = 1, s = t.count; r < s; r++)
        ud.fromBufferAttribute(t, r - 1),
          cd.fromBufferAttribute(t, r),
          (i[r] = i[r - 1]),
          (i[r] += ud.distanceTo(cd));
      e.setAttribute("lineDistance", new Jt(i, 1));
    } else
      console.warn(
        "THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
  raycast(e, t) {
    const i = this.geometry,
      r = this.matrixWorld,
      s = e.params.Line.threshold,
      u = i.drawRange;
    if (
      (i.boundingSphere === null && i.computeBoundingSphere(),
      CA.copy(i.boundingSphere),
      CA.applyMatrix4(r),
      (CA.radius += s),
      e.ray.intersectsSphere(CA) === !1)
    )
      return;
    fd.copy(r).invert(), tu.copy(e.ray).applyMatrix4(fd);
    const c = s / ((this.scale.x + this.scale.y + this.scale.z) / 3),
      h = c * c,
      p = new te(),
      g = new te(),
      v = new te(),
      x = new te(),
      M = this.isLineSegments ? 2 : 1,
      w = i.index,
      E = i.attributes.position;
    if (w !== null) {
      const b = Math.max(0, u.start),
        L = Math.min(w.count, u.start + u.count);
      for (let S = b, R = L - 1; S < R; S += M) {
        const U = w.getX(S),
          q = w.getX(S + 1);
        if (
          (p.fromBufferAttribute(E, U),
          g.fromBufferAttribute(E, q),
          tu.distanceSqToSegment(p, g, x, v) > h)
        )
          continue;
        x.applyMatrix4(this.matrixWorld);
        const N = e.ray.origin.distanceTo(x);
        N < e.near ||
          N > e.far ||
          t.push({
            distance: N,
            point: v.clone().applyMatrix4(this.matrixWorld),
            index: S,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    } else {
      const b = Math.max(0, u.start),
        L = Math.min(E.count, u.start + u.count);
      for (let S = b, R = L - 1; S < R; S += M) {
        if (
          (p.fromBufferAttribute(E, S),
          g.fromBufferAttribute(E, S + 1),
          tu.distanceSqToSegment(p, g, x, v) > h)
        )
          continue;
        x.applyMatrix4(this.matrixWorld);
        const q = e.ray.origin.distanceTo(x);
        q < e.near ||
          q > e.far ||
          t.push({
            distance: q,
            point: v.clone().applyMatrix4(this.matrixWorld),
            index: S,
            face: null,
            faceIndex: null,
            object: this,
          });
      }
    }
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes,
      i = Object.keys(t);
    if (i.length > 0) {
      const r = t[i[0]];
      if (r !== void 0) {
        (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
        for (let s = 0, u = r.length; s < u; s++) {
          const c = r[s].name || String(s);
          this.morphTargetInfluences.push(0),
            (this.morphTargetDictionary[c] = s);
        }
      }
    }
  }
}
const hd = new te(),
  dd = new te();
class Y1 extends e0 {
  constructor(e, t) {
    super(e, t), (this.isLineSegments = !0), (this.type = "LineSegments");
  }
  computeLineDistances() {
    const e = this.geometry;
    if (e.index === null) {
      const t = e.attributes.position,
        i = [];
      for (let r = 0, s = t.count; r < s; r += 2)
        hd.fromBufferAttribute(t, r),
          dd.fromBufferAttribute(t, r + 1),
          (i[r] = r === 0 ? 0 : i[r - 1]),
          (i[r + 1] = i[r] + hd.distanceTo(dd));
      e.setAttribute("lineDistance", new Jt(i, 1));
    } else
      console.warn(
        "THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."
      );
    return this;
  }
}
class ar {
  constructor() {
    (this.type = "Curve"), (this.arcLengthDivisions = 200);
  }
  getPoint() {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }
  getPointAt(e, t) {
    const i = this.getUtoTmapping(e);
    return this.getPoint(i, t);
  }
  getPoints(e = 5) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPoint(i / e));
    return t;
  }
  getSpacedPoints(e = 5) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPointAt(i / e));
    return t;
  }
  getLength() {
    const e = this.getLengths();
    return e[e.length - 1];
  }
  getLengths(e = this.arcLengthDivisions) {
    if (
      this.cacheArcLengths &&
      this.cacheArcLengths.length === e + 1 &&
      !this.needsUpdate
    )
      return this.cacheArcLengths;
    this.needsUpdate = !1;
    const t = [];
    let i,
      r = this.getPoint(0),
      s = 0;
    t.push(0);
    for (let u = 1; u <= e; u++)
      (i = this.getPoint(u / e)), (s += i.distanceTo(r)), t.push(s), (r = i);
    return (this.cacheArcLengths = t), t;
  }
  updateArcLengths() {
    (this.needsUpdate = !0), this.getLengths();
  }
  getUtoTmapping(e, t) {
    const i = this.getLengths();
    let r = 0;
    const s = i.length;
    let u;
    t ? (u = t) : (u = e * i[s - 1]);
    let c = 0,
      h = s - 1,
      p;
    for (; c <= h; )
      if (((r = Math.floor(c + (h - c) / 2)), (p = i[r] - u), p < 0)) c = r + 1;
      else if (p > 0) h = r - 1;
      else {
        h = r;
        break;
      }
    if (((r = h), i[r] === u)) return r / (s - 1);
    const g = i[r],
      x = i[r + 1] - g,
      M = (u - g) / x;
    return (r + M) / (s - 1);
  }
  getTangent(e, t) {
    let r = e - 1e-4,
      s = e + 1e-4;
    r < 0 && (r = 0), s > 1 && (s = 1);
    const u = this.getPoint(r),
      c = this.getPoint(s),
      h = t || (u.isVector2 ? new ke() : new te());
    return h.copy(c).sub(u).normalize(), h;
  }
  getTangentAt(e, t) {
    const i = this.getUtoTmapping(e);
    return this.getTangent(i, t);
  }
  computeFrenetFrames(e, t) {
    const i = new te(),
      r = [],
      s = [],
      u = [],
      c = new te(),
      h = new dn();
    for (let M = 0; M <= e; M++) {
      const w = M / e;
      r[M] = this.getTangentAt(w, new te());
    }
    (s[0] = new te()), (u[0] = new te());
    let p = Number.MAX_VALUE;
    const g = Math.abs(r[0].x),
      v = Math.abs(r[0].y),
      x = Math.abs(r[0].z);
    g <= p && ((p = g), i.set(1, 0, 0)),
      v <= p && ((p = v), i.set(0, 1, 0)),
      x <= p && i.set(0, 0, 1),
      c.crossVectors(r[0], i).normalize(),
      s[0].crossVectors(r[0], c),
      u[0].crossVectors(r[0], s[0]);
    for (let M = 1; M <= e; M++) {
      if (
        ((s[M] = s[M - 1].clone()),
        (u[M] = u[M - 1].clone()),
        c.crossVectors(r[M - 1], r[M]),
        c.length() > Number.EPSILON)
      ) {
        c.normalize();
        const w = Math.acos(Dn(r[M - 1].dot(r[M]), -1, 1));
        s[M].applyMatrix4(h.makeRotationAxis(c, w));
      }
      u[M].crossVectors(r[M], s[M]);
    }
    if (t === !0) {
      let M = Math.acos(Dn(s[0].dot(s[e]), -1, 1));
      (M /= e), r[0].dot(c.crossVectors(s[0], s[e])) > 0 && (M = -M);
      for (let w = 1; w <= e; w++)
        s[w].applyMatrix4(h.makeRotationAxis(r[w], M * w)),
          u[w].crossVectors(r[w], s[w]);
    }
    return { tangents: r, normals: s, binormals: u };
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
  toJSON() {
    const e = {
      metadata: { version: 4.6, type: "Curve", generator: "Curve.toJSON" },
    };
    return (
      (e.arcLengthDivisions = this.arcLengthDivisions), (e.type = this.type), e
    );
  }
  fromJSON(e) {
    return (this.arcLengthDivisions = e.arcLengthDivisions), this;
  }
}
class Rc extends ar {
  constructor(
    e = 0,
    t = 0,
    i = 1,
    r = 1,
    s = 0,
    u = Math.PI * 2,
    c = !1,
    h = 0
  ) {
    super(),
      (this.isEllipseCurve = !0),
      (this.type = "EllipseCurve"),
      (this.aX = e),
      (this.aY = t),
      (this.xRadius = i),
      (this.yRadius = r),
      (this.aStartAngle = s),
      (this.aEndAngle = u),
      (this.aClockwise = c),
      (this.aRotation = h);
  }
  getPoint(e, t) {
    const i = t || new ke(),
      r = Math.PI * 2;
    let s = this.aEndAngle - this.aStartAngle;
    const u = Math.abs(s) < Number.EPSILON;
    for (; s < 0; ) s += r;
    for (; s > r; ) s -= r;
    s < Number.EPSILON && (u ? (s = 0) : (s = r)),
      this.aClockwise === !0 && !u && (s === r ? (s = -r) : (s = s - r));
    const c = this.aStartAngle + e * s;
    let h = this.aX + this.xRadius * Math.cos(c),
      p = this.aY + this.yRadius * Math.sin(c);
    if (this.aRotation !== 0) {
      const g = Math.cos(this.aRotation),
        v = Math.sin(this.aRotation),
        x = h - this.aX,
        M = p - this.aY;
      (h = x * g - M * v + this.aX), (p = x * v + M * g + this.aY);
    }
    return i.set(h, p);
  }
  copy(e) {
    return (
      super.copy(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.aX = this.aX),
      (e.aY = this.aY),
      (e.xRadius = this.xRadius),
      (e.yRadius = this.yRadius),
      (e.aStartAngle = this.aStartAngle),
      (e.aEndAngle = this.aEndAngle),
      (e.aClockwise = this.aClockwise),
      (e.aRotation = this.aRotation),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      (this.aX = e.aX),
      (this.aY = e.aY),
      (this.xRadius = e.xRadius),
      (this.yRadius = e.yRadius),
      (this.aStartAngle = e.aStartAngle),
      (this.aEndAngle = e.aEndAngle),
      (this.aClockwise = e.aClockwise),
      (this.aRotation = e.aRotation),
      this
    );
  }
}
class Y5 extends Rc {
  constructor(e, t, i, r, s, u) {
    super(e, t, i, i, r, s, u),
      (this.isArcCurve = !0),
      (this.type = "ArcCurve");
  }
}
function Pc() {
  let n = 0,
    e = 0,
    t = 0,
    i = 0;
  function r(s, u, c, h) {
    (n = s),
      (e = c),
      (t = -3 * s + 3 * u - 2 * c - h),
      (i = 2 * s - 2 * u + c + h);
  }
  return {
    initCatmullRom: function (s, u, c, h, p) {
      r(u, c, p * (c - s), p * (h - u));
    },
    initNonuniformCatmullRom: function (s, u, c, h, p, g, v) {
      let x = (u - s) / p - (c - s) / (p + g) + (c - u) / g,
        M = (c - u) / g - (h - u) / (g + v) + (h - c) / v;
      (x *= g), (M *= g), r(u, c, x, M);
    },
    calc: function (s) {
      const u = s * s,
        c = u * s;
      return n + e * s + t * u + i * c;
    },
  };
}
const RA = new te(),
  nu = new Pc(),
  iu = new Pc(),
  ru = new Pc();
class Z5 extends ar {
  constructor(e = [], t = !1, i = "centripetal", r = 0.5) {
    super(),
      (this.isCatmullRomCurve3 = !0),
      (this.type = "CatmullRomCurve3"),
      (this.points = e),
      (this.closed = t),
      (this.curveType = i),
      (this.tension = r);
  }
  getPoint(e, t = new te()) {
    const i = t,
      r = this.points,
      s = r.length,
      u = (s - (this.closed ? 0 : 1)) * e;
    let c = Math.floor(u),
      h = u - c;
    this.closed
      ? (c += c > 0 ? 0 : (Math.floor(Math.abs(c) / s) + 1) * s)
      : h === 0 && c === s - 1 && ((c = s - 2), (h = 1));
    let p, g;
    this.closed || c > 0
      ? (p = r[(c - 1) % s])
      : (RA.subVectors(r[0], r[1]).add(r[0]), (p = RA));
    const v = r[c % s],
      x = r[(c + 1) % s];
    if (
      (this.closed || c + 2 < s
        ? (g = r[(c + 2) % s])
        : (RA.subVectors(r[s - 1], r[s - 2]).add(r[s - 1]), (g = RA)),
      this.curveType === "centripetal" || this.curveType === "chordal")
    ) {
      const M = this.curveType === "chordal" ? 0.5 : 0.25;
      let w = Math.pow(p.distanceToSquared(v), M),
        C = Math.pow(v.distanceToSquared(x), M),
        E = Math.pow(x.distanceToSquared(g), M);
      C < 1e-4 && (C = 1),
        w < 1e-4 && (w = C),
        E < 1e-4 && (E = C),
        nu.initNonuniformCatmullRom(p.x, v.x, x.x, g.x, w, C, E),
        iu.initNonuniformCatmullRom(p.y, v.y, x.y, g.y, w, C, E),
        ru.initNonuniformCatmullRom(p.z, v.z, x.z, g.z, w, C, E);
    } else
      this.curveType === "catmullrom" &&
        (nu.initCatmullRom(p.x, v.x, x.x, g.x, this.tension),
        iu.initCatmullRom(p.y, v.y, x.y, g.y, this.tension),
        ru.initCatmullRom(p.z, v.z, x.z, g.z, this.tension));
    return i.set(nu.calc(h), iu.calc(h), ru.calc(h)), i;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(r.clone());
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, i = this.points.length; t < i; t++) {
      const r = this.points[t];
      e.points.push(r.toArray());
    }
    return (
      (e.closed = this.closed),
      (e.curveType = this.curveType),
      (e.tension = this.tension),
      e
    );
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(new te().fromArray(r));
    }
    return (
      (this.closed = e.closed),
      (this.curveType = e.curveType),
      (this.tension = e.tension),
      this
    );
  }
}
function pd(n, e, t, i, r) {
  const s = (i - e) * 0.5,
    u = (r - t) * 0.5,
    c = n * n,
    h = n * c;
  return (
    (2 * t - 2 * i + s + u) * h + (-3 * t + 3 * i - 2 * s - u) * c + s * n + t
  );
}
function K5(n, e) {
  const t = 1 - n;
  return t * t * e;
}
function J5(n, e) {
  return 2 * (1 - n) * n * e;
}
function e8(n, e) {
  return n * n * e;
}
function wa(n, e, t, i) {
  return K5(n, e) + J5(n, t) + e8(n, i);
}
function t8(n, e) {
  const t = 1 - n;
  return t * t * t * e;
}
function n8(n, e) {
  const t = 1 - n;
  return 3 * t * t * n * e;
}
function i8(n, e) {
  return 3 * (1 - n) * n * n * e;
}
function r8(n, e) {
  return n * n * n * e;
}
function Sa(n, e, t, i, r) {
  return t8(n, e) + n8(n, t) + i8(n, i) + r8(n, r);
}
class Z1 extends ar {
  constructor(e = new ke(), t = new ke(), i = new ke(), r = new ke()) {
    super(),
      (this.isCubicBezierCurve = !0),
      (this.type = "CubicBezierCurve"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i),
      (this.v3 = r);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2,
      c = this.v3;
    return i.set(Sa(e, r.x, s.x, u.x, c.x), Sa(e, r.y, s.y, u.y, c.y)), i;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class K1 extends ar {
  constructor(e = new te(), t = new te(), i = new te(), r = new te()) {
    super(),
      (this.isCubicBezierCurve3 = !0),
      (this.type = "CubicBezierCurve3"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i),
      (this.v3 = r);
  }
  getPoint(e, t = new te()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2,
      c = this.v3;
    return (
      i.set(
        Sa(e, r.x, s.x, u.x, c.x),
        Sa(e, r.y, s.y, u.y, c.y),
        Sa(e, r.z, s.z, u.z, c.z)
      ),
      i
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this.v3.copy(e.v3),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      (e.v3 = this.v3.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this.v3.fromArray(e.v3),
      this
    );
  }
}
class Lc extends ar {
  constructor(e = new ke(), t = new ke()) {
    super(),
      (this.isLineCurve = !0),
      (this.type = "LineCurve"),
      (this.v1 = e),
      (this.v2 = t);
  }
  getPoint(e, t = new ke()) {
    const i = t;
    return (
      e === 1
        ? i.copy(this.v2)
        : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(e).add(this.v1)),
      i
    );
  }
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new ke()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class s8 extends ar {
  constructor(e = new te(), t = new te()) {
    super(),
      (this.isLineCurve3 = !0),
      (this.type = "LineCurve3"),
      (this.v1 = e),
      (this.v2 = t);
  }
  getPoint(e, t = new te()) {
    const i = t;
    return (
      e === 1
        ? i.copy(this.v2)
        : (i.copy(this.v2).sub(this.v1), i.multiplyScalar(e).add(this.v1)),
      i
    );
  }
  getPointAt(e, t) {
    return this.getPoint(e, t);
  }
  getTangent(e, t = new te()) {
    return t.subVectors(this.v2, this.v1).normalize();
  }
  getTangentAt(e, t) {
    return this.getTangent(e, t);
  }
  copy(e) {
    return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
  }
  fromJSON(e) {
    return (
      super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
    );
  }
}
class J1 extends ar {
  constructor(e = new ke(), t = new ke(), i = new ke()) {
    super(),
      (this.isQuadraticBezierCurve = !0),
      (this.type = "QuadraticBezierCurve"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2;
    return i.set(wa(e, r.x, s.x, u.x), wa(e, r.y, s.y, u.y)), i;
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class Dc extends ar {
  constructor(e = new te(), t = new te(), i = new te()) {
    super(),
      (this.isQuadraticBezierCurve3 = !0),
      (this.type = "QuadraticBezierCurve3"),
      (this.v0 = e),
      (this.v1 = t),
      (this.v2 = i);
  }
  getPoint(e, t = new te()) {
    const i = t,
      r = this.v0,
      s = this.v1,
      u = this.v2;
    return (
      i.set(wa(e, r.x, s.x, u.x), wa(e, r.y, s.y, u.y), wa(e, r.z, s.z, u.z)), i
    );
  }
  copy(e) {
    return (
      super.copy(e),
      this.v0.copy(e.v0),
      this.v1.copy(e.v1),
      this.v2.copy(e.v2),
      this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.v0 = this.v0.toArray()),
      (e.v1 = this.v1.toArray()),
      (e.v2 = this.v2.toArray()),
      e
    );
  }
  fromJSON(e) {
    return (
      super.fromJSON(e),
      this.v0.fromArray(e.v0),
      this.v1.fromArray(e.v1),
      this.v2.fromArray(e.v2),
      this
    );
  }
}
class e2 extends ar {
  constructor(e = []) {
    super(),
      (this.isSplineCurve = !0),
      (this.type = "SplineCurve"),
      (this.points = e);
  }
  getPoint(e, t = new ke()) {
    const i = t,
      r = this.points,
      s = (r.length - 1) * e,
      u = Math.floor(s),
      c = s - u,
      h = r[u === 0 ? u : u - 1],
      p = r[u],
      g = r[u > r.length - 2 ? r.length - 1 : u + 1],
      v = r[u > r.length - 3 ? r.length - 1 : u + 2];
    return i.set(pd(c, h.x, p.x, g.x, v.x), pd(c, h.y, p.y, g.y, v.y)), i;
  }
  copy(e) {
    super.copy(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(r.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    e.points = [];
    for (let t = 0, i = this.points.length; t < i; t++) {
      const r = this.points[t];
      e.points.push(r.toArray());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.points = []);
    for (let t = 0, i = e.points.length; t < i; t++) {
      const r = e.points[t];
      this.points.push(new ke().fromArray(r));
    }
    return this;
  }
}
var Ic = Object.freeze({
  __proto__: null,
  ArcCurve: Y5,
  CatmullRomCurve3: Z5,
  CubicBezierCurve: Z1,
  CubicBezierCurve3: K1,
  EllipseCurve: Rc,
  LineCurve: Lc,
  LineCurve3: s8,
  QuadraticBezierCurve: J1,
  QuadraticBezierCurve3: Dc,
  SplineCurve: e2,
});
class o8 extends ar {
  constructor() {
    super(),
      (this.type = "CurvePath"),
      (this.curves = []),
      (this.autoClose = !1);
  }
  add(e) {
    this.curves.push(e);
  }
  closePath() {
    const e = this.curves[0].getPoint(0),
      t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new Lc(t, e));
  }
  getPoint(e, t) {
    const i = e * this.getLength(),
      r = this.getCurveLengths();
    let s = 0;
    for (; s < r.length; ) {
      if (r[s] >= i) {
        const u = r[s] - i,
          c = this.curves[s],
          h = c.getLength(),
          p = h === 0 ? 0 : 1 - u / h;
        return c.getPointAt(p, t);
      }
      s++;
    }
    return null;
  }
  getLength() {
    const e = this.getCurveLengths();
    return e[e.length - 1];
  }
  updateArcLengths() {
    (this.needsUpdate = !0), (this.cacheLengths = null), this.getCurveLengths();
  }
  getCurveLengths() {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
      return this.cacheLengths;
    const e = [];
    let t = 0;
    for (let i = 0, r = this.curves.length; i < r; i++)
      (t += this.curves[i].getLength()), e.push(t);
    return (this.cacheLengths = e), e;
  }
  getSpacedPoints(e = 40) {
    const t = [];
    for (let i = 0; i <= e; i++) t.push(this.getPoint(i / e));
    return this.autoClose && t.push(t[0]), t;
  }
  getPoints(e = 12) {
    const t = [];
    let i;
    for (let r = 0, s = this.curves; r < s.length; r++) {
      const u = s[r],
        c = u.isEllipseCurve
          ? e * 2
          : u.isLineCurve || u.isLineCurve3
          ? 1
          : u.isSplineCurve
          ? e * u.points.length
          : e,
        h = u.getPoints(c);
      for (let p = 0; p < h.length; p++) {
        const g = h[p];
        (i && i.equals(g)) || (t.push(g), (i = g));
      }
    }
    return (
      this.autoClose &&
        t.length > 1 &&
        !t[t.length - 1].equals(t[0]) &&
        t.push(t[0]),
      t
    );
  }
  copy(e) {
    super.copy(e), (this.curves = []);
    for (let t = 0, i = e.curves.length; t < i; t++) {
      const r = e.curves[t];
      this.curves.push(r.clone());
    }
    return (this.autoClose = e.autoClose), this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.autoClose = this.autoClose), (e.curves = []);
    for (let t = 0, i = this.curves.length; t < i; t++) {
      const r = this.curves[t];
      e.curves.push(r.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
    for (let t = 0, i = e.curves.length; t < i; t++) {
      const r = e.curves[t];
      this.curves.push(new Ic[r.type]().fromJSON(r));
    }
    return this;
  }
}
let Du = class extends o8 {
  constructor(e) {
    super(),
      (this.type = "Path"),
      (this.currentPoint = new ke()),
      e && this.setFromPoints(e);
  }
  setFromPoints(e) {
    this.moveTo(e[0].x, e[0].y);
    for (let t = 1, i = e.length; t < i; t++) this.lineTo(e[t].x, e[t].y);
    return this;
  }
  moveTo(e, t) {
    return this.currentPoint.set(e, t), this;
  }
  lineTo(e, t) {
    const i = new Lc(this.currentPoint.clone(), new ke(e, t));
    return this.curves.push(i), this.currentPoint.set(e, t), this;
  }
  quadraticCurveTo(e, t, i, r) {
    const s = new J1(this.currentPoint.clone(), new ke(e, t), new ke(i, r));
    return this.curves.push(s), this.currentPoint.set(i, r), this;
  }
  bezierCurveTo(e, t, i, r, s, u) {
    const c = new Z1(
      this.currentPoint.clone(),
      new ke(e, t),
      new ke(i, r),
      new ke(s, u)
    );
    return this.curves.push(c), this.currentPoint.set(s, u), this;
  }
  splineThru(e) {
    const t = [this.currentPoint.clone()].concat(e),
      i = new e2(t);
    return this.curves.push(i), this.currentPoint.copy(e[e.length - 1]), this;
  }
  arc(e, t, i, r, s, u) {
    const c = this.currentPoint.x,
      h = this.currentPoint.y;
    return this.absarc(e + c, t + h, i, r, s, u), this;
  }
  absarc(e, t, i, r, s, u) {
    return this.absellipse(e, t, i, i, r, s, u), this;
  }
  ellipse(e, t, i, r, s, u, c, h) {
    const p = this.currentPoint.x,
      g = this.currentPoint.y;
    return this.absellipse(e + p, t + g, i, r, s, u, c, h), this;
  }
  absellipse(e, t, i, r, s, u, c, h) {
    const p = new Rc(e, t, i, r, s, u, c, h);
    if (this.curves.length > 0) {
      const v = p.getPoint(0);
      v.equals(this.currentPoint) || this.lineTo(v.x, v.y);
    }
    this.curves.push(p);
    const g = p.getPoint(1);
    return this.currentPoint.copy(g), this;
  }
  copy(e) {
    return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (e.currentPoint = this.currentPoint.toArray()), e;
  }
  fromJSON(e) {
    return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
  }
};
class Oc extends fn {
  constructor(e = 1, t = 32, i = 0, r = Math.PI * 2) {
    super(),
      (this.type = "CircleGeometry"),
      (this.parameters = {
        radius: e,
        segments: t,
        thetaStart: i,
        thetaLength: r,
      }),
      (t = Math.max(3, t));
    const s = [],
      u = [],
      c = [],
      h = [],
      p = new te(),
      g = new ke();
    u.push(0, 0, 0), c.push(0, 0, 1), h.push(0.5, 0.5);
    for (let v = 0, x = 3; v <= t; v++, x += 3) {
      const M = i + (v / t) * r;
      (p.x = e * Math.cos(M)),
        (p.y = e * Math.sin(M)),
        u.push(p.x, p.y, p.z),
        c.push(0, 0, 1),
        (g.x = (u[x] / e + 1) / 2),
        (g.y = (u[x + 1] / e + 1) / 2),
        h.push(g.x, g.y);
    }
    for (let v = 1; v <= t; v++) s.push(v, v + 1, 0);
    this.setIndex(s),
      this.setAttribute("position", new Jt(u, 3)),
      this.setAttribute("normal", new Jt(c, 3)),
      this.setAttribute("uv", new Jt(h, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new Oc(e.radius, e.segments, e.thetaStart, e.thetaLength);
  }
}
class qc extends fn {
  constructor(
    e = 1,
    t = 1,
    i = 1,
    r = 32,
    s = 1,
    u = !1,
    c = 0,
    h = Math.PI * 2
  ) {
    super(),
      (this.type = "CylinderGeometry"),
      (this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: i,
        radialSegments: r,
        heightSegments: s,
        openEnded: u,
        thetaStart: c,
        thetaLength: h,
      });
    const p = this;
    (r = Math.floor(r)), (s = Math.floor(s));
    const g = [],
      v = [],
      x = [],
      M = [];
    let w = 0;
    const C = [],
      E = i / 2;
    let b = 0;
    L(),
      u === !1 && (e > 0 && S(!0), t > 0 && S(!1)),
      this.setIndex(g),
      this.setAttribute("position", new Jt(v, 3)),
      this.setAttribute("normal", new Jt(x, 3)),
      this.setAttribute("uv", new Jt(M, 2));
    function L() {
      const R = new te(),
        U = new te();
      let q = 0;
      const I = (t - e) / i;
      for (let N = 0; N <= s; N++) {
        const D = [],
          O = N / s,
          k = O * (t - e) + e;
        for (let $ = 0; $ <= r; $++) {
          const H = $ / r,
            Q = H * h + c,
            F = Math.sin(Q),
            J = Math.cos(Q);
          (U.x = k * F),
            (U.y = -O * i + E),
            (U.z = k * J),
            v.push(U.x, U.y, U.z),
            R.set(F, I, J).normalize(),
            x.push(R.x, R.y, R.z),
            M.push(H, 1 - O),
            D.push(w++);
        }
        C.push(D);
      }
      for (let N = 0; N < r; N++)
        for (let D = 0; D < s; D++) {
          const O = C[D][N],
            k = C[D + 1][N],
            $ = C[D + 1][N + 1],
            H = C[D][N + 1];
          g.push(O, k, H), g.push(k, $, H), (q += 6);
        }
      p.addGroup(b, q, 0), (b += q);
    }
    function S(R) {
      const U = w,
        q = new ke(),
        I = new te();
      let N = 0;
      const D = R === !0 ? e : t,
        O = R === !0 ? 1 : -1;
      for (let $ = 1; $ <= r; $++)
        v.push(0, E * O, 0), x.push(0, O, 0), M.push(0.5, 0.5), w++;
      const k = w;
      for (let $ = 0; $ <= r; $++) {
        const Q = ($ / r) * h + c,
          F = Math.cos(Q),
          J = Math.sin(Q);
        (I.x = D * J),
          (I.y = E * O),
          (I.z = D * F),
          v.push(I.x, I.y, I.z),
          x.push(0, O, 0),
          (q.x = F * 0.5 + 0.5),
          (q.y = J * 0.5 * O + 0.5),
          M.push(q.x, q.y),
          w++;
      }
      for (let $ = 0; $ < r; $++) {
        const H = U + $,
          Q = k + $;
        R === !0 ? g.push(Q, Q + 1, H) : g.push(Q + 1, Q, H), (N += 3);
      }
      p.addGroup(b, N, R === !0 ? 1 : 2), (b += N);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new qc(
      e.radiusTop,
      e.radiusBottom,
      e.height,
      e.radialSegments,
      e.heightSegments,
      e.openEnded,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class nl extends Du {
  constructor(e) {
    super(e), (this.uuid = pr()), (this.type = "Shape"), (this.holes = []);
  }
  getPointsHoles(e) {
    const t = [];
    for (let i = 0, r = this.holes.length; i < r; i++)
      t[i] = this.holes[i].getPoints(e);
    return t;
  }
  extractPoints(e) {
    return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
  }
  copy(e) {
    super.copy(e), (this.holes = []);
    for (let t = 0, i = e.holes.length; t < i; t++) {
      const r = e.holes[t];
      this.holes.push(r.clone());
    }
    return this;
  }
  toJSON() {
    const e = super.toJSON();
    (e.uuid = this.uuid), (e.holes = []);
    for (let t = 0, i = this.holes.length; t < i; t++) {
      const r = this.holes[t];
      e.holes.push(r.toJSON());
    }
    return e;
  }
  fromJSON(e) {
    super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
    for (let t = 0, i = e.holes.length; t < i; t++) {
      const r = e.holes[t];
      this.holes.push(new Du().fromJSON(r));
    }
    return this;
  }
}
const a8 = {
  triangulate: function (n, e, t = 2) {
    const i = e && e.length,
      r = i ? e[0] * t : n.length;
    let s = t2(n, 0, r, t, !0);
    const u = [];
    if (!s || s.next === s.prev) return u;
    let c, h, p, g, v, x, M;
    if ((i && (s = f8(n, e, s, t)), n.length > 80 * t)) {
      (c = p = n[0]), (h = g = n[1]);
      for (let w = t; w < r; w += t)
        (v = n[w]),
          (x = n[w + 1]),
          v < c && (c = v),
          x < h && (h = x),
          v > p && (p = v),
          x > g && (g = x);
      (M = Math.max(p - c, g - h)), (M = M !== 0 ? 32767 / M : 0);
    }
    return Ia(s, u, t, c, h, M, 0), u;
  },
};
function t2(n, e, t, i, r) {
  let s, u;
  if (r === M8(n, e, t, i) > 0)
    for (s = e; s < t; s += i) u = md(s, n[s], n[s + 1], u);
  else for (s = t - i; s >= e; s -= i) u = md(s, n[s], n[s + 1], u);
  return u && t0(u, u.next) && (qa(u), (u = u.next)), u;
}
function zs(n, e) {
  if (!n) return n;
  e || (e = n);
  let t = n,
    i;
  do
    if (
      ((i = !1), !t.steiner && (t0(t, t.next) || _n(t.prev, t, t.next) === 0))
    ) {
      if ((qa(t), (t = e = t.prev), t === t.next)) break;
      i = !0;
    } else t = t.next;
  while (i || t !== e);
  return e;
}
function Ia(n, e, t, i, r, s, u) {
  if (!n) return;
  !u && s && g8(n, i, r, s);
  let c = n,
    h,
    p;
  for (; n.prev !== n.next; ) {
    if (((h = n.prev), (p = n.next), s ? l8(n, i, r, s) : A8(n))) {
      e.push((h.i / t) | 0),
        e.push((n.i / t) | 0),
        e.push((p.i / t) | 0),
        qa(n),
        (n = p.next),
        (c = p.next);
      continue;
    }
    if (((n = p), n === c)) {
      u
        ? u === 1
          ? ((n = u8(zs(n), e, t)), Ia(n, e, t, i, r, s, 2))
          : u === 2 && c8(n, e, t, i, r, s)
        : Ia(zs(n), e, t, i, r, s, 1);
      break;
    }
  }
}
function A8(n) {
  const e = n.prev,
    t = n,
    i = n.next;
  if (_n(e, t, i) >= 0) return !1;
  const r = e.x,
    s = t.x,
    u = i.x,
    c = e.y,
    h = t.y,
    p = i.y,
    g = r < s ? (r < u ? r : u) : s < u ? s : u,
    v = c < h ? (c < p ? c : p) : h < p ? h : p,
    x = r > s ? (r > u ? r : u) : s > u ? s : u,
    M = c > h ? (c > p ? c : p) : h > p ? h : p;
  let w = i.next;
  for (; w !== e; ) {
    if (
      w.x >= g &&
      w.x <= x &&
      w.y >= v &&
      w.y <= M &&
      To(r, c, s, h, u, p, w.x, w.y) &&
      _n(w.prev, w, w.next) >= 0
    )
      return !1;
    w = w.next;
  }
  return !0;
}
function l8(n, e, t, i) {
  const r = n.prev,
    s = n,
    u = n.next;
  if (_n(r, s, u) >= 0) return !1;
  const c = r.x,
    h = s.x,
    p = u.x,
    g = r.y,
    v = s.y,
    x = u.y,
    M = c < h ? (c < p ? c : p) : h < p ? h : p,
    w = g < v ? (g < x ? g : x) : v < x ? v : x,
    C = c > h ? (c > p ? c : p) : h > p ? h : p,
    E = g > v ? (g > x ? g : x) : v > x ? v : x,
    b = Iu(M, w, e, t, i),
    L = Iu(C, E, e, t, i);
  let S = n.prevZ,
    R = n.nextZ;
  for (; S && S.z >= b && R && R.z <= L; ) {
    if (
      (S.x >= M &&
        S.x <= C &&
        S.y >= w &&
        S.y <= E &&
        S !== r &&
        S !== u &&
        To(c, g, h, v, p, x, S.x, S.y) &&
        _n(S.prev, S, S.next) >= 0) ||
      ((S = S.prevZ),
      R.x >= M &&
        R.x <= C &&
        R.y >= w &&
        R.y <= E &&
        R !== r &&
        R !== u &&
        To(c, g, h, v, p, x, R.x, R.y) &&
        _n(R.prev, R, R.next) >= 0)
    )
      return !1;
    R = R.nextZ;
  }
  for (; S && S.z >= b; ) {
    if (
      S.x >= M &&
      S.x <= C &&
      S.y >= w &&
      S.y <= E &&
      S !== r &&
      S !== u &&
      To(c, g, h, v, p, x, S.x, S.y) &&
      _n(S.prev, S, S.next) >= 0
    )
      return !1;
    S = S.prevZ;
  }
  for (; R && R.z <= L; ) {
    if (
      R.x >= M &&
      R.x <= C &&
      R.y >= w &&
      R.y <= E &&
      R !== r &&
      R !== u &&
      To(c, g, h, v, p, x, R.x, R.y) &&
      _n(R.prev, R, R.next) >= 0
    )
      return !1;
    R = R.nextZ;
  }
  return !0;
}
function u8(n, e, t) {
  let i = n;
  do {
    const r = i.prev,
      s = i.next.next;
    !t0(r, s) &&
      n2(r, i, i.next, s) &&
      Oa(r, s) &&
      Oa(s, r) &&
      (e.push((r.i / t) | 0),
      e.push((i.i / t) | 0),
      e.push((s.i / t) | 0),
      qa(i),
      qa(i.next),
      (i = n = s)),
      (i = i.next);
  } while (i !== n);
  return zs(i);
}
function c8(n, e, t, i, r, s) {
  let u = n;
  do {
    let c = u.next.next;
    for (; c !== u.prev; ) {
      if (u.i !== c.i && x8(u, c)) {
        let h = i2(u, c);
        (u = zs(u, u.next)),
          (h = zs(h, h.next)),
          Ia(u, e, t, i, r, s, 0),
          Ia(h, e, t, i, r, s, 0);
        return;
      }
      c = c.next;
    }
    u = u.next;
  } while (u !== n);
}
function f8(n, e, t, i) {
  const r = [];
  let s, u, c, h, p;
  for (s = 0, u = e.length; s < u; s++)
    (c = e[s] * i),
      (h = s < u - 1 ? e[s + 1] * i : n.length),
      (p = t2(n, c, h, i, !1)),
      p === p.next && (p.steiner = !0),
      r.push(_8(p));
  for (r.sort(h8), s = 0; s < r.length; s++) t = d8(r[s], t);
  return t;
}
function h8(n, e) {
  return n.x - e.x;
}
function d8(n, e) {
  const t = p8(n, e);
  if (!t) return e;
  const i = i2(t, n);
  return zs(i, i.next), zs(t, t.next);
}
function p8(n, e) {
  let t = e,
    i = -1 / 0,
    r;
  const s = n.x,
    u = n.y;
  do {
    if (u <= t.y && u >= t.next.y && t.next.y !== t.y) {
      const x = t.x + ((u - t.y) * (t.next.x - t.x)) / (t.next.y - t.y);
      if (
        x <= s &&
        x > i &&
        ((i = x), (r = t.x < t.next.x ? t : t.next), x === s)
      )
        return r;
    }
    t = t.next;
  } while (t !== e);
  if (!r) return null;
  const c = r,
    h = r.x,
    p = r.y;
  let g = 1 / 0,
    v;
  t = r;
  do
    s >= t.x &&
      t.x >= h &&
      s !== t.x &&
      To(u < p ? s : i, u, h, p, u < p ? i : s, u, t.x, t.y) &&
      ((v = Math.abs(u - t.y) / (s - t.x)),
      Oa(t, n) &&
        (v < g || (v === g && (t.x > r.x || (t.x === r.x && m8(r, t))))) &&
        ((r = t), (g = v))),
      (t = t.next);
  while (t !== c);
  return r;
}
function m8(n, e) {
  return _n(n.prev, n, e.prev) < 0 && _n(e.next, n, n.next) < 0;
}
function g8(n, e, t, i) {
  let r = n;
  do
    r.z === 0 && (r.z = Iu(r.x, r.y, e, t, i)),
      (r.prevZ = r.prev),
      (r.nextZ = r.next),
      (r = r.next);
  while (r !== n);
  (r.prevZ.nextZ = null), (r.prevZ = null), v8(r);
}
function v8(n) {
  let e,
    t,
    i,
    r,
    s,
    u,
    c,
    h,
    p = 1;
  do {
    for (t = n, n = null, s = null, u = 0; t; ) {
      for (u++, i = t, c = 0, e = 0; e < p && (c++, (i = i.nextZ), !!i); e++);
      for (h = p; c > 0 || (h > 0 && i); )
        c !== 0 && (h === 0 || !i || t.z <= i.z)
          ? ((r = t), (t = t.nextZ), c--)
          : ((r = i), (i = i.nextZ), h--),
          s ? (s.nextZ = r) : (n = r),
          (r.prevZ = s),
          (s = r);
      t = i;
    }
    (s.nextZ = null), (p *= 2);
  } while (u > 1);
  return n;
}
function Iu(n, e, t, i, r) {
  return (
    (n = ((n - t) * r) | 0),
    (e = ((e - i) * r) | 0),
    (n = (n | (n << 8)) & 16711935),
    (n = (n | (n << 4)) & 252645135),
    (n = (n | (n << 2)) & 858993459),
    (n = (n | (n << 1)) & 1431655765),
    (e = (e | (e << 8)) & 16711935),
    (e = (e | (e << 4)) & 252645135),
    (e = (e | (e << 2)) & 858993459),
    (e = (e | (e << 1)) & 1431655765),
    n | (e << 1)
  );
}
function _8(n) {
  let e = n,
    t = n;
  do (e.x < t.x || (e.x === t.x && e.y < t.y)) && (t = e), (e = e.next);
  while (e !== n);
  return t;
}
function To(n, e, t, i, r, s, u, c) {
  return (
    (r - u) * (e - c) >= (n - u) * (s - c) &&
    (n - u) * (i - c) >= (t - u) * (e - c) &&
    (t - u) * (s - c) >= (r - u) * (i - c)
  );
}
function x8(n, e) {
  return (
    n.next.i !== e.i &&
    n.prev.i !== e.i &&
    !y8(n, e) &&
    ((Oa(n, e) &&
      Oa(e, n) &&
      b8(n, e) &&
      (_n(n.prev, n, e.prev) || _n(n, e.prev, e))) ||
      (t0(n, e) && _n(n.prev, n, n.next) > 0 && _n(e.prev, e, e.next) > 0))
  );
}
function _n(n, e, t) {
  return (e.y - n.y) * (t.x - e.x) - (e.x - n.x) * (t.y - e.y);
}
function t0(n, e) {
  return n.x === e.x && n.y === e.y;
}
function n2(n, e, t, i) {
  const r = LA(_n(n, e, t)),
    s = LA(_n(n, e, i)),
    u = LA(_n(t, i, n)),
    c = LA(_n(t, i, e));
  return !!(
    (r !== s && u !== c) ||
    (r === 0 && PA(n, t, e)) ||
    (s === 0 && PA(n, i, e)) ||
    (u === 0 && PA(t, n, i)) ||
    (c === 0 && PA(t, e, i))
  );
}
function PA(n, e, t) {
  return (
    e.x <= Math.max(n.x, t.x) &&
    e.x >= Math.min(n.x, t.x) &&
    e.y <= Math.max(n.y, t.y) &&
    e.y >= Math.min(n.y, t.y)
  );
}
function LA(n) {
  return n > 0 ? 1 : n < 0 ? -1 : 0;
}
function y8(n, e) {
  let t = n;
  do {
    if (
      t.i !== n.i &&
      t.next.i !== n.i &&
      t.i !== e.i &&
      t.next.i !== e.i &&
      n2(t, t.next, n, e)
    )
      return !0;
    t = t.next;
  } while (t !== n);
  return !1;
}
function Oa(n, e) {
  return _n(n.prev, n, n.next) < 0
    ? _n(n, e, n.next) >= 0 && _n(n, n.prev, e) >= 0
    : _n(n, e, n.prev) < 0 || _n(n, n.next, e) < 0;
}
function b8(n, e) {
  let t = n,
    i = !1;
  const r = (n.x + e.x) / 2,
    s = (n.y + e.y) / 2;
  do
    t.y > s != t.next.y > s &&
      t.next.y !== t.y &&
      r < ((t.next.x - t.x) * (s - t.y)) / (t.next.y - t.y) + t.x &&
      (i = !i),
      (t = t.next);
  while (t !== n);
  return i;
}
function i2(n, e) {
  const t = new Ou(n.i, n.x, n.y),
    i = new Ou(e.i, e.x, e.y),
    r = n.next,
    s = e.prev;
  return (
    (n.next = e),
    (e.prev = n),
    (t.next = r),
    (r.prev = t),
    (i.next = t),
    (t.prev = i),
    (s.next = i),
    (i.prev = s),
    i
  );
}
function md(n, e, t, i) {
  const r = new Ou(n, e, t);
  return (
    i
      ? ((r.next = i.next), (r.prev = i), (i.next.prev = r), (i.next = r))
      : ((r.prev = r), (r.next = r)),
    r
  );
}
function qa(n) {
  (n.next.prev = n.prev),
    (n.prev.next = n.next),
    n.prevZ && (n.prevZ.nextZ = n.nextZ),
    n.nextZ && (n.nextZ.prevZ = n.prevZ);
}
function Ou(n, e, t) {
  (this.i = n),
    (this.x = e),
    (this.y = t),
    (this.prev = null),
    (this.next = null),
    (this.z = 0),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
function M8(n, e, t, i) {
  let r = 0;
  for (let s = e, u = t - i; s < t; s += i)
    (r += (n[u] - n[s]) * (n[s + 1] + n[u + 1])), (u = s);
  return r;
}
class qo {
  static area(e) {
    const t = e.length;
    let i = 0;
    for (let r = t - 1, s = 0; s < t; r = s++)
      i += e[r].x * e[s].y - e[s].x * e[r].y;
    return i * 0.5;
  }
  static isClockWise(e) {
    return qo.area(e) < 0;
  }
  static triangulateShape(e, t) {
    const i = [],
      r = [],
      s = [];
    gd(e), vd(i, e);
    let u = e.length;
    t.forEach(gd);
    for (let h = 0; h < t.length; h++)
      r.push(u), (u += t[h].length), vd(i, t[h]);
    const c = a8.triangulate(i, r);
    for (let h = 0; h < c.length; h += 3) s.push(c.slice(h, h + 3));
    return s;
  }
}
function gd(n) {
  const e = n.length;
  e > 2 && n[e - 1].equals(n[0]) && n.pop();
}
function vd(n, e) {
  for (let t = 0; t < e.length; t++) n.push(e[t].x), n.push(e[t].y);
}
class Uc extends fn {
  constructor(
    e = new nl([
      new ke(0.5, 0.5),
      new ke(-0.5, 0.5),
      new ke(-0.5, -0.5),
      new ke(0.5, -0.5),
    ]),
    t = {}
  ) {
    super(),
      (this.type = "ExtrudeGeometry"),
      (this.parameters = { shapes: e, options: t }),
      (e = Array.isArray(e) ? e : [e]);
    const i = this,
      r = [],
      s = [];
    for (let c = 0, h = e.length; c < h; c++) {
      const p = e[c];
      u(p);
    }
    this.setAttribute("position", new Jt(r, 3)),
      this.setAttribute("uv", new Jt(s, 2)),
      this.computeVertexNormals();
    function u(c) {
      const h = [],
        p = t.curveSegments !== void 0 ? t.curveSegments : 12,
        g = t.steps !== void 0 ? t.steps : 1,
        v = t.depth !== void 0 ? t.depth : 1;
      let x = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0,
        M = t.bevelThickness !== void 0 ? t.bevelThickness : 0.2,
        w = t.bevelSize !== void 0 ? t.bevelSize : M - 0.1,
        C = t.bevelOffset !== void 0 ? t.bevelOffset : 0,
        E = t.bevelSegments !== void 0 ? t.bevelSegments : 3;
      const b = t.extrudePath,
        L = t.UVGenerator !== void 0 ? t.UVGenerator : E8;
      let S,
        R = !1,
        U,
        q,
        I,
        N;
      b &&
        ((S = b.getSpacedPoints(g)),
        (R = !0),
        (x = !1),
        (U = b.computeFrenetFrames(g, !1)),
        (q = new te()),
        (I = new te()),
        (N = new te())),
        x || ((E = 0), (M = 0), (w = 0), (C = 0));
      const D = c.extractPoints(p);
      let O = D.shape;
      const k = D.holes;
      if (!qo.isClockWise(O)) {
        O = O.reverse();
        for (let ne = 0, Ge = k.length; ne < Ge; ne++) {
          const Ce = k[ne];
          qo.isClockWise(Ce) && (k[ne] = Ce.reverse());
        }
      }
      const H = qo.triangulateShape(O, k),
        Q = O;
      for (let ne = 0, Ge = k.length; ne < Ge; ne++) {
        const Ce = k[ne];
        O = O.concat(Ce);
      }
      function F(ne, Ge, Ce) {
        return (
          Ge || console.error("THREE.ExtrudeGeometry: vec does not exist"),
          ne.clone().addScaledVector(Ge, Ce)
        );
      }
      const J = O.length,
        K = H.length;
      function ie(ne, Ge, Ce) {
        let Fe, Le, At;
        const it = ne.x - Ge.x,
          at = ne.y - Ge.y,
          mt = Ce.x - ne.x,
          xt = Ce.y - ne.y,
          nn = it * it + at * at,
          Y = it * xt - at * mt;
        if (Math.abs(Y) > Number.EPSILON) {
          const G = Math.sqrt(nn),
            xe = Math.sqrt(mt * mt + xt * xt),
            Be = Ge.x - at / G,
            Ie = Ge.y + it / G,
            Ne = Ce.x - xt / xe,
            ut = Ce.y + mt / xe,
            ze = ((Ne - Be) * xt - (ut - Ie) * mt) / (it * xt - at * mt);
          (Fe = Be + it * ze - ne.x), (Le = Ie + at * ze - ne.y);
          const be = Fe * Fe + Le * Le;
          if (be <= 2) return new ke(Fe, Le);
          At = Math.sqrt(be / 2);
        } else {
          let G = !1;
          it > Number.EPSILON
            ? mt > Number.EPSILON && (G = !0)
            : it < -Number.EPSILON
            ? mt < -Number.EPSILON && (G = !0)
            : Math.sign(at) === Math.sign(xt) && (G = !0),
            G
              ? ((Fe = -at), (Le = it), (At = Math.sqrt(nn)))
              : ((Fe = it), (Le = at), (At = Math.sqrt(nn / 2)));
        }
        return new ke(Fe / At, Le / At);
      }
      const he = [];
      for (
        let ne = 0, Ge = Q.length, Ce = Ge - 1, Fe = ne + 1;
        ne < Ge;
        ne++, Ce++, Fe++
      )
        Ce === Ge && (Ce = 0),
          Fe === Ge && (Fe = 0),
          (he[ne] = ie(Q[ne], Q[Ce], Q[Fe]));
      const ce = [];
      let oe,
        de = he.concat();
      for (let ne = 0, Ge = k.length; ne < Ge; ne++) {
        const Ce = k[ne];
        oe = [];
        for (
          let Fe = 0, Le = Ce.length, At = Le - 1, it = Fe + 1;
          Fe < Le;
          Fe++, At++, it++
        )
          At === Le && (At = 0),
            it === Le && (it = 0),
            (oe[Fe] = ie(Ce[Fe], Ce[At], Ce[it]));
        ce.push(oe), (de = de.concat(oe));
      }
      for (let ne = 0; ne < E; ne++) {
        const Ge = ne / E,
          Ce = M * Math.cos((Ge * Math.PI) / 2),
          Fe = w * Math.sin((Ge * Math.PI) / 2) + C;
        for (let Le = 0, At = Q.length; Le < At; Le++) {
          const it = F(Q[Le], he[Le], Fe);
          nt(it.x, it.y, -Ce);
        }
        for (let Le = 0, At = k.length; Le < At; Le++) {
          const it = k[Le];
          oe = ce[Le];
          for (let at = 0, mt = it.length; at < mt; at++) {
            const xt = F(it[at], oe[at], Fe);
            nt(xt.x, xt.y, -Ce);
          }
        }
      }
      const Se = w + C;
      for (let ne = 0; ne < J; ne++) {
        const Ge = x ? F(O[ne], de[ne], Se) : O[ne];
        R
          ? (I.copy(U.normals[0]).multiplyScalar(Ge.x),
            q.copy(U.binormals[0]).multiplyScalar(Ge.y),
            N.copy(S[0]).add(I).add(q),
            nt(N.x, N.y, N.z))
          : nt(Ge.x, Ge.y, 0);
      }
      for (let ne = 1; ne <= g; ne++)
        for (let Ge = 0; Ge < J; Ge++) {
          const Ce = x ? F(O[Ge], de[Ge], Se) : O[Ge];
          R
            ? (I.copy(U.normals[ne]).multiplyScalar(Ce.x),
              q.copy(U.binormals[ne]).multiplyScalar(Ce.y),
              N.copy(S[ne]).add(I).add(q),
              nt(N.x, N.y, N.z))
            : nt(Ce.x, Ce.y, (v / g) * ne);
        }
      for (let ne = E - 1; ne >= 0; ne--) {
        const Ge = ne / E,
          Ce = M * Math.cos((Ge * Math.PI) / 2),
          Fe = w * Math.sin((Ge * Math.PI) / 2) + C;
        for (let Le = 0, At = Q.length; Le < At; Le++) {
          const it = F(Q[Le], he[Le], Fe);
          nt(it.x, it.y, v + Ce);
        }
        for (let Le = 0, At = k.length; Le < At; Le++) {
          const it = k[Le];
          oe = ce[Le];
          for (let at = 0, mt = it.length; at < mt; at++) {
            const xt = F(it[at], oe[at], Fe);
            R
              ? nt(xt.x, xt.y + S[g - 1].y, S[g - 1].x + Ce)
              : nt(xt.x, xt.y, v + Ce);
          }
        }
      }
      Pe(), Oe();
      function Pe() {
        const ne = r.length / 3;
        if (x) {
          let Ge = 0,
            Ce = J * Ge;
          for (let Fe = 0; Fe < K; Fe++) {
            const Le = H[Fe];
            ot(Le[2] + Ce, Le[1] + Ce, Le[0] + Ce);
          }
          (Ge = g + E * 2), (Ce = J * Ge);
          for (let Fe = 0; Fe < K; Fe++) {
            const Le = H[Fe];
            ot(Le[0] + Ce, Le[1] + Ce, Le[2] + Ce);
          }
        } else {
          for (let Ge = 0; Ge < K; Ge++) {
            const Ce = H[Ge];
            ot(Ce[2], Ce[1], Ce[0]);
          }
          for (let Ge = 0; Ge < K; Ge++) {
            const Ce = H[Ge];
            ot(Ce[0] + J * g, Ce[1] + J * g, Ce[2] + J * g);
          }
        }
        i.addGroup(ne, r.length / 3 - ne, 0);
      }
      function Oe() {
        const ne = r.length / 3;
        let Ge = 0;
        $e(Q, Ge), (Ge += Q.length);
        for (let Ce = 0, Fe = k.length; Ce < Fe; Ce++) {
          const Le = k[Ce];
          $e(Le, Ge), (Ge += Le.length);
        }
        i.addGroup(ne, r.length / 3 - ne, 1);
      }
      function $e(ne, Ge) {
        let Ce = ne.length;
        for (; --Ce >= 0; ) {
          const Fe = Ce;
          let Le = Ce - 1;
          Le < 0 && (Le = ne.length - 1);
          for (let At = 0, it = g + E * 2; At < it; At++) {
            const at = J * At,
              mt = J * (At + 1),
              xt = Ge + Fe + at,
              nn = Ge + Le + at,
              Y = Ge + Le + mt,
              G = Ge + Fe + mt;
            Rt(xt, nn, Y, G);
          }
        }
      }
      function nt(ne, Ge, Ce) {
        h.push(ne), h.push(Ge), h.push(Ce);
      }
      function ot(ne, Ge, Ce) {
        Ot(ne), Ot(Ge), Ot(Ce);
        const Fe = r.length / 3,
          Le = L.generateTopUV(i, r, Fe - 3, Fe - 2, Fe - 1);
        ct(Le[0]), ct(Le[1]), ct(Le[2]);
      }
      function Rt(ne, Ge, Ce, Fe) {
        Ot(ne), Ot(Ge), Ot(Fe), Ot(Ge), Ot(Ce), Ot(Fe);
        const Le = r.length / 3,
          At = L.generateSideWallUV(i, r, Le - 6, Le - 3, Le - 2, Le - 1);
        ct(At[0]), ct(At[1]), ct(At[3]), ct(At[1]), ct(At[2]), ct(At[3]);
      }
      function Ot(ne) {
        r.push(h[ne * 3 + 0]), r.push(h[ne * 3 + 1]), r.push(h[ne * 3 + 2]);
      }
      function ct(ne) {
        s.push(ne.x), s.push(ne.y);
      }
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON(),
      t = this.parameters.shapes,
      i = this.parameters.options;
    return w8(t, i, e);
  }
  static fromJSON(e, t) {
    const i = [];
    for (let s = 0, u = e.shapes.length; s < u; s++) {
      const c = t[e.shapes[s]];
      i.push(c);
    }
    const r = e.options.extrudePath;
    return (
      r !== void 0 && (e.options.extrudePath = new Ic[r.type]().fromJSON(r)),
      new Uc(i, e.options)
    );
  }
}
const E8 = {
  generateTopUV: function (n, e, t, i, r) {
    const s = e[t * 3],
      u = e[t * 3 + 1],
      c = e[i * 3],
      h = e[i * 3 + 1],
      p = e[r * 3],
      g = e[r * 3 + 1];
    return [new ke(s, u), new ke(c, h), new ke(p, g)];
  },
  generateSideWallUV: function (n, e, t, i, r, s) {
    const u = e[t * 3],
      c = e[t * 3 + 1],
      h = e[t * 3 + 2],
      p = e[i * 3],
      g = e[i * 3 + 1],
      v = e[i * 3 + 2],
      x = e[r * 3],
      M = e[r * 3 + 1],
      w = e[r * 3 + 2],
      C = e[s * 3],
      E = e[s * 3 + 1],
      b = e[s * 3 + 2];
    return Math.abs(c - g) < Math.abs(u - p)
      ? [new ke(u, 1 - h), new ke(p, 1 - v), new ke(x, 1 - w), new ke(C, 1 - b)]
      : [
          new ke(c, 1 - h),
          new ke(g, 1 - v),
          new ke(M, 1 - w),
          new ke(E, 1 - b),
        ];
  },
};
function w8(n, e, t) {
  if (((t.shapes = []), Array.isArray(n)))
    for (let i = 0, r = n.length; i < r; i++) {
      const s = n[i];
      t.shapes.push(s.uuid);
    }
  else t.shapes.push(n.uuid);
  return (
    (t.options = Object.assign({}, e)),
    e.extrudePath !== void 0 &&
      (t.options.extrudePath = e.extrudePath.toJSON()),
    t
  );
}
class $s extends fn {
  constructor(
    e = 1,
    t = 32,
    i = 16,
    r = 0,
    s = Math.PI * 2,
    u = 0,
    c = Math.PI
  ) {
    super(),
      (this.type = "SphereGeometry"),
      (this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: i,
        phiStart: r,
        phiLength: s,
        thetaStart: u,
        thetaLength: c,
      }),
      (t = Math.max(3, Math.floor(t))),
      (i = Math.max(2, Math.floor(i)));
    const h = Math.min(u + c, Math.PI);
    let p = 0;
    const g = [],
      v = new te(),
      x = new te(),
      M = [],
      w = [],
      C = [],
      E = [];
    for (let b = 0; b <= i; b++) {
      const L = [],
        S = b / i;
      let R = 0;
      b === 0 && u === 0
        ? (R = 0.5 / t)
        : b === i && h === Math.PI && (R = -0.5 / t);
      for (let U = 0; U <= t; U++) {
        const q = U / t;
        (v.x = -e * Math.cos(r + q * s) * Math.sin(u + S * c)),
          (v.y = e * Math.cos(u + S * c)),
          (v.z = e * Math.sin(r + q * s) * Math.sin(u + S * c)),
          w.push(v.x, v.y, v.z),
          x.copy(v).normalize(),
          C.push(x.x, x.y, x.z),
          E.push(q + R, 1 - S),
          L.push(p++);
      }
      g.push(L);
    }
    for (let b = 0; b < i; b++)
      for (let L = 0; L < t; L++) {
        const S = g[b][L + 1],
          R = g[b][L],
          U = g[b + 1][L],
          q = g[b + 1][L + 1];
        (b !== 0 || u > 0) && M.push(S, R, q),
          (b !== i - 1 || h < Math.PI) && M.push(R, U, q);
      }
    this.setIndex(M),
      this.setAttribute("position", new Jt(w, 3)),
      this.setAttribute("normal", new Jt(C, 3)),
      this.setAttribute("uv", new Jt(E, 2));
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  static fromJSON(e) {
    return new $s(
      e.radius,
      e.widthSegments,
      e.heightSegments,
      e.phiStart,
      e.phiLength,
      e.thetaStart,
      e.thetaLength
    );
  }
}
class Bc extends fn {
  constructor(
    e = new Dc(new te(-1, -1, 0), new te(-1, 1, 0), new te(1, 1, 0)),
    t = 64,
    i = 1,
    r = 8,
    s = !1
  ) {
    super(),
      (this.type = "TubeGeometry"),
      (this.parameters = {
        path: e,
        tubularSegments: t,
        radius: i,
        radialSegments: r,
        closed: s,
      });
    const u = e.computeFrenetFrames(t, s);
    (this.tangents = u.tangents),
      (this.normals = u.normals),
      (this.binormals = u.binormals);
    const c = new te(),
      h = new te(),
      p = new ke();
    let g = new te();
    const v = [],
      x = [],
      M = [],
      w = [];
    C(),
      this.setIndex(w),
      this.setAttribute("position", new Jt(v, 3)),
      this.setAttribute("normal", new Jt(x, 3)),
      this.setAttribute("uv", new Jt(M, 2));
    function C() {
      for (let S = 0; S < t; S++) E(S);
      E(s === !1 ? t : 0), L(), b();
    }
    function E(S) {
      g = e.getPointAt(S / t, g);
      const R = u.normals[S],
        U = u.binormals[S];
      for (let q = 0; q <= r; q++) {
        const I = (q / r) * Math.PI * 2,
          N = Math.sin(I),
          D = -Math.cos(I);
        (h.x = D * R.x + N * U.x),
          (h.y = D * R.y + N * U.y),
          (h.z = D * R.z + N * U.z),
          h.normalize(),
          x.push(h.x, h.y, h.z),
          (c.x = g.x + i * h.x),
          (c.y = g.y + i * h.y),
          (c.z = g.z + i * h.z),
          v.push(c.x, c.y, c.z);
      }
    }
    function b() {
      for (let S = 1; S <= t; S++)
        for (let R = 1; R <= r; R++) {
          const U = (r + 1) * (S - 1) + (R - 1),
            q = (r + 1) * S + (R - 1),
            I = (r + 1) * S + R,
            N = (r + 1) * (S - 1) + R;
          w.push(U, q, N), w.push(q, I, N);
        }
    }
    function L() {
      for (let S = 0; S <= t; S++)
        for (let R = 0; R <= r; R++)
          (p.x = S / t), (p.y = R / r), M.push(p.x, p.y);
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
  toJSON() {
    const e = super.toJSON();
    return (e.path = this.parameters.path.toJSON()), e;
  }
  static fromJSON(e) {
    return new Bc(
      new Ic[e.path.type]().fromJSON(e.path),
      e.tubularSegments,
      e.radius,
      e.radialSegments,
      e.closed
    );
  }
}
class S8 extends fn {
  constructor(e = null) {
    if (
      (super(),
      (this.type = "WireframeGeometry"),
      (this.parameters = { geometry: e }),
      e !== null)
    ) {
      const t = [],
        i = new Set(),
        r = new te(),
        s = new te();
      if (e.index !== null) {
        const u = e.attributes.position,
          c = e.index;
        let h = e.groups;
        h.length === 0 &&
          (h = [{ start: 0, count: c.count, materialIndex: 0 }]);
        for (let p = 0, g = h.length; p < g; ++p) {
          const v = h[p],
            x = v.start,
            M = v.count;
          for (let w = x, C = x + M; w < C; w += 3)
            for (let E = 0; E < 3; E++) {
              const b = c.getX(w + E),
                L = c.getX(w + ((E + 1) % 3));
              r.fromBufferAttribute(u, b),
                s.fromBufferAttribute(u, L),
                _d(r, s, i) === !0 &&
                  (t.push(r.x, r.y, r.z), t.push(s.x, s.y, s.z));
            }
        }
      } else {
        const u = e.attributes.position;
        for (let c = 0, h = u.count / 3; c < h; c++)
          for (let p = 0; p < 3; p++) {
            const g = 3 * c + p,
              v = 3 * c + ((p + 1) % 3);
            r.fromBufferAttribute(u, g),
              s.fromBufferAttribute(u, v),
              _d(r, s, i) === !0 &&
                (t.push(r.x, r.y, r.z), t.push(s.x, s.y, s.z));
          }
      }
      this.setAttribute("position", new Jt(t, 3));
    }
  }
  copy(e) {
    return (
      super.copy(e), (this.parameters = Object.assign({}, e.parameters)), this
    );
  }
}
function _d(n, e, t) {
  const i = `${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,
    r = `${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;
  return t.has(i) === !0 || t.has(r) === !0 ? !1 : (t.add(i), t.add(r), !0);
}
class T8 extends Qs {
  constructor(e) {
    super(),
      (this.isMeshPhongMaterial = !0),
      (this.type = "MeshPhongMaterial"),
      (this.color = new Dt(16777215)),
      (this.specular = new Dt(1118481)),
      (this.shininess = 30),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new Dt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = bc),
      (this.normalScale = new ke(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Xl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      this.specular.copy(e.specular),
      (this.shininess = e.shininess),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
class Ys extends Qs {
  constructor(e) {
    super(),
      (this.isMeshLambertMaterial = !0),
      (this.type = "MeshLambertMaterial"),
      (this.color = new Dt(16777215)),
      (this.map = null),
      (this.lightMap = null),
      (this.lightMapIntensity = 1),
      (this.aoMap = null),
      (this.aoMapIntensity = 1),
      (this.emissive = new Dt(0)),
      (this.emissiveIntensity = 1),
      (this.emissiveMap = null),
      (this.bumpMap = null),
      (this.bumpScale = 1),
      (this.normalMap = null),
      (this.normalMapType = bc),
      (this.normalScale = new ke(1, 1)),
      (this.displacementMap = null),
      (this.displacementScale = 1),
      (this.displacementBias = 0),
      (this.specularMap = null),
      (this.alphaMap = null),
      (this.envMap = null),
      (this.combine = Xl),
      (this.reflectivity = 1),
      (this.refractionRatio = 0.98),
      (this.wireframe = !1),
      (this.wireframeLinewidth = 1),
      (this.wireframeLinecap = "round"),
      (this.wireframeLinejoin = "round"),
      (this.flatShading = !1),
      (this.fog = !0),
      this.setValues(e);
  }
  copy(e) {
    return (
      super.copy(e),
      this.color.copy(e.color),
      (this.map = e.map),
      (this.lightMap = e.lightMap),
      (this.lightMapIntensity = e.lightMapIntensity),
      (this.aoMap = e.aoMap),
      (this.aoMapIntensity = e.aoMapIntensity),
      this.emissive.copy(e.emissive),
      (this.emissiveMap = e.emissiveMap),
      (this.emissiveIntensity = e.emissiveIntensity),
      (this.bumpMap = e.bumpMap),
      (this.bumpScale = e.bumpScale),
      (this.normalMap = e.normalMap),
      (this.normalMapType = e.normalMapType),
      this.normalScale.copy(e.normalScale),
      (this.displacementMap = e.displacementMap),
      (this.displacementScale = e.displacementScale),
      (this.displacementBias = e.displacementBias),
      (this.specularMap = e.specularMap),
      (this.alphaMap = e.alphaMap),
      (this.envMap = e.envMap),
      (this.combine = e.combine),
      (this.reflectivity = e.reflectivity),
      (this.refractionRatio = e.refractionRatio),
      (this.wireframe = e.wireframe),
      (this.wireframeLinewidth = e.wireframeLinewidth),
      (this.wireframeLinecap = e.wireframeLinecap),
      (this.wireframeLinejoin = e.wireframeLinejoin),
      (this.flatShading = e.flatShading),
      (this.fog = e.fog),
      this
    );
  }
}
const xd = {
  enabled: !1,
  files: {},
  add: function (n, e) {
    this.enabled !== !1 && (this.files[n] = e);
  },
  get: function (n) {
    if (this.enabled !== !1) return this.files[n];
  },
  remove: function (n) {
    delete this.files[n];
  },
  clear: function () {
    this.files = {};
  },
};
class C8 {
  constructor(e, t, i) {
    const r = this;
    let s = !1,
      u = 0,
      c = 0,
      h;
    const p = [];
    (this.onStart = void 0),
      (this.onLoad = e),
      (this.onProgress = t),
      (this.onError = i),
      (this.itemStart = function (g) {
        c++, s === !1 && r.onStart !== void 0 && r.onStart(g, u, c), (s = !0);
      }),
      (this.itemEnd = function (g) {
        u++,
          r.onProgress !== void 0 && r.onProgress(g, u, c),
          u === c && ((s = !1), r.onLoad !== void 0 && r.onLoad());
      }),
      (this.itemError = function (g) {
        r.onError !== void 0 && r.onError(g);
      }),
      (this.resolveURL = function (g) {
        return h ? h(g) : g;
      }),
      (this.setURLModifier = function (g) {
        return (h = g), this;
      }),
      (this.addHandler = function (g, v) {
        return p.push(g, v), this;
      }),
      (this.removeHandler = function (g) {
        const v = p.indexOf(g);
        return v !== -1 && p.splice(v, 2), this;
      }),
      (this.getHandler = function (g) {
        for (let v = 0, x = p.length; v < x; v += 2) {
          const M = p[v],
            w = p[v + 1];
          if ((M.global && (M.lastIndex = 0), M.test(g))) return w;
        }
        return null;
      });
  }
}
const R8 = new C8();
class Nc {
  constructor(e) {
    (this.manager = e !== void 0 ? e : R8),
      (this.crossOrigin = "anonymous"),
      (this.withCredentials = !1),
      (this.path = ""),
      (this.resourcePath = ""),
      (this.requestHeader = {});
  }
  load() {}
  loadAsync(e, t) {
    const i = this;
    return new Promise(function (r, s) {
      i.load(e, r, t, s);
    });
  }
  parse() {}
  setCrossOrigin(e) {
    return (this.crossOrigin = e), this;
  }
  setWithCredentials(e) {
    return (this.withCredentials = e), this;
  }
  setPath(e) {
    return (this.path = e), this;
  }
  setResourcePath(e) {
    return (this.resourcePath = e), this;
  }
  setRequestHeader(e) {
    return (this.requestHeader = e), this;
  }
}
Nc.DEFAULT_MATERIAL_NAME = "__DEFAULT";
class P8 extends Nc {
  constructor(e) {
    super(e);
  }
  load(e, t, i, r) {
    this.path !== void 0 && (e = this.path + e),
      (e = this.manager.resolveURL(e));
    const s = this,
      u = xd.get(e);
    if (u !== void 0)
      return (
        s.manager.itemStart(e),
        setTimeout(function () {
          t && t(u), s.manager.itemEnd(e);
        }, 0),
        u
      );
    const c = Da("img");
    function h() {
      g(), xd.add(e, this), t && t(this), s.manager.itemEnd(e);
    }
    function p(v) {
      g(), r && r(v), s.manager.itemError(e), s.manager.itemEnd(e);
    }
    function g() {
      c.removeEventListener("load", h, !1),
        c.removeEventListener("error", p, !1);
    }
    return (
      c.addEventListener("load", h, !1),
      c.addEventListener("error", p, !1),
      e.slice(0, 5) !== "data:" &&
        this.crossOrigin !== void 0 &&
        (c.crossOrigin = this.crossOrigin),
      s.manager.itemStart(e),
      (c.src = e),
      c
    );
  }
}
class L8 extends Nc {
  constructor(e) {
    super(e);
  }
  load(e, t, i, r) {
    const s = new vi(),
      u = new P8(this.manager);
    return (
      u.setCrossOrigin(this.crossOrigin),
      u.setPath(this.path),
      u.load(
        e,
        function (c) {
          (s.image = c), (s.needsUpdate = !0), t !== void 0 && t(s);
        },
        i,
        r
      ),
      s
    );
  }
}
class r2 extends Rn {
  constructor(e, t = 1) {
    super(),
      (this.isLight = !0),
      (this.type = "Light"),
      (this.color = new Dt(e)),
      (this.intensity = t);
  }
  dispose() {}
  copy(e, t) {
    return (
      super.copy(e, t),
      this.color.copy(e.color),
      (this.intensity = e.intensity),
      this
    );
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.object.color = this.color.getHex()),
      (t.object.intensity = this.intensity),
      this.groundColor !== void 0 &&
        (t.object.groundColor = this.groundColor.getHex()),
      this.distance !== void 0 && (t.object.distance = this.distance),
      this.angle !== void 0 && (t.object.angle = this.angle),
      this.decay !== void 0 && (t.object.decay = this.decay),
      this.penumbra !== void 0 && (t.object.penumbra = this.penumbra),
      this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()),
      t
    );
  }
}
const su = new dn(),
  yd = new te(),
  bd = new te();
class D8 {
  constructor(e) {
    (this.camera = e),
      (this.bias = 0),
      (this.normalBias = 0),
      (this.radius = 1),
      (this.blurSamples = 8),
      (this.mapSize = new ke(512, 512)),
      (this.map = null),
      (this.mapPass = null),
      (this.matrix = new dn()),
      (this.autoUpdate = !0),
      (this.needsUpdate = !1),
      (this._frustum = new wc()),
      (this._frameExtents = new ke(1, 1)),
      (this._viewportCount = 1),
      (this._viewports = [new In(0, 0, 1, 1)]);
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const t = this.camera,
      i = this.matrix;
    yd.setFromMatrixPosition(e.matrixWorld),
      t.position.copy(yd),
      bd.setFromMatrixPosition(e.target.matrixWorld),
      t.lookAt(bd),
      t.updateMatrixWorld(),
      su.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
      this._frustum.setFromProjectionMatrix(su),
      i.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
      i.multiply(su);
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(e) {
    return (
      (this.camera = e.camera.clone()),
      (this.bias = e.bias),
      (this.radius = e.radius),
      this.mapSize.copy(e.mapSize),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return (
      this.bias !== 0 && (e.bias = this.bias),
      this.normalBias !== 0 && (e.normalBias = this.normalBias),
      this.radius !== 1 && (e.radius = this.radius),
      (this.mapSize.x !== 512 || this.mapSize.y !== 512) &&
        (e.mapSize = this.mapSize.toArray()),
      (e.camera = this.camera.toJSON(!1).object),
      delete e.camera.matrix,
      e
    );
  }
}
class I8 extends D8 {
  constructor() {
    super(new G1(-5, 5, 5, -5, 0.5, 500)), (this.isDirectionalLightShadow = !0);
  }
}
class Md extends r2 {
  constructor(e, t) {
    super(e, t),
      (this.isDirectionalLight = !0),
      (this.type = "DirectionalLight"),
      this.position.copy(Rn.DEFAULT_UP),
      this.updateMatrix(),
      (this.target = new Rn()),
      (this.shadow = new I8());
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e) {
    return (
      super.copy(e),
      (this.target = e.target.clone()),
      (this.shadow = e.shadow.clone()),
      this
    );
  }
}
class O8 extends r2 {
  constructor(e, t) {
    super(e, t), (this.isAmbientLight = !0), (this.type = "AmbientLight");
  }
}
class q8 extends fn {
  constructor() {
    super(),
      (this.isInstancedBufferGeometry = !0),
      (this.type = "InstancedBufferGeometry"),
      (this.instanceCount = 1 / 0);
  }
  copy(e) {
    return super.copy(e), (this.instanceCount = e.instanceCount), this;
  }
  toJSON() {
    const e = super.toJSON();
    return (
      (e.instanceCount = this.instanceCount),
      (e.isInstancedBufferGeometry = !0),
      e
    );
  }
}
class s2 extends Q1 {
  constructor(e, t, i = 1) {
    super(e, t),
      (this.isInstancedInterleavedBuffer = !0),
      (this.meshPerAttribute = i);
  }
  copy(e) {
    return super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this;
  }
  clone(e) {
    const t = super.clone(e);
    return (t.meshPerAttribute = this.meshPerAttribute), t;
  }
  toJSON(e) {
    const t = super.toJSON(e);
    return (
      (t.isInstancedInterleavedBuffer = !0),
      (t.meshPerAttribute = this.meshPerAttribute),
      t
    );
  }
}
class U8 {
  constructor(e, t, i = 0, r = 1 / 0) {
    (this.ray = new Yl(e, t)),
      (this.near = i),
      (this.far = r),
      (this.camera = null),
      (this.layers = new Ec()),
      (this.params = {
        Mesh: {},
        Line: { threshold: 1 },
        LOD: {},
        Points: { threshold: 1 },
        Sprite: {},
      });
  }
  set(e, t) {
    this.ray.set(e, t);
  }
  setFromCamera(e, t) {
    t.isPerspectiveCamera
      ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
        this.ray.direction
          .set(e.x, e.y, 0.5)
          .unproject(t)
          .sub(this.ray.origin)
          .normalize(),
        (this.camera = t))
      : t.isOrthographicCamera
      ? (this.ray.origin
          .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
          .unproject(t),
        this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld),
        (this.camera = t))
      : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
  }
  intersectObject(e, t = !0, i = []) {
    return qu(e, this, i, t), i.sort(Ed), i;
  }
  intersectObjects(e, t = !0, i = []) {
    for (let r = 0, s = e.length; r < s; r++) qu(e[r], this, i, t);
    return i.sort(Ed), i;
  }
}
function Ed(n, e) {
  return n.distance - e.distance;
}
function qu(n, e, t, i) {
  if ((n.layers.test(e.layers) && n.raycast(e, t), i === !0)) {
    const r = n.children;
    for (let s = 0, u = r.length; s < u; s++) qu(r[s], e, t, !0);
  }
}
class wd {
  constructor(e = 1, t = 0, i = 0) {
    return (this.radius = e), (this.phi = t), (this.theta = i), this;
  }
  set(e, t, i) {
    return (this.radius = e), (this.phi = t), (this.theta = i), this;
  }
  copy(e) {
    return (
      (this.radius = e.radius), (this.phi = e.phi), (this.theta = e.theta), this
    );
  }
  makeSafe() {
    return (
      (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))), this
    );
  }
  setFromVector3(e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }
  setFromCartesianCoords(e, t, i) {
    return (
      (this.radius = Math.sqrt(e * e + t * t + i * i)),
      this.radius === 0
        ? ((this.theta = 0), (this.phi = 0))
        : ((this.theta = Math.atan2(e, i)),
          (this.phi = Math.acos(Dn(t / this.radius, -1, 1)))),
      this
    );
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Sd = new te(),
  DA = new te();
class B8 {
  constructor(e = new te(), t = new te()) {
    (this.start = e), (this.end = t);
  }
  set(e, t) {
    return this.start.copy(e), this.end.copy(t), this;
  }
  copy(e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }
  getCenter(e) {
    return e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }
  delta(e) {
    return e.subVectors(this.end, this.start);
  }
  distanceSq() {
    return this.start.distanceToSquared(this.end);
  }
  distance() {
    return this.start.distanceTo(this.end);
  }
  at(e, t) {
    return this.delta(t).multiplyScalar(e).add(this.start);
  }
  closestPointToPointParameter(e, t) {
    Sd.subVectors(e, this.start), DA.subVectors(this.end, this.start);
    const i = DA.dot(DA);
    let s = DA.dot(Sd) / i;
    return t && (s = Dn(s, 0, 1)), s;
  }
  closestPointToPoint(e, t, i) {
    const r = this.closestPointToPointParameter(e, t);
    return this.delta(i).multiplyScalar(r).add(this.start);
  }
  applyMatrix4(e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }
  equals(e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class N8 {
  constructor() {
    (this.type = "ShapePath"),
      (this.color = new Dt()),
      (this.subPaths = []),
      (this.currentPath = null);
  }
  moveTo(e, t) {
    return (
      (this.currentPath = new Du()),
      this.subPaths.push(this.currentPath),
      this.currentPath.moveTo(e, t),
      this
    );
  }
  lineTo(e, t) {
    return this.currentPath.lineTo(e, t), this;
  }
  quadraticCurveTo(e, t, i, r) {
    return this.currentPath.quadraticCurveTo(e, t, i, r), this;
  }
  bezierCurveTo(e, t, i, r, s, u) {
    return this.currentPath.bezierCurveTo(e, t, i, r, s, u), this;
  }
  splineThru(e) {
    return this.currentPath.splineThru(e), this;
  }
  toShapes(e) {
    function t(b) {
      const L = [];
      for (let S = 0, R = b.length; S < R; S++) {
        const U = b[S],
          q = new nl();
        (q.curves = U.curves), L.push(q);
      }
      return L;
    }
    function i(b, L) {
      const S = L.length;
      let R = !1;
      for (let U = S - 1, q = 0; q < S; U = q++) {
        let I = L[U],
          N = L[q],
          D = N.x - I.x,
          O = N.y - I.y;
        if (Math.abs(O) > Number.EPSILON) {
          if (
            (O < 0 && ((I = L[q]), (D = -D), (N = L[U]), (O = -O)),
            b.y < I.y || b.y > N.y)
          )
            continue;
          if (b.y === I.y) {
            if (b.x === I.x) return !0;
          } else {
            const k = O * (b.x - I.x) - D * (b.y - I.y);
            if (k === 0) return !0;
            if (k < 0) continue;
            R = !R;
          }
        } else {
          if (b.y !== I.y) continue;
          if ((N.x <= b.x && b.x <= I.x) || (I.x <= b.x && b.x <= N.x))
            return !0;
        }
      }
      return R;
    }
    const r = qo.isClockWise,
      s = this.subPaths;
    if (s.length === 0) return [];
    let u, c, h;
    const p = [];
    if (s.length === 1)
      return (c = s[0]), (h = new nl()), (h.curves = c.curves), p.push(h), p;
    let g = !r(s[0].getPoints());
    g = e ? !g : g;
    const v = [],
      x = [];
    let M = [],
      w = 0,
      C;
    (x[w] = void 0), (M[w] = []);
    for (let b = 0, L = s.length; b < L; b++)
      (c = s[b]),
        (C = c.getPoints()),
        (u = r(C)),
        (u = e ? !u : u),
        u
          ? (!g && x[w] && w++,
            (x[w] = { s: new nl(), p: C }),
            (x[w].s.curves = c.curves),
            g && w++,
            (M[w] = []))
          : M[w].push({ h: c, p: C[0] });
    if (!x[0]) return t(s);
    if (x.length > 1) {
      let b = !1,
        L = 0;
      for (let S = 0, R = x.length; S < R; S++) v[S] = [];
      for (let S = 0, R = x.length; S < R; S++) {
        const U = M[S];
        for (let q = 0; q < U.length; q++) {
          const I = U[q];
          let N = !0;
          for (let D = 0; D < x.length; D++)
            i(I.p, x[D].p) &&
              (S !== D && L++, N ? ((N = !1), v[D].push(I)) : (b = !0));
          N && v[S].push(I);
        }
      }
      L > 0 && b === !1 && (M = v);
    }
    let E;
    for (let b = 0, L = x.length; b < L; b++) {
      (h = x[b].s), p.push(h), (E = M[b]);
      for (let S = 0, R = E.length; S < R; S++) h.holes.push(E[S].h);
    }
    return p;
  }
}
typeof __THREE_DEVTOOLS__ < "u" &&
  __THREE_DEVTOOLS__.dispatchEvent(
    new CustomEvent("register", { detail: { revision: xc } })
  );
typeof window < "u" &&
  (window.__THREE__
    ? console.warn("WARNING: Multiple instances of Three.js being imported.")
    : (window.__THREE__ = xc));
var F8 =
  typeof global == "object" && global && global.Object === Object && global;
const k8 = F8;
var z8 = typeof self == "object" && self && self.Object === Object && self,
  G8 = k8 || z8 || Function("return this")();
const o2 = G8;
var H8 = o2.Symbol;
const cl = H8;
var a2 = Object.prototype,
  V8 = a2.hasOwnProperty,
  W8 = a2.toString,
  ca = cl ? cl.toStringTag : void 0;
function j8(n) {
  var e = V8.call(n, ca),
    t = n[ca];
  try {
    n[ca] = void 0;
    var i = !0;
  } catch {}
  var r = W8.call(n);
  return i && (e ? (n[ca] = t) : delete n[ca]), r;
}
var X8 = Object.prototype,
  Q8 = X8.toString;
function $8(n) {
  return Q8.call(n);
}
var Y8 = "[object Null]",
  Z8 = "[object Undefined]",
  Td = cl ? cl.toStringTag : void 0;
function K8(n) {
  return n == null
    ? n === void 0
      ? Z8
      : Y8
    : Td && Td in Object(n)
    ? j8(n)
    : $8(n);
}
function J8(n) {
  return n != null && typeof n == "object";
}
var e6 = "[object Symbol]";
function t6(n) {
  return typeof n == "symbol" || (J8(n) && K8(n) == e6);
}
var n6 = /\s/;
function i6(n) {
  for (var e = n.length; e-- && n6.test(n.charAt(e)); );
  return e;
}
var r6 = /^\s+/;
function s6(n) {
  return n && n.slice(0, i6(n) + 1).replace(r6, "");
}
function Uu(n) {
  var e = typeof n;
  return n != null && (e == "object" || e == "function");
}
var Cd = 0 / 0,
  o6 = /^[-+]0x[0-9a-f]+$/i,
  a6 = /^0b[01]+$/i,
  A6 = /^0o[0-7]+$/i,
  l6 = parseInt;
function Rd(n) {
  if (typeof n == "number") return n;
  if (t6(n)) return Cd;
  if (Uu(n)) {
    var e = typeof n.valueOf == "function" ? n.valueOf() : n;
    n = Uu(e) ? e + "" : e;
  }
  if (typeof n != "string") return n === 0 ? n : +n;
  n = s6(n);
  var t = a6.test(n);
  return t || A6.test(n) ? l6(n.slice(2), t ? 2 : 8) : o6.test(n) ? Cd : +n;
}
var u6 = function () {
  return o2.Date.now();
};
const ou = u6;
var c6 = "Expected a function",
  f6 = Math.max,
  h6 = Math.min;
function d6(n, e, t) {
  var i,
    r,
    s,
    u,
    c,
    h,
    p = 0,
    g = !1,
    v = !1,
    x = !0;
  if (typeof n != "function") throw new TypeError(c6);
  (e = Rd(e) || 0),
    Uu(t) &&
      ((g = !!t.leading),
      (v = "maxWait" in t),
      (s = v ? f6(Rd(t.maxWait) || 0, e) : s),
      (x = "trailing" in t ? !!t.trailing : x));
  function M(q) {
    var I = i,
      N = r;
    return (i = r = void 0), (p = q), (u = n.apply(N, I)), u;
  }
  function w(q) {
    return (p = q), (c = setTimeout(b, e)), g ? M(q) : u;
  }
  function C(q) {
    var I = q - h,
      N = q - p,
      D = e - I;
    return v ? h6(D, s - N) : D;
  }
  function E(q) {
    var I = q - h,
      N = q - p;
    return h === void 0 || I >= e || I < 0 || (v && N >= s);
  }
  function b() {
    var q = ou();
    if (E(q)) return L(q);
    c = setTimeout(b, C(q));
  }
  function L(q) {
    return (c = void 0), x && i ? M(q) : ((i = r = void 0), u);
  }
  function S() {
    c !== void 0 && clearTimeout(c), (p = 0), (i = h = r = c = void 0);
  }
  function R() {
    return c === void 0 ? u : L(ou());
  }
  function U() {
    var q = ou(),
      I = E(q);
    if (((i = arguments), (r = this), (h = q), I)) {
      if (c === void 0) return w(h);
      if (v) return clearTimeout(c), (c = setTimeout(b, e)), M(h);
    }
    return c === void 0 && (c = setTimeout(b, e)), u;
  }
  return (U.cancel = S), (U.flush = R), U;
}
function p6(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function m6(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Pd(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, M6(i.key), i);
  }
}
function g6(n, e, t) {
  return (
    e && Pd(n.prototype, e),
    t && Pd(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function v6(n, e) {
  return _6(n) || p6(n, e) || x6(n, e) || y6();
}
function _6(n) {
  if (Array.isArray(n)) return n;
}
function x6(n, e) {
  if (n) {
    if (typeof n == "string") return Ld(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return Ld(n, e);
  }
}
function Ld(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function y6() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function b6(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function M6(n) {
  var e = b6(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var E6 = g6(function n(e, t) {
  var i = t.default,
    r = i === void 0 ? null : i,
    s = t.triggerUpdate,
    u = s === void 0 ? !0 : s,
    c = t.onChange,
    h = c === void 0 ? function (p, g) {} : c;
  m6(this, n),
    (this.name = e),
    (this.defaultVal = r),
    (this.triggerUpdate = u),
    (this.onChange = h);
});
function hi(n) {
  var e = n.stateInit,
    t =
      e === void 0
        ? function () {
            return {};
          }
        : e,
    i = n.props,
    r = i === void 0 ? {} : i,
    s = n.methods,
    u = s === void 0 ? {} : s,
    c = n.aliases,
    h = c === void 0 ? {} : c,
    p = n.init,
    g = p === void 0 ? function () {} : p,
    v = n.update,
    x = v === void 0 ? function () {} : v,
    M = Object.keys(r).map(function (w) {
      return new E6(w, r[w]);
    });
  return function () {
    var w = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      C = Object.assign({}, t instanceof Function ? t(w) : t, {
        initialised: !1,
      }),
      E = {};
    function b(R) {
      return L(R, w), S(), b;
    }
    var L = function (U, q) {
        g.call(b, U, C, q), (C.initialised = !0);
      },
      S = d6(function () {
        C.initialised && (x.call(b, C, E), (E = {}));
      }, 1);
    return (
      M.forEach(function (R) {
        b[R.name] = U(R);
        function U(q) {
          var I = q.name,
            N = q.triggerUpdate,
            D = N === void 0 ? !1 : N,
            O = q.onChange,
            k = O === void 0 ? function (Q, F) {} : O,
            $ = q.defaultVal,
            H = $ === void 0 ? null : $;
          return function (Q) {
            var F = C[I];
            if (!arguments.length) return F;
            var J = Q === void 0 ? H : Q;
            return (
              (C[I] = J),
              k.call(b, J, C, F),
              !E.hasOwnProperty(I) && (E[I] = F),
              D && S(),
              b
            );
          };
        }
      }),
      Object.keys(u).forEach(function (R) {
        b[R] = function () {
          for (var U, q = arguments.length, I = new Array(q), N = 0; N < q; N++)
            I[N] = arguments[N];
          return (U = u[R]).call.apply(U, [b, C].concat(I));
        };
      }),
      Object.entries(h).forEach(function (R) {
        var U = v6(R, 2),
          q = U[0],
          I = U[1];
        return (b[q] = b[I]);
      }),
      (b.resetProps = function () {
        return (
          M.forEach(function (R) {
            b[R.name](R.defaultVal);
          }),
          b
        );
      }),
      b.resetProps(),
      (C._rerender = S),
      b
    );
  };
}
var Hn = Object.freeze({
    Linear: Object.freeze({
      None: function (n) {
        return n;
      },
      In: function (n) {
        return this.None(n);
      },
      Out: function (n) {
        return this.None(n);
      },
      InOut: function (n) {
        return this.None(n);
      },
    }),
    Quadratic: Object.freeze({
      In: function (n) {
        return n * n;
      },
      Out: function (n) {
        return n * (2 - n);
      },
      InOut: function (n) {
        return (n *= 2) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1);
      },
    }),
    Cubic: Object.freeze({
      In: function (n) {
        return n * n * n;
      },
      Out: function (n) {
        return --n * n * n + 1;
      },
      InOut: function (n) {
        return (n *= 2) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2);
      },
    }),
    Quartic: Object.freeze({
      In: function (n) {
        return n * n * n * n;
      },
      Out: function (n) {
        return 1 - --n * n * n * n;
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? 0.5 * n * n * n * n
          : -0.5 * ((n -= 2) * n * n * n - 2);
      },
    }),
    Quintic: Object.freeze({
      In: function (n) {
        return n * n * n * n * n;
      },
      Out: function (n) {
        return --n * n * n * n * n + 1;
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? 0.5 * n * n * n * n * n
          : 0.5 * ((n -= 2) * n * n * n * n + 2);
      },
    }),
    Sinusoidal: Object.freeze({
      In: function (n) {
        return 1 - Math.sin(((1 - n) * Math.PI) / 2);
      },
      Out: function (n) {
        return Math.sin((n * Math.PI) / 2);
      },
      InOut: function (n) {
        return 0.5 * (1 - Math.sin(Math.PI * (0.5 - n)));
      },
    }),
    Exponential: Object.freeze({
      In: function (n) {
        return n === 0 ? 0 : Math.pow(1024, n - 1);
      },
      Out: function (n) {
        return n === 1 ? 1 : 1 - Math.pow(2, -10 * n);
      },
      InOut: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : (n *= 2) < 1
          ? 0.5 * Math.pow(1024, n - 1)
          : 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);
      },
    }),
    Circular: Object.freeze({
      In: function (n) {
        return 1 - Math.sqrt(1 - n * n);
      },
      Out: function (n) {
        return Math.sqrt(1 - --n * n);
      },
      InOut: function (n) {
        return (n *= 2) < 1
          ? -0.5 * (Math.sqrt(1 - n * n) - 1)
          : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);
      },
    }),
    Elastic: Object.freeze({
      In: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : -Math.pow(2, 10 * (n - 1)) * Math.sin((n - 1.1) * 5 * Math.PI);
      },
      Out: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : Math.pow(2, -10 * n) * Math.sin((n - 0.1) * 5 * Math.PI) + 1;
      },
      InOut: function (n) {
        return n === 0
          ? 0
          : n === 1
          ? 1
          : ((n *= 2),
            n < 1
              ? -0.5 *
                Math.pow(2, 10 * (n - 1)) *
                Math.sin((n - 1.1) * 5 * Math.PI)
              : 0.5 *
                  Math.pow(2, -10 * (n - 1)) *
                  Math.sin((n - 1.1) * 5 * Math.PI) +
                1);
      },
    }),
    Back: Object.freeze({
      In: function (n) {
        var e = 1.70158;
        return n === 1 ? 1 : n * n * ((e + 1) * n - e);
      },
      Out: function (n) {
        var e = 1.70158;
        return n === 0 ? 0 : --n * n * ((e + 1) * n + e) + 1;
      },
      InOut: function (n) {
        var e = 2.5949095;
        return (n *= 2) < 1
          ? 0.5 * (n * n * ((e + 1) * n - e))
          : 0.5 * ((n -= 2) * n * ((e + 1) * n + e) + 2);
      },
    }),
    Bounce: Object.freeze({
      In: function (n) {
        return 1 - Hn.Bounce.Out(1 - n);
      },
      Out: function (n) {
        return n < 1 / 2.75
          ? 7.5625 * n * n
          : n < 2 / 2.75
          ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75
          : n < 2.5 / 2.75
          ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375
          : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
      },
      InOut: function (n) {
        return n < 0.5
          ? Hn.Bounce.In(n * 2) * 0.5
          : Hn.Bounce.Out(n * 2 - 1) * 0.5 + 0.5;
      },
    }),
    generatePow: function (n) {
      return (
        n === void 0 && (n = 4),
        (n = n < Number.EPSILON ? Number.EPSILON : n),
        (n = n > 1e4 ? 1e4 : n),
        {
          In: function (e) {
            return Math.pow(e, n);
          },
          Out: function (e) {
            return 1 - Math.pow(1 - e, n);
          },
          InOut: function (e) {
            return e < 0.5
              ? Math.pow(e * 2, n) / 2
              : (1 - Math.pow(2 - e * 2, n)) / 2 + 0.5;
          },
        }
      );
    },
  }),
  va = function () {
    return performance.now();
  },
  w6 = (function () {
    function n() {
      (this._tweens = {}), (this._tweensAddedDuringUpdate = {});
    }
    return (
      (n.prototype.getAll = function () {
        var e = this;
        return Object.keys(this._tweens).map(function (t) {
          return e._tweens[t];
        });
      }),
      (n.prototype.removeAll = function () {
        this._tweens = {};
      }),
      (n.prototype.add = function (e) {
        (this._tweens[e.getId()] = e),
          (this._tweensAddedDuringUpdate[e.getId()] = e);
      }),
      (n.prototype.remove = function (e) {
        delete this._tweens[e.getId()],
          delete this._tweensAddedDuringUpdate[e.getId()];
      }),
      (n.prototype.update = function (e, t) {
        e === void 0 && (e = va()), t === void 0 && (t = !1);
        var i = Object.keys(this._tweens);
        if (i.length === 0) return !1;
        for (; i.length > 0; ) {
          this._tweensAddedDuringUpdate = {};
          for (var r = 0; r < i.length; r++) {
            var s = this._tweens[i[r]],
              u = !t;
            s && s.update(e, u) === !1 && !t && delete this._tweens[i[r]];
          }
          i = Object.keys(this._tweensAddedDuringUpdate);
        }
        return !0;
      }),
      n
    );
  })(),
  Co = {
    Linear: function (n, e) {
      var t = n.length - 1,
        i = t * e,
        r = Math.floor(i),
        s = Co.Utils.Linear;
      return e < 0
        ? s(n[0], n[1], i)
        : e > 1
        ? s(n[t], n[t - 1], t - i)
        : s(n[r], n[r + 1 > t ? t : r + 1], i - r);
    },
    Bezier: function (n, e) {
      for (
        var t = 0,
          i = n.length - 1,
          r = Math.pow,
          s = Co.Utils.Bernstein,
          u = 0;
        u <= i;
        u++
      )
        t += r(1 - e, i - u) * r(e, u) * n[u] * s(i, u);
      return t;
    },
    CatmullRom: function (n, e) {
      var t = n.length - 1,
        i = t * e,
        r = Math.floor(i),
        s = Co.Utils.CatmullRom;
      return n[0] === n[t]
        ? (e < 0 && (r = Math.floor((i = t * (1 + e)))),
          s(n[(r - 1 + t) % t], n[r], n[(r + 1) % t], n[(r + 2) % t], i - r))
        : e < 0
        ? n[0] - (s(n[0], n[0], n[1], n[1], -i) - n[0])
        : e > 1
        ? n[t] - (s(n[t], n[t], n[t - 1], n[t - 1], i - t) - n[t])
        : s(
            n[r ? r - 1 : 0],
            n[r],
            n[t < r + 1 ? t : r + 1],
            n[t < r + 2 ? t : r + 2],
            i - r
          );
    },
    Utils: {
      Linear: function (n, e, t) {
        return (e - n) * t + n;
      },
      Bernstein: function (n, e) {
        var t = Co.Utils.Factorial;
        return t(n) / t(e) / t(n - e);
      },
      Factorial: (function () {
        var n = [1];
        return function (e) {
          var t = 1;
          if (n[e]) return n[e];
          for (var i = e; i > 1; i--) t *= i;
          return (n[e] = t), t;
        };
      })(),
      CatmullRom: function (n, e, t, i, r) {
        var s = (t - n) * 0.5,
          u = (i - e) * 0.5,
          c = r * r,
          h = r * c;
        return (
          (2 * e - 2 * t + s + u) * h +
          (-3 * e + 3 * t - 2 * s - u) * c +
          s * r +
          e
        );
      },
    },
  },
  S6 = (function () {
    function n() {}
    return (
      (n.nextId = function () {
        return n._nextId++;
      }),
      (n._nextId = 0),
      n
    );
  })(),
  Bu = new w6(),
  Pi = (function () {
    function n(e, t) {
      t === void 0 && (t = Bu),
        (this._object = e),
        (this._group = t),
        (this._isPaused = !1),
        (this._pauseStart = 0),
        (this._valuesStart = {}),
        (this._valuesEnd = {}),
        (this._valuesStartRepeat = {}),
        (this._duration = 1e3),
        (this._isDynamic = !1),
        (this._initialRepeat = 0),
        (this._repeat = 0),
        (this._yoyo = !1),
        (this._isPlaying = !1),
        (this._reversed = !1),
        (this._delayTime = 0),
        (this._startTime = 0),
        (this._easingFunction = Hn.Linear.None),
        (this._interpolationFunction = Co.Linear),
        (this._chainedTweens = []),
        (this._onStartCallbackFired = !1),
        (this._onEveryStartCallbackFired = !1),
        (this._id = S6.nextId()),
        (this._isChainStopped = !1),
        (this._propertiesAreSetUp = !1),
        (this._goToEnd = !1);
    }
    return (
      (n.prototype.getId = function () {
        return this._id;
      }),
      (n.prototype.isPlaying = function () {
        return this._isPlaying;
      }),
      (n.prototype.isPaused = function () {
        return this._isPaused;
      }),
      (n.prototype.to = function (e, t) {
        if ((t === void 0 && (t = 1e3), this._isPlaying))
          throw new Error(
            "Can not call Tween.to() while Tween is already started or paused. Stop the Tween first."
          );
        return (
          (this._valuesEnd = e),
          (this._propertiesAreSetUp = !1),
          (this._duration = t),
          this
        );
      }),
      (n.prototype.duration = function (e) {
        return e === void 0 && (e = 1e3), (this._duration = e), this;
      }),
      (n.prototype.dynamic = function (e) {
        return e === void 0 && (e = !1), (this._isDynamic = e), this;
      }),
      (n.prototype.start = function (e, t) {
        if (
          (e === void 0 && (e = va()),
          t === void 0 && (t = !1),
          this._isPlaying)
        )
          return this;
        if (
          (this._group && this._group.add(this),
          (this._repeat = this._initialRepeat),
          this._reversed)
        ) {
          this._reversed = !1;
          for (var i in this._valuesStartRepeat)
            this._swapEndStartRepeatValues(i),
              (this._valuesStart[i] = this._valuesStartRepeat[i]);
        }
        if (
          ((this._isPlaying = !0),
          (this._isPaused = !1),
          (this._onStartCallbackFired = !1),
          (this._onEveryStartCallbackFired = !1),
          (this._isChainStopped = !1),
          (this._startTime = e),
          (this._startTime += this._delayTime),
          !this._propertiesAreSetUp || t)
        ) {
          if (((this._propertiesAreSetUp = !0), !this._isDynamic)) {
            var r = {};
            for (var s in this._valuesEnd) r[s] = this._valuesEnd[s];
            this._valuesEnd = r;
          }
          this._setupProperties(
            this._object,
            this._valuesStart,
            this._valuesEnd,
            this._valuesStartRepeat,
            t
          );
        }
        return this;
      }),
      (n.prototype.startFromCurrentValues = function (e) {
        return this.start(e, !0);
      }),
      (n.prototype._setupProperties = function (e, t, i, r, s) {
        for (var u in i) {
          var c = e[u],
            h = Array.isArray(c),
            p = h ? "array" : typeof c,
            g = !h && Array.isArray(i[u]);
          if (!(p === "undefined" || p === "function")) {
            if (g) {
              var v = i[u];
              if (v.length === 0) continue;
              for (var x = [c], M = 0, w = v.length; M < w; M += 1) {
                var C = this._handleRelativeValue(c, v[M]);
                if (isNaN(C)) {
                  (g = !1),
                    console.warn("Found invalid interpolation list. Skipping.");
                  break;
                }
                x.push(C);
              }
              g && (i[u] = x);
            }
            if ((p === "object" || h) && c && !g) {
              t[u] = h ? [] : {};
              var E = c;
              for (var b in E) t[u][b] = E[b];
              r[u] = h ? [] : {};
              var v = i[u];
              if (!this._isDynamic) {
                var L = {};
                for (var b in v) L[b] = v[b];
                i[u] = v = L;
              }
              this._setupProperties(E, t[u], v, r[u], s);
            } else
              (typeof t[u] > "u" || s) && (t[u] = c),
                h || (t[u] *= 1),
                g ? (r[u] = i[u].slice().reverse()) : (r[u] = t[u] || 0);
          }
        }
      }),
      (n.prototype.stop = function () {
        return (
          this._isChainStopped ||
            ((this._isChainStopped = !0), this.stopChainedTweens()),
          this._isPlaying
            ? (this._group && this._group.remove(this),
              (this._isPlaying = !1),
              (this._isPaused = !1),
              this._onStopCallback && this._onStopCallback(this._object),
              this)
            : this
        );
      }),
      (n.prototype.end = function () {
        return (this._goToEnd = !0), this.update(1 / 0), this;
      }),
      (n.prototype.pause = function (e) {
        return (
          e === void 0 && (e = va()),
          this._isPaused || !this._isPlaying
            ? this
            : ((this._isPaused = !0),
              (this._pauseStart = e),
              this._group && this._group.remove(this),
              this)
        );
      }),
      (n.prototype.resume = function (e) {
        return (
          e === void 0 && (e = va()),
          !this._isPaused || !this._isPlaying
            ? this
            : ((this._isPaused = !1),
              (this._startTime += e - this._pauseStart),
              (this._pauseStart = 0),
              this._group && this._group.add(this),
              this)
        );
      }),
      (n.prototype.stopChainedTweens = function () {
        for (var e = 0, t = this._chainedTweens.length; e < t; e++)
          this._chainedTweens[e].stop();
        return this;
      }),
      (n.prototype.group = function (e) {
        return e === void 0 && (e = Bu), (this._group = e), this;
      }),
      (n.prototype.delay = function (e) {
        return e === void 0 && (e = 0), (this._delayTime = e), this;
      }),
      (n.prototype.repeat = function (e) {
        return (
          e === void 0 && (e = 0),
          (this._initialRepeat = e),
          (this._repeat = e),
          this
        );
      }),
      (n.prototype.repeatDelay = function (e) {
        return (this._repeatDelayTime = e), this;
      }),
      (n.prototype.yoyo = function (e) {
        return e === void 0 && (e = !1), (this._yoyo = e), this;
      }),
      (n.prototype.easing = function (e) {
        return (
          e === void 0 && (e = Hn.Linear.None), (this._easingFunction = e), this
        );
      }),
      (n.prototype.interpolation = function (e) {
        return (
          e === void 0 && (e = Co.Linear),
          (this._interpolationFunction = e),
          this
        );
      }),
      (n.prototype.chain = function () {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        return (this._chainedTweens = e), this;
      }),
      (n.prototype.onStart = function (e) {
        return (this._onStartCallback = e), this;
      }),
      (n.prototype.onEveryStart = function (e) {
        return (this._onEveryStartCallback = e), this;
      }),
      (n.prototype.onUpdate = function (e) {
        return (this._onUpdateCallback = e), this;
      }),
      (n.prototype.onRepeat = function (e) {
        return (this._onRepeatCallback = e), this;
      }),
      (n.prototype.onComplete = function (e) {
        return (this._onCompleteCallback = e), this;
      }),
      (n.prototype.onStop = function (e) {
        return (this._onStopCallback = e), this;
      }),
      (n.prototype.update = function (e, t) {
        if (
          (e === void 0 && (e = va()), t === void 0 && (t = !0), this._isPaused)
        )
          return !0;
        var i,
          r,
          s = this._startTime + this._duration;
        if (!this._goToEnd && !this._isPlaying) {
          if (e > s) return !1;
          t && this.start(e, !0);
        }
        if (((this._goToEnd = !1), e < this._startTime)) return !0;
        this._onStartCallbackFired === !1 &&
          (this._onStartCallback && this._onStartCallback(this._object),
          (this._onStartCallbackFired = !0)),
          this._onEveryStartCallbackFired === !1 &&
            (this._onEveryStartCallback &&
              this._onEveryStartCallback(this._object),
            (this._onEveryStartCallbackFired = !0)),
          (r = (e - this._startTime) / this._duration),
          (r = this._duration === 0 || r > 1 ? 1 : r);
        var u = this._easingFunction(r);
        if (
          (this._updateProperties(
            this._object,
            this._valuesStart,
            this._valuesEnd,
            u
          ),
          this._onUpdateCallback && this._onUpdateCallback(this._object, r),
          r === 1)
        )
          if (this._repeat > 0) {
            isFinite(this._repeat) && this._repeat--;
            for (i in this._valuesStartRepeat)
              !this._yoyo &&
                typeof this._valuesEnd[i] == "string" &&
                (this._valuesStartRepeat[i] =
                  this._valuesStartRepeat[i] + parseFloat(this._valuesEnd[i])),
                this._yoyo && this._swapEndStartRepeatValues(i),
                (this._valuesStart[i] = this._valuesStartRepeat[i]);
            return (
              this._yoyo && (this._reversed = !this._reversed),
              this._repeatDelayTime !== void 0
                ? (this._startTime = e + this._repeatDelayTime)
                : (this._startTime = e + this._delayTime),
              this._onRepeatCallback && this._onRepeatCallback(this._object),
              (this._onEveryStartCallbackFired = !1),
              !0
            );
          } else {
            this._onCompleteCallback && this._onCompleteCallback(this._object);
            for (var c = 0, h = this._chainedTweens.length; c < h; c++)
              this._chainedTweens[c].start(
                this._startTime + this._duration,
                !1
              );
            return (this._isPlaying = !1), !1;
          }
        return !0;
      }),
      (n.prototype._updateProperties = function (e, t, i, r) {
        for (var s in i)
          if (t[s] !== void 0) {
            var u = t[s] || 0,
              c = i[s],
              h = Array.isArray(e[s]),
              p = Array.isArray(c),
              g = !h && p;
            g
              ? (e[s] = this._interpolationFunction(c, r))
              : typeof c == "object" && c
              ? this._updateProperties(e[s], u, c, r)
              : ((c = this._handleRelativeValue(u, c)),
                typeof c == "number" && (e[s] = u + (c - u) * r));
          }
      }),
      (n.prototype._handleRelativeValue = function (e, t) {
        return typeof t != "string"
          ? t
          : t.charAt(0) === "+" || t.charAt(0) === "-"
          ? e + parseFloat(t)
          : parseFloat(t);
      }),
      (n.prototype._swapEndStartRepeatValues = function (e) {
        var t = this._valuesStartRepeat[e],
          i = this._valuesEnd[e];
        typeof i == "string"
          ? (this._valuesStartRepeat[e] =
              this._valuesStartRepeat[e] + parseFloat(i))
          : (this._valuesStartRepeat[e] = this._valuesEnd[e]),
          (this._valuesEnd[e] = t);
      }),
      n
    );
  })(),
  yr = Bu;
yr.getAll.bind(yr);
yr.removeAll.bind(yr);
yr.add.bind(yr);
yr.remove.bind(yr);
var T6 = yr.update.bind(yr),
  C6 =
    typeof globalThis < "u"
      ? globalThis
      : typeof window < "u"
      ? window
      : typeof global < "u"
      ? global
      : typeof self < "u"
      ? self
      : {};
function Fc(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default")
    ? n.default
    : n;
}
var kc = { exports: {} };
kc.exports = n0;
kc.exports.default = n0;
function n0(n, e, t) {
  t = t || 2;
  var i = e && e.length,
    r = i ? e[0] * t : n.length,
    s = A2(n, 0, r, t, !0),
    u = [];
  if (!s || s.next === s.prev) return u;
  var c, h, p, g, v, x, M;
  if ((i && (s = I6(n, e, s, t)), n.length > 80 * t)) {
    (c = p = n[0]), (h = g = n[1]);
    for (var w = t; w < r; w += t)
      (v = n[w]),
        (x = n[w + 1]),
        v < c && (c = v),
        x < h && (h = x),
        v > p && (p = v),
        x > g && (g = x);
    (M = Math.max(p - c, g - h)), (M = M !== 0 ? 32767 / M : 0);
  }
  return Ua(s, u, t, c, h, M, 0), u;
}
function A2(n, e, t, i, r) {
  var s, u;
  if (r === ku(n, e, t, i) > 0)
    for (s = e; s < t; s += i) u = Dd(s, n[s], n[s + 1], u);
  else for (s = t - i; s >= e; s -= i) u = Dd(s, n[s], n[s + 1], u);
  return u && i0(u, u.next) && (Na(u), (u = u.next)), u;
}
function Gs(n, e) {
  if (!n) return n;
  e || (e = n);
  var t = n,
    i;
  do
    if (
      ((i = !1), !t.steiner && (i0(t, t.next) || xn(t.prev, t, t.next) === 0))
    ) {
      if ((Na(t), (t = e = t.prev), t === t.next)) break;
      i = !0;
    } else t = t.next;
  while (i || t !== e);
  return e;
}
function Ua(n, e, t, i, r, s, u) {
  if (n) {
    !u && s && N6(n, i, r, s);
    for (var c = n, h, p; n.prev !== n.next; ) {
      if (((h = n.prev), (p = n.next), s ? P6(n, i, r, s) : R6(n))) {
        e.push((h.i / t) | 0),
          e.push((n.i / t) | 0),
          e.push((p.i / t) | 0),
          Na(n),
          (n = p.next),
          (c = p.next);
        continue;
      }
      if (((n = p), n === c)) {
        u
          ? u === 1
            ? ((n = L6(Gs(n), e, t)), Ua(n, e, t, i, r, s, 2))
            : u === 2 && D6(n, e, t, i, r, s)
          : Ua(Gs(n), e, t, i, r, s, 1);
        break;
      }
    }
  }
}
function R6(n) {
  var e = n.prev,
    t = n,
    i = n.next;
  if (xn(e, t, i) >= 0) return !1;
  for (
    var r = e.x,
      s = t.x,
      u = i.x,
      c = e.y,
      h = t.y,
      p = i.y,
      g = r < s ? (r < u ? r : u) : s < u ? s : u,
      v = c < h ? (c < p ? c : p) : h < p ? h : p,
      x = r > s ? (r > u ? r : u) : s > u ? s : u,
      M = c > h ? (c > p ? c : p) : h > p ? h : p,
      w = i.next;
    w !== e;

  ) {
    if (
      w.x >= g &&
      w.x <= x &&
      w.y >= v &&
      w.y <= M &&
      Ro(r, c, s, h, u, p, w.x, w.y) &&
      xn(w.prev, w, w.next) >= 0
    )
      return !1;
    w = w.next;
  }
  return !0;
}
function P6(n, e, t, i) {
  var r = n.prev,
    s = n,
    u = n.next;
  if (xn(r, s, u) >= 0) return !1;
  for (
    var c = r.x,
      h = s.x,
      p = u.x,
      g = r.y,
      v = s.y,
      x = u.y,
      M = c < h ? (c < p ? c : p) : h < p ? h : p,
      w = g < v ? (g < x ? g : x) : v < x ? v : x,
      C = c > h ? (c > p ? c : p) : h > p ? h : p,
      E = g > v ? (g > x ? g : x) : v > x ? v : x,
      b = Nu(M, w, e, t, i),
      L = Nu(C, E, e, t, i),
      S = n.prevZ,
      R = n.nextZ;
    S && S.z >= b && R && R.z <= L;

  ) {
    if (
      (S.x >= M &&
        S.x <= C &&
        S.y >= w &&
        S.y <= E &&
        S !== r &&
        S !== u &&
        Ro(c, g, h, v, p, x, S.x, S.y) &&
        xn(S.prev, S, S.next) >= 0) ||
      ((S = S.prevZ),
      R.x >= M &&
        R.x <= C &&
        R.y >= w &&
        R.y <= E &&
        R !== r &&
        R !== u &&
        Ro(c, g, h, v, p, x, R.x, R.y) &&
        xn(R.prev, R, R.next) >= 0)
    )
      return !1;
    R = R.nextZ;
  }
  for (; S && S.z >= b; ) {
    if (
      S.x >= M &&
      S.x <= C &&
      S.y >= w &&
      S.y <= E &&
      S !== r &&
      S !== u &&
      Ro(c, g, h, v, p, x, S.x, S.y) &&
      xn(S.prev, S, S.next) >= 0
    )
      return !1;
    S = S.prevZ;
  }
  for (; R && R.z <= L; ) {
    if (
      R.x >= M &&
      R.x <= C &&
      R.y >= w &&
      R.y <= E &&
      R !== r &&
      R !== u &&
      Ro(c, g, h, v, p, x, R.x, R.y) &&
      xn(R.prev, R, R.next) >= 0
    )
      return !1;
    R = R.nextZ;
  }
  return !0;
}
function L6(n, e, t) {
  var i = n;
  do {
    var r = i.prev,
      s = i.next.next;
    !i0(r, s) &&
      l2(r, i, i.next, s) &&
      Ba(r, s) &&
      Ba(s, r) &&
      (e.push((r.i / t) | 0),
      e.push((i.i / t) | 0),
      e.push((s.i / t) | 0),
      Na(i),
      Na(i.next),
      (i = n = s)),
      (i = i.next);
  } while (i !== n);
  return Gs(i);
}
function D6(n, e, t, i, r, s) {
  var u = n;
  do {
    for (var c = u.next.next; c !== u.prev; ) {
      if (u.i !== c.i && z6(u, c)) {
        var h = u2(u, c);
        (u = Gs(u, u.next)),
          (h = Gs(h, h.next)),
          Ua(u, e, t, i, r, s, 0),
          Ua(h, e, t, i, r, s, 0);
        return;
      }
      c = c.next;
    }
    u = u.next;
  } while (u !== n);
}
function I6(n, e, t, i) {
  var r = [],
    s,
    u,
    c,
    h,
    p;
  for (s = 0, u = e.length; s < u; s++)
    (c = e[s] * i),
      (h = s < u - 1 ? e[s + 1] * i : n.length),
      (p = A2(n, c, h, i, !1)),
      p === p.next && (p.steiner = !0),
      r.push(k6(p));
  for (r.sort(O6), s = 0; s < r.length; s++) t = q6(r[s], t);
  return t;
}
function O6(n, e) {
  return n.x - e.x;
}
function q6(n, e) {
  var t = U6(n, e);
  if (!t) return e;
  var i = u2(t, n);
  return Gs(i, i.next), Gs(t, t.next);
}
function U6(n, e) {
  var t = e,
    i = n.x,
    r = n.y,
    s = -1 / 0,
    u;
  do {
    if (r <= t.y && r >= t.next.y && t.next.y !== t.y) {
      var c = t.x + ((r - t.y) * (t.next.x - t.x)) / (t.next.y - t.y);
      if (
        c <= i &&
        c > s &&
        ((s = c), (u = t.x < t.next.x ? t : t.next), c === i)
      )
        return u;
    }
    t = t.next;
  } while (t !== e);
  if (!u) return null;
  var h = u,
    p = u.x,
    g = u.y,
    v = 1 / 0,
    x;
  t = u;
  do
    i >= t.x &&
      t.x >= p &&
      i !== t.x &&
      Ro(r < g ? i : s, r, p, g, r < g ? s : i, r, t.x, t.y) &&
      ((x = Math.abs(r - t.y) / (i - t.x)),
      Ba(t, n) &&
        (x < v || (x === v && (t.x > u.x || (t.x === u.x && B6(u, t))))) &&
        ((u = t), (v = x))),
      (t = t.next);
  while (t !== h);
  return u;
}
function B6(n, e) {
  return xn(n.prev, n, e.prev) < 0 && xn(e.next, n, n.next) < 0;
}
function N6(n, e, t, i) {
  var r = n;
  do
    r.z === 0 && (r.z = Nu(r.x, r.y, e, t, i)),
      (r.prevZ = r.prev),
      (r.nextZ = r.next),
      (r = r.next);
  while (r !== n);
  (r.prevZ.nextZ = null), (r.prevZ = null), F6(r);
}
function F6(n) {
  var e,
    t,
    i,
    r,
    s,
    u,
    c,
    h,
    p = 1;
  do {
    for (t = n, n = null, s = null, u = 0; t; ) {
      for (u++, i = t, c = 0, e = 0; e < p && (c++, (i = i.nextZ), !!i); e++);
      for (h = p; c > 0 || (h > 0 && i); )
        c !== 0 && (h === 0 || !i || t.z <= i.z)
          ? ((r = t), (t = t.nextZ), c--)
          : ((r = i), (i = i.nextZ), h--),
          s ? (s.nextZ = r) : (n = r),
          (r.prevZ = s),
          (s = r);
      t = i;
    }
    (s.nextZ = null), (p *= 2);
  } while (u > 1);
  return n;
}
function Nu(n, e, t, i, r) {
  return (
    (n = ((n - t) * r) | 0),
    (e = ((e - i) * r) | 0),
    (n = (n | (n << 8)) & 16711935),
    (n = (n | (n << 4)) & 252645135),
    (n = (n | (n << 2)) & 858993459),
    (n = (n | (n << 1)) & 1431655765),
    (e = (e | (e << 8)) & 16711935),
    (e = (e | (e << 4)) & 252645135),
    (e = (e | (e << 2)) & 858993459),
    (e = (e | (e << 1)) & 1431655765),
    n | (e << 1)
  );
}
function k6(n) {
  var e = n,
    t = n;
  do (e.x < t.x || (e.x === t.x && e.y < t.y)) && (t = e), (e = e.next);
  while (e !== n);
  return t;
}
function Ro(n, e, t, i, r, s, u, c) {
  return (
    (r - u) * (e - c) >= (n - u) * (s - c) &&
    (n - u) * (i - c) >= (t - u) * (e - c) &&
    (t - u) * (s - c) >= (r - u) * (i - c)
  );
}
function z6(n, e) {
  return (
    n.next.i !== e.i &&
    n.prev.i !== e.i &&
    !G6(n, e) &&
    ((Ba(n, e) &&
      Ba(e, n) &&
      H6(n, e) &&
      (xn(n.prev, n, e.prev) || xn(n, e.prev, e))) ||
      (i0(n, e) && xn(n.prev, n, n.next) > 0 && xn(e.prev, e, e.next) > 0))
  );
}
function xn(n, e, t) {
  return (e.y - n.y) * (t.x - e.x) - (e.x - n.x) * (t.y - e.y);
}
function i0(n, e) {
  return n.x === e.x && n.y === e.y;
}
function l2(n, e, t, i) {
  var r = OA(xn(n, e, t)),
    s = OA(xn(n, e, i)),
    u = OA(xn(t, i, n)),
    c = OA(xn(t, i, e));
  return !!(
    (r !== s && u !== c) ||
    (r === 0 && IA(n, t, e)) ||
    (s === 0 && IA(n, i, e)) ||
    (u === 0 && IA(t, n, i)) ||
    (c === 0 && IA(t, e, i))
  );
}
function IA(n, e, t) {
  return (
    e.x <= Math.max(n.x, t.x) &&
    e.x >= Math.min(n.x, t.x) &&
    e.y <= Math.max(n.y, t.y) &&
    e.y >= Math.min(n.y, t.y)
  );
}
function OA(n) {
  return n > 0 ? 1 : n < 0 ? -1 : 0;
}
function G6(n, e) {
  var t = n;
  do {
    if (
      t.i !== n.i &&
      t.next.i !== n.i &&
      t.i !== e.i &&
      t.next.i !== e.i &&
      l2(t, t.next, n, e)
    )
      return !0;
    t = t.next;
  } while (t !== n);
  return !1;
}
function Ba(n, e) {
  return xn(n.prev, n, n.next) < 0
    ? xn(n, e, n.next) >= 0 && xn(n, n.prev, e) >= 0
    : xn(n, e, n.prev) < 0 || xn(n, n.next, e) < 0;
}
function H6(n, e) {
  var t = n,
    i = !1,
    r = (n.x + e.x) / 2,
    s = (n.y + e.y) / 2;
  do
    t.y > s != t.next.y > s &&
      t.next.y !== t.y &&
      r < ((t.next.x - t.x) * (s - t.y)) / (t.next.y - t.y) + t.x &&
      (i = !i),
      (t = t.next);
  while (t !== n);
  return i;
}
function u2(n, e) {
  var t = new Fu(n.i, n.x, n.y),
    i = new Fu(e.i, e.x, e.y),
    r = n.next,
    s = e.prev;
  return (
    (n.next = e),
    (e.prev = n),
    (t.next = r),
    (r.prev = t),
    (i.next = t),
    (t.prev = i),
    (s.next = i),
    (i.prev = s),
    i
  );
}
function Dd(n, e, t, i) {
  var r = new Fu(n, e, t);
  return (
    i
      ? ((r.next = i.next), (r.prev = i), (i.next.prev = r), (i.next = r))
      : ((r.prev = r), (r.next = r)),
    r
  );
}
function Na(n) {
  (n.next.prev = n.prev),
    (n.prev.next = n.next),
    n.prevZ && (n.prevZ.nextZ = n.nextZ),
    n.nextZ && (n.nextZ.prevZ = n.prevZ);
}
function Fu(n, e, t) {
  (this.i = n),
    (this.x = e),
    (this.y = t),
    (this.prev = null),
    (this.next = null),
    (this.z = 0),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
n0.deviation = function (n, e, t, i) {
  var r = e && e.length,
    s = r ? e[0] * t : n.length,
    u = Math.abs(ku(n, 0, s, t));
  if (r)
    for (var c = 0, h = e.length; c < h; c++) {
      var p = e[c] * t,
        g = c < h - 1 ? e[c + 1] * t : n.length;
      u -= Math.abs(ku(n, p, g, t));
    }
  var v = 0;
  for (c = 0; c < i.length; c += 3) {
    var x = i[c] * t,
      M = i[c + 1] * t,
      w = i[c + 2] * t;
    v += Math.abs(
      (n[x] - n[w]) * (n[M + 1] - n[x + 1]) -
        (n[x] - n[M]) * (n[w + 1] - n[x + 1])
    );
  }
  return u === 0 && v === 0 ? 0 : Math.abs((v - u) / u);
};
function ku(n, e, t, i) {
  for (var r = 0, s = e, u = t - i; s < t; s += i)
    (r += (n[u] - n[s]) * (n[s + 1] + n[u + 1])), (u = s);
  return r;
}
n0.flatten = function (n) {
  for (
    var e = n[0][0].length,
      t = { vertices: [], holes: [], dimensions: e },
      i = 0,
      r = 0;
    r < n.length;
    r++
  ) {
    for (var s = 0; s < n[r].length; s++)
      for (var u = 0; u < e; u++) t.vertices.push(n[r][s][u]);
    r > 0 && ((i += n[r - 1].length), t.holes.push(i));
  }
  return t;
};
var V6 = kc.exports;
const Fa = Fc(V6);
function il(n, e) {
  return n == null || e == null
    ? NaN
    : n < e
    ? -1
    : n > e
    ? 1
    : n >= e
    ? 0
    : NaN;
}
function W6(n, e) {
  return n == null || e == null
    ? NaN
    : e < n
    ? -1
    : e > n
    ? 1
    : e >= n
    ? 0
    : NaN;
}
function c2(n) {
  let e, t, i;
  n.length !== 2
    ? ((e = il), (t = (c, h) => il(n(c), h)), (i = (c, h) => n(c) - h))
    : ((e = n === il || n === W6 ? n : j6), (t = n), (i = n));
  function r(c, h, p = 0, g = c.length) {
    if (p < g) {
      if (e(h, h) !== 0) return g;
      do {
        const v = (p + g) >>> 1;
        t(c[v], h) < 0 ? (p = v + 1) : (g = v);
      } while (p < g);
    }
    return p;
  }
  function s(c, h, p = 0, g = c.length) {
    if (p < g) {
      if (e(h, h) !== 0) return g;
      do {
        const v = (p + g) >>> 1;
        t(c[v], h) <= 0 ? (p = v + 1) : (g = v);
      } while (p < g);
    }
    return p;
  }
  function u(c, h, p = 0, g = c.length) {
    const v = r(c, h, p, g - 1);
    return v > p && i(c[v - 1], h) > -i(c[v], h) ? v - 1 : v;
  }
  return { left: r, center: u, right: s };
}
function j6() {
  return 0;
}
function X6(n) {
  return n === null ? NaN : +n;
}
const Q6 = c2(il),
  $6 = Q6.right;
c2(X6).center;
const Y6 = $6;
function fl(n, e) {
  let t, i;
  if (e === void 0)
    for (const r of n)
      r != null &&
        (t === void 0
          ? r >= r && (t = i = r)
          : (t > r && (t = r), i < r && (i = r)));
  else {
    let r = -1;
    for (let s of n)
      (s = e(s, ++r, n)) != null &&
        (t === void 0
          ? s >= s && (t = i = s)
          : (t > s && (t = s), i < s && (i = s)));
  }
  return [t, i];
}
class Br {
  constructor() {
    (this._partials = new Float64Array(32)), (this._n = 0);
  }
  add(e) {
    const t = this._partials;
    let i = 0;
    for (let r = 0; r < this._n && r < 32; r++) {
      const s = t[r],
        u = e + s,
        c = Math.abs(e) < Math.abs(s) ? e - (u - s) : s - (u - e);
      c && (t[i++] = c), (e = u);
    }
    return (t[i] = e), (this._n = i + 1), this;
  }
  valueOf() {
    const e = this._partials;
    let t = this._n,
      i,
      r,
      s,
      u = 0;
    if (t > 0) {
      for (
        u = e[--t];
        t > 0 && ((i = u), (r = e[--t]), (u = i + r), (s = r - (u - i)), !s);

      );
      t > 0 &&
        ((s < 0 && e[t - 1] < 0) || (s > 0 && e[t - 1] > 0)) &&
        ((r = s * 2), (i = u + r), r == i - u && (u = i));
    }
    return u;
  }
}
const Z6 = Math.sqrt(50),
  K6 = Math.sqrt(10),
  J6 = Math.sqrt(2);
function hl(n, e, t) {
  const i = (e - n) / Math.max(0, t),
    r = Math.floor(Math.log10(i)),
    s = i / Math.pow(10, r),
    u = s >= Z6 ? 10 : s >= K6 ? 5 : s >= J6 ? 2 : 1;
  let c, h, p;
  return (
    r < 0
      ? ((p = Math.pow(10, -r) / u),
        (c = Math.round(n * p)),
        (h = Math.round(e * p)),
        c / p < n && ++c,
        h / p > e && --h,
        (p = -p))
      : ((p = Math.pow(10, r) * u),
        (c = Math.round(n / p)),
        (h = Math.round(e / p)),
        c * p < n && ++c,
        h * p > e && --h),
    h < c && 0.5 <= t && t < 2 ? hl(n, e, t * 2) : [c, h, p]
  );
}
function eb(n, e, t) {
  if (((e = +e), (n = +n), (t = +t), !(t > 0))) return [];
  if (n === e) return [n];
  const i = e < n,
    [r, s, u] = i ? hl(e, n, t) : hl(n, e, t);
  if (!(s >= r)) return [];
  const c = s - r + 1,
    h = new Array(c);
  if (i)
    if (u < 0) for (let p = 0; p < c; ++p) h[p] = (s - p) / -u;
    else for (let p = 0; p < c; ++p) h[p] = (s - p) * u;
  else if (u < 0) for (let p = 0; p < c; ++p) h[p] = (r + p) / -u;
  else for (let p = 0; p < c; ++p) h[p] = (r + p) * u;
  return h;
}
function zu(n, e, t) {
  return (e = +e), (n = +n), (t = +t), hl(n, e, t)[2];
}
function tb(n, e, t) {
  (e = +e), (n = +n), (t = +t);
  const i = e < n,
    r = i ? zu(e, n, t) : zu(n, e, t);
  return (i ? -1 : 1) * (r < 0 ? 1 / -r : r);
}
function nb(n, e) {
  let t;
  if (e === void 0)
    for (const i of n)
      i != null && (t < i || (t === void 0 && i >= i)) && (t = i);
  else {
    let i = -1;
    for (let r of n)
      (r = e(r, ++i, n)) != null &&
        (t < r || (t === void 0 && r >= r)) &&
        (t = r);
  }
  return t;
}
function ib(n, e) {
  let t = 0,
    i = 0;
  if (e === void 0)
    for (let r of n) r != null && (r = +r) >= r && (++t, (i += r));
  else {
    let r = -1;
    for (let s of n)
      (s = e(s, ++r, n)) != null && (s = +s) >= s && (++t, (i += s));
  }
  if (t) return i / t;
}
function* rb(n) {
  for (const e of n) yield* e;
}
function ka(n) {
  return Array.from(rb(n));
}
function Po(n, e, t) {
  (n = +n),
    (e = +e),
    (t = (r = arguments.length) < 2 ? ((e = n), (n = 0), 1) : r < 3 ? 1 : +t);
  for (
    var i = -1, r = Math.max(0, Math.ceil((e - n) / t)) | 0, s = new Array(r);
    ++i < r;

  )
    s[i] = n + i * t;
  return s;
}
function sb(n, e) {
  let t = 0;
  if (e === void 0) for (let i of n) (i = +i) && (t += i);
  else {
    let i = -1;
    for (let r of n) (r = +e(r, ++i, n)) && (t += r);
  }
  return t;
}
var Ht = 1e-6,
  dl = 1e-12,
  $t = Math.PI,
  Hi = $t / 2,
  pl = $t / 4,
  Li = $t * 2,
  Mn = 180 / $t,
  Tt = $t / 180,
  an = Math.abs,
  f2 = Math.atan,
  Vi = Math.atan2,
  It = Math.cos,
  qA = Math.ceil,
  Gu = Math.hypot,
  _t = Math.sin,
  ob =
    Math.sign ||
    function (n) {
      return n > 0 ? 1 : n < 0 ? -1 : 0;
    },
  Fr = Math.sqrt;
function ab(n) {
  return n > 1 ? 0 : n < -1 ? $t : Math.acos(n);
}
function kr(n) {
  return n > 1 ? Hi : n < -1 ? -Hi : Math.asin(n);
}
function Id(n) {
  return (n = _t(n / 2)) * n;
}
function Kn() {}
function ml(n, e) {
  n && qd.hasOwnProperty(n.type) && qd[n.type](n, e);
}
var Od = {
    Feature: function (n, e) {
      ml(n.geometry, e);
    },
    FeatureCollection: function (n, e) {
      for (var t = n.features, i = -1, r = t.length; ++i < r; )
        ml(t[i].geometry, e);
    },
  },
  qd = {
    Sphere: function (n, e) {
      e.sphere();
    },
    Point: function (n, e) {
      (n = n.coordinates), e.point(n[0], n[1], n[2]);
    },
    MultiPoint: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        (n = t[i]), e.point(n[0], n[1], n[2]);
    },
    LineString: function (n, e) {
      Hu(n.coordinates, e, 0);
    },
    MultiLineString: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        Hu(t[i], e, 0);
    },
    Polygon: function (n, e) {
      Ud(n.coordinates, e);
    },
    MultiPolygon: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; ) Ud(t[i], e);
    },
    GeometryCollection: function (n, e) {
      for (var t = n.geometries, i = -1, r = t.length; ++i < r; ) ml(t[i], e);
    },
  };
function Hu(n, e, t) {
  var i = -1,
    r = n.length - t,
    s;
  for (e.lineStart(); ++i < r; ) (s = n[i]), e.point(s[0], s[1], s[2]);
  e.lineEnd();
}
function Ud(n, e) {
  var t = -1,
    i = n.length;
  for (e.polygonStart(); ++t < i; ) Hu(n[t], e, 1);
  e.polygonEnd();
}
function r0(n, e) {
  n && Od.hasOwnProperty(n.type) ? Od[n.type](n, e) : ml(n, e);
}
var gl = new Br(),
  Bd = new Br(),
  h2,
  d2,
  Vu,
  Wu,
  ju,
  zr = {
    point: Kn,
    lineStart: Kn,
    lineEnd: Kn,
    polygonStart: function () {
      (gl = new Br()), (zr.lineStart = Ab), (zr.lineEnd = lb);
    },
    polygonEnd: function () {
      var n = +gl;
      Bd.add(n < 0 ? Li + n : n),
        (this.lineStart = this.lineEnd = this.point = Kn);
    },
    sphere: function () {
      Bd.add(Li);
    },
  };
function Ab() {
  zr.point = ub;
}
function lb() {
  p2(h2, d2);
}
function ub(n, e) {
  (zr.point = p2),
    (h2 = n),
    (d2 = e),
    (n *= Tt),
    (e *= Tt),
    (Vu = n),
    (Wu = It((e = e / 2 + pl))),
    (ju = _t(e));
}
function p2(n, e) {
  (n *= Tt), (e *= Tt), (e = e / 2 + pl);
  var t = n - Vu,
    i = t >= 0 ? 1 : -1,
    r = i * t,
    s = It(e),
    u = _t(e),
    c = ju * u,
    h = Wu * s + c * It(r),
    p = c * i * _t(r);
  gl.add(Vi(p, h)), (Vu = n), (Wu = s), (ju = u);
}
function vl(n) {
  return [Vi(n[1], n[0]), kr(n[2])];
}
function Hs(n) {
  var e = n[0],
    t = n[1],
    i = It(t);
  return [i * It(e), i * _t(e), _t(t)];
}
function UA(n, e) {
  return n[0] * e[0] + n[1] * e[1] + n[2] * e[2];
}
function Go(n, e) {
  return [
    n[1] * e[2] - n[2] * e[1],
    n[2] * e[0] - n[0] * e[2],
    n[0] * e[1] - n[1] * e[0],
  ];
}
function au(n, e) {
  (n[0] += e[0]), (n[1] += e[1]), (n[2] += e[2]);
}
function BA(n, e) {
  return [n[0] * e, n[1] * e, n[2] * e];
}
function _l(n) {
  var e = Fr(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);
  (n[0] /= e), (n[1] /= e), (n[2] /= e);
}
var vn,
  pi,
  bn,
  Ci,
  Ps,
  m2,
  g2,
  Uo,
  Ta,
  rs,
  Gr,
  qr = {
    point: Xu,
    lineStart: Nd,
    lineEnd: Fd,
    polygonStart: function () {
      (qr.point = _2),
        (qr.lineStart = cb),
        (qr.lineEnd = fb),
        (Ta = new Br()),
        zr.polygonStart();
    },
    polygonEnd: function () {
      zr.polygonEnd(),
        (qr.point = Xu),
        (qr.lineStart = Nd),
        (qr.lineEnd = Fd),
        gl < 0
          ? ((vn = -(bn = 180)), (pi = -(Ci = 90)))
          : Ta > Ht
          ? (Ci = 90)
          : Ta < -Ht && (pi = -90),
        (Gr[0] = vn),
        (Gr[1] = bn);
    },
    sphere: function () {
      (vn = -(bn = 180)), (pi = -(Ci = 90));
    },
  };
function Xu(n, e) {
  rs.push((Gr = [(vn = n), (bn = n)])), e < pi && (pi = e), e > Ci && (Ci = e);
}
function v2(n, e) {
  var t = Hs([n * Tt, e * Tt]);
  if (Uo) {
    var i = Go(Uo, t),
      r = [i[1], -i[0], 0],
      s = Go(r, i);
    _l(s), (s = vl(s));
    var u = n - Ps,
      c = u > 0 ? 1 : -1,
      h = s[0] * Mn * c,
      p,
      g = an(u) > 180;
    g ^ (c * Ps < h && h < c * n)
      ? ((p = s[1] * Mn), p > Ci && (Ci = p))
      : ((h = ((h + 360) % 360) - 180),
        g ^ (c * Ps < h && h < c * n)
          ? ((p = -s[1] * Mn), p < pi && (pi = p))
          : (e < pi && (pi = e), e > Ci && (Ci = e))),
      g
        ? n < Ps
          ? Si(vn, n) > Si(vn, bn) && (bn = n)
          : Si(n, bn) > Si(vn, bn) && (vn = n)
        : bn >= vn
        ? (n < vn && (vn = n), n > bn && (bn = n))
        : n > Ps
        ? Si(vn, n) > Si(vn, bn) && (bn = n)
        : Si(n, bn) > Si(vn, bn) && (vn = n);
  } else rs.push((Gr = [(vn = n), (bn = n)]));
  e < pi && (pi = e), e > Ci && (Ci = e), (Uo = t), (Ps = n);
}
function Nd() {
  qr.point = v2;
}
function Fd() {
  (Gr[0] = vn), (Gr[1] = bn), (qr.point = Xu), (Uo = null);
}
function _2(n, e) {
  if (Uo) {
    var t = n - Ps;
    Ta.add(an(t) > 180 ? t + (t > 0 ? 360 : -360) : t);
  } else (m2 = n), (g2 = e);
  zr.point(n, e), v2(n, e);
}
function cb() {
  zr.lineStart();
}
function fb() {
  _2(m2, g2),
    zr.lineEnd(),
    an(Ta) > Ht && (vn = -(bn = 180)),
    (Gr[0] = vn),
    (Gr[1] = bn),
    (Uo = null);
}
function Si(n, e) {
  return (e -= n) < 0 ? e + 360 : e;
}
function hb(n, e) {
  return n[0] - e[0];
}
function kd(n, e) {
  return n[0] <= n[1] ? n[0] <= e && e <= n[1] : e < n[0] || n[1] < e;
}
function x2(n) {
  var e, t, i, r, s, u, c;
  if (((Ci = bn = -(vn = pi = 1 / 0)), (rs = []), r0(n, qr), (t = rs.length))) {
    for (rs.sort(hb), e = 1, i = rs[0], s = [i]; e < t; ++e)
      (r = rs[e]),
        kd(i, r[0]) || kd(i, r[1])
          ? (Si(i[0], r[1]) > Si(i[0], i[1]) && (i[1] = r[1]),
            Si(r[0], i[1]) > Si(i[0], i[1]) && (i[0] = r[0]))
          : s.push((i = r));
    for (u = -1 / 0, t = s.length - 1, e = 0, i = s[t]; e <= t; i = r, ++e)
      (r = s[e]),
        (c = Si(i[1], r[0])) > u && ((u = c), (vn = r[0]), (bn = i[1]));
  }
  return (
    (rs = Gr = null),
    vn === 1 / 0 || pi === 1 / 0
      ? [
          [NaN, NaN],
          [NaN, NaN],
        ]
      : [
          [vn, pi],
          [bn, Ci],
        ]
  );
}
var _a,
  xl,
  yl,
  bl,
  Ml,
  El,
  wl,
  Sl,
  Qu,
  $u,
  Yu,
  y2,
  b2,
  li,
  ui,
  ci,
  rr = {
    sphere: Kn,
    point: zc,
    lineStart: zd,
    lineEnd: Gd,
    polygonStart: function () {
      (rr.lineStart = mb), (rr.lineEnd = gb);
    },
    polygonEnd: function () {
      (rr.lineStart = zd), (rr.lineEnd = Gd);
    },
  };
function zc(n, e) {
  (n *= Tt), (e *= Tt);
  var t = It(e);
  Ya(t * It(n), t * _t(n), _t(e));
}
function Ya(n, e, t) {
  ++_a, (yl += (n - yl) / _a), (bl += (e - bl) / _a), (Ml += (t - Ml) / _a);
}
function zd() {
  rr.point = db;
}
function db(n, e) {
  (n *= Tt), (e *= Tt);
  var t = It(e);
  (li = t * It(n)),
    (ui = t * _t(n)),
    (ci = _t(e)),
    (rr.point = pb),
    Ya(li, ui, ci);
}
function pb(n, e) {
  (n *= Tt), (e *= Tt);
  var t = It(e),
    i = t * It(n),
    r = t * _t(n),
    s = _t(e),
    u = Vi(
      Fr(
        (u = ui * s - ci * r) * u +
          (u = ci * i - li * s) * u +
          (u = li * r - ui * i) * u
      ),
      li * i + ui * r + ci * s
    );
  (xl += u),
    (El += u * (li + (li = i))),
    (wl += u * (ui + (ui = r))),
    (Sl += u * (ci + (ci = s))),
    Ya(li, ui, ci);
}
function Gd() {
  rr.point = zc;
}
function mb() {
  rr.point = vb;
}
function gb() {
  M2(y2, b2), (rr.point = zc);
}
function vb(n, e) {
  (y2 = n), (b2 = e), (n *= Tt), (e *= Tt), (rr.point = M2);
  var t = It(e);
  (li = t * It(n)), (ui = t * _t(n)), (ci = _t(e)), Ya(li, ui, ci);
}
function M2(n, e) {
  (n *= Tt), (e *= Tt);
  var t = It(e),
    i = t * It(n),
    r = t * _t(n),
    s = _t(e),
    u = ui * s - ci * r,
    c = ci * i - li * s,
    h = li * r - ui * i,
    p = Gu(u, c, h),
    g = kr(p),
    v = p && -g / p;
  Qu.add(v * u),
    $u.add(v * c),
    Yu.add(v * h),
    (xl += g),
    (El += g * (li + (li = i))),
    (wl += g * (ui + (ui = r))),
    (Sl += g * (ci + (ci = s))),
    Ya(li, ui, ci);
}
function Hd(n) {
  (_a = xl = yl = bl = Ml = El = wl = Sl = 0),
    (Qu = new Br()),
    ($u = new Br()),
    (Yu = new Br()),
    r0(n, rr);
  var e = +Qu,
    t = +$u,
    i = +Yu,
    r = Gu(e, t, i);
  return r < dl &&
    ((e = El),
    (t = wl),
    (i = Sl),
    xl < Ht && ((e = yl), (t = bl), (i = Ml)),
    (r = Gu(e, t, i)),
    r < dl)
    ? [NaN, NaN]
    : [Vi(t, e) * Mn, kr(i / r) * Mn];
}
function Zu(n, e) {
  function t(i, r) {
    return (i = n(i, r)), e(i[0], i[1]);
  }
  return (
    n.invert &&
      e.invert &&
      (t.invert = function (i, r) {
        return (i = e.invert(i, r)), i && n.invert(i[0], i[1]);
      }),
    t
  );
}
function Ku(n, e) {
  return an(n) > $t && (n -= Math.round(n / Li) * Li), [n, e];
}
Ku.invert = Ku;
function E2(n, e, t) {
  return (n %= Li)
    ? e || t
      ? Zu(Wd(n), jd(e, t))
      : Wd(n)
    : e || t
    ? jd(e, t)
    : Ku;
}
function Vd(n) {
  return function (e, t) {
    return (e += n), an(e) > $t && (e -= Math.round(e / Li) * Li), [e, t];
  };
}
function Wd(n) {
  var e = Vd(n);
  return (e.invert = Vd(-n)), e;
}
function jd(n, e) {
  var t = It(n),
    i = _t(n),
    r = It(e),
    s = _t(e);
  function u(c, h) {
    var p = It(h),
      g = It(c) * p,
      v = _t(c) * p,
      x = _t(h),
      M = x * t + g * i;
    return [Vi(v * r - M * s, g * t - x * i), kr(M * r + v * s)];
  }
  return (
    (u.invert = function (c, h) {
      var p = It(h),
        g = It(c) * p,
        v = _t(c) * p,
        x = _t(h),
        M = x * r - v * s;
      return [Vi(v * r + x * s, g * t + M * i), kr(M * t - g * i)];
    }),
    u
  );
}
function _b(n) {
  n = E2(n[0] * Tt, n[1] * Tt, n.length > 2 ? n[2] * Tt : 0);
  function e(t) {
    return (t = n(t[0] * Tt, t[1] * Tt)), (t[0] *= Mn), (t[1] *= Mn), t;
  }
  return (
    (e.invert = function (t) {
      return (
        (t = n.invert(t[0] * Tt, t[1] * Tt)), (t[0] *= Mn), (t[1] *= Mn), t
      );
    }),
    e
  );
}
function xb(n, e, t, i, r, s) {
  if (t) {
    var u = It(e),
      c = _t(e),
      h = i * t;
    r == null
      ? ((r = e + i * Li), (s = e - h / 2))
      : ((r = Xd(u, r)),
        (s = Xd(u, s)),
        (i > 0 ? r < s : r > s) && (r += i * Li));
    for (var p, g = r; i > 0 ? g > s : g < s; g -= h)
      (p = vl([u, -c * It(g), -c * _t(g)])), n.point(p[0], p[1]);
  }
}
function Xd(n, e) {
  (e = Hs(e)), (e[0] -= n), _l(e);
  var t = ab(-e[1]);
  return ((-e[2] < 0 ? -t : t) + Li - Ht) % Li;
}
function w2() {
  var n = [],
    e;
  return {
    point: function (t, i, r) {
      e.push([t, i, r]);
    },
    lineStart: function () {
      n.push((e = []));
    },
    lineEnd: Kn,
    rejoin: function () {
      n.length > 1 && n.push(n.pop().concat(n.shift()));
    },
    result: function () {
      var t = n;
      return (n = []), (e = null), t;
    },
  };
}
function rl(n, e) {
  return an(n[0] - e[0]) < Ht && an(n[1] - e[1]) < Ht;
}
function NA(n, e, t, i) {
  (this.x = n),
    (this.z = e),
    (this.o = t),
    (this.e = i),
    (this.v = !1),
    (this.n = this.p = null);
}
function S2(n, e, t, i, r) {
  var s = [],
    u = [],
    c,
    h;
  if (
    (n.forEach(function (w) {
      if (!((C = w.length - 1) <= 0)) {
        var C,
          E = w[0],
          b = w[C],
          L;
        if (rl(E, b)) {
          if (!E[2] && !b[2]) {
            for (r.lineStart(), c = 0; c < C; ++c) r.point((E = w[c])[0], E[1]);
            r.lineEnd();
            return;
          }
          b[0] += 2 * Ht;
        }
        s.push((L = new NA(E, w, null, !0))),
          u.push((L.o = new NA(E, null, L, !1))),
          s.push((L = new NA(b, w, null, !1))),
          u.push((L.o = new NA(b, null, L, !0)));
      }
    }),
    !!s.length)
  ) {
    for (u.sort(e), Qd(s), Qd(u), c = 0, h = u.length; c < h; ++c)
      u[c].e = t = !t;
    for (var p = s[0], g, v; ; ) {
      for (var x = p, M = !0; x.v; ) if ((x = x.n) === p) return;
      (g = x.z), r.lineStart();
      do {
        if (((x.v = x.o.v = !0), x.e)) {
          if (M)
            for (c = 0, h = g.length; c < h; ++c) r.point((v = g[c])[0], v[1]);
          else i(x.x, x.n.x, 1, r);
          x = x.n;
        } else {
          if (M)
            for (g = x.p.z, c = g.length - 1; c >= 0; --c)
              r.point((v = g[c])[0], v[1]);
          else i(x.x, x.p.x, -1, r);
          x = x.p;
        }
        (x = x.o), (g = x.z), (M = !M);
      } while (!x.v);
      r.lineEnd();
    }
  }
}
function Qd(n) {
  if ((e = n.length)) {
    for (var e, t = 0, i = n[0], r; ++t < e; )
      (i.n = r = n[t]), (r.p = i), (i = r);
    (i.n = r = n[0]), (r.p = i);
  }
}
function Au(n) {
  return an(n[0]) <= $t ? n[0] : ob(n[0]) * (((an(n[0]) + $t) % Li) - $t);
}
function T2(n, e) {
  var t = Au(e),
    i = e[1],
    r = _t(i),
    s = [_t(t), -It(t), 0],
    u = 0,
    c = 0,
    h = new Br();
  r === 1 ? (i = Hi + Ht) : r === -1 && (i = -Hi - Ht);
  for (var p = 0, g = n.length; p < g; ++p)
    if ((x = (v = n[p]).length))
      for (
        var v,
          x,
          M = v[x - 1],
          w = Au(M),
          C = M[1] / 2 + pl,
          E = _t(C),
          b = It(C),
          L = 0;
        L < x;
        ++L, w = R, E = q, b = I, M = S
      ) {
        var S = v[L],
          R = Au(S),
          U = S[1] / 2 + pl,
          q = _t(U),
          I = It(U),
          N = R - w,
          D = N >= 0 ? 1 : -1,
          O = D * N,
          k = O > $t,
          $ = E * q;
        if (
          (h.add(Vi($ * D * _t(O), b * I + $ * It(O))),
          (u += k ? N + D * Li : N),
          k ^ (w >= t) ^ (R >= t))
        ) {
          var H = Go(Hs(M), Hs(S));
          _l(H);
          var Q = Go(s, H);
          _l(Q);
          var F = (k ^ (N >= 0) ? -1 : 1) * kr(Q[2]);
          (i > F || (i === F && (H[0] || H[1]))) &&
            (c += k ^ (N >= 0) ? 1 : -1);
        }
      }
  return (u < -Ht || (u < Ht && h < -dl)) ^ (c & 1);
}
function C2(n, e, t, i) {
  return function (r) {
    var s = e(r),
      u = w2(),
      c = e(u),
      h = !1,
      p,
      g,
      v,
      x = {
        point: M,
        lineStart: C,
        lineEnd: E,
        polygonStart: function () {
          (x.point = b), (x.lineStart = L), (x.lineEnd = S), (g = []), (p = []);
        },
        polygonEnd: function () {
          (x.point = M), (x.lineStart = C), (x.lineEnd = E), (g = ka(g));
          var R = T2(p, i);
          g.length
            ? (h || (r.polygonStart(), (h = !0)), S2(g, bb, R, t, r))
            : R &&
              (h || (r.polygonStart(), (h = !0)),
              r.lineStart(),
              t(null, null, 1, r),
              r.lineEnd()),
            h && (r.polygonEnd(), (h = !1)),
            (g = p = null);
        },
        sphere: function () {
          r.polygonStart(),
            r.lineStart(),
            t(null, null, 1, r),
            r.lineEnd(),
            r.polygonEnd();
        },
      };
    function M(R, U) {
      n(R, U) && r.point(R, U);
    }
    function w(R, U) {
      s.point(R, U);
    }
    function C() {
      (x.point = w), s.lineStart();
    }
    function E() {
      (x.point = M), s.lineEnd();
    }
    function b(R, U) {
      v.push([R, U]), c.point(R, U);
    }
    function L() {
      c.lineStart(), (v = []);
    }
    function S() {
      b(v[0][0], v[0][1]), c.lineEnd();
      var R = c.clean(),
        U = u.result(),
        q,
        I = U.length,
        N,
        D,
        O;
      if ((v.pop(), p.push(v), (v = null), !!I)) {
        if (R & 1) {
          if (((D = U[0]), (N = D.length - 1) > 0)) {
            for (
              h || (r.polygonStart(), (h = !0)), r.lineStart(), q = 0;
              q < N;
              ++q
            )
              r.point((O = D[q])[0], O[1]);
            r.lineEnd();
          }
          return;
        }
        I > 1 && R & 2 && U.push(U.pop().concat(U.shift())),
          g.push(U.filter(yb));
      }
    }
    return x;
  };
}
function yb(n) {
  return n.length > 1;
}
function bb(n, e) {
  return (
    ((n = n.x)[0] < 0 ? n[1] - Hi - Ht : Hi - n[1]) -
    ((e = e.x)[0] < 0 ? e[1] - Hi - Ht : Hi - e[1])
  );
}
const $d = C2(
  function () {
    return !0;
  },
  Mb,
  wb,
  [-$t, -Hi]
);
function Mb(n) {
  var e = NaN,
    t = NaN,
    i = NaN,
    r;
  return {
    lineStart: function () {
      n.lineStart(), (r = 1);
    },
    point: function (s, u) {
      var c = s > 0 ? $t : -$t,
        h = an(s - e);
      an(h - $t) < Ht
        ? (n.point(e, (t = (t + u) / 2 > 0 ? Hi : -Hi)),
          n.point(i, t),
          n.lineEnd(),
          n.lineStart(),
          n.point(c, t),
          n.point(s, t),
          (r = 0))
        : i !== c &&
          h >= $t &&
          (an(e - i) < Ht && (e -= i * Ht),
          an(s - c) < Ht && (s -= c * Ht),
          (t = Eb(e, t, s, u)),
          n.point(i, t),
          n.lineEnd(),
          n.lineStart(),
          n.point(c, t),
          (r = 0)),
        n.point((e = s), (t = u)),
        (i = c);
    },
    lineEnd: function () {
      n.lineEnd(), (e = t = NaN);
    },
    clean: function () {
      return 2 - r;
    },
  };
}
function Eb(n, e, t, i) {
  var r,
    s,
    u = _t(n - t);
  return an(u) > Ht
    ? f2(
        (_t(e) * (s = It(i)) * _t(t) - _t(i) * (r = It(e)) * _t(n)) /
          (r * s * u)
      )
    : (e + i) / 2;
}
function wb(n, e, t, i) {
  var r;
  if (n == null)
    (r = t * Hi),
      i.point(-$t, r),
      i.point(0, r),
      i.point($t, r),
      i.point($t, 0),
      i.point($t, -r),
      i.point(0, -r),
      i.point(-$t, -r),
      i.point(-$t, 0),
      i.point(-$t, r);
  else if (an(n[0] - e[0]) > Ht) {
    var s = n[0] < e[0] ? $t : -$t;
    (r = (t * s) / 2), i.point(-s, r), i.point(0, r), i.point(s, r);
  } else i.point(e[0], e[1]);
}
function Sb(n) {
  var e = It(n),
    t = 6 * Tt,
    i = e > 0,
    r = an(e) > Ht;
  function s(g, v, x, M) {
    xb(M, n, t, x, g, v);
  }
  function u(g, v) {
    return It(g) * It(v) > e;
  }
  function c(g) {
    var v, x, M, w, C;
    return {
      lineStart: function () {
        (w = M = !1), (C = 1);
      },
      point: function (E, b) {
        var L = [E, b],
          S,
          R = u(E, b),
          U = i ? (R ? 0 : p(E, b)) : R ? p(E + (E < 0 ? $t : -$t), b) : 0;
        if (
          (!v && (w = M = R) && g.lineStart(),
          R !== M &&
            ((S = h(v, L)), (!S || rl(v, S) || rl(L, S)) && (L[2] = 1)),
          R !== M)
        )
          (C = 0),
            R
              ? (g.lineStart(), (S = h(L, v)), g.point(S[0], S[1]))
              : ((S = h(v, L)), g.point(S[0], S[1], 2), g.lineEnd()),
            (v = S);
        else if (r && v && i ^ R) {
          var q;
          !(U & x) &&
            (q = h(L, v, !0)) &&
            ((C = 0),
            i
              ? (g.lineStart(),
                g.point(q[0][0], q[0][1]),
                g.point(q[1][0], q[1][1]),
                g.lineEnd())
              : (g.point(q[1][0], q[1][1]),
                g.lineEnd(),
                g.lineStart(),
                g.point(q[0][0], q[0][1], 3)));
        }
        R && (!v || !rl(v, L)) && g.point(L[0], L[1]),
          (v = L),
          (M = R),
          (x = U);
      },
      lineEnd: function () {
        M && g.lineEnd(), (v = null);
      },
      clean: function () {
        return C | ((w && M) << 1);
      },
    };
  }
  function h(g, v, x) {
    var M = Hs(g),
      w = Hs(v),
      C = [1, 0, 0],
      E = Go(M, w),
      b = UA(E, E),
      L = E[0],
      S = b - L * L;
    if (!S) return !x && g;
    var R = (e * b) / S,
      U = (-e * L) / S,
      q = Go(C, E),
      I = BA(C, R),
      N = BA(E, U);
    au(I, N);
    var D = q,
      O = UA(I, D),
      k = UA(D, D),
      $ = O * O - k * (UA(I, I) - 1);
    if (!($ < 0)) {
      var H = Fr($),
        Q = BA(D, (-O - H) / k);
      if ((au(Q, I), (Q = vl(Q)), !x)) return Q;
      var F = g[0],
        J = v[0],
        K = g[1],
        ie = v[1],
        he;
      J < F && ((he = F), (F = J), (J = he));
      var ce = J - F,
        oe = an(ce - $t) < Ht,
        de = oe || ce < Ht;
      if (
        (!oe && ie < K && ((he = K), (K = ie), (ie = he)),
        de
          ? oe
            ? (K + ie > 0) ^ (Q[1] < (an(Q[0] - F) < Ht ? K : ie))
            : K <= Q[1] && Q[1] <= ie
          : (ce > $t) ^ (F <= Q[0] && Q[0] <= J))
      ) {
        var Se = BA(D, (-O + H) / k);
        return au(Se, I), [Q, vl(Se)];
      }
    }
  }
  function p(g, v) {
    var x = i ? n : $t - n,
      M = 0;
    return (
      g < -x ? (M |= 1) : g > x && (M |= 2),
      v < -x ? (M |= 4) : v > x && (M |= 8),
      M
    );
  }
  return C2(u, c, s, i ? [0, -n] : [-$t, n - $t]);
}
function Tb(n, e, t, i, r, s) {
  var u = n[0],
    c = n[1],
    h = e[0],
    p = e[1],
    g = 0,
    v = 1,
    x = h - u,
    M = p - c,
    w;
  if (((w = t - u), !(!x && w > 0))) {
    if (((w /= x), x < 0)) {
      if (w < g) return;
      w < v && (v = w);
    } else if (x > 0) {
      if (w > v) return;
      w > g && (g = w);
    }
    if (((w = r - u), !(!x && w < 0))) {
      if (((w /= x), x < 0)) {
        if (w > v) return;
        w > g && (g = w);
      } else if (x > 0) {
        if (w < g) return;
        w < v && (v = w);
      }
      if (((w = i - c), !(!M && w > 0))) {
        if (((w /= M), M < 0)) {
          if (w < g) return;
          w < v && (v = w);
        } else if (M > 0) {
          if (w > v) return;
          w > g && (g = w);
        }
        if (((w = s - c), !(!M && w < 0))) {
          if (((w /= M), M < 0)) {
            if (w > v) return;
            w > g && (g = w);
          } else if (M > 0) {
            if (w < g) return;
            w < v && (v = w);
          }
          return (
            g > 0 && ((n[0] = u + g * x), (n[1] = c + g * M)),
            v < 1 && ((e[0] = u + v * x), (e[1] = c + v * M)),
            !0
          );
        }
      }
    }
  }
}
var xa = 1e9,
  FA = -xa;
function Cb(n, e, t, i) {
  function r(p, g) {
    return n <= p && p <= t && e <= g && g <= i;
  }
  function s(p, g, v, x) {
    var M = 0,
      w = 0;
    if (p == null || (M = u(p, v)) !== (w = u(g, v)) || (h(p, g) < 0) ^ (v > 0))
      do x.point(M === 0 || M === 3 ? n : t, M > 1 ? i : e);
      while ((M = (M + v + 4) % 4) !== w);
    else x.point(g[0], g[1]);
  }
  function u(p, g) {
    return an(p[0] - n) < Ht
      ? g > 0
        ? 0
        : 3
      : an(p[0] - t) < Ht
      ? g > 0
        ? 2
        : 1
      : an(p[1] - e) < Ht
      ? g > 0
        ? 1
        : 0
      : g > 0
      ? 3
      : 2;
  }
  function c(p, g) {
    return h(p.x, g.x);
  }
  function h(p, g) {
    var v = u(p, 1),
      x = u(g, 1);
    return v !== x
      ? v - x
      : v === 0
      ? g[1] - p[1]
      : v === 1
      ? p[0] - g[0]
      : v === 2
      ? p[1] - g[1]
      : g[0] - p[0];
  }
  return function (p) {
    var g = p,
      v = w2(),
      x,
      M,
      w,
      C,
      E,
      b,
      L,
      S,
      R,
      U,
      q,
      I = {
        point: N,
        lineStart: $,
        lineEnd: H,
        polygonStart: O,
        polygonEnd: k,
      };
    function N(F, J) {
      r(F, J) && g.point(F, J);
    }
    function D() {
      for (var F = 0, J = 0, K = M.length; J < K; ++J)
        for (
          var ie = M[J],
            he = 1,
            ce = ie.length,
            oe = ie[0],
            de,
            Se,
            Pe = oe[0],
            Oe = oe[1];
          he < ce;
          ++he
        )
          (de = Pe),
            (Se = Oe),
            (oe = ie[he]),
            (Pe = oe[0]),
            (Oe = oe[1]),
            Se <= i
              ? Oe > i && (Pe - de) * (i - Se) > (Oe - Se) * (n - de) && ++F
              : Oe <= i && (Pe - de) * (i - Se) < (Oe - Se) * (n - de) && --F;
      return F;
    }
    function O() {
      (g = v), (x = []), (M = []), (q = !0);
    }
    function k() {
      var F = D(),
        J = q && F,
        K = (x = ka(x)).length;
      (J || K) &&
        (p.polygonStart(),
        J && (p.lineStart(), s(null, null, 1, p), p.lineEnd()),
        K && S2(x, c, F, s, p),
        p.polygonEnd()),
        (g = p),
        (x = M = w = null);
    }
    function $() {
      (I.point = Q), M && M.push((w = [])), (U = !0), (R = !1), (L = S = NaN);
    }
    function H() {
      x && (Q(C, E), b && R && v.rejoin(), x.push(v.result())),
        (I.point = N),
        R && g.lineEnd();
    }
    function Q(F, J) {
      var K = r(F, J);
      if ((M && w.push([F, J]), U))
        (C = F),
          (E = J),
          (b = K),
          (U = !1),
          K && (g.lineStart(), g.point(F, J));
      else if (K && R) g.point(F, J);
      else {
        var ie = [
            (L = Math.max(FA, Math.min(xa, L))),
            (S = Math.max(FA, Math.min(xa, S))),
          ],
          he = [
            (F = Math.max(FA, Math.min(xa, F))),
            (J = Math.max(FA, Math.min(xa, J))),
          ];
        Tb(ie, he, n, e, t, i)
          ? (R || (g.lineStart(), g.point(ie[0], ie[1])),
            g.point(he[0], he[1]),
            K || g.lineEnd(),
            (q = !1))
          : K && (g.lineStart(), g.point(F, J), (q = !1));
      }
      (L = F), (S = J), (R = K);
    }
    return I;
  };
}
var Ju,
  ec,
  sl,
  ol,
  Ho = {
    sphere: Kn,
    point: Kn,
    lineStart: Rb,
    lineEnd: Kn,
    polygonStart: Kn,
    polygonEnd: Kn,
  };
function Rb() {
  (Ho.point = Lb), (Ho.lineEnd = Pb);
}
function Pb() {
  Ho.point = Ho.lineEnd = Kn;
}
function Lb(n, e) {
  (n *= Tt), (e *= Tt), (ec = n), (sl = _t(e)), (ol = It(e)), (Ho.point = Db);
}
function Db(n, e) {
  (n *= Tt), (e *= Tt);
  var t = _t(e),
    i = It(e),
    r = an(n - ec),
    s = It(r),
    u = _t(r),
    c = i * u,
    h = ol * t - sl * i * s,
    p = sl * t + ol * i * s;
  Ju.add(Vi(Fr(c * c + h * h), p)), (ec = n), (sl = t), (ol = i);
}
function Ib(n) {
  return (Ju = new Br()), r0(n, Ho), +Ju;
}
var tc = [null, null],
  Ob = { type: "LineString", coordinates: tc };
function hs(n, e) {
  return (tc[0] = n), (tc[1] = e), Ib(Ob);
}
var Yd = {
    Feature: function (n, e) {
      return Tl(n.geometry, e);
    },
    FeatureCollection: function (n, e) {
      for (var t = n.features, i = -1, r = t.length; ++i < r; )
        if (Tl(t[i].geometry, e)) return !0;
      return !1;
    },
  },
  Zd = {
    Sphere: function () {
      return !0;
    },
    Point: function (n, e) {
      return Kd(n.coordinates, e);
    },
    MultiPoint: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (Kd(t[i], e)) return !0;
      return !1;
    },
    LineString: function (n, e) {
      return Jd(n.coordinates, e);
    },
    MultiLineString: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (Jd(t[i], e)) return !0;
      return !1;
    },
    Polygon: function (n, e) {
      return ep(n.coordinates, e);
    },
    MultiPolygon: function (n, e) {
      for (var t = n.coordinates, i = -1, r = t.length; ++i < r; )
        if (ep(t[i], e)) return !0;
      return !1;
    },
    GeometryCollection: function (n, e) {
      for (var t = n.geometries, i = -1, r = t.length; ++i < r; )
        if (Tl(t[i], e)) return !0;
      return !1;
    },
  };
function Tl(n, e) {
  return n && Zd.hasOwnProperty(n.type) ? Zd[n.type](n, e) : !1;
}
function Kd(n, e) {
  return hs(n, e) === 0;
}
function Jd(n, e) {
  for (var t, i, r, s = 0, u = n.length; s < u; s++) {
    if (
      ((i = hs(n[s], e)),
      i === 0 ||
        (s > 0 &&
          ((r = hs(n[s], n[s - 1])),
          r > 0 &&
            t <= r &&
            i <= r &&
            (t + i - r) * (1 - Math.pow((t - i) / r, 2)) < dl * r)))
    )
      return !0;
    t = i;
  }
  return !1;
}
function ep(n, e) {
  return !!T2(n.map(qb), R2(e));
}
function qb(n) {
  return (n = n.map(R2)), n.pop(), n;
}
function R2(n) {
  return [n[0] * Tt, n[1] * Tt];
}
function Ub(n, e) {
  return (n && Yd.hasOwnProperty(n.type) ? Yd[n.type] : Tl)(n, e);
}
function tp(n, e, t) {
  var i = Po(n, e - Ht, t).concat(e);
  return function (r) {
    return i.map(function (s) {
      return [r, s];
    });
  };
}
function np(n, e, t) {
  var i = Po(n, e - Ht, t).concat(e);
  return function (r) {
    return i.map(function (s) {
      return [s, r];
    });
  };
}
function Bb() {
  var n,
    e,
    t,
    i,
    r,
    s,
    u,
    c,
    h = 10,
    p = h,
    g = 90,
    v = 360,
    x,
    M,
    w,
    C,
    E = 2.5;
  function b() {
    return { type: "MultiLineString", coordinates: L() };
  }
  function L() {
    return Po(qA(i / g) * g, t, g)
      .map(w)
      .concat(Po(qA(c / v) * v, u, v).map(C))
      .concat(
        Po(qA(e / h) * h, n, h)
          .filter(function (S) {
            return an(S % g) > Ht;
          })
          .map(x)
      )
      .concat(
        Po(qA(s / p) * p, r, p)
          .filter(function (S) {
            return an(S % v) > Ht;
          })
          .map(M)
      );
  }
  return (
    (b.lines = function () {
      return L().map(function (S) {
        return { type: "LineString", coordinates: S };
      });
    }),
    (b.outline = function () {
      return {
        type: "Polygon",
        coordinates: [
          w(i).concat(
            C(u).slice(1),
            w(t).reverse().slice(1),
            C(c).reverse().slice(1)
          ),
        ],
      };
    }),
    (b.extent = function (S) {
      return arguments.length
        ? b.extentMajor(S).extentMinor(S)
        : b.extentMinor();
    }),
    (b.extentMajor = function (S) {
      return arguments.length
        ? ((i = +S[0][0]),
          (t = +S[1][0]),
          (c = +S[0][1]),
          (u = +S[1][1]),
          i > t && ((S = i), (i = t), (t = S)),
          c > u && ((S = c), (c = u), (u = S)),
          b.precision(E))
        : [
            [i, c],
            [t, u],
          ];
    }),
    (b.extentMinor = function (S) {
      return arguments.length
        ? ((e = +S[0][0]),
          (n = +S[1][0]),
          (s = +S[0][1]),
          (r = +S[1][1]),
          e > n && ((S = e), (e = n), (n = S)),
          s > r && ((S = s), (s = r), (r = S)),
          b.precision(E))
        : [
            [e, s],
            [n, r],
          ];
    }),
    (b.step = function (S) {
      return arguments.length ? b.stepMajor(S).stepMinor(S) : b.stepMinor();
    }),
    (b.stepMajor = function (S) {
      return arguments.length ? ((g = +S[0]), (v = +S[1]), b) : [g, v];
    }),
    (b.stepMinor = function (S) {
      return arguments.length ? ((h = +S[0]), (p = +S[1]), b) : [h, p];
    }),
    (b.precision = function (S) {
      return arguments.length
        ? ((E = +S),
          (x = tp(s, r, 90)),
          (M = np(e, n, E)),
          (w = tp(c, u, 90)),
          (C = np(i, t, E)),
          b)
        : E;
    }),
    b
      .extentMajor([
        [-180, -90 + Ht],
        [180, 90 - Ht],
      ])
      .extentMinor([
        [-180, -80 - Ht],
        [180, 80 + Ht],
      ])
  );
}
function Nb() {
  return Bb()();
}
function Gc(n, e) {
  var t = n[0] * Tt,
    i = n[1] * Tt,
    r = e[0] * Tt,
    s = e[1] * Tt,
    u = It(i),
    c = _t(i),
    h = It(s),
    p = _t(s),
    g = u * It(t),
    v = u * _t(t),
    x = h * It(r),
    M = h * _t(r),
    w = 2 * kr(Fr(Id(s - i) + u * h * Id(r - t))),
    C = _t(w),
    E = w
      ? function (b) {
          var L = _t((b *= w)) / C,
            S = _t(w - b) / C,
            R = S * g + L * x,
            U = S * v + L * M,
            q = S * c + L * p;
          return [Vi(U, R) * Mn, Vi(q, Fr(R * R + U * U)) * Mn];
        }
      : function () {
          return [t * Mn, i * Mn];
        };
  return (E.distance = w), E;
}
const ip = (n) => n;
var Vo = 1 / 0,
  Cl = Vo,
  za = -Vo,
  Rl = za,
  Fb = {
    point: kb,
    lineStart: Kn,
    lineEnd: Kn,
    polygonStart: Kn,
    polygonEnd: Kn,
    result: function () {
      var n = [
        [Vo, Cl],
        [za, Rl],
      ];
      return (za = Rl = -(Cl = Vo = 1 / 0)), n;
    },
  };
function kb(n, e) {
  n < Vo && (Vo = n),
    n > za && (za = n),
    e < Cl && (Cl = e),
    e > Rl && (Rl = e);
}
const rp = Fb;
function Hc(n) {
  return function (e) {
    var t = new nc();
    for (var i in n) t[i] = n[i];
    return (t.stream = e), t;
  };
}
function nc() {}
nc.prototype = {
  constructor: nc,
  point: function (n, e) {
    this.stream.point(n, e);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  },
};
function Vc(n, e, t) {
  var i = n.clipExtent && n.clipExtent();
  return (
    n.scale(150).translate([0, 0]),
    i != null && n.clipExtent(null),
    r0(t, n.stream(rp)),
    e(rp.result()),
    i != null && n.clipExtent(i),
    n
  );
}
function P2(n, e, t) {
  return Vc(
    n,
    function (i) {
      var r = e[1][0] - e[0][0],
        s = e[1][1] - e[0][1],
        u = Math.min(r / (i[1][0] - i[0][0]), s / (i[1][1] - i[0][1])),
        c = +e[0][0] + (r - u * (i[1][0] + i[0][0])) / 2,
        h = +e[0][1] + (s - u * (i[1][1] + i[0][1])) / 2;
      n.scale(150 * u).translate([c, h]);
    },
    t
  );
}
function zb(n, e, t) {
  return P2(n, [[0, 0], e], t);
}
function Gb(n, e, t) {
  return Vc(
    n,
    function (i) {
      var r = +e,
        s = r / (i[1][0] - i[0][0]),
        u = (r - s * (i[1][0] + i[0][0])) / 2,
        c = -s * i[0][1];
      n.scale(150 * s).translate([u, c]);
    },
    t
  );
}
function Hb(n, e, t) {
  return Vc(
    n,
    function (i) {
      var r = +e,
        s = r / (i[1][1] - i[0][1]),
        u = -s * i[0][0],
        c = (r - s * (i[1][1] + i[0][1])) / 2;
      n.scale(150 * s).translate([u, c]);
    },
    t
  );
}
var sp = 16,
  Vb = It(30 * Tt);
function op(n, e) {
  return +e ? jb(n, e) : Wb(n);
}
function Wb(n) {
  return Hc({
    point: function (e, t) {
      (e = n(e, t)), this.stream.point(e[0], e[1]);
    },
  });
}
function jb(n, e) {
  function t(i, r, s, u, c, h, p, g, v, x, M, w, C, E) {
    var b = p - i,
      L = g - r,
      S = b * b + L * L;
    if (S > 4 * e && C--) {
      var R = u + x,
        U = c + M,
        q = h + w,
        I = Fr(R * R + U * U + q * q),
        N = kr((q /= I)),
        D = an(an(q) - 1) < Ht || an(s - v) < Ht ? (s + v) / 2 : Vi(U, R),
        O = n(D, N),
        k = O[0],
        $ = O[1],
        H = k - i,
        Q = $ - r,
        F = L * H - b * Q;
      ((F * F) / S > e ||
        an((b * H + L * Q) / S - 0.5) > 0.3 ||
        u * x + c * M + h * w < Vb) &&
        (t(i, r, s, u, c, h, k, $, D, (R /= I), (U /= I), q, C, E),
        E.point(k, $),
        t(k, $, D, R, U, q, p, g, v, x, M, w, C, E));
    }
  }
  return function (i) {
    var r,
      s,
      u,
      c,
      h,
      p,
      g,
      v,
      x,
      M,
      w,
      C,
      E = {
        point: b,
        lineStart: L,
        lineEnd: R,
        polygonStart: function () {
          i.polygonStart(), (E.lineStart = U);
        },
        polygonEnd: function () {
          i.polygonEnd(), (E.lineStart = L);
        },
      };
    function b(N, D) {
      (N = n(N, D)), i.point(N[0], N[1]);
    }
    function L() {
      (v = NaN), (E.point = S), i.lineStart();
    }
    function S(N, D) {
      var O = Hs([N, D]),
        k = n(N, D);
      t(
        v,
        x,
        g,
        M,
        w,
        C,
        (v = k[0]),
        (x = k[1]),
        (g = N),
        (M = O[0]),
        (w = O[1]),
        (C = O[2]),
        sp,
        i
      ),
        i.point(v, x);
    }
    function R() {
      (E.point = b), i.lineEnd();
    }
    function U() {
      L(), (E.point = q), (E.lineEnd = I);
    }
    function q(N, D) {
      S((r = N), D), (s = v), (u = x), (c = M), (h = w), (p = C), (E.point = S);
    }
    function I() {
      t(v, x, g, M, w, C, s, u, r, c, h, p, sp, i), (E.lineEnd = R), R();
    }
    return E;
  };
}
var Xb = Hc({
  point: function (n, e) {
    this.stream.point(n * Tt, e * Tt);
  },
});
function Qb(n) {
  return Hc({
    point: function (e, t) {
      var i = n(e, t);
      return this.stream.point(i[0], i[1]);
    },
  });
}
function $b(n, e, t, i, r) {
  function s(u, c) {
    return (u *= i), (c *= r), [e + n * u, t - n * c];
  }
  return (
    (s.invert = function (u, c) {
      return [((u - e) / n) * i, ((t - c) / n) * r];
    }),
    s
  );
}
function ap(n, e, t, i, r, s) {
  if (!s) return $b(n, e, t, i, r);
  var u = It(s),
    c = _t(s),
    h = u * n,
    p = c * n,
    g = u / n,
    v = c / n,
    x = (c * t - u * e) / n,
    M = (c * e + u * t) / n;
  function w(C, E) {
    return (C *= i), (E *= r), [h * C - p * E + e, t - p * C - h * E];
  }
  return (
    (w.invert = function (C, E) {
      return [i * (g * C - v * E + x), r * (M - v * C - g * E)];
    }),
    w
  );
}
function Yb(n) {
  return Zb(function () {
    return n;
  })();
}
function Zb(n) {
  var e,
    t = 150,
    i = 480,
    r = 250,
    s = 0,
    u = 0,
    c = 0,
    h = 0,
    p = 0,
    g,
    v = 0,
    x = 1,
    M = 1,
    w = null,
    C = $d,
    E = null,
    b,
    L,
    S,
    R = ip,
    U = 0.5,
    q,
    I,
    N,
    D,
    O;
  function k(F) {
    return N(F[0] * Tt, F[1] * Tt);
  }
  function $(F) {
    return (F = N.invert(F[0], F[1])), F && [F[0] * Mn, F[1] * Mn];
  }
  (k.stream = function (F) {
    return D && O === F ? D : (D = Xb(Qb(g)(C(q(R((O = F)))))));
  }),
    (k.preclip = function (F) {
      return arguments.length ? ((C = F), (w = void 0), Q()) : C;
    }),
    (k.postclip = function (F) {
      return arguments.length ? ((R = F), (E = b = L = S = null), Q()) : R;
    }),
    (k.clipAngle = function (F) {
      return arguments.length
        ? ((C = +F ? Sb((w = F * Tt)) : ((w = null), $d)), Q())
        : w * Mn;
    }),
    (k.clipExtent = function (F) {
      return arguments.length
        ? ((R =
            F == null
              ? ((E = b = L = S = null), ip)
              : Cb(
                  (E = +F[0][0]),
                  (b = +F[0][1]),
                  (L = +F[1][0]),
                  (S = +F[1][1])
                )),
          Q())
        : E == null
        ? null
        : [
            [E, b],
            [L, S],
          ];
    }),
    (k.scale = function (F) {
      return arguments.length ? ((t = +F), H()) : t;
    }),
    (k.translate = function (F) {
      return arguments.length ? ((i = +F[0]), (r = +F[1]), H()) : [i, r];
    }),
    (k.center = function (F) {
      return arguments.length
        ? ((s = (F[0] % 360) * Tt), (u = (F[1] % 360) * Tt), H())
        : [s * Mn, u * Mn];
    }),
    (k.rotate = function (F) {
      return arguments.length
        ? ((c = (F[0] % 360) * Tt),
          (h = (F[1] % 360) * Tt),
          (p = F.length > 2 ? (F[2] % 360) * Tt : 0),
          H())
        : [c * Mn, h * Mn, p * Mn];
    }),
    (k.angle = function (F) {
      return arguments.length ? ((v = (F % 360) * Tt), H()) : v * Mn;
    }),
    (k.reflectX = function (F) {
      return arguments.length ? ((x = F ? -1 : 1), H()) : x < 0;
    }),
    (k.reflectY = function (F) {
      return arguments.length ? ((M = F ? -1 : 1), H()) : M < 0;
    }),
    (k.precision = function (F) {
      return arguments.length ? ((q = op(I, (U = F * F))), Q()) : Fr(U);
    }),
    (k.fitExtent = function (F, J) {
      return P2(k, F, J);
    }),
    (k.fitSize = function (F, J) {
      return zb(k, F, J);
    }),
    (k.fitWidth = function (F, J) {
      return Gb(k, F, J);
    }),
    (k.fitHeight = function (F, J) {
      return Hb(k, F, J);
    });
  function H() {
    var F = ap(t, 0, 0, x, M, v).apply(null, e(s, u)),
      J = ap(t, i - F[0], r - F[1], x, M, v);
    return (
      (g = E2(c, h, p)), (I = Zu(e, J)), (N = Zu(g, I)), (q = op(I, U)), Q()
    );
  }
  function Q() {
    return (D = O = null), k;
  }
  return function () {
    return (e = n.apply(this, arguments)), (k.invert = e.invert && $), H();
  };
}
function Kb(n) {
  return function (e, t) {
    var i = Fr(e * e + t * t),
      r = n(i),
      s = _t(r),
      u = It(r);
    return [Vi(e * s, i * u), kr(i && (t * s) / i)];
  };
}
function L2(n, e) {
  var t = It(e),
    i = 1 + It(n) * t;
  return [(t * _t(n)) / i, _t(e) / i];
}
L2.invert = Kb(function (n) {
  return 2 * f2(n);
});
function Jb() {
  return Yb(L2).scale(250).clipAngle(142);
}
function eM(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function tM(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Ap(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, fM(i.key), i);
  }
}
function nM(n, e, t) {
  return (
    e && Ap(n.prototype, e),
    t && Ap(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function iM(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && ic(n, e);
}
function Pl(n) {
  return (
    (Pl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    Pl(n)
  );
}
function ic(n, e) {
  return (
    (ic = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    ic(n, e)
  );
}
function rM() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function sM(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function oM(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return sM(n);
}
function aM(n) {
  var e = rM();
  return function () {
    var i = Pl(n),
      r;
    if (e) {
      var s = Pl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return oM(this, r);
  };
}
function fa(n, e) {
  return AM(n) || eM(n, e) || D2(n, e) || lM();
}
function AM(n) {
  if (Array.isArray(n)) return n;
}
function D2(n, e) {
  if (n) {
    if (typeof n == "string") return lp(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return lp(n, e);
  }
}
function lp(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function lM() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function uM(n, e) {
  var t = (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (!t) {
    if (
      Array.isArray(n) ||
      (t = D2(n)) ||
      (e && n && typeof n.length == "number")
    ) {
      t && (n = t);
      var i = 0,
        r = function () {};
      return {
        s: r,
        n: function () {
          return i >= n.length ? { done: !0 } : { done: !1, value: n[i++] };
        },
        e: function (h) {
          throw h;
        },
        f: r,
      };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var s = !0,
    u = !1,
    c;
  return {
    s: function () {
      t = t.call(n);
    },
    n: function () {
      var h = t.next();
      return (s = h.done), h;
    },
    e: function (h) {
      (u = !0), (c = h);
    },
    f: function () {
      try {
        !s && t.return != null && t.return();
      } finally {
        if (u) throw c;
      }
    },
  };
}
function cM(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function fM(n) {
  var e = cM(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var up = function () {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
      t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1,
      i = [],
      r = null;
    return (
      e.forEach(function (s) {
        if (r) {
          var u = (hs(s, r) * 180) / Math.PI;
          if (u > t)
            for (var c = Gc(r, s), h = 1 / Math.ceil(u / t), p = h; p < 1; )
              i.push(c(p)), (p += h);
        }
        i.push((r = s));
      }),
      i
    );
  },
  rc =
    typeof window < "u" && window.THREE
      ? window.THREE
      : { BufferGeometry: fn, Float32BufferAttribute: Jt },
  hM = new rc.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  I2 = (function (n) {
    iM(t, n);
    var e = aM(t);
    function t(i) {
      var r,
        s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1,
        u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5;
      tM(this, t),
        (r = e.call(this)),
        (r.type = "GeoJsonGeometry"),
        (r.parameters = { geoJson: i, radius: s, resolution: u });
      var c = (
          {
            Point: v,
            MultiPoint: x,
            LineString: M,
            MultiLineString: w,
            Polygon: C,
            MultiPolygon: E,
          }[i.type] ||
          function () {
            return [];
          }
        )(i.coordinates, s),
        h = [],
        p = [],
        g = 0;
      c.forEach(function (b) {
        var L = h.length;
        ha({ indices: h, vertices: p }, b), r.addGroup(L, h.length - L, g++);
      }),
        h.length && r.setIndex(h),
        p.length && r[hM]("position", new rc.Float32BufferAttribute(p, 3));
      function v(b, L) {
        var S = lu(b[1], b[0], L),
          R = [];
        return [{ vertices: S, indices: R }];
      }
      function x(b, L) {
        var S = { vertices: [], indices: [] };
        return (
          b
            .map(function (R) {
              return v(R, L);
            })
            .forEach(function (R) {
              var U = fa(R, 1),
                q = U[0];
              ha(S, q);
            }),
          [S]
        );
      }
      function M(b, L) {
        for (
          var S = up(b, u).map(function (D) {
              var O = fa(D, 2),
                k = O[0],
                $ = O[1];
              return lu($, k, L);
            }),
            R = Fa.flatten([S]),
            U = R.vertices,
            q = Math.round(U.length / 3),
            I = [],
            N = 1;
          N < q;
          N++
        )
          I.push(N - 1, N);
        return [{ vertices: U, indices: I }];
      }
      function w(b, L) {
        var S = { vertices: [], indices: [] };
        return (
          b
            .map(function (R) {
              return M(R, L);
            })
            .forEach(function (R) {
              var U = fa(R, 1),
                q = U[0];
              ha(S, q);
            }),
          [S]
        );
      }
      function C(b, L) {
        for (
          var S = b.map(function (J) {
              return up(J, u).map(function (K) {
                var ie = fa(K, 2),
                  he = ie[0],
                  ce = ie[1];
                return lu(ce, he, L);
              });
            }),
            R = Fa.flatten(S),
            U = R.vertices,
            q = R.holes,
            I = q[0] || 1 / 0,
            N = U.slice(0, I * 3),
            D = U.slice(I * 3),
            O = new Set(q),
            k = Math.round(U.length / 3),
            $ = [],
            H = [],
            Q = 1;
          Q < k;
          Q++
        )
          O.has(Q) || (Q < I ? $.push(Q - 1, Q) : H.push(Q - 1 - I, Q - I));
        var F = [{ indices: $, vertices: N }];
        return q.length && F.push({ indices: H, vertices: D }), F;
      }
      function E(b, L) {
        var S = { vertices: [], indices: [] },
          R = { vertices: [], indices: [] };
        b.map(function (q) {
          return C(q, L);
        }).forEach(function (q) {
          var I = fa(q, 2),
            N = I[0],
            D = I[1];
          ha(S, N), D && ha(R, D);
        });
        var U = [S];
        return R.vertices.length && U.push(R), U;
      }
      return r;
    }
    return nM(t);
  })(rc.BufferGeometry);
function ha(n, e) {
  var t = Math.round(n.vertices.length / 3);
  cp(n.vertices, e.vertices),
    cp(
      n.indices,
      e.indices.map(function (i) {
        return i + t;
      })
    );
}
function cp(n, e) {
  var t = uM(e),
    i;
  try {
    for (t.s(); !(i = t.n()).done; ) {
      var r = i.value;
      n.push(r);
    }
  } catch (s) {
    t.e(s);
  } finally {
    t.f();
  }
}
function lu(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180;
  return [
    t * Math.sin(i) * Math.cos(r),
    t * Math.cos(i),
    t * Math.sin(i) * Math.sin(r),
  ];
}
function dM(n, e, t = !0) {
  if (!e || !e.isReady)
    throw new Error(
      "BufferGeometryUtils: Initialized MikkTSpace library required."
    );
  if (
    !n.hasAttribute("position") ||
    !n.hasAttribute("normal") ||
    !n.hasAttribute("uv")
  )
    throw new Error(
      'BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.'
    );
  function i(u) {
    if (u.normalized || u.isInterleavedBufferAttribute) {
      const c = new Float32Array(u.count * u.itemSize);
      for (let h = 0, p = 0; h < u.count; h++)
        (c[p++] = u.getX(h)),
          (c[p++] = u.getY(h)),
          u.itemSize > 2 && (c[p++] = u.getZ(h));
      return c;
    }
    return u.array instanceof Float32Array
      ? u.array
      : new Float32Array(u.array);
  }
  const r = n.index ? n.toNonIndexed() : n,
    s = e.generateTangents(
      i(r.attributes.position),
      i(r.attributes.normal),
      i(r.attributes.uv)
    );
  if (t) for (let u = 3; u < s.length; u += 4) s[u] *= -1;
  return r.setAttribute("tangent", new En(s, 4)), n !== r && n.copy(r), n;
}
function O2(n, e = !1) {
  const t = n[0].index !== null,
    i = new Set(Object.keys(n[0].attributes)),
    r = new Set(Object.keys(n[0].morphAttributes)),
    s = {},
    u = {},
    c = n[0].morphTargetsRelative,
    h = new fn();
  let p = 0;
  for (let g = 0; g < n.length; ++g) {
    const v = n[g];
    let x = 0;
    if (t !== (v.index !== null))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."
        ),
        null
      );
    for (const M in v.attributes) {
      if (!i.has(M))
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              '. All geometries must have compatible attributes; make sure "' +
              M +
              '" attribute exists among all geometries, or in none of them.'
          ),
          null
        );
      s[M] === void 0 && (s[M] = []), s[M].push(v.attributes[M]), x++;
    }
    if (x !== i.size)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". Make sure all geometries have the same number of attributes."
        ),
        null
      );
    if (c !== v.morphTargetsRelative)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
            g +
            ". .morphTargetsRelative must be consistent throughout all geometries."
        ),
        null
      );
    for (const M in v.morphAttributes) {
      if (!r.has(M))
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              ".  .morphAttributes must be consistent throughout all geometries."
          ),
          null
        );
      u[M] === void 0 && (u[M] = []), u[M].push(v.morphAttributes[M]);
    }
    if (e) {
      let M;
      if (t) M = v.index.count;
      else if (v.attributes.position !== void 0)
        M = v.attributes.position.count;
      else
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index " +
              g +
              ". The geometry must have either an index or a position attribute"
          ),
          null
        );
      h.addGroup(p, M, g), (p += M);
    }
  }
  if (t) {
    let g = 0;
    const v = [];
    for (let x = 0; x < n.length; ++x) {
      const M = n[x].index;
      for (let w = 0; w < M.count; ++w) v.push(M.getX(w) + g);
      g += n[x].attributes.position.count;
    }
    h.setIndex(v);
  }
  for (const g in s) {
    const v = Ll(s[g]);
    if (!v)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the " +
            g +
            " attribute."
        ),
        null
      );
    h.setAttribute(g, v);
  }
  for (const g in u) {
    const v = u[g][0].length;
    if (v === 0) break;
    (h.morphAttributes = h.morphAttributes || {}), (h.morphAttributes[g] = []);
    for (let x = 0; x < v; ++x) {
      const M = [];
      for (let C = 0; C < u[g].length; ++C) M.push(u[g][C][x]);
      const w = Ll(M);
      if (!w)
        return (
          console.error(
            "THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the " +
              g +
              " morphAttribute."
          ),
          null
        );
      h.morphAttributes[g].push(w);
    }
  }
  return h;
}
function Ll(n) {
  let e,
    t,
    i,
    r = -1,
    s = 0;
  for (let p = 0; p < n.length; ++p) {
    const g = n[p];
    if (g.isInterleavedBufferAttribute)
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported."
        ),
        null
      );
    if ((e === void 0 && (e = g.array.constructor), e !== g.array.constructor))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."
        ),
        null
      );
    if ((t === void 0 && (t = g.itemSize), t !== g.itemSize))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."
        ),
        null
      );
    if ((i === void 0 && (i = g.normalized), i !== g.normalized))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."
        ),
        null
      );
    if ((r === -1 && (r = g.gpuType), r !== g.gpuType))
      return (
        console.error(
          "THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."
        ),
        null
      );
    s += g.array.length;
  }
  const u = new e(s);
  let c = 0;
  for (let p = 0; p < n.length; ++p)
    u.set(n[p].array, c), (c += n[p].array.length);
  const h = new En(u, t, i);
  return r !== void 0 && (h.gpuType = r), h;
}
function pM(n) {
  return n.isInstancedInterleavedBufferAttribute ||
    n.isInterleavedBufferAttribute
    ? Dl(n)
    : n.isInstancedBufferAttribute
    ? new $1().copy(n)
    : new En().copy(n);
}
function mM(n) {
  let e,
    t = 0,
    i = 0;
  for (let p = 0, g = n.length; p < g; ++p) {
    const v = n[p];
    if ((e === void 0 && (e = v.array.constructor), e !== v.array.constructor))
      return (
        console.error(
          "AttributeBuffers of different types cannot be interleaved"
        ),
        null
      );
    (t += v.array.length), (i += v.itemSize);
  }
  const r = new Q1(new e(t), i);
  let s = 0;
  const u = [],
    c = ["getX", "getY", "getZ", "getW"],
    h = ["setX", "setY", "setZ", "setW"];
  for (let p = 0, g = n.length; p < g; p++) {
    const v = n[p],
      x = v.itemSize,
      M = v.count,
      w = new $a(r, x, s, v.normalized);
    u.push(w), (s += x);
    for (let C = 0; C < M; C++)
      for (let E = 0; E < x; E++) w[h[E]](C, v[c[E]](C));
  }
  return u;
}
function Dl(n) {
  const e = n.data.array.constructor,
    t = n.count,
    i = n.itemSize,
    r = n.normalized,
    s = new e(t * i);
  let u;
  n.isInstancedInterleavedBufferAttribute
    ? (u = new $1(s, i, r, n.meshPerAttribute))
    : (u = new En(s, i, r));
  for (let c = 0; c < t; c++)
    u.setX(c, n.getX(c)),
      i >= 2 && u.setY(c, n.getY(c)),
      i >= 3 && u.setZ(c, n.getZ(c)),
      i >= 4 && u.setW(c, n.getW(c));
  return u;
}
function gM(n) {
  const e = n.attributes,
    t = n.morphTargets,
    i = new Map();
  for (const r in e) {
    const s = e[r];
    s.isInterleavedBufferAttribute &&
      (i.has(s) || i.set(s, Dl(s)), (e[r] = i.get(s)));
  }
  for (const r in t) {
    const s = t[r];
    s.isInterleavedBufferAttribute &&
      (i.has(s) || i.set(s, Dl(s)), (t[r] = i.get(s)));
  }
}
function vM(n) {
  let e = 0;
  for (const i in n.attributes) {
    const r = n.getAttribute(i);
    e += r.count * r.itemSize * r.array.BYTES_PER_ELEMENT;
  }
  const t = n.getIndex();
  return (e += t ? t.count * t.itemSize * t.array.BYTES_PER_ELEMENT : 0), e;
}
function _M(n, e = 1e-4) {
  e = Math.max(e, Number.EPSILON);
  const t = {},
    i = n.getIndex(),
    r = n.getAttribute("position"),
    s = i ? i.count : r.count;
  let u = 0;
  const c = Object.keys(n.attributes),
    h = {},
    p = {},
    g = [],
    v = ["getX", "getY", "getZ", "getW"],
    x = ["setX", "setY", "setZ", "setW"];
  for (let E = 0, b = c.length; E < b; E++) {
    const L = c[E],
      S = n.attributes[L];
    h[L] = new En(
      new S.array.constructor(S.count * S.itemSize),
      S.itemSize,
      S.normalized
    );
    const R = n.morphAttributes[L];
    R &&
      (p[L] = new En(
        new R.array.constructor(R.count * R.itemSize),
        R.itemSize,
        R.normalized
      ));
  }
  const M = Math.log10(1 / e),
    w = Math.pow(10, M);
  for (let E = 0; E < s; E++) {
    const b = i ? i.getX(E) : E;
    let L = "";
    for (let S = 0, R = c.length; S < R; S++) {
      const U = c[S],
        q = n.getAttribute(U),
        I = q.itemSize;
      for (let N = 0; N < I; N++) L += `${~~(q[v[N]](b) * w)},`;
    }
    if (L in t) g.push(t[L]);
    else {
      for (let S = 0, R = c.length; S < R; S++) {
        const U = c[S],
          q = n.getAttribute(U),
          I = n.morphAttributes[U],
          N = q.itemSize,
          D = h[U],
          O = p[U];
        for (let k = 0; k < N; k++) {
          const $ = v[k],
            H = x[k];
          if ((D[H](u, q[$](b)), I))
            for (let Q = 0, F = I.length; Q < F; Q++) O[Q][H](u, I[Q][$](b));
        }
      }
      (t[L] = u), g.push(u), u++;
    }
  }
  const C = n.clone();
  for (const E in n.attributes) {
    const b = h[E];
    if (
      (C.setAttribute(
        E,
        new En(b.array.slice(0, u * b.itemSize), b.itemSize, b.normalized)
      ),
      E in p)
    )
      for (let L = 0; L < p[E].length; L++) {
        const S = p[E][L];
        C.morphAttributes[E][L] = new En(
          S.array.slice(0, u * S.itemSize),
          S.itemSize,
          S.normalized
        );
      }
  }
  return C.setIndex(g), C;
}
function xM(n, e) {
  if (e === hv)
    return (
      console.warn(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."
      ),
      n
    );
  if (e === wh || e === dv) {
    let t = n.getIndex();
    if (t === null) {
      const u = [],
        c = n.getAttribute("position");
      if (c !== void 0) {
        for (let h = 0; h < c.count; h++) u.push(h);
        n.setIndex(u), (t = n.getIndex());
      } else
        return (
          console.error(
            "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."
          ),
          n
        );
    }
    const i = t.count - 2,
      r = [];
    if (e === wh)
      for (let u = 1; u <= i; u++)
        r.push(t.getX(0)), r.push(t.getX(u)), r.push(t.getX(u + 1));
    else
      for (let u = 0; u < i; u++)
        u % 2 === 0
          ? (r.push(t.getX(u)), r.push(t.getX(u + 1)), r.push(t.getX(u + 2)))
          : (r.push(t.getX(u + 2)), r.push(t.getX(u + 1)), r.push(t.getX(u)));
    r.length / 3 !== i &&
      console.error(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles."
      );
    const s = n.clone();
    return s.setIndex(r), s.clearGroups(), s;
  } else
    return (
      console.error(
        "THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",
        e
      ),
      n
    );
}
function yM(n) {
  const e = new te(),
    t = new te(),
    i = new te(),
    r = new te(),
    s = new te(),
    u = new te(),
    c = new te(),
    h = new te(),
    p = new te();
  function g(he, ce, oe, de, Se, Pe, Oe, $e) {
    e.fromBufferAttribute(ce, Se),
      t.fromBufferAttribute(ce, Pe),
      i.fromBufferAttribute(ce, Oe);
    const nt = he.morphTargetInfluences;
    if (oe && nt) {
      c.set(0, 0, 0), h.set(0, 0, 0), p.set(0, 0, 0);
      for (let ot = 0, Rt = oe.length; ot < Rt; ot++) {
        const Ot = nt[ot],
          ct = oe[ot];
        Ot !== 0 &&
          (r.fromBufferAttribute(ct, Se),
          s.fromBufferAttribute(ct, Pe),
          u.fromBufferAttribute(ct, Oe),
          de
            ? (c.addScaledVector(r, Ot),
              h.addScaledVector(s, Ot),
              p.addScaledVector(u, Ot))
            : (c.addScaledVector(r.sub(e), Ot),
              h.addScaledVector(s.sub(t), Ot),
              p.addScaledVector(u.sub(i), Ot)));
      }
      e.add(c), t.add(h), i.add(p);
    }
    he.isSkinnedMesh &&
      (he.applyBoneTransform(Se, e),
      he.applyBoneTransform(Pe, t),
      he.applyBoneTransform(Oe, i)),
      ($e[Se * 3 + 0] = e.x),
      ($e[Se * 3 + 1] = e.y),
      ($e[Se * 3 + 2] = e.z),
      ($e[Pe * 3 + 0] = t.x),
      ($e[Pe * 3 + 1] = t.y),
      ($e[Pe * 3 + 2] = t.z),
      ($e[Oe * 3 + 0] = i.x),
      ($e[Oe * 3 + 1] = i.y),
      ($e[Oe * 3 + 2] = i.z);
  }
  const v = n.geometry,
    x = n.material;
  let M, w, C;
  const E = v.index,
    b = v.attributes.position,
    L = v.morphAttributes.position,
    S = v.morphTargetsRelative,
    R = v.attributes.normal,
    U = v.morphAttributes.position,
    q = v.groups,
    I = v.drawRange;
  let N, D, O, k, $, H, Q;
  const F = new Float32Array(b.count * b.itemSize),
    J = new Float32Array(R.count * R.itemSize);
  if (E !== null)
    if (Array.isArray(x))
      for (N = 0, O = q.length; N < O; N++)
        for (
          $ = q[N],
            H = Math.max($.start, I.start),
            Q = Math.min($.start + $.count, I.start + I.count),
            D = H,
            k = Q;
          D < k;
          D += 3
        )
          (M = E.getX(D)),
            (w = E.getX(D + 1)),
            (C = E.getX(D + 2)),
            g(n, b, L, S, M, w, C, F),
            g(n, R, U, S, M, w, C, J);
    else
      for (
        H = Math.max(0, I.start),
          Q = Math.min(E.count, I.start + I.count),
          N = H,
          O = Q;
        N < O;
        N += 3
      )
        (M = E.getX(N)),
          (w = E.getX(N + 1)),
          (C = E.getX(N + 2)),
          g(n, b, L, S, M, w, C, F),
          g(n, R, U, S, M, w, C, J);
  else if (Array.isArray(x))
    for (N = 0, O = q.length; N < O; N++)
      for (
        $ = q[N],
          H = Math.max($.start, I.start),
          Q = Math.min($.start + $.count, I.start + I.count),
          D = H,
          k = Q;
        D < k;
        D += 3
      )
        (M = D),
          (w = D + 1),
          (C = D + 2),
          g(n, b, L, S, M, w, C, F),
          g(n, R, U, S, M, w, C, J);
  else
    for (
      H = Math.max(0, I.start),
        Q = Math.min(b.count, I.start + I.count),
        N = H,
        O = Q;
      N < O;
      N += 3
    )
      (M = N),
        (w = N + 1),
        (C = N + 2),
        g(n, b, L, S, M, w, C, F),
        g(n, R, U, S, M, w, C, J);
  const K = new Jt(F, 3),
    ie = new Jt(J, 3);
  return {
    positionAttribute: b,
    normalAttribute: R,
    morphedPositionAttribute: K,
    morphedNormalAttribute: ie,
  };
}
function bM(n) {
  if (n.groups.length === 0)
    return (
      console.warn(
        "THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."
      ),
      n
    );
  let e = n.groups;
  if (
    ((e = e.sort((u, c) =>
      u.materialIndex !== c.materialIndex
        ? u.materialIndex - c.materialIndex
        : u.start - c.start
    )),
    n.getIndex() === null)
  ) {
    const u = n.getAttribute("position"),
      c = [];
    for (let h = 0; h < u.count; h += 3) c.push(h, h + 1, h + 2);
    n.setIndex(c);
  }
  const t = n.getIndex(),
    i = [];
  for (let u = 0; u < e.length; u++) {
    const c = e[u],
      h = c.start,
      p = h + c.count;
    for (let g = h; g < p; g++) i.push(t.getX(g));
  }
  n.dispose(), n.setIndex(i);
  let r = 0;
  for (let u = 0; u < e.length; u++) {
    const c = e[u];
    (c.start = r), (r += c.count);
  }
  let s = e[0];
  n.groups = [s];
  for (let u = 1; u < e.length; u++) {
    const c = e[u];
    s.materialIndex === c.materialIndex
      ? (s.count += c.count)
      : ((s = c), n.groups.push(s));
  }
  return n;
}
function MM(n, e = Math.PI / 3) {
  const t = Math.cos(e),
    i = (1 + 1e-10) * 100,
    r = [new te(), new te(), new te()],
    s = new te(),
    u = new te(),
    c = new te(),
    h = new te();
  function p(C) {
    const E = ~~(C.x * i),
      b = ~~(C.y * i),
      L = ~~(C.z * i);
    return `${E},${b},${L}`;
  }
  const g = n.index ? n.toNonIndexed() : n,
    v = g.attributes.position,
    x = {};
  for (let C = 0, E = v.count / 3; C < E; C++) {
    const b = 3 * C,
      L = r[0].fromBufferAttribute(v, b + 0),
      S = r[1].fromBufferAttribute(v, b + 1),
      R = r[2].fromBufferAttribute(v, b + 2);
    s.subVectors(R, S), u.subVectors(L, S);
    const U = new te().crossVectors(s, u).normalize();
    for (let q = 0; q < 3; q++) {
      const I = r[q],
        N = p(I);
      N in x || (x[N] = []), x[N].push(U);
    }
  }
  const M = new Float32Array(v.count * 3),
    w = new En(M, 3, !1);
  for (let C = 0, E = v.count / 3; C < E; C++) {
    const b = 3 * C,
      L = r[0].fromBufferAttribute(v, b + 0),
      S = r[1].fromBufferAttribute(v, b + 1),
      R = r[2].fromBufferAttribute(v, b + 2);
    s.subVectors(R, S), u.subVectors(L, S), c.crossVectors(s, u).normalize();
    for (let U = 0; U < 3; U++) {
      const q = r[U],
        I = p(q),
        N = x[I];
      h.set(0, 0, 0);
      for (let D = 0, O = N.length; D < O; D++) {
        const k = N[D];
        c.dot(k) > t && h.add(k);
      }
      h.normalize(), w.setXYZ(b + U, h.x, h.y, h.z);
    }
  }
  return g.setAttribute("normal", w), g;
}
function EM(n, e = !1) {
  return (
    console.warn(
      "THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries()."
    ),
    O2(n, e)
  );
}
function wM(n) {
  return (
    console.warn(
      "THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes()."
    ),
    Ll(n)
  );
}
const Wc = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      computeMikkTSpaceTangents: dM,
      computeMorphedAttributes: yM,
      deepCloneAttribute: pM,
      deinterleaveAttribute: Dl,
      deinterleaveGeometry: gM,
      estimateBytesUsed: vM,
      interleaveAttributes: mM,
      mergeAttributes: Ll,
      mergeBufferAttributes: wM,
      mergeBufferGeometries: EM,
      mergeGeometries: O2,
      mergeGroups: bM,
      mergeVertices: _M,
      toCreasedNormals: MM,
      toTrianglesDrawMode: xM,
    },
    Symbol.toStringTag,
    { value: "Module" }
  )
);
var qe = function (n) {
  return typeof n == "function"
    ? n
    : typeof n == "string"
    ? function (e) {
        return e[n];
      }
    : function (e) {
        return n;
      };
};
function jc(n, e, t) {
  (n.prototype = e.prototype = t), (t.constructor = n);
}
function q2(n, e) {
  var t = Object.create(n.prototype);
  for (var i in e) t[i] = e[i];
  return t;
}
function Za() {}
var Ga = 0.7,
  Il = 1 / Ga,
  Bo = "\\s*([+-]?\\d+)\\s*",
  Ha = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
  mr = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
  SM = /^#([0-9a-f]{3,8})$/,
  TM = new RegExp(`^rgb\\(${Bo},${Bo},${Bo}\\)$`),
  CM = new RegExp(`^rgb\\(${mr},${mr},${mr}\\)$`),
  RM = new RegExp(`^rgba\\(${Bo},${Bo},${Bo},${Ha}\\)$`),
  PM = new RegExp(`^rgba\\(${mr},${mr},${mr},${Ha}\\)$`),
  LM = new RegExp(`^hsl\\(${Ha},${mr},${mr}\\)$`),
  DM = new RegExp(`^hsla\\(${Ha},${mr},${mr},${Ha}\\)$`),
  fp = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  };
jc(Za, Vs, {
  copy(n) {
    return Object.assign(new this.constructor(), this, n);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: hp,
  formatHex: hp,
  formatHex8: IM,
  formatHsl: OM,
  formatRgb: dp,
  toString: dp,
});
function hp() {
  return this.rgb().formatHex();
}
function IM() {
  return this.rgb().formatHex8();
}
function OM() {
  return U2(this).formatHsl();
}
function dp() {
  return this.rgb().formatRgb();
}
function Vs(n) {
  var e, t;
  return (
    (n = (n + "").trim().toLowerCase()),
    (e = SM.exec(n))
      ? ((t = e[1].length),
        (e = parseInt(e[1], 16)),
        t === 6
          ? pp(e)
          : t === 3
          ? new gi(
              ((e >> 8) & 15) | ((e >> 4) & 240),
              ((e >> 4) & 15) | (e & 240),
              ((e & 15) << 4) | (e & 15),
              1
            )
          : t === 8
          ? kA(
              (e >> 24) & 255,
              (e >> 16) & 255,
              (e >> 8) & 255,
              (e & 255) / 255
            )
          : t === 4
          ? kA(
              ((e >> 12) & 15) | ((e >> 8) & 240),
              ((e >> 8) & 15) | ((e >> 4) & 240),
              ((e >> 4) & 15) | (e & 240),
              (((e & 15) << 4) | (e & 15)) / 255
            )
          : null)
      : (e = TM.exec(n))
      ? new gi(e[1], e[2], e[3], 1)
      : (e = CM.exec(n))
      ? new gi((e[1] * 255) / 100, (e[2] * 255) / 100, (e[3] * 255) / 100, 1)
      : (e = RM.exec(n))
      ? kA(e[1], e[2], e[3], e[4])
      : (e = PM.exec(n))
      ? kA((e[1] * 255) / 100, (e[2] * 255) / 100, (e[3] * 255) / 100, e[4])
      : (e = LM.exec(n))
      ? vp(e[1], e[2] / 100, e[3] / 100, 1)
      : (e = DM.exec(n))
      ? vp(e[1], e[2] / 100, e[3] / 100, e[4])
      : fp.hasOwnProperty(n)
      ? pp(fp[n])
      : n === "transparent"
      ? new gi(NaN, NaN, NaN, 0)
      : null
  );
}
function pp(n) {
  return new gi((n >> 16) & 255, (n >> 8) & 255, n & 255, 1);
}
function kA(n, e, t, i) {
  return i <= 0 && (n = e = t = NaN), new gi(n, e, t, i);
}
function qM(n) {
  return (
    n instanceof Za || (n = Vs(n)),
    n ? ((n = n.rgb()), new gi(n.r, n.g, n.b, n.opacity)) : new gi()
  );
}
function sc(n, e, t, i) {
  return arguments.length === 1 ? qM(n) : new gi(n, e, t, i ?? 1);
}
function gi(n, e, t, i) {
  (this.r = +n), (this.g = +e), (this.b = +t), (this.opacity = +i);
}
jc(
  gi,
  sc,
  q2(Za, {
    brighter(n) {
      return (
        (n = n == null ? Il : Math.pow(Il, n)),
        new gi(this.r * n, this.g * n, this.b * n, this.opacity)
      );
    },
    darker(n) {
      return (
        (n = n == null ? Ga : Math.pow(Ga, n)),
        new gi(this.r * n, this.g * n, this.b * n, this.opacity)
      );
    },
    rgb() {
      return this;
    },
    clamp() {
      return new gi(Ns(this.r), Ns(this.g), Ns(this.b), Ol(this.opacity));
    },
    displayable() {
      return (
        -0.5 <= this.r &&
        this.r < 255.5 &&
        -0.5 <= this.g &&
        this.g < 255.5 &&
        -0.5 <= this.b &&
        this.b < 255.5 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    hex: mp,
    formatHex: mp,
    formatHex8: UM,
    formatRgb: gp,
    toString: gp,
  })
);
function mp() {
  return `#${Ds(this.r)}${Ds(this.g)}${Ds(this.b)}`;
}
function UM() {
  return `#${Ds(this.r)}${Ds(this.g)}${Ds(this.b)}${Ds(
    (isNaN(this.opacity) ? 1 : this.opacity) * 255
  )}`;
}
function gp() {
  const n = Ol(this.opacity);
  return `${n === 1 ? "rgb(" : "rgba("}${Ns(this.r)}, ${Ns(this.g)}, ${Ns(
    this.b
  )}${n === 1 ? ")" : `, ${n})`}`;
}
function Ol(n) {
  return isNaN(n) ? 1 : Math.max(0, Math.min(1, n));
}
function Ns(n) {
  return Math.max(0, Math.min(255, Math.round(n) || 0));
}
function Ds(n) {
  return (n = Ns(n)), (n < 16 ? "0" : "") + n.toString(16);
}
function vp(n, e, t, i) {
  return (
    i <= 0
      ? (n = e = t = NaN)
      : t <= 0 || t >= 1
      ? (n = e = NaN)
      : e <= 0 && (n = NaN),
    new ir(n, e, t, i)
  );
}
function U2(n) {
  if (n instanceof ir) return new ir(n.h, n.s, n.l, n.opacity);
  if ((n instanceof Za || (n = Vs(n)), !n)) return new ir();
  if (n instanceof ir) return n;
  n = n.rgb();
  var e = n.r / 255,
    t = n.g / 255,
    i = n.b / 255,
    r = Math.min(e, t, i),
    s = Math.max(e, t, i),
    u = NaN,
    c = s - r,
    h = (s + r) / 2;
  return (
    c
      ? (e === s
          ? (u = (t - i) / c + (t < i) * 6)
          : t === s
          ? (u = (i - e) / c + 2)
          : (u = (e - t) / c + 4),
        (c /= h < 0.5 ? s + r : 2 - s - r),
        (u *= 60))
      : (c = h > 0 && h < 1 ? 0 : u),
    new ir(u, c, h, n.opacity)
  );
}
function BM(n, e, t, i) {
  return arguments.length === 1 ? U2(n) : new ir(n, e, t, i ?? 1);
}
function ir(n, e, t, i) {
  (this.h = +n), (this.s = +e), (this.l = +t), (this.opacity = +i);
}
jc(
  ir,
  BM,
  q2(Za, {
    brighter(n) {
      return (
        (n = n == null ? Il : Math.pow(Il, n)),
        new ir(this.h, this.s, this.l * n, this.opacity)
      );
    },
    darker(n) {
      return (
        (n = n == null ? Ga : Math.pow(Ga, n)),
        new ir(this.h, this.s, this.l * n, this.opacity)
      );
    },
    rgb() {
      var n = (this.h % 360) + (this.h < 0) * 360,
        e = isNaN(n) || isNaN(this.s) ? 0 : this.s,
        t = this.l,
        i = t + (t < 0.5 ? t : 1 - t) * e,
        r = 2 * t - i;
      return new gi(
        uu(n >= 240 ? n - 240 : n + 120, r, i),
        uu(n, r, i),
        uu(n < 120 ? n + 240 : n - 120, r, i),
        this.opacity
      );
    },
    clamp() {
      return new ir(_p(this.h), zA(this.s), zA(this.l), Ol(this.opacity));
    },
    displayable() {
      return (
        ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
        0 <= this.l &&
        this.l <= 1 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    formatHsl() {
      const n = Ol(this.opacity);
      return `${n === 1 ? "hsl(" : "hsla("}${_p(this.h)}, ${
        zA(this.s) * 100
      }%, ${zA(this.l) * 100}%${n === 1 ? ")" : `, ${n})`}`;
    },
  })
);
function _p(n) {
  return (n = (n || 0) % 360), n < 0 ? n + 360 : n;
}
function zA(n) {
  return Math.max(0, Math.min(1, n || 0));
}
function uu(n, e, t) {
  return (
    (n < 60
      ? e + ((t - e) * n) / 60
      : n < 180
      ? t
      : n < 240
      ? e + ((t - e) * (240 - n)) / 60
      : e) * 255
  );
}
function ql(n) {
  "@babel/helpers - typeof";
  return (
    (ql =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    ql(n)
  );
}
var NM = /^\s+/,
  FM = /\s+$/;
function dt(n, e) {
  if (((n = n || ""), (e = e || {}), n instanceof dt)) return n;
  if (!(this instanceof dt)) return new dt(n, e);
  var t = kM(n);
  (this._originalInput = n),
    (this._r = t.r),
    (this._g = t.g),
    (this._b = t.b),
    (this._a = t.a),
    (this._roundA = Math.round(100 * this._a) / 100),
    (this._format = e.format || t.format),
    (this._gradientType = e.gradientType),
    this._r < 1 && (this._r = Math.round(this._r)),
    this._g < 1 && (this._g = Math.round(this._g)),
    this._b < 1 && (this._b = Math.round(this._b)),
    (this._ok = t.ok);
}
dt.prototype = {
  isDark: function () {
    return this.getBrightness() < 128;
  },
  isLight: function () {
    return !this.isDark();
  },
  isValid: function () {
    return this._ok;
  },
  getOriginalInput: function () {
    return this._originalInput;
  },
  getFormat: function () {
    return this._format;
  },
  getAlpha: function () {
    return this._a;
  },
  getBrightness: function () {
    var e = this.toRgb();
    return (e.r * 299 + e.g * 587 + e.b * 114) / 1e3;
  },
  getLuminance: function () {
    var e = this.toRgb(),
      t,
      i,
      r,
      s,
      u,
      c;
    return (
      (t = e.r / 255),
      (i = e.g / 255),
      (r = e.b / 255),
      t <= 0.03928 ? (s = t / 12.92) : (s = Math.pow((t + 0.055) / 1.055, 2.4)),
      i <= 0.03928 ? (u = i / 12.92) : (u = Math.pow((i + 0.055) / 1.055, 2.4)),
      r <= 0.03928 ? (c = r / 12.92) : (c = Math.pow((r + 0.055) / 1.055, 2.4)),
      0.2126 * s + 0.7152 * u + 0.0722 * c
    );
  },
  setAlpha: function (e) {
    return (
      (this._a = B2(e)), (this._roundA = Math.round(100 * this._a) / 100), this
    );
  },
  toHsv: function () {
    var e = yp(this._r, this._g, this._b);
    return { h: e.h * 360, s: e.s, v: e.v, a: this._a };
  },
  toHsvString: function () {
    var e = yp(this._r, this._g, this._b),
      t = Math.round(e.h * 360),
      i = Math.round(e.s * 100),
      r = Math.round(e.v * 100);
    return this._a == 1
      ? "hsv(" + t + ", " + i + "%, " + r + "%)"
      : "hsva(" + t + ", " + i + "%, " + r + "%, " + this._roundA + ")";
  },
  toHsl: function () {
    var e = xp(this._r, this._g, this._b);
    return { h: e.h * 360, s: e.s, l: e.l, a: this._a };
  },
  toHslString: function () {
    var e = xp(this._r, this._g, this._b),
      t = Math.round(e.h * 360),
      i = Math.round(e.s * 100),
      r = Math.round(e.l * 100);
    return this._a == 1
      ? "hsl(" + t + ", " + i + "%, " + r + "%)"
      : "hsla(" + t + ", " + i + "%, " + r + "%, " + this._roundA + ")";
  },
  toHex: function (e) {
    return bp(this._r, this._g, this._b, e);
  },
  toHexString: function (e) {
    return "#" + this.toHex(e);
  },
  toHex8: function (e) {
    return VM(this._r, this._g, this._b, this._a, e);
  },
  toHex8String: function (e) {
    return "#" + this.toHex8(e);
  },
  toRgb: function () {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a,
    };
  },
  toRgbString: function () {
    return this._a == 1
      ? "rgb(" +
          Math.round(this._r) +
          ", " +
          Math.round(this._g) +
          ", " +
          Math.round(this._b) +
          ")"
      : "rgba(" +
          Math.round(this._r) +
          ", " +
          Math.round(this._g) +
          ", " +
          Math.round(this._b) +
          ", " +
          this._roundA +
          ")";
  },
  toPercentageRgb: function () {
    return {
      r: Math.round(pn(this._r, 255) * 100) + "%",
      g: Math.round(pn(this._g, 255) * 100) + "%",
      b: Math.round(pn(this._b, 255) * 100) + "%",
      a: this._a,
    };
  },
  toPercentageRgbString: function () {
    return this._a == 1
      ? "rgb(" +
          Math.round(pn(this._r, 255) * 100) +
          "%, " +
          Math.round(pn(this._g, 255) * 100) +
          "%, " +
          Math.round(pn(this._b, 255) * 100) +
          "%)"
      : "rgba(" +
          Math.round(pn(this._r, 255) * 100) +
          "%, " +
          Math.round(pn(this._g, 255) * 100) +
          "%, " +
          Math.round(pn(this._b, 255) * 100) +
          "%, " +
          this._roundA +
          ")";
  },
  toName: function () {
    return this._a === 0
      ? "transparent"
      : this._a < 1
      ? !1
      : nE[bp(this._r, this._g, this._b, !0)] || !1;
  },
  toFilter: function (e) {
    var t = "#" + Mp(this._r, this._g, this._b, this._a),
      i = t,
      r = this._gradientType ? "GradientType = 1, " : "";
    if (e) {
      var s = dt(e);
      i = "#" + Mp(s._r, s._g, s._b, s._a);
    }
    return (
      "progid:DXImageTransform.Microsoft.gradient(" +
      r +
      "startColorstr=" +
      t +
      ",endColorstr=" +
      i +
      ")"
    );
  },
  toString: function (e) {
    var t = !!e;
    e = e || this._format;
    var i = !1,
      r = this._a < 1 && this._a >= 0,
      s =
        !t &&
        r &&
        (e === "hex" ||
          e === "hex6" ||
          e === "hex3" ||
          e === "hex4" ||
          e === "hex8" ||
          e === "name");
    return s
      ? e === "name" && this._a === 0
        ? this.toName()
        : this.toRgbString()
      : (e === "rgb" && (i = this.toRgbString()),
        e === "prgb" && (i = this.toPercentageRgbString()),
        (e === "hex" || e === "hex6") && (i = this.toHexString()),
        e === "hex3" && (i = this.toHexString(!0)),
        e === "hex4" && (i = this.toHex8String(!0)),
        e === "hex8" && (i = this.toHex8String()),
        e === "name" && (i = this.toName()),
        e === "hsl" && (i = this.toHslString()),
        e === "hsv" && (i = this.toHsvString()),
        i || this.toHexString());
  },
  clone: function () {
    return dt(this.toString());
  },
  _applyModification: function (e, t) {
    var i = e.apply(null, [this].concat([].slice.call(t)));
    return (
      (this._r = i._r),
      (this._g = i._g),
      (this._b = i._b),
      this.setAlpha(i._a),
      this
    );
  },
  lighten: function () {
    return this._applyModification(QM, arguments);
  },
  brighten: function () {
    return this._applyModification($M, arguments);
  },
  darken: function () {
    return this._applyModification(YM, arguments);
  },
  desaturate: function () {
    return this._applyModification(WM, arguments);
  },
  saturate: function () {
    return this._applyModification(jM, arguments);
  },
  greyscale: function () {
    return this._applyModification(XM, arguments);
  },
  spin: function () {
    return this._applyModification(ZM, arguments);
  },
  _applyCombination: function (e, t) {
    return e.apply(null, [this].concat([].slice.call(t)));
  },
  analogous: function () {
    return this._applyCombination(eE, arguments);
  },
  complement: function () {
    return this._applyCombination(KM, arguments);
  },
  monochromatic: function () {
    return this._applyCombination(tE, arguments);
  },
  splitcomplement: function () {
    return this._applyCombination(JM, arguments);
  },
  triad: function () {
    return this._applyCombination(Ep, [3]);
  },
  tetrad: function () {
    return this._applyCombination(Ep, [4]);
  },
};
dt.fromRatio = function (n, e) {
  if (ql(n) == "object") {
    var t = {};
    for (var i in n)
      n.hasOwnProperty(i) && (i === "a" ? (t[i] = n[i]) : (t[i] = ya(n[i])));
    n = t;
  }
  return dt(n, e);
};
function kM(n) {
  var e = { r: 0, g: 0, b: 0 },
    t = 1,
    i = null,
    r = null,
    s = null,
    u = !1,
    c = !1;
  return (
    typeof n == "string" && (n = oE(n)),
    ql(n) == "object" &&
      (Lr(n.r) && Lr(n.g) && Lr(n.b)
        ? ((e = zM(n.r, n.g, n.b)),
          (u = !0),
          (c = String(n.r).substr(-1) === "%" ? "prgb" : "rgb"))
        : Lr(n.h) && Lr(n.s) && Lr(n.v)
        ? ((i = ya(n.s)),
          (r = ya(n.v)),
          (e = HM(n.h, i, r)),
          (u = !0),
          (c = "hsv"))
        : Lr(n.h) &&
          Lr(n.s) &&
          Lr(n.l) &&
          ((i = ya(n.s)),
          (s = ya(n.l)),
          (e = GM(n.h, i, s)),
          (u = !0),
          (c = "hsl")),
      n.hasOwnProperty("a") && (t = n.a)),
    (t = B2(t)),
    {
      ok: u,
      format: n.format || c,
      r: Math.min(255, Math.max(e.r, 0)),
      g: Math.min(255, Math.max(e.g, 0)),
      b: Math.min(255, Math.max(e.b, 0)),
      a: t,
    }
  );
}
function zM(n, e, t) {
  return { r: pn(n, 255) * 255, g: pn(e, 255) * 255, b: pn(t, 255) * 255 };
}
function xp(n, e, t) {
  (n = pn(n, 255)), (e = pn(e, 255)), (t = pn(t, 255));
  var i = Math.max(n, e, t),
    r = Math.min(n, e, t),
    s,
    u,
    c = (i + r) / 2;
  if (i == r) s = u = 0;
  else {
    var h = i - r;
    switch (((u = c > 0.5 ? h / (2 - i - r) : h / (i + r)), i)) {
      case n:
        s = (e - t) / h + (e < t ? 6 : 0);
        break;
      case e:
        s = (t - n) / h + 2;
        break;
      case t:
        s = (n - e) / h + 4;
        break;
    }
    s /= 6;
  }
  return { h: s, s: u, l: c };
}
function GM(n, e, t) {
  var i, r, s;
  (n = pn(n, 360)), (e = pn(e, 100)), (t = pn(t, 100));
  function u(p, g, v) {
    return (
      v < 0 && (v += 1),
      v > 1 && (v -= 1),
      v < 1 / 6
        ? p + (g - p) * 6 * v
        : v < 1 / 2
        ? g
        : v < 2 / 3
        ? p + (g - p) * (2 / 3 - v) * 6
        : p
    );
  }
  if (e === 0) i = r = s = t;
  else {
    var c = t < 0.5 ? t * (1 + e) : t + e - t * e,
      h = 2 * t - c;
    (i = u(h, c, n + 1 / 3)), (r = u(h, c, n)), (s = u(h, c, n - 1 / 3));
  }
  return { r: i * 255, g: r * 255, b: s * 255 };
}
function yp(n, e, t) {
  (n = pn(n, 255)), (e = pn(e, 255)), (t = pn(t, 255));
  var i = Math.max(n, e, t),
    r = Math.min(n, e, t),
    s,
    u,
    c = i,
    h = i - r;
  if (((u = i === 0 ? 0 : h / i), i == r)) s = 0;
  else {
    switch (i) {
      case n:
        s = (e - t) / h + (e < t ? 6 : 0);
        break;
      case e:
        s = (t - n) / h + 2;
        break;
      case t:
        s = (n - e) / h + 4;
        break;
    }
    s /= 6;
  }
  return { h: s, s: u, v: c };
}
function HM(n, e, t) {
  (n = pn(n, 360) * 6), (e = pn(e, 100)), (t = pn(t, 100));
  var i = Math.floor(n),
    r = n - i,
    s = t * (1 - e),
    u = t * (1 - r * e),
    c = t * (1 - (1 - r) * e),
    h = i % 6,
    p = [t, u, s, s, c, t][h],
    g = [c, t, t, u, s, s][h],
    v = [s, s, c, t, t, u][h];
  return { r: p * 255, g: g * 255, b: v * 255 };
}
function bp(n, e, t, i) {
  var r = [
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
  ];
  return i &&
    r[0].charAt(0) == r[0].charAt(1) &&
    r[1].charAt(0) == r[1].charAt(1) &&
    r[2].charAt(0) == r[2].charAt(1)
    ? r[0].charAt(0) + r[1].charAt(0) + r[2].charAt(0)
    : r.join("");
}
function VM(n, e, t, i, r) {
  var s = [
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
    sr(N2(i)),
  ];
  return r &&
    s[0].charAt(0) == s[0].charAt(1) &&
    s[1].charAt(0) == s[1].charAt(1) &&
    s[2].charAt(0) == s[2].charAt(1) &&
    s[3].charAt(0) == s[3].charAt(1)
    ? s[0].charAt(0) + s[1].charAt(0) + s[2].charAt(0) + s[3].charAt(0)
    : s.join("");
}
function Mp(n, e, t, i) {
  var r = [
    sr(N2(i)),
    sr(Math.round(n).toString(16)),
    sr(Math.round(e).toString(16)),
    sr(Math.round(t).toString(16)),
  ];
  return r.join("");
}
dt.equals = function (n, e) {
  return !n || !e ? !1 : dt(n).toRgbString() == dt(e).toRgbString();
};
dt.random = function () {
  return dt.fromRatio({ r: Math.random(), g: Math.random(), b: Math.random() });
};
function WM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = dt(n).toHsl();
  return (t.s -= e / 100), (t.s = s0(t.s)), dt(t);
}
function jM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = dt(n).toHsl();
  return (t.s += e / 100), (t.s = s0(t.s)), dt(t);
}
function XM(n) {
  return dt(n).desaturate(100);
}
function QM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = dt(n).toHsl();
  return (t.l += e / 100), (t.l = s0(t.l)), dt(t);
}
function $M(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = dt(n).toRgb();
  return (
    (t.r = Math.max(0, Math.min(255, t.r - Math.round(255 * -(e / 100))))),
    (t.g = Math.max(0, Math.min(255, t.g - Math.round(255 * -(e / 100))))),
    (t.b = Math.max(0, Math.min(255, t.b - Math.round(255 * -(e / 100))))),
    dt(t)
  );
}
function YM(n, e) {
  e = e === 0 ? 0 : e || 10;
  var t = dt(n).toHsl();
  return (t.l -= e / 100), (t.l = s0(t.l)), dt(t);
}
function ZM(n, e) {
  var t = dt(n).toHsl(),
    i = (t.h + e) % 360;
  return (t.h = i < 0 ? 360 + i : i), dt(t);
}
function KM(n) {
  var e = dt(n).toHsl();
  return (e.h = (e.h + 180) % 360), dt(e);
}
function Ep(n, e) {
  if (isNaN(e) || e <= 0)
    throw new Error("Argument to polyad must be a positive number");
  for (var t = dt(n).toHsl(), i = [dt(n)], r = 360 / e, s = 1; s < e; s++)
    i.push(dt({ h: (t.h + s * r) % 360, s: t.s, l: t.l }));
  return i;
}
function JM(n) {
  var e = dt(n).toHsl(),
    t = e.h;
  return [
    dt(n),
    dt({ h: (t + 72) % 360, s: e.s, l: e.l }),
    dt({ h: (t + 216) % 360, s: e.s, l: e.l }),
  ];
}
function eE(n, e, t) {
  (e = e || 6), (t = t || 30);
  var i = dt(n).toHsl(),
    r = 360 / t,
    s = [dt(n)];
  for (i.h = (i.h - ((r * e) >> 1) + 720) % 360; --e; )
    (i.h = (i.h + r) % 360), s.push(dt(i));
  return s;
}
function tE(n, e) {
  e = e || 6;
  for (
    var t = dt(n).toHsv(), i = t.h, r = t.s, s = t.v, u = [], c = 1 / e;
    e--;

  )
    u.push(dt({ h: i, s: r, v: s })), (s = (s + c) % 1);
  return u;
}
dt.mix = function (n, e, t) {
  t = t === 0 ? 0 : t || 50;
  var i = dt(n).toRgb(),
    r = dt(e).toRgb(),
    s = t / 100,
    u = {
      r: (r.r - i.r) * s + i.r,
      g: (r.g - i.g) * s + i.g,
      b: (r.b - i.b) * s + i.b,
      a: (r.a - i.a) * s + i.a,
    };
  return dt(u);
};
dt.readability = function (n, e) {
  var t = dt(n),
    i = dt(e);
  return (
    (Math.max(t.getLuminance(), i.getLuminance()) + 0.05) /
    (Math.min(t.getLuminance(), i.getLuminance()) + 0.05)
  );
};
dt.isReadable = function (n, e, t) {
  var i = dt.readability(n, e),
    r,
    s;
  switch (((s = !1), (r = aE(t)), r.level + r.size)) {
    case "AAsmall":
    case "AAAlarge":
      s = i >= 4.5;
      break;
    case "AAlarge":
      s = i >= 3;
      break;
    case "AAAsmall":
      s = i >= 7;
      break;
  }
  return s;
};
dt.mostReadable = function (n, e, t) {
  var i = null,
    r = 0,
    s,
    u,
    c,
    h;
  (t = t || {}), (u = t.includeFallbackColors), (c = t.level), (h = t.size);
  for (var p = 0; p < e.length; p++)
    (s = dt.readability(n, e[p])), s > r && ((r = s), (i = dt(e[p])));
  return dt.isReadable(n, i, { level: c, size: h }) || !u
    ? i
    : ((t.includeFallbackColors = !1), dt.mostReadable(n, ["#fff", "#000"], t));
};
var oc = (dt.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32",
  }),
  nE = (dt.hexNames = iE(oc));
function iE(n) {
  var e = {};
  for (var t in n) n.hasOwnProperty(t) && (e[n[t]] = t);
  return e;
}
function B2(n) {
  return (n = parseFloat(n)), (isNaN(n) || n < 0 || n > 1) && (n = 1), n;
}
function pn(n, e) {
  rE(n) && (n = "100%");
  var t = sE(n);
  return (
    (n = Math.min(e, Math.max(0, parseFloat(n)))),
    t && (n = parseInt(n * e, 10) / 100),
    Math.abs(n - e) < 1e-6 ? 1 : (n % e) / parseFloat(e)
  );
}
function s0(n) {
  return Math.min(1, Math.max(0, n));
}
function wi(n) {
  return parseInt(n, 16);
}
function rE(n) {
  return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
}
function sE(n) {
  return typeof n == "string" && n.indexOf("%") != -1;
}
function sr(n) {
  return n.length == 1 ? "0" + n : "" + n;
}
function ya(n) {
  return n <= 1 && (n = n * 100 + "%"), n;
}
function N2(n) {
  return Math.round(parseFloat(n) * 255).toString(16);
}
function wp(n) {
  return wi(n) / 255;
}
var Ki = (function () {
  var n = "[-\\+]?\\d+%?",
    e = "[-\\+]?\\d*\\.\\d+%?",
    t = "(?:" + e + ")|(?:" + n + ")",
    i = "[\\s|\\(]+(" + t + ")[,|\\s]+(" + t + ")[,|\\s]+(" + t + ")\\s*\\)?",
    r =
      "[\\s|\\(]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")[,|\\s]+(" +
      t +
      ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(t),
    rgb: new RegExp("rgb" + i),
    rgba: new RegExp("rgba" + r),
    hsl: new RegExp("hsl" + i),
    hsla: new RegExp("hsla" + r),
    hsv: new RegExp("hsv" + i),
    hsva: new RegExp("hsva" + r),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  };
})();
function Lr(n) {
  return !!Ki.CSS_UNIT.exec(n);
}
function oE(n) {
  n = n.replace(NM, "").replace(FM, "").toLowerCase();
  var e = !1;
  if (oc[n]) (n = oc[n]), (e = !0);
  else if (n == "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var t;
  return (t = Ki.rgb.exec(n))
    ? { r: t[1], g: t[2], b: t[3] }
    : (t = Ki.rgba.exec(n))
    ? { r: t[1], g: t[2], b: t[3], a: t[4] }
    : (t = Ki.hsl.exec(n))
    ? { h: t[1], s: t[2], l: t[3] }
    : (t = Ki.hsla.exec(n))
    ? { h: t[1], s: t[2], l: t[3], a: t[4] }
    : (t = Ki.hsv.exec(n))
    ? { h: t[1], s: t[2], v: t[3] }
    : (t = Ki.hsva.exec(n))
    ? { h: t[1], s: t[2], v: t[3], a: t[4] }
    : (t = Ki.hex8.exec(n))
    ? {
        r: wi(t[1]),
        g: wi(t[2]),
        b: wi(t[3]),
        a: wp(t[4]),
        format: e ? "name" : "hex8",
      }
    : (t = Ki.hex6.exec(n))
    ? { r: wi(t[1]), g: wi(t[2]), b: wi(t[3]), format: e ? "name" : "hex" }
    : (t = Ki.hex4.exec(n))
    ? {
        r: wi(t[1] + "" + t[1]),
        g: wi(t[2] + "" + t[2]),
        b: wi(t[3] + "" + t[3]),
        a: wp(t[4] + "" + t[4]),
        format: e ? "name" : "hex8",
      }
    : (t = Ki.hex3.exec(n))
    ? {
        r: wi(t[1] + "" + t[1]),
        g: wi(t[2] + "" + t[2]),
        b: wi(t[3] + "" + t[3]),
        format: e ? "name" : "hex",
      }
    : !1;
}
function aE(n) {
  var e, t;
  return (
    (n = n || { level: "AA", size: "small" }),
    (e = (n.level || "AA").toUpperCase()),
    (t = (n.size || "small").toLowerCase()),
    e !== "AA" && e !== "AAA" && (e = "AA"),
    t !== "small" && t !== "large" && (t = "small"),
    { level: e, size: t }
  );
}
function AE(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function lE(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function uE(n, e) {
  if (n == null) return {};
  var t = lE(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function cE(n, e) {
  return dE(n) || AE(n, e) || F2(n, e) || gE();
}
function fE(n) {
  return hE(n) || pE(n) || F2(n) || mE();
}
function hE(n) {
  if (Array.isArray(n)) return ac(n);
}
function dE(n) {
  if (Array.isArray(n)) return n;
}
function pE(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function F2(n, e) {
  if (n) {
    if (typeof n == "string") return ac(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return ac(n, e);
  }
}
function ac(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function mE() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function gE() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function vE(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function _E(n) {
  var e = vE(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var Ac = function () {
  var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [],
    e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
    t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
    i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1,
    r = (e instanceof Array ? (e.length ? e : [void 0]) : [e]).map(function (
      c
    ) {
      return { keyAccessor: c, isProp: !(c instanceof Function) };
    }),
    s = n.reduce(function (c, h) {
      var p = c,
        g = h;
      return (
        r.forEach(function (v, x) {
          var M = v.keyAccessor,
            w = v.isProp,
            C;
          if (w) {
            var E = g,
              b = E[M],
              L = uE(E, [M].map(_E));
            (C = b), (g = L);
          } else C = M(g, x);
          x + 1 < r.length
            ? (p.hasOwnProperty(C) || (p[C] = {}), (p = p[C]))
            : t
            ? (p.hasOwnProperty(C) || (p[C] = []), p[C].push(g))
            : (p[C] = g);
        }),
        c
      );
    }, {});
  t instanceof Function &&
    (function c(h) {
      var p =
        arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      p === r.length
        ? Object.keys(h).forEach(function (g) {
            return (h[g] = t(h[g]));
          })
        : Object.values(h).forEach(function (g) {
            return c(g, p + 1);
          });
    })(s);
  var u = s;
  return (
    i &&
      ((u = []),
      (function c(h) {
        var p =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        p.length === r.length
          ? u.push({ keys: p, vals: h })
          : Object.entries(h).forEach(function (g) {
              var v = cE(g, 2),
                x = v[0],
                M = v[1];
              return c(M, [].concat(fE(p), [x]));
            });
      })(s),
      e instanceof Array &&
        e.length === 0 &&
        u.length === 1 &&
        (u[0].keys = [])),
    u
  );
};
function xE(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function Sp(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(n);
    e &&
      (i = i.filter(function (r) {
        return Object.getOwnPropertyDescriptor(n, r).enumerable;
      })),
      t.push.apply(t, i);
  }
  return t;
}
function yE(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Sp(Object(t), !0).forEach(function (i) {
          k2(n, i, t[i]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t))
      : Sp(Object(t)).forEach(function (i) {
          Object.defineProperty(n, i, Object.getOwnPropertyDescriptor(t, i));
        });
  }
  return n;
}
function k2(n, e, t) {
  return (
    (e = PE(e)),
    e in n
      ? Object.defineProperty(n, e, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (n[e] = t),
    n
  );
}
function bE(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function ME(n, e) {
  if (n == null) return {};
  var t = bE(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function z2(n, e) {
  return wE(n) || xE(n, e) || G2(n, e) || CE();
}
function Ul(n) {
  return EE(n) || SE(n) || G2(n) || TE();
}
function EE(n) {
  if (Array.isArray(n)) return lc(n);
}
function wE(n) {
  if (Array.isArray(n)) return n;
}
function SE(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function G2(n, e) {
  if (n) {
    if (typeof n == "string") return lc(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return lc(n, e);
  }
}
function lc(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function TE() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function CE() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function RE(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function PE(n) {
  var e = RE(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
var LE = ["createObj", "updateObj", "exitObj", "objBindAttr", "dataBindAttr"];
function DE(n, e, t) {
  var i = { enter: [], update: [], exit: [] };
  if (t) {
    var u = Ac(n, t, !1),
      c = Ac(e, t, !1),
      h = Object.assign({}, u, c);
    Object.entries(h).forEach(function (p) {
      var g = z2(p, 2),
        v = g[0],
        x = g[1],
        M = u.hasOwnProperty(v)
          ? c.hasOwnProperty(v)
            ? "update"
            : "exit"
          : "enter";
      i[M].push(M === "update" ? [u[v], c[v]] : x);
    });
  } else {
    var r = new Set(n),
      s = new Set(e);
    new Set([].concat(Ul(r), Ul(s))).forEach(function (p) {
      var g = r.has(p) ? (s.has(p) ? "update" : "exit") : "enter";
      i[g].push(g === "update" ? [p, p] : p);
    });
  }
  return i;
}
function IE(n, e, t) {
  var i = t.objBindAttr,
    r = i === void 0 ? "__obj" : i,
    s = t.dataBindAttr,
    u = s === void 0 ? "__data" : s,
    c = t.idAccessor,
    h = t.purge,
    p = h === void 0 ? !1 : h,
    g = function (E) {
      return E.hasOwnProperty(u);
    },
    v = e.filter(function (C) {
      return !g(C);
    }),
    x = e.filter(g).map(function (C) {
      return C[u];
    }),
    M = n,
    w = p ? { enter: M, exit: x, update: [] } : DE(x, M, c);
  return (
    (w.update = w.update.map(function (C) {
      var E = z2(C, 2),
        b = E[0],
        L = E[1];
      return b !== L && ((L[r] = b[r]), (L[r][u] = L)), L;
    })),
    (w.exit = w.exit.concat(
      v.map(function (C) {
        return k2({}, r, C);
      })
    )),
    w
  );
}
function OE(n, e, t, i, r) {
  var s = r.createObj,
    u =
      s === void 0
        ? function (N) {
            return {};
          }
        : s,
    c = r.updateObj,
    h = c === void 0 ? function (N, D) {} : c,
    p = r.exitObj,
    g = p === void 0 ? function (N) {} : p,
    v = r.objBindAttr,
    x = v === void 0 ? "__obj" : v,
    M = r.dataBindAttr,
    w = M === void 0 ? "__data" : M,
    C = ME(r, LE),
    E = IE(n, e, yE({ objBindAttr: x, dataBindAttr: w }, C)),
    b = E.enter,
    L = E.update,
    S = E.exit;
  S.forEach(function (N) {
    var D = N[x];
    delete N[x], g(D), i(D);
  });
  var R = q(b),
    U = [].concat(Ul(b), Ul(L));
  I(U), R.forEach(t);
  function q(N) {
    var D = [];
    return (
      N.forEach(function (O) {
        var k = u(O);
        k && ((k[w] = O), (O[x] = k), D.push(k));
      }),
      D
    );
  }
  function I(N) {
    N.forEach(function (D) {
      var O = D[x];
      O && ((O[w] = D), h(O, D));
    });
  }
}
var H2 = { exports: {} };
(function (n, e) {
  (function (t, i) {
    n.exports = i();
  })(C6, function () {
    return (function (t) {
      function i(s) {
        if (r[s]) return r[s].exports;
        var u = (r[s] = { exports: {}, id: s, loaded: !1 });
        return (
          t[s].call(u.exports, u, u.exports, i), (u.loaded = !0), u.exports
        );
      }
      var r = {};
      return (i.m = t), (i.c = r), (i.p = ""), i(0);
    })([
      function (t, i, r) {
        var s = r(1),
          u = (function () {
            function c(h, p, g) {
              h === void 0 && (h = NaN),
                p === void 0 && (p = NaN),
                g === void 0 && (g = !1),
                (this._minFPS = p),
                (this._maxFPS = h),
                (this._timeScale = 1),
                (this._currentTick = 0),
                (this._currentTime = 0),
                (this._tickDeltaTime = 0),
                (this._isRunning = !1),
                (this._maxInterval = isNaN(this._minFPS)
                  ? NaN
                  : 1e3 / this._minFPS),
                (this._minInterval = isNaN(this._maxFPS)
                  ? NaN
                  : 1e3 / this._maxFPS),
                (this._onResume = new s.default()),
                (this._onPause = new s.default()),
                (this._onTick = new s.default()),
                (this._onTickOncePerFrame = new s.default()),
                g || this.resume();
            }
            return (
              (c.prototype.updateOnce = function (h) {
                h(
                  this.currentTimeSeconds,
                  this.tickDeltaTimeSeconds,
                  this.currentTick
                );
              }),
              (c.prototype.resume = function () {
                this._isRunning ||
                  ((this._isRunning = !0),
                  (this._lastTimeUpdated = this.getTimer()),
                  this._onResume.dispatch(),
                  this.animateOnce());
              }),
              (c.prototype.pause = function () {
                this._isRunning &&
                  ((this._isRunning = !1),
                  this._onPause.dispatch(),
                  window.cancelAnimationFrame(this._animationFrameHandle));
              }),
              (c.prototype.dispose = function () {
                this.pause(),
                  this._onResume.removeAll(),
                  this._onPause.removeAll(),
                  this._onTick.removeAll();
              }),
              Object.defineProperty(c.prototype, "currentTick", {
                get: function () {
                  return this._currentTick;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "currentTimeSeconds", {
                get: function () {
                  return this._currentTime / 1e3;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "tickDeltaTimeSeconds", {
                get: function () {
                  return this._tickDeltaTime / 1e3;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "timeScale", {
                get: function () {
                  return this._timeScale;
                },
                set: function (h) {
                  this._timeScale !== h && (this._timeScale = h);
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onResume", {
                get: function () {
                  return this._onResume;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onPause", {
                get: function () {
                  return this._onPause;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onTick", {
                get: function () {
                  return this._onTick;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "onTickOncePerFrame", {
                get: function () {
                  return this._onTickOncePerFrame;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(c.prototype, "isRunning", {
                get: function () {
                  return this._isRunning;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (c.prototype.animateOnce = function () {
                var h = this;
                this._animationFrameHandle = window.requestAnimationFrame(
                  function () {
                    return h.onFrame();
                  }
                );
              }),
              (c.prototype.onFrame = function () {
                if (
                  ((this._now = this.getTimer()),
                  (this._frameDeltaTime = this._now - this._lastTimeUpdated),
                  isNaN(this._minInterval) ||
                    this._frameDeltaTime >= this._minInterval)
                )
                  if (isNaN(this._maxInterval))
                    this.update(this._frameDeltaTime * this._timeScale, !0),
                      (this._lastTimeUpdated = this._now);
                  else
                    for (
                      this._interval = Math.min(
                        this._frameDeltaTime,
                        this._maxInterval
                      );
                      this._now >= this._lastTimeUpdated + this._interval;

                    )
                      this.update(
                        this._interval * this._timeScale,
                        this._now <=
                          this._lastTimeUpdated + 2 * this._maxInterval
                      ),
                        (this._lastTimeUpdated += this._interval);
                this._isRunning && this.animateOnce();
              }),
              (c.prototype.update = function (h, p) {
                p === void 0 && (p = !0),
                  this._currentTick++,
                  (this._currentTime += h),
                  (this._tickDeltaTime = h),
                  this._onTick.dispatch(
                    this.currentTimeSeconds,
                    this.tickDeltaTimeSeconds,
                    this.currentTick
                  ),
                  p &&
                    this._onTickOncePerFrame.dispatch(
                      this.currentTimeSeconds,
                      this.tickDeltaTimeSeconds,
                      this.currentTick
                    );
              }),
              (c.prototype.getTimer = function () {
                return Date.now();
              }),
              c
            );
          })();
        Object.defineProperty(i, "__esModule", { value: !0 }), (i.default = u);
      },
      function (t, i, r) {
        (function (s, u) {
          t.exports = u();
        })(this, function () {
          return (function (s) {
            function u(h) {
              if (c[h]) return c[h].exports;
              var p = (c[h] = { exports: {}, id: h, loaded: !1 });
              return (
                s[h].call(p.exports, p, p.exports, u),
                (p.loaded = !0),
                p.exports
              );
            }
            var c = {};
            return (u.m = s), (u.c = c), (u.p = ""), u(0);
          })([
            function (s, u) {
              var c = (function () {
                function h() {
                  this.functions = [];
                }
                return (
                  (h.prototype.add = function (p) {
                    return (
                      this.functions.indexOf(p) === -1 &&
                      (this.functions.push(p), !0)
                    );
                  }),
                  (h.prototype.remove = function (p) {
                    var g = this.functions.indexOf(p);
                    return g > -1 && (this.functions.splice(g, 1), !0);
                  }),
                  (h.prototype.removeAll = function () {
                    return (
                      this.functions.length > 0 &&
                      ((this.functions.length = 0), !0)
                    );
                  }),
                  (h.prototype.dispatch = function () {
                    for (var p = [], g = 0; g < arguments.length; g++)
                      p[g] = arguments[g];
                    var v = this.functions.concat();
                    v.forEach(function (x) {
                      x.apply(void 0, p);
                    });
                  }),
                  Object.defineProperty(h.prototype, "numItems", {
                    get: function () {
                      return this.functions.length;
                    },
                    enumerable: !0,
                    configurable: !0,
                  }),
                  h
                );
              })();
              Object.defineProperty(u, "__esModule", { value: !0 }),
                (u.default = c);
            },
          ]);
        });
      },
    ]);
  });
})(H2);
var qE = H2.exports;
const Wo = Fc(qE);
function UE(n, e) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(n);
      break;
    default:
      this.range(e).domain(n);
      break;
  }
  return this;
}
const Xc = (n) => () => n;
function BE(n, e) {
  return function (t) {
    return n + t * e;
  };
}
function NE(n, e, t) {
  return (
    (n = Math.pow(n, t)),
    (e = Math.pow(e, t) - n),
    (t = 1 / t),
    function (i) {
      return Math.pow(n + i * e, t);
    }
  );
}
function FE(n) {
  return (n = +n) == 1
    ? V2
    : function (e, t) {
        return t - e ? NE(e, t, n) : Xc(isNaN(e) ? t : e);
      };
}
function V2(n, e) {
  var t = e - n;
  return t ? BE(n, t) : Xc(isNaN(n) ? e : n);
}
const Tp = (function n(e) {
  var t = FE(e);
  function i(r, s) {
    var u = t((r = sc(r)).r, (s = sc(s)).r),
      c = t(r.g, s.g),
      h = t(r.b, s.b),
      p = V2(r.opacity, s.opacity);
    return function (g) {
      return (
        (r.r = u(g)), (r.g = c(g)), (r.b = h(g)), (r.opacity = p(g)), r + ""
      );
    };
  }
  return (i.gamma = n), i;
})(1);
function W2(n, e) {
  e || (e = []);
  var t = n ? Math.min(e.length, n.length) : 0,
    i = e.slice(),
    r;
  return function (s) {
    for (r = 0; r < t; ++r) i[r] = n[r] * (1 - s) + e[r] * s;
    return i;
  };
}
function j2(n) {
  return ArrayBuffer.isView(n) && !(n instanceof DataView);
}
function kE(n, e) {
  return (j2(e) ? W2 : X2)(n, e);
}
function X2(n, e) {
  var t = e ? e.length : 0,
    i = n ? Math.min(t, n.length) : 0,
    r = new Array(i),
    s = new Array(t),
    u;
  for (u = 0; u < i; ++u) r[u] = Qc(n[u], e[u]);
  for (; u < t; ++u) s[u] = e[u];
  return function (c) {
    for (u = 0; u < i; ++u) s[u] = r[u](c);
    return s;
  };
}
function zE(n, e) {
  var t = new Date();
  return (
    (n = +n),
    (e = +e),
    function (i) {
      return t.setTime(n * (1 - i) + e * i), t;
    }
  );
}
function Bl(n, e) {
  return (
    (n = +n),
    (e = +e),
    function (t) {
      return n * (1 - t) + e * t;
    }
  );
}
function GE(n, e) {
  var t = {},
    i = {},
    r;
  (n === null || typeof n != "object") && (n = {}),
    (e === null || typeof e != "object") && (e = {});
  for (r in e) r in n ? (t[r] = Qc(n[r], e[r])) : (i[r] = e[r]);
  return function (s) {
    for (r in t) i[r] = t[r](s);
    return i;
  };
}
var uc = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
  cu = new RegExp(uc.source, "g");
function HE(n) {
  return function () {
    return n;
  };
}
function VE(n) {
  return function (e) {
    return n(e) + "";
  };
}
function WE(n, e) {
  var t = (uc.lastIndex = cu.lastIndex = 0),
    i,
    r,
    s,
    u = -1,
    c = [],
    h = [];
  for (n = n + "", e = e + ""; (i = uc.exec(n)) && (r = cu.exec(e)); )
    (s = r.index) > t &&
      ((s = e.slice(t, s)), c[u] ? (c[u] += s) : (c[++u] = s)),
      (i = i[0]) === (r = r[0])
        ? c[u]
          ? (c[u] += r)
          : (c[++u] = r)
        : ((c[++u] = null), h.push({ i: u, x: Bl(i, r) })),
      (t = cu.lastIndex);
  return (
    t < e.length && ((s = e.slice(t)), c[u] ? (c[u] += s) : (c[++u] = s)),
    c.length < 2
      ? h[0]
        ? VE(h[0].x)
        : HE(e)
      : ((e = h.length),
        function (p) {
          for (var g = 0, v; g < e; ++g) c[(v = h[g]).i] = v.x(p);
          return c.join("");
        })
  );
}
function Qc(n, e) {
  var t = typeof e,
    i;
  return e == null || t === "boolean"
    ? Xc(e)
    : (t === "number"
        ? Bl
        : t === "string"
        ? (i = Vs(e))
          ? ((e = i), Tp)
          : WE
        : e instanceof Vs
        ? Tp
        : e instanceof Date
        ? zE
        : j2(e)
        ? W2
        : Array.isArray(e)
        ? X2
        : (typeof e.valueOf != "function" && typeof e.toString != "function") ||
          isNaN(e)
        ? GE
        : Bl)(n, e);
}
function jE(n, e) {
  return (
    (n = +n),
    (e = +e),
    function (t) {
      return Math.round(n * (1 - t) + e * t);
    }
  );
}
function XE(n) {
  return function () {
    return n;
  };
}
function QE(n) {
  return +n;
}
var Cp = [0, 1];
function Lo(n) {
  return n;
}
function cc(n, e) {
  return (e -= n = +n)
    ? function (t) {
        return (t - n) / e;
      }
    : XE(isNaN(e) ? NaN : 0.5);
}
function $E(n, e) {
  var t;
  return (
    n > e && ((t = n), (n = e), (e = t)),
    function (i) {
      return Math.max(n, Math.min(e, i));
    }
  );
}
function YE(n, e, t) {
  var i = n[0],
    r = n[1],
    s = e[0],
    u = e[1];
  return (
    r < i ? ((i = cc(r, i)), (s = t(u, s))) : ((i = cc(i, r)), (s = t(s, u))),
    function (c) {
      return s(i(c));
    }
  );
}
function ZE(n, e, t) {
  var i = Math.min(n.length, e.length) - 1,
    r = new Array(i),
    s = new Array(i),
    u = -1;
  for (
    n[i] < n[0] && ((n = n.slice().reverse()), (e = e.slice().reverse()));
    ++u < i;

  )
    (r[u] = cc(n[u], n[u + 1])), (s[u] = t(e[u], e[u + 1]));
  return function (c) {
    var h = Y6(n, c, 1, i) - 1;
    return s[h](r[h](c));
  };
}
function KE(n, e) {
  return e
    .domain(n.domain())
    .range(n.range())
    .interpolate(n.interpolate())
    .clamp(n.clamp())
    .unknown(n.unknown());
}
function JE() {
  var n = Cp,
    e = Cp,
    t = Qc,
    i,
    r,
    s,
    u = Lo,
    c,
    h,
    p;
  function g() {
    var x = Math.min(n.length, e.length);
    return (
      u !== Lo && (u = $E(n[0], n[x - 1])),
      (c = x > 2 ? ZE : YE),
      (h = p = null),
      v
    );
  }
  function v(x) {
    return x == null || isNaN((x = +x))
      ? s
      : (h || (h = c(n.map(i), e, t)))(i(u(x)));
  }
  return (
    (v.invert = function (x) {
      return u(r((p || (p = c(e, n.map(i), Bl)))(x)));
    }),
    (v.domain = function (x) {
      return arguments.length ? ((n = Array.from(x, QE)), g()) : n.slice();
    }),
    (v.range = function (x) {
      return arguments.length ? ((e = Array.from(x)), g()) : e.slice();
    }),
    (v.rangeRound = function (x) {
      return (e = Array.from(x)), (t = jE), g();
    }),
    (v.clamp = function (x) {
      return arguments.length ? ((u = x ? !0 : Lo), g()) : u !== Lo;
    }),
    (v.interpolate = function (x) {
      return arguments.length ? ((t = x), g()) : t;
    }),
    (v.unknown = function (x) {
      return arguments.length ? ((s = x), v) : s;
    }),
    function (x, M) {
      return (i = x), (r = M), g();
    }
  );
}
function ew() {
  return JE()(Lo, Lo);
}
function tw(n) {
  return Math.abs((n = Math.round(n))) >= 1e21
    ? n.toLocaleString("en").replace(/,/g, "")
    : n.toString(10);
}
function Nl(n, e) {
  if (
    (t = (n = e ? n.toExponential(e - 1) : n.toExponential()).indexOf("e")) < 0
  )
    return null;
  var t,
    i = n.slice(0, t);
  return [i.length > 1 ? i[0] + i.slice(2) : i, +n.slice(t + 1)];
}
function jo(n) {
  return (n = Nl(Math.abs(n))), n ? n[1] : NaN;
}
function nw(n, e) {
  return function (t, i) {
    for (
      var r = t.length, s = [], u = 0, c = n[0], h = 0;
      r > 0 &&
      c > 0 &&
      (h + c + 1 > i && (c = Math.max(1, i - h)),
      s.push(t.substring((r -= c), r + c)),
      !((h += c + 1) > i));

    )
      c = n[(u = (u + 1) % n.length)];
    return s.reverse().join(e);
  };
}
function iw(n) {
  return function (e) {
    return e.replace(/[0-9]/g, function (t) {
      return n[+t];
    });
  };
}
var rw =
  /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function Fl(n) {
  if (!(e = rw.exec(n))) throw new Error("invalid format: " + n);
  var e;
  return new $c({
    fill: e[1],
    align: e[2],
    sign: e[3],
    symbol: e[4],
    zero: e[5],
    width: e[6],
    comma: e[7],
    precision: e[8] && e[8].slice(1),
    trim: e[9],
    type: e[10],
  });
}
Fl.prototype = $c.prototype;
function $c(n) {
  (this.fill = n.fill === void 0 ? " " : n.fill + ""),
    (this.align = n.align === void 0 ? ">" : n.align + ""),
    (this.sign = n.sign === void 0 ? "-" : n.sign + ""),
    (this.symbol = n.symbol === void 0 ? "" : n.symbol + ""),
    (this.zero = !!n.zero),
    (this.width = n.width === void 0 ? void 0 : +n.width),
    (this.comma = !!n.comma),
    (this.precision = n.precision === void 0 ? void 0 : +n.precision),
    (this.trim = !!n.trim),
    (this.type = n.type === void 0 ? "" : n.type + "");
}
$c.prototype.toString = function () {
  return (
    this.fill +
    this.align +
    this.sign +
    this.symbol +
    (this.zero ? "0" : "") +
    (this.width === void 0 ? "" : Math.max(1, this.width | 0)) +
    (this.comma ? "," : "") +
    (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) +
    (this.trim ? "~" : "") +
    this.type
  );
};
function sw(n) {
  e: for (var e = n.length, t = 1, i = -1, r; t < e; ++t)
    switch (n[t]) {
      case ".":
        i = r = t;
        break;
      case "0":
        i === 0 && (i = t), (r = t);
        break;
      default:
        if (!+n[t]) break e;
        i > 0 && (i = 0);
        break;
    }
  return i > 0 ? n.slice(0, i) + n.slice(r + 1) : n;
}
var Q2;
function ow(n, e) {
  var t = Nl(n, e);
  if (!t) return n + "";
  var i = t[0],
    r = t[1],
    s = r - (Q2 = Math.max(-8, Math.min(8, Math.floor(r / 3))) * 3) + 1,
    u = i.length;
  return s === u
    ? i
    : s > u
    ? i + new Array(s - u + 1).join("0")
    : s > 0
    ? i.slice(0, s) + "." + i.slice(s)
    : "0." + new Array(1 - s).join("0") + Nl(n, Math.max(0, e + s - 1))[0];
}
function Rp(n, e) {
  var t = Nl(n, e);
  if (!t) return n + "";
  var i = t[0],
    r = t[1];
  return r < 0
    ? "0." + new Array(-r).join("0") + i
    : i.length > r + 1
    ? i.slice(0, r + 1) + "." + i.slice(r + 1)
    : i + new Array(r - i.length + 2).join("0");
}
const Pp = {
  "%": (n, e) => (n * 100).toFixed(e),
  b: (n) => Math.round(n).toString(2),
  c: (n) => n + "",
  d: tw,
  e: (n, e) => n.toExponential(e),
  f: (n, e) => n.toFixed(e),
  g: (n, e) => n.toPrecision(e),
  o: (n) => Math.round(n).toString(8),
  p: (n, e) => Rp(n * 100, e),
  r: Rp,
  s: ow,
  X: (n) => Math.round(n).toString(16).toUpperCase(),
  x: (n) => Math.round(n).toString(16),
};
function Lp(n) {
  return n;
}
var Dp = Array.prototype.map,
  Ip = [
    "y",
    "z",
    "a",
    "f",
    "p",
    "n",
    "µ",
    "m",
    "",
    "k",
    "M",
    "G",
    "T",
    "P",
    "E",
    "Z",
    "Y",
  ];
function aw(n) {
  var e =
      n.grouping === void 0 || n.thousands === void 0
        ? Lp
        : nw(Dp.call(n.grouping, Number), n.thousands + ""),
    t = n.currency === void 0 ? "" : n.currency[0] + "",
    i = n.currency === void 0 ? "" : n.currency[1] + "",
    r = n.decimal === void 0 ? "." : n.decimal + "",
    s = n.numerals === void 0 ? Lp : iw(Dp.call(n.numerals, String)),
    u = n.percent === void 0 ? "%" : n.percent + "",
    c = n.minus === void 0 ? "−" : n.minus + "",
    h = n.nan === void 0 ? "NaN" : n.nan + "";
  function p(v) {
    v = Fl(v);
    var x = v.fill,
      M = v.align,
      w = v.sign,
      C = v.symbol,
      E = v.zero,
      b = v.width,
      L = v.comma,
      S = v.precision,
      R = v.trim,
      U = v.type;
    U === "n"
      ? ((L = !0), (U = "g"))
      : Pp[U] || (S === void 0 && (S = 12), (R = !0), (U = "g")),
      (E || (x === "0" && M === "=")) && ((E = !0), (x = "0"), (M = "="));
    var q =
        C === "$"
          ? t
          : C === "#" && /[boxX]/.test(U)
          ? "0" + U.toLowerCase()
          : "",
      I = C === "$" ? i : /[%p]/.test(U) ? u : "",
      N = Pp[U],
      D = /[defgprs%]/.test(U);
    S =
      S === void 0
        ? 6
        : /[gprs]/.test(U)
        ? Math.max(1, Math.min(21, S))
        : Math.max(0, Math.min(20, S));
    function O(k) {
      var $ = q,
        H = I,
        Q,
        F,
        J;
      if (U === "c") (H = N(k) + H), (k = "");
      else {
        k = +k;
        var K = k < 0 || 1 / k < 0;
        if (
          ((k = isNaN(k) ? h : N(Math.abs(k), S)),
          R && (k = sw(k)),
          K && +k == 0 && w !== "+" && (K = !1),
          ($ = (K ? (w === "(" ? w : c) : w === "-" || w === "(" ? "" : w) + $),
          (H =
            (U === "s" ? Ip[8 + Q2 / 3] : "") +
            H +
            (K && w === "(" ? ")" : "")),
          D)
        ) {
          for (Q = -1, F = k.length; ++Q < F; )
            if (((J = k.charCodeAt(Q)), 48 > J || J > 57)) {
              (H = (J === 46 ? r + k.slice(Q + 1) : k.slice(Q)) + H),
                (k = k.slice(0, Q));
              break;
            }
        }
      }
      L && !E && (k = e(k, 1 / 0));
      var ie = $.length + k.length + H.length,
        he = ie < b ? new Array(b - ie + 1).join(x) : "";
      switch (
        (L &&
          E &&
          ((k = e(he + k, he.length ? b - H.length : 1 / 0)), (he = "")),
        M)
      ) {
        case "<":
          k = $ + k + H + he;
          break;
        case "=":
          k = $ + he + k + H;
          break;
        case "^":
          k = he.slice(0, (ie = he.length >> 1)) + $ + k + H + he.slice(ie);
          break;
        default:
          k = he + $ + k + H;
          break;
      }
      return s(k);
    }
    return (
      (O.toString = function () {
        return v + "";
      }),
      O
    );
  }
  function g(v, x) {
    var M = p(((v = Fl(v)), (v.type = "f"), v)),
      w = Math.max(-8, Math.min(8, Math.floor(jo(x) / 3))) * 3,
      C = Math.pow(10, -w),
      E = Ip[8 + w / 3];
    return function (b) {
      return M(C * b) + E;
    };
  }
  return { format: p, formatPrefix: g };
}
var GA, $2, Y2;
Aw({ thousands: ",", grouping: [3], currency: ["$", ""] });
function Aw(n) {
  return (GA = aw(n)), ($2 = GA.format), (Y2 = GA.formatPrefix), GA;
}
function lw(n) {
  return Math.max(0, -jo(Math.abs(n)));
}
function uw(n, e) {
  return Math.max(
    0,
    Math.max(-8, Math.min(8, Math.floor(jo(e) / 3))) * 3 - jo(Math.abs(n))
  );
}
function cw(n, e) {
  return (
    (n = Math.abs(n)), (e = Math.abs(e) - n), Math.max(0, jo(e) - jo(n)) + 1
  );
}
function fw(n, e, t, i) {
  var r = tb(n, e, t),
    s;
  switch (((i = Fl(i ?? ",f")), i.type)) {
    case "s": {
      var u = Math.max(Math.abs(n), Math.abs(e));
      return (
        i.precision == null && !isNaN((s = uw(r, u))) && (i.precision = s),
        Y2(i, u)
      );
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      i.precision == null &&
        !isNaN((s = cw(r, Math.max(Math.abs(n), Math.abs(e))))) &&
        (i.precision = s - (i.type === "e"));
      break;
    }
    case "f":
    case "%": {
      i.precision == null &&
        !isNaN((s = lw(r))) &&
        (i.precision = s - (i.type === "%") * 2);
      break;
    }
  }
  return $2(i);
}
function hw(n) {
  var e = n.domain;
  return (
    (n.ticks = function (t) {
      var i = e();
      return eb(i[0], i[i.length - 1], t ?? 10);
    }),
    (n.tickFormat = function (t, i) {
      var r = e();
      return fw(r[0], r[r.length - 1], t ?? 10, i);
    }),
    (n.nice = function (t) {
      t == null && (t = 10);
      var i = e(),
        r = 0,
        s = i.length - 1,
        u = i[r],
        c = i[s],
        h,
        p,
        g = 10;
      for (
        c < u && ((p = u), (u = c), (c = p), (p = r), (r = s), (s = p));
        g-- > 0;

      ) {
        if (((p = zu(u, c, t)), p === h)) return (i[r] = u), (i[s] = c), e(i);
        if (p > 0) (u = Math.floor(u / p) * p), (c = Math.ceil(c / p) * p);
        else if (p < 0) (u = Math.ceil(u * p) / p), (c = Math.floor(c * p) / p);
        else break;
        h = p;
      }
      return n;
    }),
    n
  );
}
function Ws() {
  var n = ew();
  return (
    (n.copy = function () {
      return KE(n, Ws());
    }),
    UE.apply(n, arguments),
    hw(n)
  );
}
const Nr = 11102230246251565e-32,
  Yn = 134217729,
  dw = (3 + 8 * Nr) * Nr;
function fu(n, e, t, i, r) {
  let s,
    u,
    c,
    h,
    p = e[0],
    g = i[0],
    v = 0,
    x = 0;
  g > p == g > -p ? ((s = p), (p = e[++v])) : ((s = g), (g = i[++x]));
  let M = 0;
  if (v < n && x < t)
    for (
      g > p == g > -p
        ? ((u = p + s), (c = s - (u - p)), (p = e[++v]))
        : ((u = g + s), (c = s - (u - g)), (g = i[++x])),
        s = u,
        c !== 0 && (r[M++] = c);
      v < n && x < t;

    )
      g > p == g > -p
        ? ((u = s + p), (h = u - s), (c = s - (u - h) + (p - h)), (p = e[++v]))
        : ((u = s + g), (h = u - s), (c = s - (u - h) + (g - h)), (g = i[++x])),
        (s = u),
        c !== 0 && (r[M++] = c);
  for (; v < n; )
    (u = s + p),
      (h = u - s),
      (c = s - (u - h) + (p - h)),
      (p = e[++v]),
      (s = u),
      c !== 0 && (r[M++] = c);
  for (; x < t; )
    (u = s + g),
      (h = u - s),
      (c = s - (u - h) + (g - h)),
      (g = i[++x]),
      (s = u),
      c !== 0 && (r[M++] = c);
  return (s !== 0 || M === 0) && (r[M++] = s), M;
}
function pw(n, e) {
  let t = e[0];
  for (let i = 1; i < n; i++) t += e[i];
  return t;
}
function Ka(n) {
  return new Float64Array(n);
}
const mw = (3 + 16 * Nr) * Nr,
  gw = (2 + 12 * Nr) * Nr,
  vw = (9 + 64 * Nr) * Nr * Nr,
  xo = Ka(4),
  Op = Ka(8),
  qp = Ka(12),
  Up = Ka(16),
  si = Ka(4);
function _w(n, e, t, i, r, s, u) {
  let c, h, p, g, v, x, M, w, C, E, b, L, S, R, U, q, I, N;
  const D = n - r,
    O = t - r,
    k = e - s,
    $ = i - s;
  (R = D * $),
    (x = Yn * D),
    (M = x - (x - D)),
    (w = D - M),
    (x = Yn * $),
    (C = x - (x - $)),
    (E = $ - C),
    (U = w * E - (R - M * C - w * C - M * E)),
    (q = k * O),
    (x = Yn * k),
    (M = x - (x - k)),
    (w = k - M),
    (x = Yn * O),
    (C = x - (x - O)),
    (E = O - C),
    (I = w * E - (q - M * C - w * C - M * E)),
    (b = U - I),
    (v = U - b),
    (xo[0] = U - (b + v) + (v - I)),
    (L = R + b),
    (v = L - R),
    (S = R - (L - v) + (b - v)),
    (b = S - q),
    (v = S - b),
    (xo[1] = S - (b + v) + (v - q)),
    (N = L + b),
    (v = N - L),
    (xo[2] = L - (N - v) + (b - v)),
    (xo[3] = N);
  let H = pw(4, xo),
    Q = gw * u;
  if (
    H >= Q ||
    -H >= Q ||
    ((v = n - D),
    (c = n - (D + v) + (v - r)),
    (v = t - O),
    (p = t - (O + v) + (v - r)),
    (v = e - k),
    (h = e - (k + v) + (v - s)),
    (v = i - $),
    (g = i - ($ + v) + (v - s)),
    c === 0 && h === 0 && p === 0 && g === 0) ||
    ((Q = vw * u + dw * Math.abs(H)),
    (H += D * g + $ * c - (k * p + O * h)),
    H >= Q || -H >= Q)
  )
    return H;
  (R = c * $),
    (x = Yn * c),
    (M = x - (x - c)),
    (w = c - M),
    (x = Yn * $),
    (C = x - (x - $)),
    (E = $ - C),
    (U = w * E - (R - M * C - w * C - M * E)),
    (q = h * O),
    (x = Yn * h),
    (M = x - (x - h)),
    (w = h - M),
    (x = Yn * O),
    (C = x - (x - O)),
    (E = O - C),
    (I = w * E - (q - M * C - w * C - M * E)),
    (b = U - I),
    (v = U - b),
    (si[0] = U - (b + v) + (v - I)),
    (L = R + b),
    (v = L - R),
    (S = R - (L - v) + (b - v)),
    (b = S - q),
    (v = S - b),
    (si[1] = S - (b + v) + (v - q)),
    (N = L + b),
    (v = N - L),
    (si[2] = L - (N - v) + (b - v)),
    (si[3] = N);
  const F = fu(4, xo, 4, si, Op);
  (R = D * g),
    (x = Yn * D),
    (M = x - (x - D)),
    (w = D - M),
    (x = Yn * g),
    (C = x - (x - g)),
    (E = g - C),
    (U = w * E - (R - M * C - w * C - M * E)),
    (q = k * p),
    (x = Yn * k),
    (M = x - (x - k)),
    (w = k - M),
    (x = Yn * p),
    (C = x - (x - p)),
    (E = p - C),
    (I = w * E - (q - M * C - w * C - M * E)),
    (b = U - I),
    (v = U - b),
    (si[0] = U - (b + v) + (v - I)),
    (L = R + b),
    (v = L - R),
    (S = R - (L - v) + (b - v)),
    (b = S - q),
    (v = S - b),
    (si[1] = S - (b + v) + (v - q)),
    (N = L + b),
    (v = N - L),
    (si[2] = L - (N - v) + (b - v)),
    (si[3] = N);
  const J = fu(F, Op, 4, si, qp);
  (R = c * g),
    (x = Yn * c),
    (M = x - (x - c)),
    (w = c - M),
    (x = Yn * g),
    (C = x - (x - g)),
    (E = g - C),
    (U = w * E - (R - M * C - w * C - M * E)),
    (q = h * p),
    (x = Yn * h),
    (M = x - (x - h)),
    (w = h - M),
    (x = Yn * p),
    (C = x - (x - p)),
    (E = p - C),
    (I = w * E - (q - M * C - w * C - M * E)),
    (b = U - I),
    (v = U - b),
    (si[0] = U - (b + v) + (v - I)),
    (L = R + b),
    (v = L - R),
    (S = R - (L - v) + (b - v)),
    (b = S - q),
    (v = S - b),
    (si[1] = S - (b + v) + (v - q)),
    (N = L + b),
    (v = N - L),
    (si[2] = L - (N - v) + (b - v)),
    (si[3] = N);
  const K = fu(J, qp, 4, si, Up);
  return Up[K - 1];
}
function HA(n, e, t, i, r, s) {
  const u = (e - s) * (t - r),
    c = (n - r) * (i - s),
    h = u - c,
    p = Math.abs(u + c);
  return Math.abs(h) >= mw * p ? h : -_w(n, e, t, i, r, s, p);
}
const Bp = Math.pow(2, -52),
  VA = new Uint32Array(512);
class Va {
  static from(e, t = Ew, i = ww) {
    const r = e.length,
      s = new Float64Array(r * 2);
    for (let u = 0; u < r; u++) {
      const c = e[u];
      (s[2 * u] = t(c)), (s[2 * u + 1] = i(c));
    }
    return new Va(s);
  }
  constructor(e) {
    const t = e.length >> 1;
    if (t > 0 && typeof e[0] != "number")
      throw new Error("Expected coords to contain numbers.");
    this.coords = e;
    const i = Math.max(2 * t - 5, 0);
    (this._triangles = new Uint32Array(i * 3)),
      (this._halfedges = new Int32Array(i * 3)),
      (this._hashSize = Math.ceil(Math.sqrt(t))),
      (this._hullPrev = new Uint32Array(t)),
      (this._hullNext = new Uint32Array(t)),
      (this._hullTri = new Uint32Array(t)),
      (this._hullHash = new Int32Array(this._hashSize).fill(-1)),
      (this._ids = new Uint32Array(t)),
      (this._dists = new Float64Array(t)),
      this.update();
  }
  update() {
    const {
        coords: e,
        _hullPrev: t,
        _hullNext: i,
        _hullTri: r,
        _hullHash: s,
      } = this,
      u = e.length >> 1;
    let c = 1 / 0,
      h = 1 / 0,
      p = -1 / 0,
      g = -1 / 0;
    for (let O = 0; O < u; O++) {
      const k = e[2 * O],
        $ = e[2 * O + 1];
      k < c && (c = k),
        $ < h && (h = $),
        k > p && (p = k),
        $ > g && (g = $),
        (this._ids[O] = O);
    }
    const v = (c + p) / 2,
      x = (h + g) / 2;
    let M = 1 / 0,
      w,
      C,
      E;
    for (let O = 0; O < u; O++) {
      const k = hu(v, x, e[2 * O], e[2 * O + 1]);
      k < M && ((w = O), (M = k));
    }
    const b = e[2 * w],
      L = e[2 * w + 1];
    M = 1 / 0;
    for (let O = 0; O < u; O++) {
      if (O === w) continue;
      const k = hu(b, L, e[2 * O], e[2 * O + 1]);
      k < M && k > 0 && ((C = O), (M = k));
    }
    let S = e[2 * C],
      R = e[2 * C + 1],
      U = 1 / 0;
    for (let O = 0; O < u; O++) {
      if (O === w || O === C) continue;
      const k = bw(b, L, S, R, e[2 * O], e[2 * O + 1]);
      k < U && ((E = O), (U = k));
    }
    let q = e[2 * E],
      I = e[2 * E + 1];
    if (U === 1 / 0) {
      for (let $ = 0; $ < u; $++)
        this._dists[$] = e[2 * $] - e[0] || e[2 * $ + 1] - e[1];
      Do(this._ids, this._dists, 0, u - 1);
      const O = new Uint32Array(u);
      let k = 0;
      for (let $ = 0, H = -1 / 0; $ < u; $++) {
        const Q = this._ids[$];
        this._dists[Q] > H && ((O[k++] = Q), (H = this._dists[Q]));
      }
      (this.hull = O.subarray(0, k)),
        (this.triangles = new Uint32Array(0)),
        (this.halfedges = new Uint32Array(0));
      return;
    }
    if (HA(b, L, S, R, q, I) < 0) {
      const O = C,
        k = S,
        $ = R;
      (C = E), (S = q), (R = I), (E = O), (q = k), (I = $);
    }
    const N = Mw(b, L, S, R, q, I);
    (this._cx = N.x), (this._cy = N.y);
    for (let O = 0; O < u; O++)
      this._dists[O] = hu(e[2 * O], e[2 * O + 1], N.x, N.y);
    Do(this._ids, this._dists, 0, u - 1), (this._hullStart = w);
    let D = 3;
    (i[w] = t[E] = C),
      (i[C] = t[w] = E),
      (i[E] = t[C] = w),
      (r[w] = 0),
      (r[C] = 1),
      (r[E] = 2),
      s.fill(-1),
      (s[this._hashKey(b, L)] = w),
      (s[this._hashKey(S, R)] = C),
      (s[this._hashKey(q, I)] = E),
      (this.trianglesLen = 0),
      this._addTriangle(w, C, E, -1, -1, -1);
    for (let O = 0, k, $; O < this._ids.length; O++) {
      const H = this._ids[O],
        Q = e[2 * H],
        F = e[2 * H + 1];
      if (
        (O > 0 && Math.abs(Q - k) <= Bp && Math.abs(F - $) <= Bp) ||
        ((k = Q), ($ = F), H === w || H === C || H === E)
      )
        continue;
      let J = 0;
      for (
        let oe = 0, de = this._hashKey(Q, F);
        oe < this._hashSize &&
        ((J = s[(de + oe) % this._hashSize]), !(J !== -1 && J !== i[J]));
        oe++
      );
      J = t[J];
      let K = J,
        ie;
      for (
        ;
        (ie = i[K]),
          HA(Q, F, e[2 * K], e[2 * K + 1], e[2 * ie], e[2 * ie + 1]) >= 0;

      )
        if (((K = ie), K === J)) {
          K = -1;
          break;
        }
      if (K === -1) continue;
      let he = this._addTriangle(K, H, i[K], -1, -1, r[K]);
      (r[H] = this._legalize(he + 2)), (r[K] = he), D++;
      let ce = i[K];
      for (
        ;
        (ie = i[ce]),
          HA(Q, F, e[2 * ce], e[2 * ce + 1], e[2 * ie], e[2 * ie + 1]) < 0;

      )
        (he = this._addTriangle(ce, H, ie, r[H], -1, r[ce])),
          (r[H] = this._legalize(he + 2)),
          (i[ce] = ce),
          D--,
          (ce = ie);
      if (K === J)
        for (
          ;
          (ie = t[K]),
            HA(Q, F, e[2 * ie], e[2 * ie + 1], e[2 * K], e[2 * K + 1]) < 0;

        )
          (he = this._addTriangle(ie, H, K, -1, r[K], r[ie])),
            this._legalize(he + 2),
            (r[ie] = he),
            (i[K] = K),
            D--,
            (K = ie);
      (this._hullStart = t[H] = K),
        (i[K] = t[ce] = H),
        (i[H] = ce),
        (s[this._hashKey(Q, F)] = H),
        (s[this._hashKey(e[2 * K], e[2 * K + 1])] = K);
    }
    this.hull = new Uint32Array(D);
    for (let O = 0, k = this._hullStart; O < D; O++)
      (this.hull[O] = k), (k = i[k]);
    (this.triangles = this._triangles.subarray(0, this.trianglesLen)),
      (this.halfedges = this._halfedges.subarray(0, this.trianglesLen));
  }
  _hashKey(e, t) {
    return (
      Math.floor(xw(e - this._cx, t - this._cy) * this._hashSize) %
      this._hashSize
    );
  }
  _legalize(e) {
    const { _triangles: t, _halfedges: i, coords: r } = this;
    let s = 0,
      u = 0;
    for (;;) {
      const c = i[e],
        h = e - (e % 3);
      if (((u = h + ((e + 2) % 3)), c === -1)) {
        if (s === 0) break;
        e = VA[--s];
        continue;
      }
      const p = c - (c % 3),
        g = h + ((e + 1) % 3),
        v = p + ((c + 2) % 3),
        x = t[u],
        M = t[e],
        w = t[g],
        C = t[v];
      if (
        yw(
          r[2 * x],
          r[2 * x + 1],
          r[2 * M],
          r[2 * M + 1],
          r[2 * w],
          r[2 * w + 1],
          r[2 * C],
          r[2 * C + 1]
        )
      ) {
        (t[e] = C), (t[c] = x);
        const b = i[v];
        if (b === -1) {
          let S = this._hullStart;
          do {
            if (this._hullTri[S] === v) {
              this._hullTri[S] = e;
              break;
            }
            S = this._hullPrev[S];
          } while (S !== this._hullStart);
        }
        this._link(e, b), this._link(c, i[u]), this._link(u, v);
        const L = p + ((c + 1) % 3);
        s < VA.length && (VA[s++] = L);
      } else {
        if (s === 0) break;
        e = VA[--s];
      }
    }
    return u;
  }
  _link(e, t) {
    (this._halfedges[e] = t), t !== -1 && (this._halfedges[t] = e);
  }
  _addTriangle(e, t, i, r, s, u) {
    const c = this.trianglesLen;
    return (
      (this._triangles[c] = e),
      (this._triangles[c + 1] = t),
      (this._triangles[c + 2] = i),
      this._link(c, r),
      this._link(c + 1, s),
      this._link(c + 2, u),
      (this.trianglesLen += 3),
      c
    );
  }
}
function xw(n, e) {
  const t = n / (Math.abs(n) + Math.abs(e));
  return (e > 0 ? 3 - t : 1 + t) / 4;
}
function hu(n, e, t, i) {
  const r = n - t,
    s = e - i;
  return r * r + s * s;
}
function yw(n, e, t, i, r, s, u, c) {
  const h = n - u,
    p = e - c,
    g = t - u,
    v = i - c,
    x = r - u,
    M = s - c,
    w = h * h + p * p,
    C = g * g + v * v,
    E = x * x + M * M;
  return h * (v * E - C * M) - p * (g * E - C * x) + w * (g * M - v * x) < 0;
}
function bw(n, e, t, i, r, s) {
  const u = t - n,
    c = i - e,
    h = r - n,
    p = s - e,
    g = u * u + c * c,
    v = h * h + p * p,
    x = 0.5 / (u * p - c * h),
    M = (p * g - c * v) * x,
    w = (u * v - h * g) * x;
  return M * M + w * w;
}
function Mw(n, e, t, i, r, s) {
  const u = t - n,
    c = i - e,
    h = r - n,
    p = s - e,
    g = u * u + c * c,
    v = h * h + p * p,
    x = 0.5 / (u * p - c * h),
    M = n + (p * g - c * v) * x,
    w = e + (u * v - h * g) * x;
  return { x: M, y: w };
}
function Do(n, e, t, i) {
  if (i - t <= 20)
    for (let r = t + 1; r <= i; r++) {
      const s = n[r],
        u = e[s];
      let c = r - 1;
      for (; c >= t && e[n[c]] > u; ) n[c + 1] = n[c--];
      n[c + 1] = s;
    }
  else {
    const r = (t + i) >> 1;
    let s = t + 1,
      u = i;
    da(n, r, s),
      e[n[t]] > e[n[i]] && da(n, t, i),
      e[n[s]] > e[n[i]] && da(n, s, i),
      e[n[t]] > e[n[s]] && da(n, t, s);
    const c = n[s],
      h = e[c];
    for (;;) {
      do s++;
      while (e[n[s]] < h);
      do u--;
      while (e[n[u]] > h);
      if (u < s) break;
      da(n, s, u);
    }
    (n[t + 1] = n[u]),
      (n[u] = c),
      i - s + 1 >= u - t
        ? (Do(n, e, s, i), Do(n, e, t, u - 1))
        : (Do(n, e, t, u - 1), Do(n, e, s, i));
  }
}
function da(n, e, t) {
  const i = n[e];
  (n[e] = n[t]), (n[t] = i);
}
function Ew(n) {
  return n[0];
}
function ww(n) {
  return n[1];
}
function Sw(n) {
  if (!n) throw new Error("coord is required");
  if (!Array.isArray(n)) {
    if (
      n.type === "Feature" &&
      n.geometry !== null &&
      n.geometry.type === "Point"
    )
      return n.geometry.coordinates;
    if (n.type === "Point") return n.coordinates;
  }
  if (
    Array.isArray(n) &&
    n.length >= 2 &&
    !Array.isArray(n[0]) &&
    !Array.isArray(n[1])
  )
    return n;
  throw new Error("coord must be GeoJSON Point or an Array of numbers");
}
function Tw(n) {
  return n.type === "Feature" ? n.geometry : n;
}
function Cw(n, e, t) {
  if ((t === void 0 && (t = {}), !n)) throw new Error("point is required");
  if (!e) throw new Error("polygon is required");
  var i = Sw(n),
    r = Tw(e),
    s = r.type,
    u = e.bbox,
    c = r.coordinates;
  if (u && Rw(i, u) === !1) return !1;
  s === "Polygon" && (c = [c]);
  for (var h = !1, p = 0; p < c.length && !h; p++)
    if (Np(i, c[p][0], t.ignoreBoundary)) {
      for (var g = !1, v = 1; v < c[p].length && !g; )
        Np(i, c[p][v], !t.ignoreBoundary) && (g = !0), v++;
      g || (h = !0);
    }
  return h;
}
function Np(n, e, t) {
  var i = !1;
  e[0][0] === e[e.length - 1][0] &&
    e[0][1] === e[e.length - 1][1] &&
    (e = e.slice(0, e.length - 1));
  for (var r = 0, s = e.length - 1; r < e.length; s = r++) {
    var u = e[r][0],
      c = e[r][1],
      h = e[s][0],
      p = e[s][1],
      g =
        n[1] * (u - h) + c * (h - n[0]) + p * (n[0] - u) === 0 &&
        (u - n[0]) * (h - n[0]) <= 0 &&
        (c - n[1]) * (p - n[1]) <= 0;
    if (g) return !t;
    var v = c > n[1] != p > n[1] && n[0] < ((h - u) * (n[1] - c)) / (p - c) + u;
    v && (i = !i);
  }
  return i;
}
function Rw(n, e) {
  return e[0] <= n[0] && e[1] <= n[1] && e[2] >= n[0] && e[3] >= n[1];
}
const Fp = 1e-6;
class Is {
  constructor() {
    (this._x0 = this._y0 = this._x1 = this._y1 = null), (this._ = "");
  }
  moveTo(e, t) {
    this._ += `M${(this._x0 = this._x1 = +e)},${(this._y0 = this._y1 = +t)}`;
  }
  closePath() {
    this._x1 !== null &&
      ((this._x1 = this._x0), (this._y1 = this._y0), (this._ += "Z"));
  }
  lineTo(e, t) {
    this._ += `L${(this._x1 = +e)},${(this._y1 = +t)}`;
  }
  arc(e, t, i) {
    (e = +e), (t = +t), (i = +i);
    const r = e + i,
      s = t;
    if (i < 0) throw new Error("negative radius");
    this._x1 === null
      ? (this._ += `M${r},${s}`)
      : (Math.abs(this._x1 - r) > Fp || Math.abs(this._y1 - s) > Fp) &&
        (this._ += "L" + r + "," + s),
      i &&
        (this._ += `A${i},${i},0,1,1,${e - i},${t}A${i},${i},0,1,1,${(this._x1 =
          r)},${(this._y1 = s)}`);
  }
  rect(e, t, i, r) {
    this._ += `M${(this._x0 = this._x1 = +e)},${(this._y0 = this._y1 =
      +t)}h${+i}v${+r}h${-i}Z`;
  }
  value() {
    return this._ || null;
  }
}
class fc {
  constructor() {
    this._ = [];
  }
  moveTo(e, t) {
    this._.push([e, t]);
  }
  closePath() {
    this._.push(this._[0].slice());
  }
  lineTo(e, t) {
    this._.push([e, t]);
  }
  value() {
    return this._.length ? this._ : null;
  }
}
class Pw {
  constructor(e, [t, i, r, s] = [0, 0, 960, 500]) {
    if (!((r = +r) >= (t = +t)) || !((s = +s) >= (i = +i)))
      throw new Error("invalid bounds");
    (this.delaunay = e),
      (this._circumcenters = new Float64Array(e.points.length * 2)),
      (this.vectors = new Float64Array(e.points.length * 2)),
      (this.xmax = r),
      (this.xmin = t),
      (this.ymax = s),
      (this.ymin = i),
      this._init();
  }
  update() {
    return this.delaunay.update(), this._init(), this;
  }
  _init() {
    const {
      delaunay: { points: e, hull: t, triangles: i },
      vectors: r,
    } = this;
    let s, u;
    const c = (this.circumcenters = this._circumcenters.subarray(
      0,
      (i.length / 3) * 2
    ));
    for (let C = 0, E = 0, b = i.length, L, S; C < b; C += 3, E += 2) {
      const R = i[C] * 2,
        U = i[C + 1] * 2,
        q = i[C + 2] * 2,
        I = e[R],
        N = e[R + 1],
        D = e[U],
        O = e[U + 1],
        k = e[q],
        $ = e[q + 1],
        H = D - I,
        Q = O - N,
        F = k - I,
        J = $ - N,
        K = (H * J - Q * F) * 2;
      if (Math.abs(K) < 1e-9) {
        if (s === void 0) {
          s = u = 0;
          for (const he of t) (s += e[he * 2]), (u += e[he * 2 + 1]);
          (s /= t.length), (u /= t.length);
        }
        const ie = 1e9 * Math.sign((s - I) * J - (u - N) * F);
        (L = (I + k) / 2 - ie * J), (S = (N + $) / 2 + ie * F);
      } else {
        const ie = 1 / K,
          he = H * H + Q * Q,
          ce = F * F + J * J;
        (L = I + (J * he - Q * ce) * ie), (S = N + (H * ce - F * he) * ie);
      }
      (c[E] = L), (c[E + 1] = S);
    }
    let h = t[t.length - 1],
      p,
      g = h * 4,
      v,
      x = e[2 * h],
      M,
      w = e[2 * h + 1];
    r.fill(0);
    for (let C = 0; C < t.length; ++C)
      (h = t[C]),
        (p = g),
        (v = x),
        (M = w),
        (g = h * 4),
        (x = e[2 * h]),
        (w = e[2 * h + 1]),
        (r[p + 2] = r[g] = M - w),
        (r[p + 3] = r[g + 1] = x - v);
  }
  render(e) {
    const t = e == null ? (e = new Is()) : void 0,
      {
        delaunay: { halfedges: i, inedges: r, hull: s },
        circumcenters: u,
        vectors: c,
      } = this;
    if (s.length <= 1) return null;
    for (let g = 0, v = i.length; g < v; ++g) {
      const x = i[g];
      if (x < g) continue;
      const M = Math.floor(g / 3) * 2,
        w = Math.floor(x / 3) * 2,
        C = u[M],
        E = u[M + 1],
        b = u[w],
        L = u[w + 1];
      this._renderSegment(C, E, b, L, e);
    }
    let h,
      p = s[s.length - 1];
    for (let g = 0; g < s.length; ++g) {
      (h = p), (p = s[g]);
      const v = Math.floor(r[p] / 3) * 2,
        x = u[v],
        M = u[v + 1],
        w = h * 4,
        C = this._project(x, M, c[w + 2], c[w + 3]);
      C && this._renderSegment(x, M, C[0], C[1], e);
    }
    return t && t.value();
  }
  renderBounds(e) {
    const t = e == null ? (e = new Is()) : void 0;
    return (
      e.rect(
        this.xmin,
        this.ymin,
        this.xmax - this.xmin,
        this.ymax - this.ymin
      ),
      t && t.value()
    );
  }
  renderCell(e, t) {
    const i = t == null ? (t = new Is()) : void 0,
      r = this._clip(e);
    if (r === null || !r.length) return;
    t.moveTo(r[0], r[1]);
    let s = r.length;
    for (; r[0] === r[s - 2] && r[1] === r[s - 1] && s > 1; ) s -= 2;
    for (let u = 2; u < s; u += 2)
      (r[u] !== r[u - 2] || r[u + 1] !== r[u - 1]) && t.lineTo(r[u], r[u + 1]);
    return t.closePath(), i && i.value();
  }
  *cellPolygons() {
    const {
      delaunay: { points: e },
    } = this;
    for (let t = 0, i = e.length / 2; t < i; ++t) {
      const r = this.cellPolygon(t);
      r && ((r.index = t), yield r);
    }
  }
  cellPolygon(e) {
    const t = new fc();
    return this.renderCell(e, t), t.value();
  }
  _renderSegment(e, t, i, r, s) {
    let u;
    const c = this._regioncode(e, t),
      h = this._regioncode(i, r);
    c === 0 && h === 0
      ? (s.moveTo(e, t), s.lineTo(i, r))
      : (u = this._clipSegment(e, t, i, r, c, h)) &&
        (s.moveTo(u[0], u[1]), s.lineTo(u[2], u[3]));
  }
  contains(e, t, i) {
    return (
      (t = +t),
      t !== t || ((i = +i), i !== i) ? !1 : this.delaunay._step(e, t, i) === e
    );
  }
  *neighbors(e) {
    const t = this._clip(e);
    if (t)
      for (const i of this.delaunay.neighbors(e)) {
        const r = this._clip(i);
        if (r) {
          e: for (let s = 0, u = t.length; s < u; s += 2)
            for (let c = 0, h = r.length; c < h; c += 2)
              if (
                t[s] === r[c] &&
                t[s + 1] === r[c + 1] &&
                t[(s + 2) % u] === r[(c + h - 2) % h] &&
                t[(s + 3) % u] === r[(c + h - 1) % h]
              ) {
                yield i;
                break e;
              }
        }
      }
  }
  _cell(e) {
    const {
        circumcenters: t,
        delaunay: { inedges: i, halfedges: r, triangles: s },
      } = this,
      u = i[e];
    if (u === -1) return null;
    const c = [];
    let h = u;
    do {
      const p = Math.floor(h / 3);
      if (
        (c.push(t[p * 2], t[p * 2 + 1]),
        (h = h % 3 === 2 ? h - 2 : h + 1),
        s[h] !== e)
      )
        break;
      h = r[h];
    } while (h !== u && h !== -1);
    return c;
  }
  _clip(e) {
    if (e === 0 && this.delaunay.hull.length === 1)
      return [
        this.xmax,
        this.ymin,
        this.xmax,
        this.ymax,
        this.xmin,
        this.ymax,
        this.xmin,
        this.ymin,
      ];
    const t = this._cell(e);
    if (t === null) return null;
    const { vectors: i } = this,
      r = e * 4;
    return this._simplify(
      i[r] || i[r + 1]
        ? this._clipInfinite(e, t, i[r], i[r + 1], i[r + 2], i[r + 3])
        : this._clipFinite(e, t)
    );
  }
  _clipFinite(e, t) {
    const i = t.length;
    let r = null,
      s,
      u,
      c = t[i - 2],
      h = t[i - 1],
      p,
      g = this._regioncode(c, h),
      v,
      x = 0;
    for (let M = 0; M < i; M += 2)
      if (
        ((s = c),
        (u = h),
        (c = t[M]),
        (h = t[M + 1]),
        (p = g),
        (g = this._regioncode(c, h)),
        p === 0 && g === 0)
      )
        (v = x), (x = 0), r ? r.push(c, h) : (r = [c, h]);
      else {
        let w, C, E, b, L;
        if (p === 0) {
          if ((w = this._clipSegment(s, u, c, h, p, g)) === null) continue;
          [C, E, b, L] = w;
        } else {
          if ((w = this._clipSegment(c, h, s, u, g, p)) === null) continue;
          ([b, L, C, E] = w),
            (v = x),
            (x = this._edgecode(C, E)),
            v && x && this._edge(e, v, x, r, r.length),
            r ? r.push(C, E) : (r = [C, E]);
        }
        (v = x),
          (x = this._edgecode(b, L)),
          v && x && this._edge(e, v, x, r, r.length),
          r ? r.push(b, L) : (r = [b, L]);
      }
    if (r)
      (v = x),
        (x = this._edgecode(r[0], r[1])),
        v && x && this._edge(e, v, x, r, r.length);
    else if (
      this.contains(e, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)
    )
      return [
        this.xmax,
        this.ymin,
        this.xmax,
        this.ymax,
        this.xmin,
        this.ymax,
        this.xmin,
        this.ymin,
      ];
    return r;
  }
  _clipSegment(e, t, i, r, s, u) {
    const c = s < u;
    for (c && ([e, t, i, r, s, u] = [i, r, e, t, u, s]); ; ) {
      if (s === 0 && u === 0) return c ? [i, r, e, t] : [e, t, i, r];
      if (s & u) return null;
      let h,
        p,
        g = s || u;
      g & 8
        ? ((h = e + ((i - e) * (this.ymax - t)) / (r - t)), (p = this.ymax))
        : g & 4
        ? ((h = e + ((i - e) * (this.ymin - t)) / (r - t)), (p = this.ymin))
        : g & 2
        ? ((p = t + ((r - t) * (this.xmax - e)) / (i - e)), (h = this.xmax))
        : ((p = t + ((r - t) * (this.xmin - e)) / (i - e)), (h = this.xmin)),
        s
          ? ((e = h), (t = p), (s = this._regioncode(e, t)))
          : ((i = h), (r = p), (u = this._regioncode(i, r)));
    }
  }
  _clipInfinite(e, t, i, r, s, u) {
    let c = Array.from(t),
      h;
    if (
      ((h = this._project(c[0], c[1], i, r)) && c.unshift(h[0], h[1]),
      (h = this._project(c[c.length - 2], c[c.length - 1], s, u)) &&
        c.push(h[0], h[1]),
      (c = this._clipFinite(e, c)))
    )
      for (
        let p = 0, g = c.length, v, x = this._edgecode(c[g - 2], c[g - 1]);
        p < g;
        p += 2
      )
        (v = x),
          (x = this._edgecode(c[p], c[p + 1])),
          v && x && ((p = this._edge(e, v, x, c, p)), (g = c.length));
    else
      this.contains(
        e,
        (this.xmin + this.xmax) / 2,
        (this.ymin + this.ymax) / 2
      ) &&
        (c = [
          this.xmin,
          this.ymin,
          this.xmax,
          this.ymin,
          this.xmax,
          this.ymax,
          this.xmin,
          this.ymax,
        ]);
    return c;
  }
  _edge(e, t, i, r, s) {
    for (; t !== i; ) {
      let u, c;
      switch (t) {
        case 5:
          t = 4;
          continue;
        case 4:
          (t = 6), (u = this.xmax), (c = this.ymin);
          break;
        case 6:
          t = 2;
          continue;
        case 2:
          (t = 10), (u = this.xmax), (c = this.ymax);
          break;
        case 10:
          t = 8;
          continue;
        case 8:
          (t = 9), (u = this.xmin), (c = this.ymax);
          break;
        case 9:
          t = 1;
          continue;
        case 1:
          (t = 5), (u = this.xmin), (c = this.ymin);
          break;
      }
      (r[s] !== u || r[s + 1] !== c) &&
        this.contains(e, u, c) &&
        (r.splice(s, 0, u, c), (s += 2));
    }
    return s;
  }
  _project(e, t, i, r) {
    let s = 1 / 0,
      u,
      c,
      h;
    if (r < 0) {
      if (t <= this.ymin) return null;
      (u = (this.ymin - t) / r) < s && ((h = this.ymin), (c = e + (s = u) * i));
    } else if (r > 0) {
      if (t >= this.ymax) return null;
      (u = (this.ymax - t) / r) < s && ((h = this.ymax), (c = e + (s = u) * i));
    }
    if (i > 0) {
      if (e >= this.xmax) return null;
      (u = (this.xmax - e) / i) < s && ((c = this.xmax), (h = t + (s = u) * r));
    } else if (i < 0) {
      if (e <= this.xmin) return null;
      (u = (this.xmin - e) / i) < s && ((c = this.xmin), (h = t + (s = u) * r));
    }
    return [c, h];
  }
  _edgecode(e, t) {
    return (
      (e === this.xmin ? 1 : e === this.xmax ? 2 : 0) |
      (t === this.ymin ? 4 : t === this.ymax ? 8 : 0)
    );
  }
  _regioncode(e, t) {
    return (
      (e < this.xmin ? 1 : e > this.xmax ? 2 : 0) |
      (t < this.ymin ? 4 : t > this.ymax ? 8 : 0)
    );
  }
  _simplify(e) {
    if (e && e.length > 4) {
      for (let t = 0; t < e.length; t += 2) {
        const i = (t + 2) % e.length,
          r = (t + 4) % e.length;
        ((e[t] === e[i] && e[i] === e[r]) ||
          (e[t + 1] === e[i + 1] && e[i + 1] === e[r + 1])) &&
          (e.splice(i, 2), (t -= 2));
      }
      e.length || (e = null);
    }
    return e;
  }
}
const Lw = 2 * Math.PI,
  yo = Math.pow;
function Dw(n) {
  return n[0];
}
function Iw(n) {
  return n[1];
}
function Ow(n) {
  const { triangles: e, coords: t } = n;
  for (let i = 0; i < e.length; i += 3) {
    const r = 2 * e[i],
      s = 2 * e[i + 1],
      u = 2 * e[i + 2];
    if (
      (t[u] - t[r]) * (t[s + 1] - t[r + 1]) -
        (t[s] - t[r]) * (t[u + 1] - t[r + 1]) >
      1e-10
    )
      return !1;
  }
  return !0;
}
function qw(n, e, t) {
  return [n + Math.sin(n + e) * t, e + Math.cos(n - e) * t];
}
class Yc {
  static from(e, t = Dw, i = Iw, r) {
    return new Yc(
      "length" in e ? Uw(e, t, i, r) : Float64Array.from(Bw(e, t, i, r))
    );
  }
  constructor(e) {
    (this._delaunator = new Va(e)),
      (this.inedges = new Int32Array(e.length / 2)),
      (this._hullIndex = new Int32Array(e.length / 2)),
      (this.points = this._delaunator.coords),
      this._init();
  }
  update() {
    return this._delaunator.update(), this._init(), this;
  }
  _init() {
    const e = this._delaunator,
      t = this.points;
    if (e.hull && e.hull.length > 2 && Ow(e)) {
      this.collinear = Int32Array.from(
        { length: t.length / 2 },
        (x, M) => M
      ).sort((x, M) => t[2 * x] - t[2 * M] || t[2 * x + 1] - t[2 * M + 1]);
      const h = this.collinear[0],
        p = this.collinear[this.collinear.length - 1],
        g = [t[2 * h], t[2 * h + 1], t[2 * p], t[2 * p + 1]],
        v = 1e-8 * Math.hypot(g[3] - g[1], g[2] - g[0]);
      for (let x = 0, M = t.length / 2; x < M; ++x) {
        const w = qw(t[2 * x], t[2 * x + 1], v);
        (t[2 * x] = w[0]), (t[2 * x + 1] = w[1]);
      }
      this._delaunator = new Va(t);
    } else delete this.collinear;
    const i = (this.halfedges = this._delaunator.halfedges),
      r = (this.hull = this._delaunator.hull),
      s = (this.triangles = this._delaunator.triangles),
      u = this.inedges.fill(-1),
      c = this._hullIndex.fill(-1);
    for (let h = 0, p = i.length; h < p; ++h) {
      const g = s[h % 3 === 2 ? h - 2 : h + 1];
      (i[h] === -1 || u[g] === -1) && (u[g] = h);
    }
    for (let h = 0, p = r.length; h < p; ++h) c[r[h]] = h;
    r.length <= 2 &&
      r.length > 0 &&
      ((this.triangles = new Int32Array(3).fill(-1)),
      (this.halfedges = new Int32Array(3).fill(-1)),
      (this.triangles[0] = r[0]),
      (u[r[0]] = 1),
      r.length === 2 &&
        ((u[r[1]] = 0),
        (this.triangles[1] = r[1]),
        (this.triangles[2] = r[1])));
  }
  voronoi(e) {
    return new Pw(this, e);
  }
  *neighbors(e) {
    const {
      inedges: t,
      hull: i,
      _hullIndex: r,
      halfedges: s,
      triangles: u,
      collinear: c,
    } = this;
    if (c) {
      const v = c.indexOf(e);
      v > 0 && (yield c[v - 1]), v < c.length - 1 && (yield c[v + 1]);
      return;
    }
    const h = t[e];
    if (h === -1) return;
    let p = h,
      g = -1;
    do {
      if ((yield (g = u[p]), (p = p % 3 === 2 ? p - 2 : p + 1), u[p] !== e))
        return;
      if (((p = s[p]), p === -1)) {
        const v = i[(r[e] + 1) % i.length];
        v !== g && (yield v);
        return;
      }
    } while (p !== h);
  }
  find(e, t, i = 0) {
    if (((e = +e), e !== e || ((t = +t), t !== t))) return -1;
    const r = i;
    let s;
    for (; (s = this._step(i, e, t)) >= 0 && s !== i && s !== r; ) i = s;
    return s;
  }
  _step(e, t, i) {
    const {
      inedges: r,
      hull: s,
      _hullIndex: u,
      halfedges: c,
      triangles: h,
      points: p,
    } = this;
    if (r[e] === -1 || !p.length) return (e + 1) % (p.length >> 1);
    let g = e,
      v = yo(t - p[e * 2], 2) + yo(i - p[e * 2 + 1], 2);
    const x = r[e];
    let M = x;
    do {
      let w = h[M];
      const C = yo(t - p[w * 2], 2) + yo(i - p[w * 2 + 1], 2);
      if (
        (C < v && ((v = C), (g = w)),
        (M = M % 3 === 2 ? M - 2 : M + 1),
        h[M] !== e)
      )
        break;
      if (((M = c[M]), M === -1)) {
        if (
          ((M = s[(u[e] + 1) % s.length]),
          M !== w && yo(t - p[M * 2], 2) + yo(i - p[M * 2 + 1], 2) < v)
        )
          return M;
        break;
      }
    } while (M !== x);
    return g;
  }
  render(e) {
    const t = e == null ? (e = new Is()) : void 0,
      { points: i, halfedges: r, triangles: s } = this;
    for (let u = 0, c = r.length; u < c; ++u) {
      const h = r[u];
      if (h < u) continue;
      const p = s[u] * 2,
        g = s[h] * 2;
      e.moveTo(i[p], i[p + 1]), e.lineTo(i[g], i[g + 1]);
    }
    return this.renderHull(e), t && t.value();
  }
  renderPoints(e, t) {
    t === void 0 &&
      (!e || typeof e.moveTo != "function") &&
      ((t = e), (e = null)),
      (t = t == null ? 2 : +t);
    const i = e == null ? (e = new Is()) : void 0,
      { points: r } = this;
    for (let s = 0, u = r.length; s < u; s += 2) {
      const c = r[s],
        h = r[s + 1];
      e.moveTo(c + t, h), e.arc(c, h, t, 0, Lw);
    }
    return i && i.value();
  }
  renderHull(e) {
    const t = e == null ? (e = new Is()) : void 0,
      { hull: i, points: r } = this,
      s = i[0] * 2,
      u = i.length;
    e.moveTo(r[s], r[s + 1]);
    for (let c = 1; c < u; ++c) {
      const h = 2 * i[c];
      e.lineTo(r[h], r[h + 1]);
    }
    return e.closePath(), t && t.value();
  }
  hullPolygon() {
    const e = new fc();
    return this.renderHull(e), e.value();
  }
  renderTriangle(e, t) {
    const i = t == null ? (t = new Is()) : void 0,
      { points: r, triangles: s } = this,
      u = s[(e *= 3)] * 2,
      c = s[e + 1] * 2,
      h = s[e + 2] * 2;
    return (
      t.moveTo(r[u], r[u + 1]),
      t.lineTo(r[c], r[c + 1]),
      t.lineTo(r[h], r[h + 1]),
      t.closePath(),
      i && i.value()
    );
  }
  *trianglePolygons() {
    const { triangles: e } = this;
    for (let t = 0, i = e.length / 3; t < i; ++t) yield this.trianglePolygon(t);
  }
  trianglePolygon(e) {
    const t = new fc();
    return this.renderTriangle(e, t), t.value();
  }
}
function Uw(n, e, t, i) {
  const r = n.length,
    s = new Float64Array(r * 2);
  for (let u = 0; u < r; ++u) {
    const c = n[u];
    (s[u * 2] = e.call(i, c, u, n)), (s[u * 2 + 1] = t.call(i, c, u, n));
  }
  return s;
}
function* Bw(n, e, t, i) {
  let r = 0;
  for (const s of n) yield e.call(i, s, r, n), yield t.call(i, s, r, n), ++r;
}
const Zc = Math.PI,
  kp = Zc / 2,
  zp = 180 / Zc,
  Gp = Zc / 180,
  Nw = Math.atan2,
  Hp = Math.cos,
  Fw = Math.max,
  kw = Math.min,
  Vp = Math.sin,
  zw =
    Math.sign ||
    function (n) {
      return n > 0 ? 1 : n < 0 ? -1 : 0;
    },
  Z2 = Math.sqrt;
function Gw(n) {
  return n > 1 ? kp : n < -1 ? -kp : Math.asin(n);
}
function K2(n, e) {
  return n[0] * e[0] + n[1] * e[1] + n[2] * e[2];
}
function Ti(n, e) {
  return [
    n[1] * e[2] - n[2] * e[1],
    n[2] * e[0] - n[0] * e[2],
    n[0] * e[1] - n[1] * e[0],
  ];
}
function kl(n, e) {
  return [n[0] + e[0], n[1] + e[1], n[2] + e[2]];
}
function zl(n) {
  var e = Z2(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);
  return [n[0] / e, n[1] / e, n[2] / e];
}
function Kc(n) {
  return [Nw(n[1], n[0]) * zp, Gw(Fw(-1, kw(1, n[2]))) * zp];
}
function gr(n) {
  const e = n[0] * Gp,
    t = n[1] * Gp,
    i = Hp(t);
  return [i * Hp(e), i * Vp(e), Vp(t)];
}
function Jc(n) {
  return (n = n.map((e) => gr(e))), K2(n[0], Ti(n[2], n[1]));
}
function Hw(n) {
  const e = Ww(n),
    t = Xw(e),
    i = jw(t, n),
    r = $w(t, n.length),
    s = Vw(r, n),
    u = Qw(t, n),
    { polygons: c, centers: h } = Yw(u, t, n),
    p = Zw(c),
    g = Jw(t, n),
    v = Kw(i, t);
  return {
    delaunay: e,
    edges: i,
    triangles: t,
    centers: h,
    neighbors: r,
    polygons: c,
    mesh: p,
    hull: g,
    urquhart: v,
    find: s,
  };
}
function Vw(n, e) {
  function t(i, r) {
    let s = i[0] - r[0],
      u = i[1] - r[1],
      c = i[2] - r[2];
    return s * s + u * u + c * c;
  }
  return function (r, s, u) {
    u === void 0 && (u = 0);
    let c,
      h,
      p = u;
    const g = gr([r, s]);
    do
      (c = u),
        (u = null),
        (h = t(g, gr(e[c]))),
        n[c].forEach((v) => {
          let x = t(g, gr(e[v]));
          if (x < h) {
            (h = x), (u = v), (p = v);
            return;
          }
        });
    while (u !== null);
    return p;
  };
}
function Ww(n) {
  if (n.length < 2) return {};
  let e = 0;
  for (; isNaN(n[e][0] + n[e][1]) && e++ < n.length; );
  const t = _b(n[e]),
    i = Jb()
      .translate([0, 0])
      .scale(1)
      .rotate(t.invert([180, 0]));
  n = n.map(i);
  const r = [];
  let s = 1;
  for (let v = 0, x = n.length; v < x; v++) {
    let M = n[v][0] ** 2 + n[v][1] ** 2;
    !isFinite(M) || M > 1e32 ? r.push(v) : M > s && (s = M);
  }
  const u = 1e6 * Z2(s);
  r.forEach((v) => (n[v] = [u, 0])),
    n.push([0, u]),
    n.push([-u, 0]),
    n.push([0, -u]);
  const c = Yc.from(n);
  c.projection = i;
  const { triangles: h, halfedges: p, inedges: g } = c;
  for (let v = 0, x = p.length; v < x; v++)
    if (p[v] < 0) {
      const M = v % 3 == 2 ? v - 2 : v + 1,
        w = v % 3 == 0 ? v + 2 : v - 1,
        C = p[M],
        E = p[w];
      (p[C] = E),
        (p[E] = C),
        (p[M] = p[w] = -1),
        (h[v] = h[M] = h[w] = e),
        (g[h[C]] = C % 3 == 0 ? C + 2 : C - 1),
        (g[h[E]] = E % 3 == 0 ? E + 2 : E - 1),
        (v += 2 - (v % 3));
    } else h[v] > n.length - 3 - 1 && (h[v] = e);
  return c;
}
function jw(n, e) {
  const t = new Set();
  return e.length === 2
    ? [[0, 1]]
    : (n.forEach((i) => {
        if (i[0] !== i[1] && !(Jc(i.map((r) => e[r])) < 0))
          for (let r = 0, s; r < 3; r++)
            (s = (r + 1) % 3), t.add(fl([i[r], i[s]]).join("-"));
      }),
      Array.from(t, (i) => i.split("-").map(Number)));
}
function Xw(n) {
  const { triangles: e } = n;
  if (!e) return [];
  const t = [];
  for (let i = 0, r = e.length / 3; i < r; i++) {
    const s = e[3 * i],
      u = e[3 * i + 1],
      c = e[3 * i + 2];
    s !== u && u !== c && t.push([s, c, u]);
  }
  return t;
}
function Qw(n, e) {
  return n.map((t) => {
    const i = t.map((s) => e[s]).map(gr),
      r = kl(kl(Ti(i[1], i[0]), Ti(i[2], i[1])), Ti(i[0], i[2]));
    return Kc(zl(r));
  });
}
function $w(n, e) {
  const t = [];
  return (
    n.forEach((i) => {
      for (let r = 0; r < 3; r++) {
        const s = i[r],
          u = i[(r + 1) % 3];
        (t[s] = t[s] || []), t[s].push(u);
      }
    }),
    n.length === 0 &&
      (e === 2 ? ((t[0] = [1]), (t[1] = [0])) : e === 1 && (t[0] = [])),
    t
  );
}
function Yw(n, e, t) {
  const i = [],
    r = n.slice();
  if (e.length === 0) {
    if (t.length < 2) return { polygons: i, centers: r };
    if (t.length === 2) {
      const c = gr(t[0]),
        h = gr(t[1]),
        p = zl(kl(c, h)),
        g = zl(Ti(c, h)),
        v = Ti(p, g),
        x = [p, Ti(p, v), Ti(Ti(p, v), v), Ti(Ti(Ti(p, v), v), v)]
          .map(Kc)
          .map(u);
      return (
        i.push(x), i.push(x.slice().reverse()), { polygons: i, centers: r }
      );
    }
  }
  e.forEach((c, h) => {
    for (let p = 0; p < 3; p++) {
      const g = c[p],
        v = c[(p + 1) % 3],
        x = c[(p + 2) % 3];
      (i[g] = i[g] || []), i[g].push([v, x, h, [g, v, x]]);
    }
  });
  const s = i.map((c) => {
    const h = [c[0][2]];
    let p = c[0][1];
    for (let g = 1; g < c.length; g++)
      for (let v = 0; v < c.length; v++)
        if (c[v][0] == p) {
          (p = c[v][1]), h.push(c[v][2]);
          break;
        }
    if (h.length > 2) return h;
    if (h.length == 2) {
      const g = Wp(t[c[0][3][0]], t[c[0][3][1]], r[h[0]]),
        v = Wp(t[c[0][3][2]], t[c[0][3][0]], r[h[0]]),
        x = u(g),
        M = u(v);
      return [h[0], M, h[1], x];
    }
  });
  function u(c) {
    let h = -1;
    return (
      r.slice(e.length, 1 / 0).forEach((p, g) => {
        p[0] === c[0] && p[1] === c[1] && (h = g + e.length);
      }),
      h < 0 && ((h = r.length), r.push(c)),
      h
    );
  }
  return { polygons: s, centers: r };
}
function Wp(n, e, t) {
  (n = gr(n)), (e = gr(e)), (t = gr(t));
  const i = zw(K2(Ti(e, n), t));
  return Kc(zl(kl(n, e)).map((r) => i * r));
}
function Zw(n) {
  const e = [];
  return (
    n.forEach((t) => {
      if (!t) return;
      let i = t[t.length - 1];
      for (let r of t) r > i && e.push([i, r]), (i = r);
    }),
    e
  );
}
function Kw(n, e) {
  return function (t) {
    const i = new Map(),
      r = new Map();
    return (
      n.forEach((s, u) => {
        const c = s.join("-");
        i.set(c, t[u]), r.set(c, !0);
      }),
      e.forEach((s) => {
        let u = 0,
          c = -1;
        for (let h = 0; h < 3; h++) {
          let p = fl([s[h], s[(h + 1) % 3]]).join("-");
          i.get(p) > u && ((u = i.get(p)), (c = p));
        }
        r.set(c, !1);
      }),
      n.map((s) => r.get(s.join("-")))
    );
  };
}
function Jw(n, e) {
  const t = new Set(),
    i = [];
  n.map((c) => {
    if (!(Jc(c.map((h) => e[h > e.length ? 0 : h])) > 1e-12))
      for (let h = 0; h < 3; h++) {
        let p = [c[h], c[(h + 1) % 3]],
          g = `${p[0]}-${p[1]}`;
        t.has(g) ? t.delete(g) : t.add(`${p[1]}-${p[0]}`);
      }
  });
  const r = new Map();
  let s;
  if (
    (t.forEach((c) => {
      (c = c.split("-").map(Number)), r.set(c[0], c[1]), (s = c[0]);
    }),
    s === void 0)
  )
    return i;
  let u = s;
  do {
    i.push(u);
    let c = r.get(u);
    r.set(u, -1), (u = c);
  } while (u > -1 && u !== s);
  return i;
}
function eS(n) {
  const e = function (t) {
    if (
      ((e.delaunay = null),
      (e._data = t),
      typeof e._data == "object" &&
        e._data.type === "FeatureCollection" &&
        (e._data = e._data.features),
      typeof e._data == "object")
    ) {
      const i = e._data
        .map((r) => [e._vx(r), e._vy(r), r])
        .filter((r) => isFinite(r[0] + r[1]));
      (e.points = i.map((r) => [r[0], r[1]])),
        (e.valid = i.map((r) => r[2])),
        (e.delaunay = Hw(e.points));
    }
    return e;
  };
  return (
    (e._vx = function (t) {
      if (typeof t == "object" && "type" in t) return Hd(t)[0];
      if (0 in t) return t[0];
    }),
    (e._vy = function (t) {
      if (typeof t == "object" && "type" in t) return Hd(t)[1];
      if (1 in t) return t[1];
    }),
    (e.x = function (t) {
      return t ? ((e._vx = t), e) : e._vx;
    }),
    (e.y = function (t) {
      return t ? ((e._vy = t), e) : e._vy;
    }),
    (e.polygons = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const i = { type: "FeatureCollection", features: [] };
      return (
        e.valid.length === 0 ||
          (e.delaunay.polygons.forEach((r, s) =>
            i.features.push({
              type: "Feature",
              geometry: r
                ? {
                    type: "Polygon",
                    coordinates: [
                      [...r, r[0]].map((u) => e.delaunay.centers[u]),
                    ],
                  }
                : null,
              properties: {
                site: e.valid[s],
                sitecoordinates: e.points[s],
                neighbours: e.delaunay.neighbors[s],
              },
            })
          ),
          e.valid.length === 1 &&
            i.features.push({
              type: "Feature",
              geometry: { type: "Sphere" },
              properties: {
                site: e.valid[0],
                sitecoordinates: e.points[0],
                neighbours: [],
              },
            })),
        i
      );
    }),
    (e.triangles = function (t) {
      return (
        t !== void 0 && e(t),
        e.delaunay
          ? {
              type: "FeatureCollection",
              features: e.delaunay.triangles
                .map(
                  (i, r) => (
                    (i = i.map((s) => e.points[s])),
                    (i.center = e.delaunay.centers[r]),
                    i
                  )
                )
                .filter((i) => Jc(i) > 0)
                .map((i) => ({
                  type: "Feature",
                  properties: { circumcenter: i.center },
                  geometry: { type: "Polygon", coordinates: [[...i, i[0]]] },
                })),
            }
          : !1
      );
    }),
    (e.links = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const i = e.delaunay.edges.map((s) => hs(e.points[s[0]], e.points[s[1]])),
        r = e.delaunay.urquhart(i);
      return {
        type: "FeatureCollection",
        features: e.delaunay.edges.map((s, u) => ({
          type: "Feature",
          properties: {
            source: e.valid[s[0]],
            target: e.valid[s[1]],
            length: i[u],
            urquhart: !!r[u],
          },
          geometry: {
            type: "LineString",
            coordinates: [e.points[s[0]], e.points[s[1]]],
          },
        })),
      };
    }),
    (e.mesh = function (t) {
      return (
        t !== void 0 && e(t),
        e.delaunay
          ? {
              type: "MultiLineString",
              coordinates: e.delaunay.edges.map((i) => [
                e.points[i[0]],
                e.points[i[1]],
              ]),
            }
          : !1
      );
    }),
    (e.cellMesh = function (t) {
      if ((t !== void 0 && e(t), !e.delaunay)) return !1;
      const { centers: i, polygons: r } = e.delaunay,
        s = [];
      for (const u of r)
        if (u)
          for (
            let c = u.length, h = u[c - 1], p = u[0], g = 0;
            g < c;
            h = p, p = u[++g]
          )
            p > h && s.push([i[h], i[p]]);
      return { type: "MultiLineString", coordinates: s };
    }),
    (e._found = void 0),
    (e.find = function (t, i, r) {
      if (
        ((e._found = e.delaunay.find(t, i, e._found)),
        !r || hs([t, i], e.points[e._found]) < r)
      )
        return e._found;
    }),
    (e.hull = function (t) {
      t !== void 0 && e(t);
      const i = e.delaunay.hull,
        r = e.points;
      return i.length === 0
        ? null
        : { type: "Polygon", coordinates: [[...i.map((s) => r[s]), r[i[0]]]] };
    }),
    n ? e(n) : e
  );
}
function tS(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function nS(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function jp(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, pS(i.key), i);
  }
}
function iS(n, e, t) {
  return (
    e && jp(n.prototype, e),
    t && jp(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function rS(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && hc(n, e);
}
function Gl(n) {
  return (
    (Gl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    Gl(n)
  );
}
function hc(n, e) {
  return (
    (hc = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    hc(n, e)
  );
}
function sS() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function oS(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function aS(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return oS(n);
}
function AS(n) {
  var e = sS();
  return function () {
    var i = Gl(n),
      r;
    if (e) {
      var s = Gl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return aS(this, r);
  };
}
function fr(n, e) {
  return uS(n) || tS(n, e) || J2(n, e) || hS();
}
function du(n) {
  return lS(n) || cS(n) || J2(n) || fS();
}
function lS(n) {
  if (Array.isArray(n)) return dc(n);
}
function uS(n) {
  if (Array.isArray(n)) return n;
}
function cS(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function J2(n, e) {
  if (n) {
    if (typeof n == "string") return dc(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return dc(n, e);
  }
}
function dc(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function fS() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function hS() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function dS(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function pS(n) {
  var e = dS(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
function mS(n) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    t = e.resolution,
    i = t === void 0 ? 1 / 0 : t,
    r = gS(n, i),
    s = ka(r),
    u = vS(n, i),
    c = [].concat(du(s), du(u)),
    h = { type: "Polygon", coordinates: n },
    p = x2(h),
    g = fr(p, 2),
    v = fr(g[0], 2),
    x = v[0],
    M = v[1],
    w = fr(g[1], 2),
    C = w[0],
    E = w[1],
    b = x > C || E >= 89 || M <= -89,
    L = [];
  if (b) {
    var S = eS(c).triangles(),
      R = new Map(
        c.map(function (ie, he) {
          var ce = fr(ie, 2),
            oe = ce[0],
            de = ce[1];
          return ["".concat(oe, "-").concat(de), he];
        })
      );
    S.features.forEach(function (ie) {
      var he,
        ce = ie.geometry.coordinates[0].slice(0, 3).reverse(),
        oe = [];
      if (
        (ce.forEach(function (Se) {
          var Pe = fr(Se, 2),
            Oe = Pe[0],
            $e = Pe[1],
            nt = "".concat(Oe, "-").concat($e);
          R.has(nt) && oe.push(R.get(nt));
        }),
        oe.length === 3)
      ) {
        if (
          oe.some(function (Se) {
            return Se < s.length;
          })
        ) {
          var de = ie.properties.circumcenter;
          if (!pc(de, h, b)) return;
        }
        (he = L).push.apply(he, oe);
      }
    });
  } else if (u.length)
    for (
      var D = Va.from(c),
        O = function (he) {
          var ce,
            oe = [2, 1, 0].map(function (Pe) {
              return D.triangles[he + Pe];
            }),
            de = oe.map(function (Pe) {
              return c[Pe];
            });
          if (
            oe.some(function (Pe) {
              return Pe < s.length;
            })
          ) {
            var Se = [0, 1].map(function (Pe) {
              return ib(de, function (Oe) {
                return Oe[Pe];
              });
            });
            if (!pc(Se, h, b)) return "continue";
          }
          (ce = L).push.apply(ce, du(oe));
        },
        k = 0,
        $ = D.triangles.length;
      k < $;
      k += 3
    )
      var H = O(k);
  else {
    var U = Fa.flatten(r),
      q = U.vertices,
      I = U.holes,
      N = I === void 0 ? [] : I;
    L = Fa(q, N, 2);
  }
  var Q = Ws(
      fl(c, function (ie) {
        return ie[0];
      }),
      [0, 1]
    ),
    F = Ws(
      fl(c, function (ie) {
        return ie[1];
      }),
      [0, 1]
    ),
    J = c.map(function (ie) {
      var he = fr(ie, 2),
        ce = he[0],
        oe = he[1];
      return [Q(ce), F(oe)];
    }),
    K = { points: c, indices: L, uvs: J };
  return { contour: r, triangles: K };
}
function gS(n, e) {
  return n.map(function (t) {
    var i = [],
      r;
    return (
      t.forEach(function (s) {
        if (r) {
          var u = (hs(s, r) * 180) / Math.PI;
          if (u > e)
            for (var c = Gc(r, s), h = 1 / Math.ceil(u / e), p = h; p < 1; )
              i.push(c(p)), (p += h);
        }
        i.push((r = s));
      }),
      i
    );
  });
}
function vS(n, e) {
  var t = { type: "Polygon", coordinates: n },
    i = x2(t),
    r = fr(i, 2),
    s = fr(r[0], 2),
    u = s[0],
    c = s[1],
    h = fr(r[1], 2),
    p = h[0],
    g = h[1];
  if (Math.min(Math.abs(p - u), Math.abs(g - c)) < e) return [];
  var v = u > p || g >= 89 || c <= -89;
  return _S(e, { minLng: u, maxLng: p, minLat: c, maxLat: g }).filter(function (
    x
  ) {
    return pc(x, t, v);
  });
}
function _S(n) {
  for (
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
      t = e.minLng,
      i = e.maxLng,
      r = e.minLat,
      s = e.maxLat,
      u = Math.round(Math.pow(360 / n, 2) / Math.PI),
      c = (1 + Math.sqrt(5)) / 2,
      h = function (b) {
        return (((b / c) * 360) % 360) - 180;
      },
      p = function (b) {
        return (Math.acos((2 * b) / u - 1) / Math.PI) * 180 - 90;
      },
      g = function (b) {
        return (u * (Math.cos(((b + 90) * Math.PI) / 180) + 1)) / 2;
      },
      v = [
        s !== void 0 ? Math.ceil(g(s)) : 0,
        r !== void 0 ? Math.floor(g(r)) : u - 1,
      ],
      x =
        t === void 0 && i === void 0
          ? function () {
              return !0;
            }
          : t === void 0
          ? function (E) {
              return E <= i;
            }
          : i === void 0
          ? function (E) {
              return E >= t;
            }
          : i >= t
          ? function (E) {
              return E >= t && E <= i;
            }
          : function (E) {
              return E >= t || E <= i;
            },
      M = [],
      w = v[0];
    w <= v[1];
    w++
  ) {
    var C = h(w);
    x(C) && M.push([C, p(w)]);
  }
  return M;
}
function pc(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  return t ? Ub(e, n) : Cw(n, e);
}
var al = window.THREE
    ? window.THREE
    : { BufferGeometry: fn, Float32BufferAttribute: Jt },
  Xp = new al.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute",
  ef = (function (n) {
    rS(t, n);
    var e = AS(t);
    function t(i, r, s, u, c, h, p) {
      var g;
      nS(this, t),
        (g = e.call(this)),
        (g.type = "ConicPolygonBufferGeometry"),
        (g.parameters = {
          polygonGeoJson: i,
          startHeight: r,
          endHeight: s,
          closedBottom: u,
          closedTop: c,
          includeSides: h,
          curvatureResolution: p,
        }),
        (r = r || 0),
        (s = s || 1),
        (u = u !== void 0 ? u : !0),
        (c = c !== void 0 ? c : !0),
        (h = h !== void 0 ? h : !0),
        (p = p || 5);
      var v = mS(i, { resolution: p }),
        x = v.contour,
        M = v.triangles,
        w = ka(M.uvs),
        C = [],
        E = [],
        b = [],
        L = 0,
        S = function (N) {
          var D = Math.round(C.length / 3),
            O = b.length;
          (C = C.concat(N.vertices)),
            (E = E.concat(N.uvs)),
            (b = b.concat(
              D
                ? N.indices.map(function (k) {
                    return k + D;
                  })
                : N.indices
            )),
            g.addGroup(O, b.length - O, L++);
        };
      h && S(U()),
        u && S(q(r, !1)),
        c && S(q(s, !0)),
        g.setIndex(b),
        g[Xp]("position", new al.Float32BufferAttribute(C, 3)),
        g[Xp]("uv", new al.Float32BufferAttribute(E, 2)),
        g.computeVertexNormals();
      function R(I, N) {
        var D = I.map(function (O) {
          return O.map(function (k) {
            var $ = fr(k, 2),
              H = $[0],
              Q = $[1];
            return xS(Q, H, N);
          });
        });
        return Fa.flatten(D);
      }
      function U() {
        for (
          var I = R(x, r),
            N = I.vertices,
            D = I.holes,
            O = R(x, s),
            k = O.vertices,
            $ = ka([k, N]),
            H = Math.round(k.length / 3),
            Q = new Set(D),
            F = 0,
            J = [],
            K = 0;
          K < H;
          K++
        ) {
          var ie = K + 1;
          if (ie === H) ie = F;
          else if (Q.has(ie)) {
            var he = ie;
            (ie = F), (F = he);
          }
          J.push(K, K + H, ie + H), J.push(ie + H, ie, K);
        }
        for (var ce = [], oe = 1; oe >= 0; oe--)
          for (var de = 0; de < H; de += 1) ce.push(de / (H - 1), oe);
        return { indices: J, vertices: $, uvs: ce };
      }
      function q(I) {
        var N =
          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        return {
          indices: N ? M.indices : M.indices.slice().reverse(),
          vertices: R([M.points], I).vertices,
          uvs: w,
        };
      }
      return g;
    }
    return iS(t);
  })(al.BufferGeometry);
function xS(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180;
  return [
    t * Math.sin(i) * Math.cos(r),
    t * Math.cos(i),
    t * Math.sin(i) * Math.sin(r),
  ];
}
var Wt = (function (n) {
    n = n || {};
    var e = typeof n < "u" ? n : {},
      t = {},
      i;
    for (i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
    var r = "";
    function s(me) {
      return e.locateFile ? e.locateFile(me, r) : r + me;
    }
    var u;
    typeof document < "u" &&
      document.currentScript &&
      (r = document.currentScript.src),
      r.indexOf("blob:") !== 0
        ? (r = r.substr(0, r.lastIndexOf("/") + 1))
        : (r = ""),
      (u = function (Te, We, pt) {
        var A = new XMLHttpRequest();
        A.open("GET", Te, !0),
          (A.responseType = "arraybuffer"),
          (A.onload = function () {
            if (A.status == 200 || (A.status == 0 && A.response)) {
              We(A.response);
              return;
            }
            var X = Ye(Te);
            if (X) {
              We(X.buffer);
              return;
            }
            pt();
          }),
          (A.onerror = pt),
          A.send(null);
      });
    var c = e.print || console.log.bind(console),
      h = e.printErr || console.warn.bind(console);
    for (i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
    (t = null), e.arguments && e.arguments;
    var p = 0,
      g = function (me) {
        p = me;
      },
      v = function () {
        return p;
      },
      x = 8;
    function M(me, Te, We, pt) {
      switch (
        ((We = We || "i8"),
        We.charAt(We.length - 1) === "*" && (We = "i32"),
        We)
      ) {
        case "i1":
          $[me >> 0] = Te;
          break;
        case "i8":
          $[me >> 0] = Te;
          break;
        case "i16":
          Q[me >> 1] = Te;
          break;
        case "i32":
          F[me >> 2] = Te;
          break;
        case "i64":
          (xe = [
            Te >>> 0,
            ((G = Te),
            +Ge(G) >= 1
              ? G > 0
                ? (Le(+Fe(G / 4294967296), 4294967295) | 0) >>> 0
                : ~~+Ce((G - +(~~G >>> 0)) / 4294967296) >>> 0
              : 0),
          ]),
            (F[me >> 2] = xe[0]),
            (F[(me + 4) >> 2] = xe[1]);
          break;
        case "float":
          J[me >> 2] = Te;
          break;
        case "double":
          K[me >> 3] = Te;
          break;
        default:
          Ii("invalid type for setValue: " + We);
      }
    }
    function w(me, Te, We) {
      switch (
        ((Te = Te || "i8"),
        Te.charAt(Te.length - 1) === "*" && (Te = "i32"),
        Te)
      ) {
        case "i1":
          return $[me >> 0];
        case "i8":
          return $[me >> 0];
        case "i16":
          return Q[me >> 1];
        case "i32":
          return F[me >> 2];
        case "i64":
          return F[me >> 2];
        case "float":
          return J[me >> 2];
        case "double":
          return K[me >> 3];
        default:
          Ii("invalid type for getValue: " + Te);
      }
      return null;
    }
    var C = !1;
    function E(me, Te) {
      me || Ii("Assertion failed: " + Te);
    }
    function b(me) {
      var Te = e["_" + me];
      return (
        E(
          Te,
          "Cannot call unknown function " + me + ", make sure it is exported"
        ),
        Te
      );
    }
    function L(me, Te, We, pt, A) {
      var V = {
        string: function (He) {
          var ft = 0;
          if (He != null && He !== 0) {
            var Nt = (He.length << 2) + 1;
            (ft = Yt(Nt)), N(He, ft, Nt);
          }
          return ft;
        },
        array: function (He) {
          var ft = Yt(He.length);
          return D(He, ft), ft;
        },
      };
      function X(He) {
        return Te === "string" ? q(He) : Te === "boolean" ? !!He : He;
      }
      var le = b(me),
        ye = [],
        Ae = 0;
      if (pt)
        for (var ge = 0; ge < pt.length; ge++) {
          var rt = V[We[ge]];
          rt
            ? (Ae === 0 && (Ae = ei()), (ye[ge] = rt(pt[ge])))
            : (ye[ge] = pt[ge]);
        }
      var Qe = le.apply(null, ye);
      return (Qe = X(Qe)), Ae !== 0 && rn(Ae), Qe;
    }
    function S(me, Te, We, pt) {
      We = We || [];
      var A = We.every(function (X) {
          return X === "number";
        }),
        V = Te !== "string";
      return V && A && !pt
        ? b(me)
        : function () {
            return L(me, Te, We, arguments);
          };
    }
    var R = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
    function U(me, Te, We) {
      for (var pt = Te + We, A = Te; me[A] && !(A >= pt); ) ++A;
      if (A - Te > 16 && me.subarray && R) return R.decode(me.subarray(Te, A));
      for (var V = ""; Te < A; ) {
        var X = me[Te++];
        if (!(X & 128)) {
          V += String.fromCharCode(X);
          continue;
        }
        var le = me[Te++] & 63;
        if ((X & 224) == 192) {
          V += String.fromCharCode(((X & 31) << 6) | le);
          continue;
        }
        var ye = me[Te++] & 63;
        if (
          ((X & 240) == 224
            ? (X = ((X & 15) << 12) | (le << 6) | ye)
            : (X = ((X & 7) << 18) | (le << 12) | (ye << 6) | (me[Te++] & 63)),
          X < 65536)
        )
          V += String.fromCharCode(X);
        else {
          var Ae = X - 65536;
          V += String.fromCharCode(55296 | (Ae >> 10), 56320 | (Ae & 1023));
        }
      }
      return V;
    }
    function q(me, Te) {
      return me ? U(H, me, Te) : "";
    }
    function I(me, Te, We, pt) {
      if (!(pt > 0)) return 0;
      for (var A = We, V = We + pt - 1, X = 0; X < me.length; ++X) {
        var le = me.charCodeAt(X);
        if (le >= 55296 && le <= 57343) {
          var ye = me.charCodeAt(++X);
          le = (65536 + ((le & 1023) << 10)) | (ye & 1023);
        }
        if (le <= 127) {
          if (We >= V) break;
          Te[We++] = le;
        } else if (le <= 2047) {
          if (We + 1 >= V) break;
          (Te[We++] = 192 | (le >> 6)), (Te[We++] = 128 | (le & 63));
        } else if (le <= 65535) {
          if (We + 2 >= V) break;
          (Te[We++] = 224 | (le >> 12)),
            (Te[We++] = 128 | ((le >> 6) & 63)),
            (Te[We++] = 128 | (le & 63));
        } else {
          if (We + 3 >= V) break;
          (Te[We++] = 240 | (le >> 18)),
            (Te[We++] = 128 | ((le >> 12) & 63)),
            (Te[We++] = 128 | ((le >> 6) & 63)),
            (Te[We++] = 128 | (le & 63));
        }
      }
      return (Te[We] = 0), We - A;
    }
    function N(me, Te, We) {
      return I(me, H, Te, We);
    }
    typeof TextDecoder < "u" && new TextDecoder("utf-16le");
    function D(me, Te) {
      $.set(me, Te);
    }
    function O(me, Te) {
      return me % Te > 0 && (me += Te - (me % Te)), me;
    }
    var k, $, H, Q, F, J, K;
    function ie(me) {
      (k = me),
        (e.HEAP8 = $ = new Int8Array(me)),
        (e.HEAP16 = Q = new Int16Array(me)),
        (e.HEAP32 = F = new Int32Array(me)),
        (e.HEAPU8 = H = new Uint8Array(me)),
        (e.HEAPU16 = new Uint16Array(me)),
        (e.HEAPU32 = new Uint32Array(me)),
        (e.HEAPF32 = J = new Float32Array(me)),
        (e.HEAPF64 = K = new Float64Array(me));
    }
    var he = 5267040,
      ce = 24128,
      oe = e.TOTAL_MEMORY || 33554432;
    e.buffer ? (k = e.buffer) : (k = new ArrayBuffer(oe)),
      (oe = k.byteLength),
      ie(k),
      (F[ce >> 2] = he);
    function de(me) {
      for (; me.length > 0; ) {
        var Te = me.shift();
        if (typeof Te == "function") {
          Te();
          continue;
        }
        var We = Te.func;
        typeof We == "number"
          ? Te.arg === void 0
            ? e.dynCall_v(We)
            : e.dynCall_vi(We, Te.arg)
          : We(Te.arg === void 0 ? null : Te.arg);
      }
    }
    var Se = [],
      Pe = [],
      Oe = [],
      $e = [];
    function nt() {
      if (e.preRun)
        for (
          typeof e.preRun == "function" && (e.preRun = [e.preRun]);
          e.preRun.length;

        )
          ct(e.preRun.shift());
      de(Se);
    }
    function ot() {
      de(Pe);
    }
    function Rt() {
      de(Oe);
    }
    function Ot() {
      if (e.postRun)
        for (
          typeof e.postRun == "function" && (e.postRun = [e.postRun]);
          e.postRun.length;

        )
          ne(e.postRun.shift());
      de($e);
    }
    function ct(me) {
      Se.unshift(me);
    }
    function ne(me) {
      $e.unshift(me);
    }
    var Ge = Math.abs,
      Ce = Math.ceil,
      Fe = Math.floor,
      Le = Math.min,
      At = 0,
      it = null;
    function at(me) {
      At++, e.monitorRunDependencies && e.monitorRunDependencies(At);
    }
    function mt(me) {
      if (
        (At--,
        e.monitorRunDependencies && e.monitorRunDependencies(At),
        At == 0 && it)
      ) {
        var Te = it;
        (it = null), Te();
      }
    }
    (e.preloadedImages = {}), (e.preloadedAudios = {});
    var xt = null,
      nn = "data:application/octet-stream;base64,";
    function Y(me) {
      return String.prototype.startsWith
        ? me.startsWith(nn)
        : me.indexOf(nn) === 0;
    }
    var G, xe;
    xt =
      "data:application/octet-stream;base64,";
    var Be = 24144;
    function Ie(me) {
      return me;
    }
    function Ne(me) {
      var Te = /\b__Z[\w\d_]+/g;
      return me.replace(Te, function (We) {
        var pt = We;
        return We === pt ? We : pt + " [" + We + "]";
      });
    }
    function ut() {
      var me = new Error();
      if (!me.stack) {
        try {
          throw new Error(0);
        } catch (Te) {
          me = Te;
        }
        if (!me.stack) return "(no stack trace available)";
      }
      return me.stack.toString();
    }
    function ze() {
      var me = ut();
      return (
        e.extraStackTrace &&
          (me +=
            `
` + e.extraStackTrace()),
        Ne(me)
      );
    }
    function be(me, Te, We, pt) {
      Ii(
        "Assertion failed: " +
          q(me) +
          ", at: " +
          [Te ? q(Te) : "unknown filename", We, pt ? q(pt) : "unknown function"]
      );
    }
    function re() {
      return $.length;
    }
    function Re(me, Te, We) {
      H.set(H.subarray(Te, Te + We), me);
    }
    function tt(me) {
      return e.___errno_location && (F[e.___errno_location() >> 2] = me), me;
    }
    function Xe(me) {
      Ii("OOM");
    }
    function et(me) {
      try {
        var Te = new ArrayBuffer(me);
        return Te.byteLength != me
          ? void 0
          : (new Int8Array(Te).set($), kt(Te), ie(Te), 1);
      } catch {}
    }
    function wt(me) {
      var Te = re(),
        We = 16777216,
        pt = 2147483648 - We;
      if (me > pt) return !1;
      for (var A = 16777216, V = Math.max(Te, A); V < me; )
        V <= 536870912
          ? (V = O(2 * V, We))
          : (V = Math.min(O((3 * V + 2147483648) / 4, We), pt));
      var X = et(V);
      return !!X;
    }
    var Vt =
      typeof atob == "function"
        ? atob
        : function (me) {
            var Te =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
              We = "",
              pt,
              A,
              V,
              X,
              le,
              ye,
              Ae,
              ge = 0;
            me = me.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do
              (X = Te.indexOf(me.charAt(ge++))),
                (le = Te.indexOf(me.charAt(ge++))),
                (ye = Te.indexOf(me.charAt(ge++))),
                (Ae = Te.indexOf(me.charAt(ge++))),
                (pt = (X << 2) | (le >> 4)),
                (A = ((le & 15) << 4) | (ye >> 2)),
                (V = ((ye & 3) << 6) | Ae),
                (We = We + String.fromCharCode(pt)),
                ye !== 64 && (We = We + String.fromCharCode(A)),
                Ae !== 64 && (We = We + String.fromCharCode(V));
            while (ge < me.length);
            return We;
          };
    function ae(me) {
      try {
        for (
          var Te = Vt(me), We = new Uint8Array(Te.length), pt = 0;
          pt < Te.length;
          ++pt
        )
          We[pt] = Te.charCodeAt(pt);
        return We;
      } catch {
        throw new Error("Converting base64 string to bytes failed.");
      }
    }
    function Ye(me) {
      if (Y(me)) return ae(me.slice(nn.length));
    }
    var Me = {
        Math,
        Int8Array,
        Int32Array,
        Uint8Array,
        Float32Array,
        Float64Array,
      },
      Ue = {
        a: Ii,
        b: g,
        c: v,
        d: be,
        e: tt,
        f: re,
        g: Re,
        h: wt,
        i: Xe,
        j: Ie,
        k: Ne,
        l: et,
        m: ut,
        n: ze,
        o: Be,
        p: ce,
      },
      pe = (function (me, Te, We) {
        "almost asm";
        var pt = new me.Int8Array(We),
          A = new me.Int32Array(We);
        new me.Uint8Array(We), new me.Float32Array(We);
        var V = new me.Float64Array(We),
          X = Te.o | 0,
          le = Te.p | 0,
          ye = me.Math.floor,
          Ae = me.Math.abs,
          ge = me.Math.sqrt,
          rt = me.Math.pow,
          Qe = me.Math.cos,
          He = me.Math.sin,
          ft = me.Math.tan,
          Nt = me.Math.acos,
          vt = me.Math.asin,
          Pt = me.Math.atan,
          jt = me.Math.atan2,
          sn = me.Math.ceil,
          gn = me.Math.imul,
          bi = me.Math.min,
          yn = me.Math.max,
          Lt = me.Math.clz32,
          St = Te.b,
          W = Te.c,
          ht = Te.d,
          Ko = Te.e,
          gs = Te.f,
          Jo = Te.g,
          kn = Te.h,
          br = Te.i,
          z = 24160;
        function ti(a) {
          return (
            (pt = new Int8Array(a)),
            (A = new Int32Array(a)),
            (V = new Float64Array(a)),
            (We = a),
            !0
          );
        }
        function ea(a) {
          a = a | 0;
          var o = 0;
          return (o = z), (z = (z + a) | 0), (z = (z + 15) & -16), o | 0;
        }
        function A0() {
          return z | 0;
        }
        function Ja(a) {
          (a = a | 0), (z = a);
        }
        function jm(a, o) {
          (a = a | 0), (z = a);
        }
        function Xm(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          return (a | 0) < 0
            ? ((o = 2), o | 0)
            : (a | 0) > 13780509
            ? ((o = M0(15, o) | 0), o | 0)
            : ((l = (((a | 0) < 0) << 31) >> 31),
              (d = Xn(a | 0, l | 0, 3, 0) | 0),
              (f = W() | 0),
              (l = zt(a | 0, l | 0, 1, 0) | 0),
              (l = Xn(d | 0, f | 0, l | 0, W() | 0) | 0),
              (l = zt(l | 0, W() | 0, 1, 0) | 0),
              (a = W() | 0),
              (A[o >> 2] = l),
              (A[(o + 4) >> 2] = a),
              (o = 0),
              o | 0);
        }
        function af(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            Af(a, o, l, f, 0) | 0
          );
        }
        function Af(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          if (((T = z), (z = (z + 16) | 0), (_ = T), !(lf(a, o, l, f, d) | 0)))
            return (f = 0), (z = T), f | 0;
          do
            if ((l | 0) >= 0) {
              if ((l | 0) > 13780509) {
                if (((m = M0(15, _) | 0), m | 0)) break;
                (y = _), (_ = A[y >> 2] | 0), (y = A[(y + 4) >> 2] | 0);
              } else
                (m = (((l | 0) < 0) << 31) >> 31),
                  (P = Xn(l | 0, m | 0, 3, 0) | 0),
                  (y = W() | 0),
                  (m = zt(l | 0, m | 0, 1, 0) | 0),
                  (m = Xn(P | 0, y | 0, m | 0, W() | 0) | 0),
                  (m = zt(m | 0, W() | 0, 1, 0) | 0),
                  (y = W() | 0),
                  (A[_ >> 2] = m),
                  (A[(_ + 4) >> 2] = y),
                  (_ = m);
              if ((Ms(f | 0, 0, (_ << 3) | 0) | 0, d | 0)) {
                Ms(d | 0, 0, (_ << 2) | 0) | 0,
                  (m = Mr(a, o, l, f, d, _, y, 0) | 0);
                break;
              }
              (m = lr(_, 4) | 0),
                m
                  ? ((P = Mr(a, o, l, f, m, _, y, 0) | 0), yt(m), (m = P))
                  : (m = 13);
            } else m = 2;
          while (0);
          return (P = m), (z = T), P | 0;
        }
        function lf(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0;
          if (
            ((fe = z),
            (z = (z + 16) | 0),
            (se = fe),
            (Z = (fe + 8) | 0),
            (ee = se),
            (A[ee >> 2] = a),
            (A[(ee + 4) >> 2] = o),
            (l | 0) < 0)
          )
            return (Z = 2), (z = fe), Z | 0;
          if (
            ((m = f),
            (A[m >> 2] = a),
            (A[(m + 4) >> 2] = o),
            (m = (d | 0) != 0),
            m && (A[d >> 2] = 0),
            cn(a, o) | 0)
          )
            return (Z = 9), (z = fe), Z | 0;
          A[Z >> 2] = 0;
          e: do
            if ((l | 0) >= 1)
              if (m)
                for (B = 1, P = 0, j = 0, ee = 1, m = a; ; ) {
                  if (!(P | j)) {
                    if (((m = Nn(m, o, 4, Z, se) | 0), m | 0)) break e;
                    if (
                      ((o = se),
                      (m = A[o >> 2] | 0),
                      (o = A[(o + 4) >> 2] | 0),
                      cn(m, o) | 0)
                    ) {
                      m = 9;
                      break e;
                    }
                  }
                  if (
                    ((m = Nn(m, o, A[(22384 + (j << 2)) >> 2] | 0, Z, se) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    ((o = se),
                    (m = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (a = (f + (B << 3)) | 0),
                    (A[a >> 2] = m),
                    (A[(a + 4) >> 2] = o),
                    (A[(d + (B << 2)) >> 2] = ee),
                    (a = (P + 1) | 0),
                    (_ = (a | 0) == (ee | 0)),
                    (y = (j + 1) | 0),
                    (T = (y | 0) == 6),
                    cn(m, o) | 0)
                  ) {
                    m = 9;
                    break e;
                  }
                  if (((ee = (ee + (T & _ & 1)) | 0), (ee | 0) > (l | 0))) {
                    m = 0;
                    break;
                  } else
                    (B = (B + 1) | 0),
                      (P = _ ? 0 : a),
                      (j = _ ? (T ? 0 : y) : j);
                }
              else
                for (B = 1, P = 0, j = 0, ee = 1, m = a; ; ) {
                  if (!(P | j)) {
                    if (((m = Nn(m, o, 4, Z, se) | 0), m | 0)) break e;
                    if (
                      ((o = se),
                      (m = A[o >> 2] | 0),
                      (o = A[(o + 4) >> 2] | 0),
                      cn(m, o) | 0)
                    ) {
                      m = 9;
                      break e;
                    }
                  }
                  if (
                    ((m = Nn(m, o, A[(22384 + (j << 2)) >> 2] | 0, Z, se) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    ((o = se),
                    (m = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (a = (f + (B << 3)) | 0),
                    (A[a >> 2] = m),
                    (A[(a + 4) >> 2] = o),
                    (a = (P + 1) | 0),
                    (_ = (a | 0) == (ee | 0)),
                    (y = (j + 1) | 0),
                    (T = (y | 0) == 6),
                    cn(m, o) | 0)
                  ) {
                    m = 9;
                    break e;
                  }
                  if (((ee = (ee + (T & _ & 1)) | 0), (ee | 0) > (l | 0))) {
                    m = 0;
                    break;
                  } else
                    (B = (B + 1) | 0),
                      (P = _ ? 0 : a),
                      (j = _ ? (T ? 0 : y) : j);
                }
            else m = 0;
          while (0);
          return (Z = m), (z = fe), Z | 0;
        }
        function Mr(a, o, l, f, d, m, _, y) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (m = m | 0),
            (_ = _ | 0),
            (y = y | 0);
          var T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0;
          if (
            ((fe = z),
            (z = (z + 16) | 0),
            (se = (fe + 8) | 0),
            (Z = fe),
            (T = eo(a | 0, o | 0, m | 0, _ | 0) | 0),
            (B = W() | 0),
            (j = (f + (T << 3)) | 0),
            (we = j),
            (Ee = A[we >> 2] | 0),
            (we = A[(we + 4) >> 2] | 0),
            (P = ((Ee | 0) == (a | 0)) & ((we | 0) == (o | 0))),
            !((((Ee | 0) == 0) & ((we | 0) == 0)) | P))
          )
            do
              (T = zt(T | 0, B | 0, 1, 0) | 0),
                (T = sA(T | 0, W() | 0, m | 0, _ | 0) | 0),
                (B = W() | 0),
                (j = (f + (T << 3)) | 0),
                (Ee = j),
                (we = A[Ee >> 2] | 0),
                (Ee = A[(Ee + 4) >> 2] | 0),
                (P = ((we | 0) == (a | 0)) & ((Ee | 0) == (o | 0)));
            while (!((((we | 0) == 0) & ((Ee | 0) == 0)) | P));
          if (
            ((T = (d + (T << 2)) | 0),
            (P && (A[T >> 2] | 0) <= (y | 0)) ||
              ((Ee = j),
              (A[Ee >> 2] = a),
              (A[(Ee + 4) >> 2] = o),
              (A[T >> 2] = y),
              (y | 0) >= (l | 0)))
          )
            return (Ee = 0), (z = fe), Ee | 0;
          switch (
            ((P = (y + 1) | 0),
            (A[se >> 2] = 0),
            (T = Nn(a, o, 2, se, Z) | 0),
            T | 0)
          ) {
            case 9: {
              ee = 9;
              break;
            }
            case 0: {
              (T = Z),
                (T =
                  Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) | 0),
                T || (ee = 9);
              break;
            }
          }
          e: do
            if ((ee | 0) == 9) {
              switch (((A[se >> 2] = 0), (T = Nn(a, o, 3, se, Z) | 0), T | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((T = Z),
                    (T =
                      Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) |
                      0),
                    T | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[se >> 2] = 0), (T = Nn(a, o, 1, se, Z) | 0), T | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((T = Z),
                    (T =
                      Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) |
                      0),
                    T | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[se >> 2] = 0), (T = Nn(a, o, 5, se, Z) | 0), T | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((T = Z),
                    (T =
                      Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) |
                      0),
                    T | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[se >> 2] = 0), (T = Nn(a, o, 4, se, Z) | 0), T | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((T = Z),
                    (T =
                      Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) |
                      0),
                    T | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              switch (((A[se >> 2] = 0), (T = Nn(a, o, 6, se, Z) | 0), T | 0)) {
                case 9:
                  break;
                case 0: {
                  if (
                    ((T = Z),
                    (T =
                      Mr(A[T >> 2] | 0, A[(T + 4) >> 2] | 0, l, f, d, m, _, P) |
                      0),
                    T | 0)
                  )
                    break e;
                  break;
                }
                default:
                  break e;
              }
              return (Ee = 0), (z = fe), Ee | 0;
            }
          while (0);
          return (Ee = T), (z = fe), Ee | 0;
        }
        function Nn(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0;
          if (l >>> 0 > 6) return (d = 1), d | 0;
          if (((j = (A[f >> 2] | 0) % 6 | 0), (A[f >> 2] = j), (j | 0) > 0)) {
            m = 0;
            do (l = xs(l) | 0), (m = (m + 1) | 0);
            while ((m | 0) < (A[f >> 2] | 0));
          }
          if (
            ((j = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (B = j & 127),
            B >>> 0 > 121)
          )
            return (d = 5), d | 0;
          (T = di(a, o) | 0),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15);
          e: do
            if (!m) P = 8;
            else {
              for (;;) {
                if (
                  ((_ = (((15 - m) | 0) * 3) | 0),
                  (y = De(a | 0, o | 0, _ | 0) | 0),
                  W() | 0,
                  (y = y & 7),
                  (y | 0) == 7)
                ) {
                  o = 5;
                  break;
                }
                if (
                  ((Z = (Oi(m) | 0) == 0),
                  (m = (m + -1) | 0),
                  (ee = je(7, 0, _ | 0) | 0),
                  (o = o & ~(W() | 0)),
                  (se =
                    je(
                      A[((Z ? 432 : 16) + ((y * 28) | 0) + (l << 2)) >> 2] | 0,
                      0,
                      _ | 0
                    ) | 0),
                  (_ = W() | 0),
                  (l =
                    A[((Z ? 640 : 224) + ((y * 28) | 0) + (l << 2)) >> 2] | 0),
                  (a = se | (a & ~ee)),
                  (o = _ | o),
                  !l)
                ) {
                  l = 0;
                  break e;
                }
                if (!m) {
                  P = 8;
                  break e;
                }
              }
              return o | 0;
            }
          while (0);
          (P | 0) == 8 &&
            ((Z = A[(848 + ((B * 28) | 0) + (l << 2)) >> 2] | 0),
            (se = je(Z | 0, 0, 45) | 0),
            (a = se | a),
            (o = W() | 0 | (o & -1040385)),
            (l = A[(4272 + ((B * 28) | 0) + (l << 2)) >> 2] | 0),
            ((Z & 127) | 0) == 127 &&
              ((Z = je(A[(848 + ((B * 28) | 0) + 20) >> 2] | 0, 0, 45) | 0),
              (o = W() | 0 | (o & -1040385)),
              (l = A[(4272 + ((B * 28) | 0) + 20) >> 2] | 0),
              (a = ys(Z | a, o) | 0),
              (o = W() | 0),
              (A[f >> 2] = (A[f >> 2] | 0) + 1))),
            (y = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (y = y & 127);
          e: do
            if (un(y) | 0) {
              t: do
                if ((di(a, o) | 0) == 1) {
                  if ((B | 0) != (y | 0))
                    if (ff(y, A[(7696 + ((B * 28) | 0)) >> 2] | 0) | 0) {
                      (a = x0(a, o) | 0), (_ = 1), (o = W() | 0);
                      break;
                    } else ht(23313, 22416, 436, 22424);
                  switch (T | 0) {
                    case 3: {
                      (a = ys(a, o) | 0),
                        (o = W() | 0),
                        (A[f >> 2] = (A[f >> 2] | 0) + 1),
                        (_ = 0);
                      break t;
                    }
                    case 5: {
                      (a = x0(a, o) | 0),
                        (o = W() | 0),
                        (A[f >> 2] = (A[f >> 2] | 0) + 5),
                        (_ = 0);
                      break t;
                    }
                    case 0:
                      return (Z = 9), Z | 0;
                    default:
                      return (Z = 1), Z | 0;
                  }
                } else _ = 0;
              while (0);
              if ((l | 0) > 0) {
                m = 0;
                do (a = _0(a, o) | 0), (o = W() | 0), (m = (m + 1) | 0);
                while ((m | 0) != (l | 0));
              }
              if ((B | 0) != (y | 0)) {
                if (!(u0(y) | 0)) {
                  if (((_ | 0) != 0) | ((di(a, o) | 0) != 5)) break;
                  A[f >> 2] = (A[f >> 2] | 0) + 1;
                  break;
                }
                switch (j & 127) {
                  case 8:
                  case 118:
                    break e;
                }
                (di(a, o) | 0) != 3 && (A[f >> 2] = (A[f >> 2] | 0) + 1);
              }
            } else if ((l | 0) > 0) {
              m = 0;
              do (a = ys(a, o) | 0), (o = W() | 0), (m = (m + 1) | 0);
              while ((m | 0) != (l | 0));
            }
          while (0);
          return (
            (A[f >> 2] = (((A[f >> 2] | 0) + l) | 0) % 6 | 0),
            (Z = d),
            (A[Z >> 2] = a),
            (A[(Z + 4) >> 2] = o),
            (Z = 0),
            Z | 0
          );
        }
        function l0(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          for (
            y = z,
              z = (z + 16) | 0,
              m = y,
              _ = (y + 8) | 0,
              d = (cn(a, o) | 0) == 0,
              d = d ? 1 : 2;
            ;

          ) {
            if (
              ((A[_ >> 2] = 0),
              (P = (Nn(a, o, d, _, m) | 0) == 0),
              (T = m),
              P &
                ((A[T >> 2] | 0) == (l | 0)
                  ? (A[(T + 4) >> 2] | 0) == (f | 0)
                  : 0))
            ) {
              a = 4;
              break;
            }
            if (((d = (d + 1) | 0), d >>> 0 >= 7)) {
              (d = 7), (a = 4);
              break;
            }
          }
          return (a | 0) == 4 ? ((z = y), d | 0) : 0;
        }
        function Qm(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0;
          if (
            ((Z = z),
            (z = (z + 16) | 0),
            (ee = Z),
            (se = (Z + 8) | 0),
            (j = ee),
            (A[j >> 2] = a),
            (A[(j + 4) >> 2] = o),
            !l)
          )
            return (
              (se = f),
              (A[se >> 2] = a),
              (A[(se + 4) >> 2] = o),
              (se = 0),
              (z = Z),
              se | 0
            );
          A[se >> 2] = 0;
          e: do
            if (cn(a, o) | 0) a = 9;
            else {
              if (((m = (l | 0) > 0), m)) {
                (d = 0), (j = a);
                do {
                  if (((a = Nn(j, o, 4, se, ee) | 0), a | 0)) break e;
                  if (
                    ((o = ee),
                    (j = A[o >> 2] | 0),
                    (o = A[(o + 4) >> 2] | 0),
                    (d = (d + 1) | 0),
                    cn(j, o) | 0)
                  ) {
                    a = 9;
                    break e;
                  }
                } while ((d | 0) < (l | 0));
                if (
                  ((B = f),
                  (A[B >> 2] = j),
                  (A[(B + 4) >> 2] = o),
                  (B = (l + -1) | 0),
                  m)
                ) {
                  (P = 0), (a = 1);
                  do {
                    if (((d = (22384 + (P << 2)) | 0), (P | 0) == 5))
                      for (_ = A[d >> 2] | 0, m = 0, d = a; ; ) {
                        if (
                          ((a = ee),
                          (a =
                            Nn(A[a >> 2] | 0, A[(a + 4) >> 2] | 0, _, se, ee) |
                            0),
                          a | 0)
                        )
                          break e;
                        if ((m | 0) != (B | 0))
                          if (
                            ((T = ee),
                            (y = A[T >> 2] | 0),
                            (T = A[(T + 4) >> 2] | 0),
                            (a = (f + (d << 3)) | 0),
                            (A[a >> 2] = y),
                            (A[(a + 4) >> 2] = T),
                            !(cn(y, T) | 0))
                          )
                            a = (d + 1) | 0;
                          else {
                            a = 9;
                            break e;
                          }
                        else a = d;
                        if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break;
                        d = a;
                      }
                    else
                      for (
                        _ = ee,
                          T = A[d >> 2] | 0,
                          y = 0,
                          d = a,
                          m = A[_ >> 2] | 0,
                          _ = A[(_ + 4) >> 2] | 0;
                        ;

                      ) {
                        if (((a = Nn(m, _, T, se, ee) | 0), a | 0)) break e;
                        if (
                          ((_ = ee),
                          (m = A[_ >> 2] | 0),
                          (_ = A[(_ + 4) >> 2] | 0),
                          (a = (f + (d << 3)) | 0),
                          (A[a >> 2] = m),
                          (A[(a + 4) >> 2] = _),
                          (a = (d + 1) | 0),
                          cn(m, _) | 0)
                        ) {
                          a = 9;
                          break e;
                        }
                        if (((y = (y + 1) | 0), (y | 0) >= (l | 0))) break;
                        d = a;
                      }
                    P = (P + 1) | 0;
                  } while (P >>> 0 < 6);
                  (a = ee),
                    (_ = j),
                    (d = A[a >> 2] | 0),
                    (m = o),
                    (a = A[(a + 4) >> 2] | 0);
                } else (_ = j), (d = j), (m = o), (a = o);
              } else
                (_ = f),
                  (A[_ >> 2] = a),
                  (A[(_ + 4) >> 2] = o),
                  (_ = a),
                  (d = a),
                  (m = o),
                  (a = o);
              a = ((_ | 0) == (d | 0)) & ((m | 0) == (a | 0)) ? 0 : 9;
            }
          while (0);
          return (se = a), (z = Z), se | 0;
        }
        function $m(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          if (
            ((y = z),
            (z = (z + 48) | 0),
            (d = (y + 16) | 0),
            (m = (y + 8) | 0),
            (_ = y),
            l | 0)
          )
            return (_ = 15), (z = y), _ | 0;
          if (
            ((P = a),
            (T = A[(P + 4) >> 2] | 0),
            (l = m),
            (A[l >> 2] = A[P >> 2]),
            (A[(l + 4) >> 2] = T),
            qf(m, d),
            (o = pf(d, o, _) | 0),
            !o)
          ) {
            if (((l = A[m >> 2] | 0), (m = A[(a + 8) >> 2] | 0), (m | 0) > 0)) {
              (d = A[(a + 12) >> 2] | 0), (o = 0);
              do
                (l = ((A[(d + (o << 3)) >> 2] | 0) + l) | 0), (o = (o + 1) | 0);
              while ((o | 0) < (m | 0));
            }
            (o = _),
              (d = A[o >> 2] | 0),
              (o = A[(o + 4) >> 2] | 0),
              (m = (((l | 0) < 0) << 31) >> 31),
              ((o | 0) < (m | 0)) | (((o | 0) == (m | 0)) & (d >>> 0 < l >>> 0))
                ? ((o = _), (A[o >> 2] = l), (A[(o + 4) >> 2] = m), (o = m))
                : (l = d),
              (T = zt(l | 0, o | 0, 12, 0) | 0),
              (P = W() | 0),
              (o = _),
              (A[o >> 2] = T),
              (A[(o + 4) >> 2] = P),
              (o = f),
              (A[o >> 2] = T),
              (A[(o + 4) >> 2] = P),
              (o = 0);
          }
          return (P = o), (z = y), P | 0;
        }
        function uf(a, o, l, f, d, m, _) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (m = m | 0),
            (_ = _ | 0);
          var y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            qt = 0,
            Ct = 0,
            Ut = 0,
            tn = 0,
            bt = 0,
            ln = 0,
            ii = 0,
            jf = 0;
          if (
            ((tn = z),
            (z = (z + 64) | 0),
            (Qt = (tn + 48) | 0),
            (qt = (tn + 32) | 0),
            (Ct = (tn + 24) | 0),
            (Ze = (tn + 8) | 0),
            (st = tn),
            (T = A[a >> 2] | 0),
            (T | 0) <= 0)
          )
            return (Ut = 0), (z = tn), Ut | 0;
          for (
            Ve = (a + 4) | 0,
              Ke = (Qt + 8) | 0,
              Zt = (qt + 8) | 0,
              Xt = (Ze + 8) | 0,
              y = 0,
              _e = 0;
            ;

          ) {
            (P = A[Ve >> 2] | 0),
              (ve = (P + (_e << 4)) | 0),
              (A[Qt >> 2] = A[ve >> 2]),
              (A[(Qt + 4) >> 2] = A[(ve + 4) >> 2]),
              (A[(Qt + 8) >> 2] = A[(ve + 8) >> 2]),
              (A[(Qt + 12) >> 2] = A[(ve + 12) >> 2]),
              (_e | 0) == ((T + -1) | 0)
                ? ((A[qt >> 2] = A[P >> 2]),
                  (A[(qt + 4) >> 2] = A[(P + 4) >> 2]),
                  (A[(qt + 8) >> 2] = A[(P + 8) >> 2]),
                  (A[(qt + 12) >> 2] = A[(P + 12) >> 2]))
                : ((ve = (P + ((_e + 1) << 4)) | 0),
                  (A[qt >> 2] = A[ve >> 2]),
                  (A[(qt + 4) >> 2] = A[(ve + 4) >> 2]),
                  (A[(qt + 8) >> 2] = A[(ve + 8) >> 2]),
                  (A[(qt + 12) >> 2] = A[(ve + 12) >> 2])),
              (T = rg(Qt, qt, f, Ct) | 0);
            e: do
              if (T) (P = 0), (y = T);
              else if (
                ((P = Ct),
                (T = A[P >> 2] | 0),
                (P = A[(P + 4) >> 2] | 0),
                ((P | 0) > 0) | (((P | 0) == 0) & (T >>> 0 > 0)))
              ) {
                (Ee = 0), (ve = 0);
                t: for (;;) {
                  if (
                    ((jf = +V[Qt >> 3]),
                    (we = jn(T | 0, P | 0, Ee | 0, ve | 0) | 0),
                    (ii = +(we >>> 0) + 4294967296 * +(W() | 0)),
                    (bt = +(T >>> 0) + 4294967296 * +(P | 0)),
                    (ln = +(Ee >>> 0) + 4294967296 * +(ve | 0)),
                    (V[Ze >> 3] = (jf * ii) / bt + (+V[qt >> 3] * ln) / bt),
                    (V[Xt >> 3] =
                      (+V[Ke >> 3] * ii) / bt + (+V[Zt >> 3] * ln) / bt),
                    (T = Sf(Ze, f, st) | 0),
                    T | 0)
                  ) {
                    y = T;
                    break;
                  }
                  (we = st),
                    (fe = A[we >> 2] | 0),
                    (we = A[(we + 4) >> 2] | 0),
                    (ee = eo(fe | 0, we | 0, o | 0, l | 0) | 0),
                    (B = W() | 0),
                    (T = (_ + (ee << 3)) | 0),
                    (j = T),
                    (P = A[j >> 2] | 0),
                    (j = A[(j + 4) >> 2] | 0);
                  n: do
                    if (((P | 0) == 0) & ((j | 0) == 0)) (ue = T), (Ut = 16);
                    else
                      for (se = 0, Z = 0; ; ) {
                        if (
                          ((se | 0) > (l | 0)) |
                          (((se | 0) == (l | 0)) & (Z >>> 0 > o >>> 0))
                        ) {
                          y = 1;
                          break t;
                        }
                        if (((P | 0) == (fe | 0)) & ((j | 0) == (we | 0)))
                          break n;
                        if (
                          ((T = zt(ee | 0, B | 0, 1, 0) | 0),
                          (ee = sA(T | 0, W() | 0, o | 0, l | 0) | 0),
                          (B = W() | 0),
                          (Z = zt(Z | 0, se | 0, 1, 0) | 0),
                          (se = W() | 0),
                          (T = (_ + (ee << 3)) | 0),
                          (j = T),
                          (P = A[j >> 2] | 0),
                          (j = A[(j + 4) >> 2] | 0),
                          ((P | 0) == 0) & ((j | 0) == 0))
                        ) {
                          (ue = T), (Ut = 16);
                          break;
                        }
                      }
                  while (0);
                  if (
                    ((Ut | 0) == 16 &&
                      ((Ut = 0), !(((fe | 0) == 0) & ((we | 0) == 0))) &&
                      ((Z = ue),
                      (A[Z >> 2] = fe),
                      (A[(Z + 4) >> 2] = we),
                      (Z = (m + (A[d >> 2] << 3)) | 0),
                      (A[Z >> 2] = fe),
                      (A[(Z + 4) >> 2] = we),
                      (Z = d),
                      (Z = zt(A[Z >> 2] | 0, A[(Z + 4) >> 2] | 0, 1, 0) | 0),
                      (fe = W() | 0),
                      (we = d),
                      (A[we >> 2] = Z),
                      (A[(we + 4) >> 2] = fe)),
                    (Ee = zt(Ee | 0, ve | 0, 1, 0) | 0),
                    (ve = W() | 0),
                    (P = Ct),
                    (T = A[P >> 2] | 0),
                    (P = A[(P + 4) >> 2] | 0),
                    !(
                      ((P | 0) > (ve | 0)) |
                      (((P | 0) == (ve | 0)) & (T >>> 0 > Ee >>> 0))
                    ))
                  ) {
                    P = 1;
                    break e;
                  }
                }
                P = 0;
              } else P = 1;
            while (0);
            if (((_e = (_e + 1) | 0), !P)) {
              Ut = 21;
              break;
            }
            if (((T = A[a >> 2] | 0), (_e | 0) >= (T | 0))) {
              (y = 0), (Ut = 21);
              break;
            }
          }
          return (Ut | 0) == 21 ? ((z = tn), y | 0) : 0;
        }
        function Ym(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            qt = 0,
            Ct = 0,
            Ut = 0,
            tn = 0,
            bt = 0,
            ln = 0,
            ii = 0;
          if (
            ((ii = z),
            (z = (z + 112) | 0),
            (Ut = (ii + 80) | 0),
            (T = (ii + 72) | 0),
            (tn = ii),
            (bt = (ii + 56) | 0),
            l | 0)
          )
            return (ln = 15), (z = ii), ln | 0;
          if (
            ((P = (a + 8) | 0), (ln = Ar(((A[P >> 2] << 5) + 32) | 0) | 0), !ln)
          )
            return (ln = 13), (z = ii), ln | 0;
          if (
            (o3(a, ln),
            (qt = a),
            (Ct = A[(qt + 4) >> 2] | 0),
            (l = T),
            (A[l >> 2] = A[qt >> 2]),
            (A[(l + 4) >> 2] = Ct),
            qf(T, Ut),
            (l = pf(Ut, o, tn) | 0),
            l)
          )
            (qt = 0), (Ct = 0);
          else {
            if (((l = A[T >> 2] | 0), (m = A[P >> 2] | 0), (m | 0) > 0)) {
              (_ = A[(a + 12) >> 2] | 0), (d = 0);
              do
                (l = ((A[(_ + (d << 3)) >> 2] | 0) + l) | 0), (d = (d + 1) | 0);
              while ((d | 0) != (m | 0));
              d = l;
            } else d = l;
            (l = tn),
              (m = A[l >> 2] | 0),
              (l = A[(l + 4) >> 2] | 0),
              (_ = (((d | 0) < 0) << 31) >> 31),
              ((l | 0) < (_ | 0)) | (((l | 0) == (_ | 0)) & (m >>> 0 < d >>> 0))
                ? ((l = tn), (A[l >> 2] = d), (A[(l + 4) >> 2] = _), (l = _))
                : (d = m),
              (qt = zt(d | 0, l | 0, 12, 0) | 0),
              (Ct = W() | 0),
              (l = tn),
              (A[l >> 2] = qt),
              (A[(l + 4) >> 2] = Ct),
              (l = 0);
          }
          if (l | 0) return yt(ln), (ln = l), (z = ii), ln | 0;
          if (((d = lr(qt, 8) | 0), !d))
            return yt(ln), (ln = 13), (z = ii), ln | 0;
          if (((y = lr(qt, 8) | 0), !y))
            return yt(ln), yt(d), (ln = 13), (z = ii), ln | 0;
          (Xt = Ut),
            (A[Xt >> 2] = 0),
            (A[(Xt + 4) >> 2] = 0),
            (Xt = a),
            (Qt = A[(Xt + 4) >> 2] | 0),
            (l = T),
            (A[l >> 2] = A[Xt >> 2]),
            (A[(l + 4) >> 2] = Qt),
            (l = uf(T, qt, Ct, o, Ut, d, y) | 0);
          e: do
            if (l) yt(d), yt(y), yt(ln);
            else {
              t: do
                if ((A[P >> 2] | 0) > 0) {
                  for (
                    _ = (a + 12) | 0, m = 0;
                    (l =
                      uf(
                        ((A[_ >> 2] | 0) + (m << 3)) | 0,
                        qt,
                        Ct,
                        o,
                        Ut,
                        d,
                        y
                      ) | 0),
                      (m = (m + 1) | 0),
                      !(l | 0);

                  )
                    if ((m | 0) >= (A[P >> 2] | 0)) break t;
                  yt(d), yt(y), yt(ln);
                  break e;
                }
              while (0);
              ((Ct | 0) > 0) | (((Ct | 0) == 0) & (qt >>> 0 > 0)) &&
                Ms(y | 0, 0, (qt << 3) | 0) | 0,
                (Qt = Ut),
                (Xt = A[(Qt + 4) >> 2] | 0);
              t: do
                if (
                  ((Xt | 0) > 0) |
                  (((Xt | 0) == 0) & ((A[Qt >> 2] | 0) >>> 0 > 0))
                ) {
                  (Ve = d),
                    (Ke = y),
                    (Zt = d),
                    (Xt = y),
                    (Qt = d),
                    (l = d),
                    (ue = d),
                    (Ze = y),
                    (st = y),
                    (d = y);
                  n: for (;;) {
                    for (we = 0, Ee = 0, ve = 0, _e = 0, m = 0, _ = 0; ; ) {
                      (y = tn), (T = (y + 56) | 0);
                      do (A[y >> 2] = 0), (y = (y + 4) | 0);
                      while ((y | 0) < (T | 0));
                      if (
                        ((o = (Ve + (we << 3)) | 0),
                        (P = A[o >> 2] | 0),
                        (o = A[(o + 4) >> 2] | 0),
                        lf(P, o, 1, tn, 0) | 0)
                      ) {
                        (y = tn), (T = (y + 56) | 0);
                        do (A[y >> 2] = 0), (y = (y + 4) | 0);
                        while ((y | 0) < (T | 0));
                        (y = lr(7, 4) | 0),
                          y | 0 && (Mr(P, o, 1, tn, y, 7, 0, 0) | 0, yt(y));
                      }
                      for (fe = 0; ; ) {
                        (Z = (tn + (fe << 3)) | 0),
                          (se = A[Z >> 2] | 0),
                          (Z = A[(Z + 4) >> 2] | 0);
                        i: do
                          if (((se | 0) == 0) & ((Z | 0) == 0))
                            (y = m), (T = _);
                          else {
                            if (
                              ((B = eo(se | 0, Z | 0, qt | 0, Ct | 0) | 0),
                              (P = W() | 0),
                              (y = (f + (B << 3)) | 0),
                              (o = y),
                              (T = A[o >> 2] | 0),
                              (o = A[(o + 4) >> 2] | 0),
                              !(((T | 0) == 0) & ((o | 0) == 0)))
                            ) {
                              (j = 0), (ee = 0);
                              do {
                                if (
                                  ((j | 0) > (Ct | 0)) |
                                  (((j | 0) == (Ct | 0)) &
                                    (ee >>> 0 > qt >>> 0))
                                )
                                  break n;
                                if (
                                  ((T | 0) == (se | 0)) &
                                  ((o | 0) == (Z | 0))
                                ) {
                                  (y = m), (T = _);
                                  break i;
                                }
                                (y = zt(B | 0, P | 0, 1, 0) | 0),
                                  (B = sA(y | 0, W() | 0, qt | 0, Ct | 0) | 0),
                                  (P = W() | 0),
                                  (ee = zt(ee | 0, j | 0, 1, 0) | 0),
                                  (j = W() | 0),
                                  (y = (f + (B << 3)) | 0),
                                  (o = y),
                                  (T = A[o >> 2] | 0),
                                  (o = A[(o + 4) >> 2] | 0);
                              } while (!(((T | 0) == 0) & ((o | 0) == 0)));
                            }
                            ((se | 0) == 0) & ((Z | 0) == 0)
                              ? ((y = m), (T = _))
                              : (na(se, Z, bt) | 0,
                                a3(a, ln, bt) | 0 &&
                                  ((ee = zt(m | 0, _ | 0, 1, 0) | 0),
                                  (_ = W() | 0),
                                  (j = y),
                                  (A[j >> 2] = se),
                                  (A[(j + 4) >> 2] = Z),
                                  (m = (Ke + (m << 3)) | 0),
                                  (A[m >> 2] = se),
                                  (A[(m + 4) >> 2] = Z),
                                  (m = ee)),
                                (y = m),
                                (T = _));
                          }
                        while (0);
                        if (((fe = (fe + 1) | 0), fe >>> 0 >= 7)) break;
                        (m = y), (_ = T);
                      }
                      if (
                        ((we = zt(we | 0, Ee | 0, 1, 0) | 0),
                        (Ee = W() | 0),
                        (ve = zt(ve | 0, _e | 0, 1, 0) | 0),
                        (_e = W() | 0),
                        (_ = Ut),
                        (m = A[_ >> 2] | 0),
                        (_ = A[(_ + 4) >> 2] | 0),
                        ((_e | 0) < (_ | 0)) |
                          (((_e | 0) == (_ | 0)) & (ve >>> 0 < m >>> 0)))
                      )
                        (m = y), (_ = T);
                      else break;
                    }
                    if (((_ | 0) > 0) | (((_ | 0) == 0) & (m >>> 0 > 0))) {
                      (m = 0), (_ = 0);
                      do
                        (_e = (Ve + (m << 3)) | 0),
                          (A[_e >> 2] = 0),
                          (A[(_e + 4) >> 2] = 0),
                          (m = zt(m | 0, _ | 0, 1, 0) | 0),
                          (_ = W() | 0),
                          (_e = Ut),
                          (ve = A[(_e + 4) >> 2] | 0);
                      while (
                        ((_ | 0) < (ve | 0)) |
                        ((_ | 0) == (ve | 0)
                          ? m >>> 0 < (A[_e >> 2] | 0) >>> 0
                          : 0)
                      );
                    }
                    if (
                      ((_e = Ut),
                      (A[_e >> 2] = y),
                      (A[(_e + 4) >> 2] = T),
                      ((T | 0) > 0) | (((T | 0) == 0) & (y >>> 0 > 0)))
                    )
                      (fe = d),
                        (we = st),
                        (Ee = Qt),
                        (ve = Ze),
                        (_e = Ke),
                        (d = ue),
                        (st = l),
                        (Ze = Zt),
                        (ue = fe),
                        (l = we),
                        (Qt = Xt),
                        (Xt = Ee),
                        (Zt = ve),
                        (Ke = Ve),
                        (Ve = _e);
                    else break t;
                  }
                  yt(Zt), yt(Xt), yt(ln), (l = 1);
                  break e;
                } else l = y;
              while (0);
              yt(ln), yt(d), yt(l), (l = 0);
            }
          while (0);
          return (ln = l), (z = ii), ln | 0;
        }
        function Zm(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (((B = z), (z = (z + 176) | 0), (T = B), (o | 0) < 1))
            return Nf(l, 0, 0), (P = 0), (z = B), P | 0;
          for (
            y = a,
              y = De(A[y >> 2] | 0, A[(y + 4) >> 2] | 0, 52) | 0,
              W() | 0,
              Nf(l, (o | 0) > 6 ? o : 6, y & 15),
              y = 0;
            (f = (a + (y << 3)) | 0),
              (f = ia(A[f >> 2] | 0, A[(f + 4) >> 2] | 0, T) | 0),
              !(f | 0);

          ) {
            if (((f = A[T >> 2] | 0), (f | 0) > 0)) {
              _ = 0;
              do
                (m = (T + 8 + (_ << 4)) | 0),
                  (_ = (_ + 1) | 0),
                  (f = (T + 8 + (((_ | 0) % (f | 0) | 0) << 4)) | 0),
                  (d = M3(l, f, m) | 0),
                  d ? zf(l, d) | 0 : b3(l, m, f) | 0,
                  (f = A[T >> 2] | 0);
              while ((_ | 0) < (f | 0));
            }
            if (((y = (y + 1) | 0), (y | 0) >= (o | 0))) {
              (f = 0), (P = 13);
              break;
            }
          }
          return (P | 0) == 13
            ? ((z = B), f | 0)
            : (Ff(l), (P = f), (z = B), P | 0);
        }
        function Km(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          if (
            ((m = z),
            (z = (z + 32) | 0),
            (f = m),
            (d = (m + 16) | 0),
            (a = Zm(a, o, d) | 0),
            a | 0)
          )
            return (l = a), (z = m), l | 0;
          if (
            ((A[l >> 2] = 0),
            (A[(l + 4) >> 2] = 0),
            (A[(l + 8) >> 2] = 0),
            (a = kf(d) | 0),
            a | 0)
          )
            do {
              o = Kg(l) | 0;
              do
                Jg(o, a) | 0,
                  (_ = (a + 16) | 0),
                  (A[f >> 2] = A[_ >> 2]),
                  (A[(f + 4) >> 2] = A[(_ + 4) >> 2]),
                  (A[(f + 8) >> 2] = A[(_ + 8) >> 2]),
                  (A[(f + 12) >> 2] = A[(_ + 12) >> 2]),
                  zf(d, a) | 0,
                  (a = E3(d, f) | 0);
              while (a | 0);
              a = kf(d) | 0;
            } while (a | 0);
          return (
            Ff(d),
            (a = e3(l) | 0),
            a ? (Lf(l), (_ = a), (z = m), _ | 0) : ((_ = 0), (z = m), _ | 0)
          );
        }
        function un(a) {
          return (
            (a = a | 0),
            a >>> 0 > 121
              ? ((a = 0), a | 0)
              : ((a = A[(7696 + ((a * 28) | 0) + 16) >> 2] | 0), a | 0)
          );
        }
        function u0(a) {
          return (a = a | 0), ((a | 0) == 4) | ((a | 0) == 117) | 0;
        }
        function cf(a) {
          return (
            (a = a | 0),
            A[
              (11120 +
                (((A[a >> 2] | 0) * 216) | 0) +
                (((A[(a + 4) >> 2] | 0) * 72) | 0) +
                (((A[(a + 8) >> 2] | 0) * 24) | 0) +
                (A[(a + 12) >> 2] << 3)) >>
                2
            ] | 0
          );
        }
        function Jm(a) {
          return (
            (a = a | 0),
            A[
              (11120 +
                (((A[a >> 2] | 0) * 216) | 0) +
                (((A[(a + 4) >> 2] | 0) * 72) | 0) +
                (((A[(a + 8) >> 2] | 0) * 24) | 0) +
                (A[(a + 12) >> 2] << 3) +
                4) >>
                2
            ] | 0
          );
        }
        function eg(a, o) {
          (a = a | 0),
            (o = o | 0),
            (a = (7696 + ((a * 28) | 0)) | 0),
            (A[o >> 2] = A[a >> 2]),
            (A[(o + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(o + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(o + 12) >> 2] = A[(a + 12) >> 2]);
        }
        function tg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          if (o >>> 0 > 20) return (o = -1), o | 0;
          do
            if ((A[(11120 + ((o * 216) | 0)) >> 2] | 0) != (a | 0))
              if ((A[(11120 + ((o * 216) | 0) + 8) >> 2] | 0) != (a | 0))
                if ((A[(11120 + ((o * 216) | 0) + 16) >> 2] | 0) != (a | 0))
                  if ((A[(11120 + ((o * 216) | 0) + 24) >> 2] | 0) != (a | 0))
                    if ((A[(11120 + ((o * 216) | 0) + 32) >> 2] | 0) != (a | 0))
                      if (
                        (A[(11120 + ((o * 216) | 0) + 40) >> 2] | 0) !=
                        (a | 0)
                      )
                        if (
                          (A[(11120 + ((o * 216) | 0) + 48) >> 2] | 0) !=
                          (a | 0)
                        )
                          if (
                            (A[(11120 + ((o * 216) | 0) + 56) >> 2] | 0) !=
                            (a | 0)
                          )
                            if (
                              (A[(11120 + ((o * 216) | 0) + 64) >> 2] | 0) !=
                              (a | 0)
                            )
                              if (
                                (A[(11120 + ((o * 216) | 0) + 72) >> 2] | 0) !=
                                (a | 0)
                              )
                                if (
                                  (A[(11120 + ((o * 216) | 0) + 80) >> 2] |
                                    0) !=
                                  (a | 0)
                                )
                                  if (
                                    (A[(11120 + ((o * 216) | 0) + 88) >> 2] |
                                      0) !=
                                    (a | 0)
                                  )
                                    if (
                                      (A[(11120 + ((o * 216) | 0) + 96) >> 2] |
                                        0) !=
                                      (a | 0)
                                    )
                                      if (
                                        (A[
                                          (11120 + ((o * 216) | 0) + 104) >> 2
                                        ] |
                                          0) !=
                                        (a | 0)
                                      )
                                        if (
                                          (A[
                                            (11120 + ((o * 216) | 0) + 112) >> 2
                                          ] |
                                            0) !=
                                          (a | 0)
                                        )
                                          if (
                                            (A[
                                              (11120 + ((o * 216) | 0) + 120) >>
                                                2
                                            ] |
                                              0) !=
                                            (a | 0)
                                          )
                                            if (
                                              (A[
                                                (11120 +
                                                  ((o * 216) | 0) +
                                                  128) >>
                                                  2
                                              ] |
                                                0) !=
                                              (a | 0)
                                            )
                                              if (
                                                (A[
                                                  (11120 +
                                                    ((o * 216) | 0) +
                                                    136) >>
                                                    2
                                                ] |
                                                  0) ==
                                                (a | 0)
                                              )
                                                (a = 2), (l = 1), (f = 2);
                                              else {
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      144) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      152) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      160) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 0), (l = 2), (f = 2);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      168) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      176) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      184) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 1), (l = 2), (f = 2);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      192) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 0);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      200) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 1);
                                                  break;
                                                }
                                                if (
                                                  (A[
                                                    (11120 +
                                                      ((o * 216) | 0) +
                                                      208) >>
                                                      2
                                                  ] |
                                                    0) ==
                                                  (a | 0)
                                                ) {
                                                  (a = 2), (l = 2), (f = 2);
                                                  break;
                                                } else a = -1;
                                                return a | 0;
                                              }
                                            else (a = 2), (l = 1), (f = 1);
                                          else (a = 2), (l = 1), (f = 0);
                                        else (a = 1), (l = 1), (f = 2);
                                      else (a = 1), (l = 1), (f = 1);
                                    else (a = 1), (l = 1), (f = 0);
                                  else (a = 0), (l = 1), (f = 2);
                                else (a = 0), (l = 1), (f = 1);
                              else (a = 0), (l = 1), (f = 0);
                            else (a = 2), (l = 0), (f = 2);
                          else (a = 2), (l = 0), (f = 1);
                        else (a = 2), (l = 0), (f = 0);
                      else (a = 1), (l = 0), (f = 2);
                    else (a = 1), (l = 0), (f = 1);
                  else (a = 1), (l = 0), (f = 0);
                else (a = 0), (l = 0), (f = 2);
              else (a = 0), (l = 0), (f = 1);
            else (a = 0), (l = 0), (f = 0);
          while (0);
          return (
            (o =
              A[
                (11120 +
                  ((o * 216) | 0) +
                  ((l * 72) | 0) +
                  ((a * 24) | 0) +
                  (f << 3) +
                  4) >>
                  2
              ] | 0),
            o | 0
          );
        }
        function ff(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (A[(7696 + ((a * 28) | 0) + 20) >> 2] | 0) == (o | 0)
              ? ((o = 1), o | 0)
              : ((o = (A[(7696 + ((a * 28) | 0) + 24) >> 2] | 0) == (o | 0)),
                o | 0)
          );
        }
        function c0(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            A[(848 + ((a * 28) | 0) + (o << 2)) >> 2] | 0
          );
        }
        function f0(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (A[(848 + ((a * 28) | 0)) >> 2] | 0) == (o | 0)
              ? ((o = 0), o | 0)
              : (A[(848 + ((a * 28) | 0) + 4) >> 2] | 0) == (o | 0)
              ? ((o = 1), o | 0)
              : (A[(848 + ((a * 28) | 0) + 8) >> 2] | 0) == (o | 0)
              ? ((o = 2), o | 0)
              : (A[(848 + ((a * 28) | 0) + 12) >> 2] | 0) == (o | 0)
              ? ((o = 3), o | 0)
              : (A[(848 + ((a * 28) | 0) + 16) >> 2] | 0) == (o | 0)
              ? ((o = 4), o | 0)
              : (A[(848 + ((a * 28) | 0) + 20) >> 2] | 0) == (o | 0)
              ? ((o = 5), o | 0)
              : ((A[(848 + ((a * 28) | 0) + 24) >> 2] | 0) == (o | 0) ? 6 : 7) |
                0
          );
        }
        function ng() {
          return 122;
        }
        function ig(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          o = 0;
          do
            je(o | 0, 0, 45) | 0,
              (f = W() | 0 | 134225919),
              (l = (a + (o << 3)) | 0),
              (A[l >> 2] = -1),
              (A[(l + 4) >> 2] = f),
              (o = (o + 1) | 0);
          while ((o | 0) != 122);
          return 0;
        }
        function hf(a) {
          return (a = a | 0), (+V[(a + 16) >> 3] < +V[(a + 24) >> 3]) | 0;
        }
        function df(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          return (
            (l = +V[o >> 3]),
            !(l >= +V[(a + 8) >> 3]) || !(l <= +V[a >> 3])
              ? ((o = 0), o | 0)
              : ((f = +V[(a + 16) >> 3]),
                (l = +V[(a + 24) >> 3]),
                (d = +V[(o + 8) >> 3]),
                (o = d >= l),
                (a = (d <= f) & 1),
                f < l ? o && (a = 1) : o || (a = 0),
                (o = (a | 0) != 0),
                o | 0)
          );
        }
        function pf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0;
          (Z = z),
            (z = (z + 288) | 0),
            (B = (Z + 264) | 0),
            (j = (Z + 96) | 0),
            (P = Z),
            (y = P),
            (T = (y + 96) | 0);
          do (A[y >> 2] = 0), (y = (y + 4) | 0);
          while ((y | 0) < (T | 0));
          return (
            (o = b0(o, P) | 0),
            o | 0
              ? ((se = o), (z = Z), se | 0)
              : ((T = P),
                (P = A[T >> 2] | 0),
                (T = A[(T + 4) >> 2] | 0),
                na(P, T, B) | 0,
                ia(P, T, j) | 0,
                (_ = +sa(B, (j + 8) | 0)),
                (V[B >> 3] = +V[a >> 3]),
                (T = (B + 8) | 0),
                (V[T >> 3] = +V[(a + 16) >> 3]),
                (V[j >> 3] = +V[(a + 8) >> 3]),
                (P = (j + 8) | 0),
                (V[P >> 3] = +V[(a + 24) >> 3]),
                (d = +sa(B, j)),
                (we = +V[T >> 3] - +V[P >> 3]),
                (m = +Ae(+we)),
                (fe = +V[B >> 3] - +V[j >> 3]),
                (f = +Ae(+fe)),
                !((we == 0) | (fe == 0)) &&
                ((we = +Vf(+m, +f)),
                (we = +sn(
                  +(
                    (d * d) /
                    +S0(+(we / +S0(+m, +f)), 3) /
                    (_ * (_ * 2.59807621135) * 0.8)
                  )
                )),
                (V[X >> 3] = we),
                (ee = ~~we >>> 0),
                (se =
                  +Ae(we) >= 1
                    ? we > 0
                      ? ~~+bi(+ye(we / 4294967296), 4294967295) >>> 0
                      : ~~+sn((we - +(~~we >>> 0)) / 4294967296) >>> 0
                    : 0),
                ((A[(X + 4) >> 2] & 2146435072) | 0) != 2146435072)
                  ? ((j = ((ee | 0) == 0) & ((se | 0) == 0)),
                    (o = l),
                    (A[o >> 2] = j ? 1 : ee),
                    (A[(o + 4) >> 2] = j ? 0 : se),
                    (o = 0))
                  : (o = 1),
                (se = o),
                (z = Z),
                se | 0)
          );
        }
        function rg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          (P = z),
            (z = (z + 288) | 0),
            (_ = (P + 264) | 0),
            (y = (P + 96) | 0),
            (T = P),
            (d = T),
            (m = (d + 96) | 0);
          do (A[d >> 2] = 0), (d = (d + 4) | 0);
          while ((d | 0) < (m | 0));
          return (
            (l = b0(l, T) | 0),
            l | 0
              ? ((f = l), (z = P), f | 0)
              : ((l = T),
                (d = A[l >> 2] | 0),
                (l = A[(l + 4) >> 2] | 0),
                na(d, l, _) | 0,
                ia(d, l, y) | 0,
                (B = +sa(_, (y + 8) | 0)),
                (B = +sn(+(+sa(a, o) / (B * 2)))),
                (V[X >> 3] = B),
                (l = ~~B >>> 0),
                (d =
                  +Ae(B) >= 1
                    ? B > 0
                      ? ~~+bi(+ye(B / 4294967296), 4294967295) >>> 0
                      : ~~+sn((B - +(~~B >>> 0)) / 4294967296) >>> 0
                    : 0),
                ((A[(X + 4) >> 2] & 2146435072) | 0) == 2146435072
                  ? ((f = 1), (z = P), f | 0)
                  : ((T = ((l | 0) == 0) & ((d | 0) == 0)),
                    (A[f >> 2] = T ? 1 : l),
                    (A[(f + 4) >> 2] = T ? 0 : d),
                    (f = 0),
                    (z = P),
                    f | 0))
          );
        }
        function sg(a, o, l, f) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (A[a >> 2] = o),
            (A[(a + 4) >> 2] = l),
            (A[(a + 8) >> 2] = f);
        }
        function og(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0;
          (j = (o + 8) | 0),
            (A[j >> 2] = 0),
            (T = +V[a >> 3]),
            (_ = +Ae(+T)),
            (P = +V[(a + 8) >> 3]),
            (y = +Ae(+P) / 0.8660254037844386),
            (_ = _ + y * 0.5),
            (l = ~~_),
            (a = ~~y),
            (_ = _ - +(l | 0)),
            (y = y - +(a | 0));
          do
            if (_ < 0.5)
              if (_ < 0.3333333333333333)
                if (((A[o >> 2] = l), y < (_ + 1) * 0.5)) {
                  A[(o + 4) >> 2] = a;
                  break;
                } else {
                  (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
                  break;
                }
              else if (
                ((ee = 1 - _),
                (a = ((!(y < ee) & 1) + a) | 0),
                (A[(o + 4) >> 2] = a),
                (ee <= y) & (y < _ * 2))
              ) {
                (l = (l + 1) | 0), (A[o >> 2] = l);
                break;
              } else {
                A[o >> 2] = l;
                break;
              }
            else {
              if (!(_ < 0.6666666666666666))
                if (((l = (l + 1) | 0), (A[o >> 2] = l), y < _ * 0.5)) {
                  A[(o + 4) >> 2] = a;
                  break;
                } else {
                  (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
                  break;
                }
              if (y < 1 - _) {
                if (((A[(o + 4) >> 2] = a), _ * 2 + -1 < y)) {
                  A[o >> 2] = l;
                  break;
                }
              } else (a = (a + 1) | 0), (A[(o + 4) >> 2] = a);
              (l = (l + 1) | 0), (A[o >> 2] = l);
            }
          while (0);
          do
            if (T < 0)
              if (a & 1) {
                (B = (((a + 1) | 0) / 2) | 0),
                  (B =
                    jn(
                      l | 0,
                      ((((l | 0) < 0) << 31) >> 31) | 0,
                      B | 0,
                      ((((B | 0) < 0) << 31) >> 31) | 0
                    ) | 0),
                  (l = ~~(
                    +(l | 0) -
                    ((+(B >>> 0) + 4294967296 * +(W() | 0)) * 2 + 1)
                  )),
                  (A[o >> 2] = l);
                break;
              } else {
                (B = ((a | 0) / 2) | 0),
                  (B =
                    jn(
                      l | 0,
                      ((((l | 0) < 0) << 31) >> 31) | 0,
                      B | 0,
                      ((((B | 0) < 0) << 31) >> 31) | 0
                    ) | 0),
                  (l = ~~(
                    +(l | 0) -
                    (+(B >>> 0) + 4294967296 * +(W() | 0)) * 2
                  )),
                  (A[o >> 2] = l);
                break;
              }
          while (0);
          (B = (o + 4) | 0),
            P < 0 &&
              ((l = (l - ((((a << 1) | 1 | 0) / 2) | 0)) | 0),
              (A[o >> 2] = l),
              (a = (0 - a) | 0),
              (A[B >> 2] = a)),
            (f = (a - l) | 0),
            (l | 0) < 0
              ? ((d = (0 - l) | 0),
                (A[B >> 2] = f),
                (A[j >> 2] = d),
                (A[o >> 2] = 0),
                (a = f),
                (l = 0))
              : (d = 0),
            (a | 0) < 0 &&
              ((l = (l - a) | 0),
              (A[o >> 2] = l),
              (d = (d - a) | 0),
              (A[j >> 2] = d),
              (A[B >> 2] = 0),
              (a = 0)),
            (m = (l - d) | 0),
            (f = (a - d) | 0),
            (d | 0) < 0 &&
              ((A[o >> 2] = m),
              (A[B >> 2] = f),
              (A[j >> 2] = 0),
              (a = f),
              (l = m),
              (d = 0)),
            (f = (a | 0) < (l | 0) ? a : l),
            (f = (d | 0) < (f | 0) ? d : f),
            !((f | 0) <= 0) &&
              ((A[o >> 2] = l - f), (A[B >> 2] = a - f), (A[j >> 2] = d - f));
        }
        function Wn(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0;
          (o = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (l = A[_ >> 2] | 0),
            (o | 0) < 0 &&
              ((l = (l - o) | 0),
              (A[_ >> 2] = l),
              (m = (a + 8) | 0),
              (A[m >> 2] = (A[m >> 2] | 0) - o),
              (A[a >> 2] = 0),
              (o = 0)),
            (l | 0) < 0
              ? ((o = (o - l) | 0),
                (A[a >> 2] = o),
                (m = (a + 8) | 0),
                (d = ((A[m >> 2] | 0) - l) | 0),
                (A[m >> 2] = d),
                (A[_ >> 2] = 0),
                (l = 0))
              : ((d = (a + 8) | 0), (m = d), (d = A[d >> 2] | 0)),
            (d | 0) < 0 &&
              ((o = (o - d) | 0),
              (A[a >> 2] = o),
              (l = (l - d) | 0),
              (A[_ >> 2] = l),
              (A[m >> 2] = 0),
              (d = 0)),
            (f = (l | 0) < (o | 0) ? l : o),
            (f = (d | 0) < (f | 0) ? d : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = o - f), (A[_ >> 2] = l - f), (A[m >> 2] = d - f));
        }
        function vs(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          (f = A[(a + 8) >> 2] | 0),
            (l = +(((A[(a + 4) >> 2] | 0) - f) | 0)),
            (V[o >> 3] = +(((A[a >> 2] | 0) - f) | 0) - l * 0.5),
            (V[(o + 8) >> 3] = l * 0.8660254037844386);
        }
        function ni(a, o, l) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (A[l >> 2] = (A[o >> 2] | 0) + (A[a >> 2] | 0)),
            (A[(l + 4) >> 2] = (A[(o + 4) >> 2] | 0) + (A[(a + 4) >> 2] | 0)),
            (A[(l + 8) >> 2] = (A[(o + 8) >> 2] | 0) + (A[(a + 8) >> 2] | 0));
        }
        function h0(a, o, l) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (A[l >> 2] = (A[a >> 2] | 0) - (A[o >> 2] | 0)),
            (A[(l + 4) >> 2] = (A[(a + 4) >> 2] | 0) - (A[(o + 4) >> 2] | 0)),
            (A[(l + 8) >> 2] = (A[(a + 8) >> 2] | 0) - (A[(o + 8) >> 2] | 0));
        }
        function mf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          (l = gn(A[a >> 2] | 0, o) | 0),
            (A[a >> 2] = l),
            (l = (a + 4) | 0),
            (f = gn(A[l >> 2] | 0, o) | 0),
            (A[l >> 2] = f),
            (a = (a + 8) | 0),
            (o = gn(A[a >> 2] | 0, o) | 0),
            (A[a >> 2] = o);
        }
        function eA(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (_ = A[a >> 2] | 0),
            (y = (_ | 0) < 0),
            (f = ((A[(a + 4) >> 2] | 0) - (y ? _ : 0)) | 0),
            (m = (f | 0) < 0),
            (d =
              ((m ? (0 - f) | 0 : 0) + ((A[(a + 8) >> 2] | 0) - (y ? _ : 0))) |
              0),
            (l = (d | 0) < 0),
            (a = l ? 0 : d),
            (o = ((m ? 0 : f) - (l ? d : 0)) | 0),
            (d = ((y ? 0 : _) - (m ? f : 0) - (l ? d : 0)) | 0),
            (l = (o | 0) < (d | 0) ? o : d),
            (l = (a | 0) < (l | 0) ? a : l),
            (f = (l | 0) > 0),
            (a = (a - (f ? l : 0)) | 0),
            (o = (o - (f ? l : 0)) | 0);
          e: do
            switch ((d - (f ? l : 0)) | 0) {
              case 0:
                switch (o | 0) {
                  case 0:
                    return (y = a | 0 ? ((a | 0) == 1 ? 1 : 7) : 0), y | 0;
                  case 1:
                    return (y = a | 0 ? ((a | 0) == 1 ? 3 : 7) : 2), y | 0;
                  default:
                    break e;
                }
              case 1:
                switch (o | 0) {
                  case 0:
                    return (y = a | 0 ? ((a | 0) == 1 ? 5 : 7) : 4), y | 0;
                  case 1: {
                    if (!a) a = 6;
                    else break e;
                    return a | 0;
                  }
                  default:
                    break e;
                }
            }
          while (0);
          return (y = 7), y | 0;
        }
        function ag(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (_ = (a + 8) | 0),
            (d = A[_ >> 2] | 0),
            (m = ((A[a >> 2] | 0) - d) | 0),
            (y = (a + 4) | 0),
            (d = ((A[y >> 2] | 0) - d) | 0);
          do
            if ((m >>> 0 > 715827881) | (d >>> 0 > 715827881)) {
              if (((l = (m | 0) > 0), l)) {
                if (
                  ((2147483647 - m) | 0) < (m | 0) ||
                  ((2147483647 - (m << 1)) | 0) < (m | 0)
                )
                  return (y = 1), y | 0;
              } else if (
                ((-2147483648 - m) | 0) > (m | 0) ||
                ((-2147483648 - (m << 1)) | 0) > (m | 0)
              )
                return (y = 1), y | 0;
              if (((o = (m * 3) | 0), (d | 0) > 0)) {
                if (((2147483647 - d) | 0) < (d | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - d) | 0) > (d | 0))
                return (y = 1), y | 0;
              if (((f = d << 1), (m | 0) > -1)) {
                if ((o | -2147483648 | 0) >= (d | 0)) return (y = 1), y | 0;
              } else if (((o ^ -2147483648) | 0) < (d | 0))
                return (y = 1), y | 0;
              if (l) {
                if (((2147483647 - m) | 0) < (f | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              } else {
                if (((-2147483648 - m) | 0) > (f | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              }
            } else (l = d << 1), (o = (m * 3) | 0);
          while (0);
          (f = jr(+((o - d) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (d = jr(+((l + m) | 0) / 7) | 0),
            (A[y >> 2] = d),
            (A[_ >> 2] = 0),
            (l = (d | 0) < (f | 0)),
            (o = l ? f : d),
            (l = l ? d : f);
          do
            if ((l | 0) < 0) {
              if ((o | 0) > 0) {
                if (
                  ((o | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - o) | 0) >= (l | 0)))
                )
                  break;
                ht(23313, 22444, 355, 22455);
              }
              if (
                (((l | 0) == -2147483648) |
                  (((-2147483648 - o) | 0) > (l | 0)) &&
                  ht(23313, 22444, 355, 22455),
                (o | 0) > -1)
              ) {
                if ((o | -2147483648 | 0) < (l | 0)) break;
                ht(23313, 22444, 355, 22455);
              } else {
                if (((o ^ -2147483648) | 0) >= (l | 0)) break;
                ht(23313, 22444, 355, 22455);
              }
            }
          while (0);
          return (
            (o = (d - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[y >> 2] = o),
                (A[_ >> 2] = l),
                (A[a >> 2] = 0),
                (f = 0))
              : ((o = d), (l = 0)),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[_ >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (d = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = d),
                (A[_ >> 2] = 0),
                (o = d),
                (d = m),
                (l = 0))
              : (d = f),
            (f = (o | 0) < (d | 0) ? o : d),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((y = 0), y | 0)
              : ((A[a >> 2] = d - f),
                (A[y >> 2] = o - f),
                (A[_ >> 2] = l - f),
                (y = 0),
                y | 0)
          );
        }
        function Ag(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (_ = (a + 8) | 0),
            (d = A[_ >> 2] | 0),
            (m = ((A[a >> 2] | 0) - d) | 0),
            (y = (a + 4) | 0),
            (d = ((A[y >> 2] | 0) - d) | 0);
          do
            if ((m >>> 0 > 715827881) | (d >>> 0 > 715827881)) {
              if (((l = (m | 0) > 0), l)) {
                if (((2147483647 - m) | 0) < (m | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - m) | 0) > (m | 0))
                return (y = 1), y | 0;
              if (((o = m << 1), (d | 0) > 0)) {
                if (
                  ((2147483647 - d) | 0) < (d | 0) ||
                  ((2147483647 - (d << 1)) | 0) < (d | 0)
                )
                  return (y = 1), y | 0;
              } else if (
                ((-2147483648 - d) | 0) > (d | 0) ||
                ((-2147483648 - (d << 1)) | 0) > (d | 0)
              )
                return (y = 1), y | 0;
              if (((f = (d * 3) | 0), l)) {
                if (((2147483647 - o) | 0) < (d | 0)) return (y = 1), y | 0;
              } else if (((-2147483648 - o) | 0) > (d | 0))
                return (y = 1), y | 0;
              if ((d | 0) > -1) {
                if ((f | -2147483648 | 0) < (m | 0)) {
                  l = f;
                  break;
                } else o = 1;
                return o | 0;
              } else {
                if (((f ^ -2147483648) | 0) < (m | 0)) o = 1;
                else {
                  l = f;
                  break;
                }
                return o | 0;
              }
            } else (l = (d * 3) | 0), (o = m << 1);
          while (0);
          (f = jr(+((o + d) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (d = jr(+((l - m) | 0) / 7) | 0),
            (A[y >> 2] = d),
            (A[_ >> 2] = 0),
            (l = (d | 0) < (f | 0)),
            (o = l ? f : d),
            (l = l ? d : f);
          do
            if ((l | 0) < 0) {
              if ((o | 0) > 0) {
                if (
                  ((o | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - o) | 0) >= (l | 0)))
                )
                  break;
                ht(23313, 22444, 404, 22469);
              }
              if (
                (((l | 0) == -2147483648) |
                  (((-2147483648 - o) | 0) > (l | 0)) &&
                  ht(23313, 22444, 404, 22469),
                (o | 0) > -1)
              ) {
                if ((o | -2147483648 | 0) < (l | 0)) break;
                ht(23313, 22444, 404, 22469);
              } else {
                if (((o ^ -2147483648) | 0) >= (l | 0)) break;
                ht(23313, 22444, 404, 22469);
              }
            }
          while (0);
          return (
            (o = (d - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[y >> 2] = o),
                (A[_ >> 2] = l),
                (A[a >> 2] = 0),
                (f = 0))
              : ((o = d), (l = 0)),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[_ >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (d = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = d),
                (A[_ >> 2] = 0),
                (o = d),
                (d = m),
                (l = 0))
              : (d = f),
            (f = (o | 0) < (d | 0) ? o : d),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((y = 0), y | 0)
              : ((A[a >> 2] = d - f),
                (A[y >> 2] = o - f),
                (A[_ >> 2] = l - f),
                (y = 0),
                y | 0)
          );
        }
        function lg(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (_ = (a + 8) | 0),
            (l = A[_ >> 2] | 0),
            (o = ((A[a >> 2] | 0) - l) | 0),
            (y = (a + 4) | 0),
            (l = ((A[y >> 2] | 0) - l) | 0),
            (f = jr(+((((o * 3) | 0) - l) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (o = jr(+(((l << 1) + o) | 0) / 7) | 0),
            (A[y >> 2] = o),
            (A[_ >> 2] = 0),
            (l = (o - f) | 0),
            (f | 0) < 0
              ? ((m = (0 - f) | 0),
                (A[y >> 2] = l),
                (A[_ >> 2] = m),
                (A[a >> 2] = 0),
                (o = l),
                (f = 0),
                (l = m))
              : (l = 0),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[_ >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (d = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = d),
                (A[_ >> 2] = 0),
                (o = d),
                (d = m),
                (l = 0))
              : (d = f),
            (f = (o | 0) < (d | 0) ? o : d),
            (f = (l | 0) < (f | 0) ? l : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = d - f), (A[y >> 2] = o - f), (A[_ >> 2] = l - f));
        }
        function gf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (_ = (a + 8) | 0),
            (l = A[_ >> 2] | 0),
            (o = ((A[a >> 2] | 0) - l) | 0),
            (y = (a + 4) | 0),
            (l = ((A[y >> 2] | 0) - l) | 0),
            (f = jr(+(((o << 1) + l) | 0) / 7) | 0),
            (A[a >> 2] = f),
            (o = jr(+((((l * 3) | 0) - o) | 0) / 7) | 0),
            (A[y >> 2] = o),
            (A[_ >> 2] = 0),
            (l = (o - f) | 0),
            (f | 0) < 0
              ? ((m = (0 - f) | 0),
                (A[y >> 2] = l),
                (A[_ >> 2] = m),
                (A[a >> 2] = 0),
                (o = l),
                (f = 0),
                (l = m))
              : (l = 0),
            (o | 0) < 0 &&
              ((f = (f - o) | 0),
              (A[a >> 2] = f),
              (l = (l - o) | 0),
              (A[_ >> 2] = l),
              (A[y >> 2] = 0),
              (o = 0)),
            (m = (f - l) | 0),
            (d = (o - l) | 0),
            (l | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = d),
                (A[_ >> 2] = 0),
                (o = d),
                (d = m),
                (l = 0))
              : (d = f),
            (f = (o | 0) < (d | 0) ? o : d),
            (f = (l | 0) < (f | 0) ? l : f),
            !((f | 0) <= 0) &&
              ((A[a >> 2] = d - f), (A[y >> 2] = o - f), (A[_ >> 2] = l - f));
        }
        function tA(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (l = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (f = A[y >> 2] | 0),
            (d = (l + ((o * 3) | 0)) | 0),
            (A[a >> 2] = d),
            (l = (f + ((l * 3) | 0)) | 0),
            (A[_ >> 2] = l),
            (o = (((f * 3) | 0) + o) | 0),
            (A[y >> 2] = o),
            (f = (l - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = f),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (l = f),
                (f = 0))
              : (f = d),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (d = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = d),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (d = l),
            (l = (d | 0) < (f | 0) ? d : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[_ >> 2] = d - l), (A[y >> 2] = o - l));
        }
        function _s(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (d = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (o = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = (((o * 3) | 0) + d) | 0),
            (d = (l + ((d * 3) | 0)) | 0),
            (A[a >> 2] = d),
            (A[_ >> 2] = f),
            (o = (((l * 3) | 0) + o) | 0),
            (A[y >> 2] = o),
            (l = (f - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (d = 0))
              : (l = f),
            (l | 0) < 0 &&
              ((d = (d - l) | 0),
              (A[a >> 2] = d),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (d - o) | 0),
            (f = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = f),
                (A[y >> 2] = 0),
                (d = m),
                (o = 0))
              : (f = l),
            (l = (f | 0) < (d | 0) ? f : d),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = d - l), (A[_ >> 2] = f - l), (A[y >> 2] = o - l));
        }
        function vf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          ((o + -1) | 0) >>> 0 >= 6 ||
            ((d =
              ((A[(15440 + ((o * 12) | 0)) >> 2] | 0) + (A[a >> 2] | 0)) | 0),
            (A[a >> 2] = d),
            (y = (a + 4) | 0),
            (f =
              ((A[(15440 + ((o * 12) | 0) + 4) >> 2] | 0) + (A[y >> 2] | 0)) |
              0),
            (A[y >> 2] = f),
            (_ = (a + 8) | 0),
            (o =
              ((A[(15440 + ((o * 12) | 0) + 8) >> 2] | 0) + (A[_ >> 2] | 0)) |
              0),
            (A[_ >> 2] = o),
            (l = (f - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[y >> 2] = l),
                (A[_ >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = d)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[_ >> 2] = o),
              (A[y >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (d = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[y >> 2] = d),
                (A[_ >> 2] = 0),
                (f = m),
                (o = 0))
              : (d = l),
            (l = (d | 0) < (f | 0) ? d : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[y >> 2] = d - l), (A[_ >> 2] = o - l)));
        }
        function _f(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (d = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (o = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = (o + d) | 0),
            (d = (l + d) | 0),
            (A[a >> 2] = d),
            (A[_ >> 2] = f),
            (o = (l + o) | 0),
            (A[y >> 2] = o),
            (l = (f - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = d)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (d = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = d),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (d = l),
            (l = (d | 0) < (f | 0) ? d : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[_ >> 2] = d - l), (A[y >> 2] = o - l));
        }
        function nA(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (f = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (d = (f + o) | 0),
            (A[a >> 2] = d),
            (f = (l + f) | 0),
            (A[_ >> 2] = f),
            (o = (l + o) | 0),
            (A[y >> 2] = o),
            (l = (f - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (f = 0))
              : ((l = f), (f = d)),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (d = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = d),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (d = l),
            (l = (d | 0) < (f | 0) ? d : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[_ >> 2] = d - l), (A[y >> 2] = o - l));
        }
        function xs(a) {
          switch (((a = a | 0), a | 0)) {
            case 1: {
              a = 5;
              break;
            }
            case 5: {
              a = 4;
              break;
            }
            case 4: {
              a = 6;
              break;
            }
            case 6: {
              a = 2;
              break;
            }
            case 2: {
              a = 3;
              break;
            }
            case 3: {
              a = 1;
              break;
            }
          }
          return a | 0;
        }
        function Vr(a) {
          switch (((a = a | 0), a | 0)) {
            case 1: {
              a = 3;
              break;
            }
            case 3: {
              a = 2;
              break;
            }
            case 2: {
              a = 6;
              break;
            }
            case 6: {
              a = 4;
              break;
            }
            case 4: {
              a = 5;
              break;
            }
            case 5: {
              a = 1;
              break;
            }
          }
          return a | 0;
        }
        function xf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (o = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (l = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (f = A[y >> 2] | 0),
            (d = (l + (o << 1)) | 0),
            (A[a >> 2] = d),
            (l = (f + (l << 1)) | 0),
            (A[_ >> 2] = l),
            (o = ((f << 1) + o) | 0),
            (A[y >> 2] = o),
            (f = (l - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = f),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (l = f),
                (f = 0))
              : (f = d),
            (l | 0) < 0 &&
              ((f = (f - l) | 0),
              (A[a >> 2] = f),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (f - o) | 0),
            (d = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = d),
                (A[y >> 2] = 0),
                (f = m),
                (o = 0))
              : (d = l),
            (l = (d | 0) < (f | 0) ? d : f),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = f - l), (A[_ >> 2] = d - l), (A[y >> 2] = o - l));
        }
        function yf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (d = A[a >> 2] | 0),
            (_ = (a + 4) | 0),
            (o = A[_ >> 2] | 0),
            (y = (a + 8) | 0),
            (l = A[y >> 2] | 0),
            (f = ((o << 1) + d) | 0),
            (d = (l + (d << 1)) | 0),
            (A[a >> 2] = d),
            (A[_ >> 2] = f),
            (o = ((l << 1) + o) | 0),
            (A[y >> 2] = o),
            (l = (f - d) | 0),
            (d | 0) < 0
              ? ((o = (o - d) | 0),
                (A[_ >> 2] = l),
                (A[y >> 2] = o),
                (A[a >> 2] = 0),
                (d = 0))
              : (l = f),
            (l | 0) < 0 &&
              ((d = (d - l) | 0),
              (A[a >> 2] = d),
              (o = (o - l) | 0),
              (A[y >> 2] = o),
              (A[_ >> 2] = 0),
              (l = 0)),
            (m = (d - o) | 0),
            (f = (l - o) | 0),
            (o | 0) < 0
              ? ((A[a >> 2] = m),
                (A[_ >> 2] = f),
                (A[y >> 2] = 0),
                (d = m),
                (o = 0))
              : (f = l),
            (l = (f | 0) < (d | 0) ? f : d),
            (l = (o | 0) < (l | 0) ? o : l),
            !((l | 0) <= 0) &&
              ((A[a >> 2] = d - l), (A[_ >> 2] = f - l), (A[y >> 2] = o - l));
        }
        function d0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          return (
            (_ = ((A[a >> 2] | 0) - (A[o >> 2] | 0)) | 0),
            (y = (_ | 0) < 0),
            (f =
              ((A[(a + 4) >> 2] | 0) - (A[(o + 4) >> 2] | 0) - (y ? _ : 0)) |
              0),
            (m = (f | 0) < 0),
            (d =
              ((y ? (0 - _) | 0 : 0) +
                (A[(a + 8) >> 2] | 0) -
                (A[(o + 8) >> 2] | 0) +
                (m ? (0 - f) | 0 : 0)) |
              0),
            (a = (d | 0) < 0),
            (o = a ? 0 : d),
            (l = ((m ? 0 : f) - (a ? d : 0)) | 0),
            (d = ((y ? 0 : _) - (m ? f : 0) - (a ? d : 0)) | 0),
            (a = (l | 0) < (d | 0) ? l : d),
            (a = (o | 0) < (a | 0) ? o : a),
            (f = (a | 0) > 0),
            (o = (o - (f ? a : 0)) | 0),
            (l = (l - (f ? a : 0)) | 0),
            (a = (d - (f ? a : 0)) | 0),
            (a = (a | 0) > -1 ? a : (0 - a) | 0),
            (l = (l | 0) > -1 ? l : (0 - l) | 0),
            (o = (o | 0) > -1 ? o : (0 - o) | 0),
            (o = (l | 0) > (o | 0) ? l : o),
            ((a | 0) > (o | 0) ? a : o) | 0
          );
        }
        function ug(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          (l = A[(a + 8) >> 2] | 0),
            (A[o >> 2] = (A[a >> 2] | 0) - l),
            (A[(o + 4) >> 2] = (A[(a + 4) >> 2] | 0) - l);
        }
        function cg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (f = A[a >> 2] | 0),
            (A[o >> 2] = f),
            (d = A[(a + 4) >> 2] | 0),
            (_ = (o + 4) | 0),
            (A[_ >> 2] = d),
            (y = (o + 8) | 0),
            (A[y >> 2] = 0),
            (l = (d | 0) < (f | 0)),
            (a = l ? f : d),
            (l = l ? d : f);
          do
            if ((l | 0) < 0) {
              if ((a | 0) > 0) {
                if (
                  ((a | -2147483648 | 0) < (l | 0)) &
                  (((l | 0) != -2147483648) &
                    (((2147483647 - a) | 0) >= (l | 0)))
                )
                  break;
                return (a = 1), a | 0;
              }
              if (
                ((l | 0) == -2147483648) |
                (((-2147483648 - a) | 0) > (l | 0))
              )
                return (o = 1), o | 0;
              if ((a | 0) > -1) {
                if ((a | -2147483648 | 0) < (l | 0)) break;
                return (a = 1), a | 0;
              } else {
                if (((a ^ -2147483648) | 0) < (l | 0)) a = 1;
                else break;
                return a | 0;
              }
            }
          while (0);
          return (
            (a = (d - f) | 0),
            (f | 0) < 0
              ? ((l = (0 - f) | 0),
                (A[_ >> 2] = a),
                (A[y >> 2] = l),
                (A[o >> 2] = 0),
                (f = 0))
              : ((a = d), (l = 0)),
            (a | 0) < 0 &&
              ((f = (f - a) | 0),
              (A[o >> 2] = f),
              (l = (l - a) | 0),
              (A[y >> 2] = l),
              (A[_ >> 2] = 0),
              (a = 0)),
            (m = (f - l) | 0),
            (d = (a - l) | 0),
            (l | 0) < 0
              ? ((A[o >> 2] = m),
                (A[_ >> 2] = d),
                (A[y >> 2] = 0),
                (a = d),
                (d = m),
                (l = 0))
              : (d = f),
            (f = (a | 0) < (d | 0) ? a : d),
            (f = (l | 0) < (f | 0) ? l : f),
            (f | 0) <= 0
              ? ((o = 0), o | 0)
              : ((A[o >> 2] = d - f),
                (A[_ >> 2] = a - f),
                (A[y >> 2] = l - f),
                (o = 0),
                o | 0)
          );
        }
        function bf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0;
          (o = (a + 8) | 0),
            (d = A[o >> 2] | 0),
            (l = (d - (A[a >> 2] | 0)) | 0),
            (A[a >> 2] = l),
            (f = (a + 4) | 0),
            (a = ((A[f >> 2] | 0) - d) | 0),
            (A[f >> 2] = a),
            (A[o >> 2] = 0 - (a + l));
        }
        function fg(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (l = A[a >> 2] | 0),
            (o = (0 - l) | 0),
            (A[a >> 2] = o),
            (_ = (a + 8) | 0),
            (A[_ >> 2] = 0),
            (y = (a + 4) | 0),
            (f = A[y >> 2] | 0),
            (d = (f + l) | 0),
            (l | 0) > 0
              ? ((A[y >> 2] = d),
                (A[_ >> 2] = l),
                (A[a >> 2] = 0),
                (o = 0),
                (f = d))
              : (l = 0),
            (f | 0) < 0
              ? ((m = (o - f) | 0),
                (A[a >> 2] = m),
                (l = (l - f) | 0),
                (A[_ >> 2] = l),
                (A[y >> 2] = 0),
                (d = (m - l) | 0),
                (o = (0 - l) | 0),
                (l | 0) < 0
                  ? ((A[a >> 2] = d),
                    (A[y >> 2] = o),
                    (A[_ >> 2] = 0),
                    (f = o),
                    (l = 0))
                  : ((f = 0), (d = m)))
              : (d = o),
            (o = (f | 0) < (d | 0) ? f : d),
            (o = (l | 0) < (o | 0) ? l : o),
            !((o | 0) <= 0) &&
              ((A[a >> 2] = d - o), (A[y >> 2] = f - o), (A[_ >> 2] = l - o));
        }
        function hg(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0;
          if (
            ((j = z),
            (z = (z + 64) | 0),
            (B = j),
            (y = (j + 56) | 0),
            !(
              !0 &
              (((o & 2013265920) | 0) == 134217728) &
              (!0 & (((f & 2013265920) | 0) == 134217728))
            ))
          )
            return (d = 5), (z = j), d | 0;
          if (((a | 0) == (l | 0)) & ((o | 0) == (f | 0)))
            return (A[d >> 2] = 0), (d = 0), (z = j), d | 0;
          if (
            ((_ = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (_ = _ & 15),
            (P = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (_ | 0) != ((P & 15) | 0))
          )
            return (d = 12), (z = j), d | 0;
          if (((m = (_ + -1) | 0), _ >>> 0 > 1)) {
            v0(a, o, m, B) | 0,
              v0(l, f, m, y) | 0,
              (P = B),
              (T = A[P >> 2] | 0),
              (P = A[(P + 4) >> 2] | 0);
            e: do
              if (
                (T | 0) == (A[y >> 2] | 0) &&
                (P | 0) == (A[(y + 4) >> 2] | 0)
              ) {
                (_ = ((_ ^ 15) * 3) | 0),
                  (m = De(a | 0, o | 0, _ | 0) | 0),
                  W() | 0,
                  (m = m & 7),
                  (_ = De(l | 0, f | 0, _ | 0) | 0),
                  W() | 0,
                  (_ = _ & 7);
                do
                  if (((m | 0) == 0) | ((_ | 0) == 0)) (A[d >> 2] = 1), (m = 0);
                  else if ((m | 0) == 7) m = 5;
                  else {
                    if (((m | 0) == 1) | ((_ | 0) == 1) && cn(T, P) | 0) {
                      m = 5;
                      break;
                    }
                    if (
                      (A[(15536 + (m << 2)) >> 2] | 0) != (_ | 0) &&
                      (A[(15568 + (m << 2)) >> 2] | 0) != (_ | 0)
                    )
                      break e;
                    (A[d >> 2] = 1), (m = 0);
                  }
                while (0);
                return (d = m), (z = j), d | 0;
              }
            while (0);
          }
          (m = B), (_ = (m + 56) | 0);
          do (A[m >> 2] = 0), (m = (m + 4) | 0);
          while ((m | 0) < (_ | 0));
          return (
            af(a, o, 1, B) | 0,
            (o = B),
            !((A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)) &&
            ((o = (B + 8) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 16) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 24) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 32) | 0),
            !(
              (A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)
            )) &&
            ((o = (B + 40) | 0),
            !((A[o >> 2] | 0) == (l | 0) && (A[(o + 4) >> 2] | 0) == (f | 0)))
              ? ((m = (B + 48) | 0),
                (m =
                  ((A[m >> 2] | 0) == (l | 0)
                    ? (A[(m + 4) >> 2] | 0) == (f | 0)
                    : 0) & 1))
              : (m = 1),
            (A[d >> 2] = m),
            (d = 0),
            (z = j),
            d | 0
          );
        }
        function dg(a, o, l, f, d) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (l = l0(a, o, l, f) | 0),
            (l | 0) == 7
              ? ((d = 11), d | 0)
              : ((f = je(l | 0, 0, 56) | 0),
                (o = (o & -2130706433) | (W() | 0) | 268435456),
                (A[d >> 2] = a | f),
                (A[(d + 4) >> 2] = o),
                (d = 0),
                d | 0)
          );
        }
        function pg(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((A[l >> 2] = a),
                (A[(l + 4) >> 2] = (o & -2130706433) | 134217728),
                (l = 0),
                l | 0)
              : ((l = 6), l | 0)
          );
        }
        function mg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          return (
            (d = z),
            (z = (z + 16) | 0),
            (f = d),
            (A[f >> 2] = 0),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((m = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = Nn(a, (o & -2130706433) | 134217728, m & 7, f, l) | 0),
                (z = d),
                f | 0)
              : ((f = 6), (z = d), f | 0)
          );
        }
        function gg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          switch (((l = De(a | 0, o | 0, 56) | 0), W() | 0, l & 7)) {
            case 0:
            case 7:
              return (l = 0), l | 0;
          }
          return (
            (l = (o & -2130706433) | 134217728),
            !(!0 & (((o & 2013265920) | 0) == 268435456)) ||
            !0 & (((o & 117440512) | 0) == 16777216) & ((cn(a, l) | 0) != 0)
              ? ((l = 0), l | 0)
              : ((l = g0(a, l) | 0), l | 0)
          );
        }
        function vg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          return (
            (d = z),
            (z = (z + 16) | 0),
            (f = d),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((m = (o & -2130706433) | 134217728),
                (_ = l),
                (A[_ >> 2] = a),
                (A[(_ + 4) >> 2] = m),
                (A[f >> 2] = 0),
                (o = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = Nn(a, m, o & 7, f, (l + 8) | 0) | 0),
                (z = d),
                f | 0)
              : ((f = 6), (z = d), f | 0)
          );
        }
        function _g(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0;
          return (
            (d = (cn(a, o) | 0) == 0),
            (o = o & -2130706433),
            (f = l),
            (A[f >> 2] = d ? a : 0),
            (A[(f + 4) >> 2] = d ? o | 285212672 : 0),
            (f = (l + 8) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 301989888),
            (f = (l + 16) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 318767104),
            (f = (l + 24) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 335544320),
            (f = (l + 32) | 0),
            (A[f >> 2] = a),
            (A[(f + 4) >> 2] = o | 352321536),
            (l = (l + 40) | 0),
            (A[l >> 2] = a),
            (A[(l + 4) >> 2] = o | 369098752),
            0
          );
        }
        function iA(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          return (
            (_ = z),
            (z = (z + 16) | 0),
            (d = _),
            (m = (o & -2130706433) | 134217728),
            !0 & (((o & 2013265920) | 0) == 268435456)
              ? ((f = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (f = v3(a, m, f & 7) | 0),
                (f | 0) == -1
                  ? ((A[l >> 2] = 0), (m = 6), (z = _), m | 0)
                  : (Ks(a, m, d) | 0 && ht(23313, 22484, 282, 22499),
                    (o = De(a | 0, o | 0, 52) | 0),
                    W() | 0,
                    (o = o & 15),
                    cn(a, m) | 0 ? p0(d, o, f, 2, l) : m0(d, o, f, 2, l),
                    (m = 0),
                    (z = _),
                    m | 0))
              : ((m = 6), (z = _), m | 0)
          );
        }
        function xg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0;
          (f = z),
            (z = (z + 16) | 0),
            (d = f),
            yg(a, o, l, d),
            og(d, (l + 4) | 0),
            (z = f);
        }
        function yg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          if (
            ((y = z),
            (z = (z + 16) | 0),
            (T = y),
            bg(a, l, T),
            (m = +Nt(+(1 - +V[T >> 3] * 0.5))),
            m < 1e-16)
          ) {
            (A[f >> 2] = 0),
              (A[(f + 4) >> 2] = 0),
              (A[(f + 8) >> 2] = 0),
              (A[(f + 12) >> 2] = 0),
              (z = y);
            return;
          }
          if (
            ((T = A[l >> 2] | 0),
            (d = +V[(15920 + ((T * 24) | 0)) >> 3]),
            (d = +ra(d - +ra(+zg((15600 + (T << 4)) | 0, a)))),
            Oi(o) | 0 ? (_ = +ra(d + -0.3334731722518321)) : (_ = d),
            (d = +ft(+m) / 0.381966011250105),
            (o | 0) > 0)
          ) {
            a = 0;
            do (d = d * 2.6457513110645907), (a = (a + 1) | 0);
            while ((a | 0) != (o | 0));
          }
          (m = +Qe(+_) * d),
            (V[f >> 3] = m),
            (_ = +He(+_) * d),
            (V[(f + 8) >> 3] = _),
            (z = y);
        }
        function bg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          if (
            ((m = z),
            (z = (z + 32) | 0),
            (d = m),
            g3(a, d),
            (A[o >> 2] = 0),
            (V[l >> 3] = 5),
            (f = +Sn(16400, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 0), (V[l >> 3] = f)),
            (f = +Sn(16424, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 1), (V[l >> 3] = f)),
            (f = +Sn(16448, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 2), (V[l >> 3] = f)),
            (f = +Sn(16472, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 3), (V[l >> 3] = f)),
            (f = +Sn(16496, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 4), (V[l >> 3] = f)),
            (f = +Sn(16520, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 5), (V[l >> 3] = f)),
            (f = +Sn(16544, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 6), (V[l >> 3] = f)),
            (f = +Sn(16568, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 7), (V[l >> 3] = f)),
            (f = +Sn(16592, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 8), (V[l >> 3] = f)),
            (f = +Sn(16616, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 9), (V[l >> 3] = f)),
            (f = +Sn(16640, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 10), (V[l >> 3] = f)),
            (f = +Sn(16664, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 11), (V[l >> 3] = f)),
            (f = +Sn(16688, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 12), (V[l >> 3] = f)),
            (f = +Sn(16712, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 13), (V[l >> 3] = f)),
            (f = +Sn(16736, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 14), (V[l >> 3] = f)),
            (f = +Sn(16760, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 15), (V[l >> 3] = f)),
            (f = +Sn(16784, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 16), (V[l >> 3] = f)),
            (f = +Sn(16808, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 17), (V[l >> 3] = f)),
            (f = +Sn(16832, d)),
            f < +V[l >> 3] && ((A[o >> 2] = 18), (V[l >> 3] = f)),
            (f = +Sn(16856, d)),
            !(f < +V[l >> 3]))
          ) {
            z = m;
            return;
          }
          (A[o >> 2] = 19), (V[l >> 3] = f), (z = m);
        }
        function ta(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0;
          if (((m = +m3(a)), m < 1e-16)) {
            (o = (15600 + (o << 4)) | 0),
              (A[d >> 2] = A[o >> 2]),
              (A[(d + 4) >> 2] = A[(o + 4) >> 2]),
              (A[(d + 8) >> 2] = A[(o + 8) >> 2]),
              (A[(d + 12) >> 2] = A[(o + 12) >> 2]);
            return;
          }
          if (((_ = +jt(+(+V[(a + 8) >> 3]), +(+V[a >> 3]))), (l | 0) > 0)) {
            a = 0;
            do (m = m / 2.6457513110645907), (a = (a + 1) | 0);
            while ((a | 0) != (l | 0));
          }
          f
            ? ((m = m / 3),
              (l = (Oi(l) | 0) == 0),
              (m = +Pt(
                +((l ? m : m / 2.6457513110645907) * 0.381966011250105)
              )))
            : ((m = +Pt(+(m * 0.381966011250105))),
              Oi(l) | 0 && (_ = +ra(_ + 0.3334731722518321))),
            Gg(
              (15600 + (o << 4)) | 0,
              +ra(+V[(15920 + ((o * 24) | 0)) >> 3] - _),
              m,
              d
            );
        }
        function Mg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0;
          (f = z),
            (z = (z + 16) | 0),
            (d = f),
            vs((a + 4) | 0, d),
            ta(d, A[a >> 2] | 0, o, 0, l),
            (z = f);
        }
        function p0(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            qt = 0,
            Ct = 0,
            Ut = 0,
            tn = 0,
            bt = 0;
          if (
            ((Ut = z),
            (z = (z + 272) | 0),
            (m = (Ut + 256) | 0),
            (ve = (Ut + 240) | 0),
            (Qt = Ut),
            (qt = (Ut + 224) | 0),
            (Ct = (Ut + 208) | 0),
            (_e = (Ut + 176) | 0),
            (ue = (Ut + 160) | 0),
            (Ze = (Ut + 192) | 0),
            (st = (Ut + 144) | 0),
            (Ve = (Ut + 128) | 0),
            (Ke = (Ut + 112) | 0),
            (Zt = (Ut + 96) | 0),
            (Xt = (Ut + 80) | 0),
            (A[m >> 2] = o),
            (A[ve >> 2] = A[a >> 2]),
            (A[(ve + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(ve + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(ve + 12) >> 2] = A[(a + 12) >> 2]),
            Mf(ve, m, Qt),
            (A[d >> 2] = 0),
            (ve = (f + l + (((f | 0) == 5) & 1)) | 0),
            (ve | 0) <= (l | 0))
          ) {
            z = Ut;
            return;
          }
          (T = A[m >> 2] | 0),
            (P = (qt + 4) | 0),
            (B = (_e + 4) | 0),
            (j = (l + 5) | 0),
            (ee = (16880 + (T << 2)) | 0),
            (se = (16960 + (T << 2)) | 0),
            (Z = (Ve + 8) | 0),
            (fe = (Ke + 8) | 0),
            (we = (Zt + 8) | 0),
            (Ee = (Ct + 4) | 0),
            (y = l);
          e: for (;;) {
            (_ = (Qt + (((y | 0) % 5 | 0) << 4)) | 0),
              (A[Ct >> 2] = A[_ >> 2]),
              (A[(Ct + 4) >> 2] = A[(_ + 4) >> 2]),
              (A[(Ct + 8) >> 2] = A[(_ + 8) >> 2]),
              (A[(Ct + 12) >> 2] = A[(_ + 12) >> 2]);
            do;
            while ((Zs(Ct, T, 0, 1) | 0) == 2);
            if (((y | 0) > (l | 0)) & ((Oi(o) | 0) != 0)) {
              if (
                ((A[_e >> 2] = A[Ct >> 2]),
                (A[(_e + 4) >> 2] = A[(Ct + 4) >> 2]),
                (A[(_e + 8) >> 2] = A[(Ct + 8) >> 2]),
                (A[(_e + 12) >> 2] = A[(Ct + 12) >> 2]),
                vs(P, ue),
                (f = A[_e >> 2] | 0),
                (m = A[(17040 + ((f * 80) | 0) + (A[qt >> 2] << 2)) >> 2] | 0),
                (A[_e >> 2] =
                  A[(18640 + ((f * 80) | 0) + ((m * 20) | 0)) >> 2]),
                (_ =
                  A[(18640 + ((f * 80) | 0) + ((m * 20) | 0) + 16) >> 2] | 0),
                (_ | 0) > 0)
              ) {
                a = 0;
                do _f(B), (a = (a + 1) | 0);
                while ((a | 0) < (_ | 0));
              }
              switch (
                ((_ = (18640 + ((f * 80) | 0) + ((m * 20) | 0) + 4) | 0),
                (A[Ze >> 2] = A[_ >> 2]),
                (A[(Ze + 4) >> 2] = A[(_ + 4) >> 2]),
                (A[(Ze + 8) >> 2] = A[(_ + 8) >> 2]),
                mf(Ze, ((A[ee >> 2] | 0) * 3) | 0),
                ni(B, Ze, B),
                Wn(B),
                vs(B, st),
                (tn = +(A[se >> 2] | 0)),
                (V[Ve >> 3] = tn * 3),
                (V[Z >> 3] = 0),
                (bt = tn * -1.5),
                (V[Ke >> 3] = bt),
                (V[fe >> 3] = tn * 2.598076211353316),
                (V[Zt >> 3] = bt),
                (V[we >> 3] = tn * -2.598076211353316),
                A[
                  (17040 + (((A[_e >> 2] | 0) * 80) | 0) + (A[Ct >> 2] << 2)) >>
                    2
                ] | 0)
              ) {
                case 1: {
                  (a = Ke), (f = Ve);
                  break;
                }
                case 3: {
                  (a = Zt), (f = Ke);
                  break;
                }
                case 2: {
                  (a = Ve), (f = Zt);
                  break;
                }
                default: {
                  a = 12;
                  break e;
                }
              }
              Uf(ue, st, f, a, Xt),
                ta(Xt, A[_e >> 2] | 0, T, 1, (d + 8 + (A[d >> 2] << 4)) | 0),
                (A[d >> 2] = (A[d >> 2] | 0) + 1);
            }
            if (
              ((y | 0) < (j | 0) &&
                (vs(Ee, _e),
                ta(_e, A[Ct >> 2] | 0, T, 1, (d + 8 + (A[d >> 2] << 4)) | 0),
                (A[d >> 2] = (A[d >> 2] | 0) + 1)),
              (A[qt >> 2] = A[Ct >> 2]),
              (A[(qt + 4) >> 2] = A[(Ct + 4) >> 2]),
              (A[(qt + 8) >> 2] = A[(Ct + 8) >> 2]),
              (A[(qt + 12) >> 2] = A[(Ct + 12) >> 2]),
              (y = (y + 1) | 0),
              (y | 0) >= (ve | 0))
            ) {
              a = 3;
              break;
            }
          }
          if ((a | 0) == 3) {
            z = Ut;
            return;
          } else (a | 0) == 12 && ht(22522, 22569, 571, 22579);
        }
        function Mf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          (T = z),
            (z = (z + 128) | 0),
            (f = (T + 64) | 0),
            (d = T),
            (m = f),
            (_ = 20240),
            (y = (m + 60) | 0);
          do (A[m >> 2] = A[_ >> 2]), (m = (m + 4) | 0), (_ = (_ + 4) | 0);
          while ((m | 0) < (y | 0));
          (m = d), (_ = 20304), (y = (m + 60) | 0);
          do (A[m >> 2] = A[_ >> 2]), (m = (m + 4) | 0), (_ = (_ + 4) | 0);
          while ((m | 0) < (y | 0));
          (y = (Oi(A[o >> 2] | 0) | 0) == 0),
            (f = y ? f : d),
            (d = (a + 4) | 0),
            xf(d),
            yf(d),
            Oi(A[o >> 2] | 0) | 0 && (_s(d), (A[o >> 2] = (A[o >> 2] | 0) + 1)),
            (A[l >> 2] = A[a >> 2]),
            (o = (l + 4) | 0),
            ni(d, f, o),
            Wn(o),
            (A[(l + 16) >> 2] = A[a >> 2]),
            (o = (l + 20) | 0),
            ni(d, (f + 12) | 0, o),
            Wn(o),
            (A[(l + 32) >> 2] = A[a >> 2]),
            (o = (l + 36) | 0),
            ni(d, (f + 24) | 0, o),
            Wn(o),
            (A[(l + 48) >> 2] = A[a >> 2]),
            (o = (l + 52) | 0),
            ni(d, (f + 36) | 0, o),
            Wn(o),
            (A[(l + 64) >> 2] = A[a >> 2]),
            (l = (l + 68) | 0),
            ni(d, (f + 48) | 0, l),
            Wn(l),
            (z = T);
        }
        function Zs(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0;
          if (
            ((Z = z),
            (z = (z + 32) | 0),
            (ee = (Z + 12) | 0),
            (y = Z),
            (se = (a + 4) | 0),
            (j = A[(16960 + (o << 2)) >> 2] | 0),
            (B = (f | 0) != 0),
            (j = B ? (j * 3) | 0 : j),
            (d = A[se >> 2] | 0),
            (P = (a + 8) | 0),
            (_ = A[P >> 2] | 0),
            B)
          ) {
            if (
              ((m = (a + 12) | 0),
              (f = A[m >> 2] | 0),
              (d = (_ + d + f) | 0),
              (d | 0) == (j | 0))
            )
              return (se = 1), (z = Z), se | 0;
            T = m;
          } else (T = (a + 12) | 0), (f = A[T >> 2] | 0), (d = (_ + d + f) | 0);
          if ((d | 0) <= (j | 0)) return (se = 0), (z = Z), se | 0;
          do
            if ((f | 0) > 0) {
              if (((f = A[a >> 2] | 0), (_ | 0) > 0)) {
                (m = (18640 + ((f * 80) | 0) + 60) | 0), (f = a);
                break;
              }
              (f = (18640 + ((f * 80) | 0) + 40) | 0),
                l
                  ? (sg(ee, j, 0, 0),
                    h0(se, ee, y),
                    nA(y),
                    ni(y, ee, se),
                    (m = f),
                    (f = a))
                  : ((m = f), (f = a));
            } else
              (m = (18640 + (((A[a >> 2] | 0) * 80) | 0) + 20) | 0), (f = a);
          while (0);
          if (
            ((A[f >> 2] = A[m >> 2]), (d = (m + 16) | 0), (A[d >> 2] | 0) > 0)
          ) {
            f = 0;
            do _f(se), (f = (f + 1) | 0);
            while ((f | 0) < (A[d >> 2] | 0));
          }
          return (
            (a = (m + 4) | 0),
            (A[ee >> 2] = A[a >> 2]),
            (A[(ee + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(ee + 8) >> 2] = A[(a + 8) >> 2]),
            (o = A[(16880 + (o << 2)) >> 2] | 0),
            mf(ee, B ? (o * 3) | 0 : o),
            ni(se, ee, se),
            Wn(se),
            B
              ? (f =
                  (((A[P >> 2] | 0) + (A[se >> 2] | 0) + (A[T >> 2] | 0)) |
                    0) ==
                  (j | 0)
                    ? 1
                    : 2)
              : (f = 2),
            (se = f),
            (z = Z),
            se | 0
          );
        }
        function Eg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          do l = Zs(a, o, 0, 1) | 0;
          while ((l | 0) == 2);
          return l | 0;
        }
        function m0(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0;
          if (
            ((Zt = z),
            (z = (z + 240) | 0),
            (m = (Zt + 224) | 0),
            (Ze = (Zt + 208) | 0),
            (st = Zt),
            (Ve = (Zt + 192) | 0),
            (Ke = (Zt + 176) | 0),
            (we = (Zt + 160) | 0),
            (Ee = (Zt + 144) | 0),
            (ve = (Zt + 128) | 0),
            (_e = (Zt + 112) | 0),
            (ue = (Zt + 96) | 0),
            (A[m >> 2] = o),
            (A[Ze >> 2] = A[a >> 2]),
            (A[(Ze + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(Ze + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(Ze + 12) >> 2] = A[(a + 12) >> 2]),
            Ef(Ze, m, st),
            (A[d >> 2] = 0),
            (fe = (f + l + (((f | 0) == 6) & 1)) | 0),
            (fe | 0) <= (l | 0))
          ) {
            z = Zt;
            return;
          }
          (T = A[m >> 2] | 0),
            (P = (l + 6) | 0),
            (B = (16960 + (T << 2)) | 0),
            (j = (Ee + 8) | 0),
            (ee = (ve + 8) | 0),
            (se = (_e + 8) | 0),
            (Z = (Ve + 4) | 0),
            (_ = 0),
            (y = l),
            (f = -1);
          e: for (;;) {
            if (
              ((m = (y | 0) % 6 | 0),
              (a = (st + (m << 4)) | 0),
              (A[Ve >> 2] = A[a >> 2]),
              (A[(Ve + 4) >> 2] = A[(a + 4) >> 2]),
              (A[(Ve + 8) >> 2] = A[(a + 8) >> 2]),
              (A[(Ve + 12) >> 2] = A[(a + 12) >> 2]),
              (a = _),
              (_ = Zs(Ve, T, 0, 1) | 0),
              ((y | 0) > (l | 0)) & ((Oi(o) | 0) != 0) &&
                (a | 0) != 1 &&
                (A[Ve >> 2] | 0) != (f | 0))
            ) {
              switch (
                (vs((st + ((((m + 5) | 0) % 6 | 0) << 4) + 4) | 0, Ke),
                vs((st + (m << 4) + 4) | 0, we),
                (Xt = +(A[B >> 2] | 0)),
                (V[Ee >> 3] = Xt * 3),
                (V[j >> 3] = 0),
                (Qt = Xt * -1.5),
                (V[ve >> 3] = Qt),
                (V[ee >> 3] = Xt * 2.598076211353316),
                (V[_e >> 3] = Qt),
                (V[se >> 3] = Xt * -2.598076211353316),
                (m = A[Ze >> 2] | 0),
                A[
                  (17040 +
                    ((m * 80) | 0) +
                    (((f | 0) == (m | 0) ? A[Ve >> 2] | 0 : f) << 2)) >>
                    2
                ] | 0)
              ) {
                case 1: {
                  (a = ve), (f = Ee);
                  break;
                }
                case 3: {
                  (a = _e), (f = ve);
                  break;
                }
                case 2: {
                  (a = Ee), (f = _e);
                  break;
                }
                default: {
                  a = 8;
                  break e;
                }
              }
              Uf(Ke, we, f, a, ue),
                !(Bf(Ke, ue) | 0) &&
                  !(Bf(we, ue) | 0) &&
                  (ta(ue, A[Ze >> 2] | 0, T, 1, (d + 8 + (A[d >> 2] << 4)) | 0),
                  (A[d >> 2] = (A[d >> 2] | 0) + 1));
            }
            if (
              ((y | 0) < (P | 0) &&
                (vs(Z, Ke),
                ta(Ke, A[Ve >> 2] | 0, T, 1, (d + 8 + (A[d >> 2] << 4)) | 0),
                (A[d >> 2] = (A[d >> 2] | 0) + 1)),
              (y = (y + 1) | 0),
              (y | 0) >= (fe | 0))
            ) {
              a = 3;
              break;
            } else f = A[Ve >> 2] | 0;
          }
          if ((a | 0) == 3) {
            z = Zt;
            return;
          } else (a | 0) == 8 && ht(22606, 22569, 736, 22651);
        }
        function Ef(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          (T = z),
            (z = (z + 160) | 0),
            (f = (T + 80) | 0),
            (d = T),
            (m = f),
            (_ = 20368),
            (y = (m + 72) | 0);
          do (A[m >> 2] = A[_ >> 2]), (m = (m + 4) | 0), (_ = (_ + 4) | 0);
          while ((m | 0) < (y | 0));
          (m = d), (_ = 20448), (y = (m + 72) | 0);
          do (A[m >> 2] = A[_ >> 2]), (m = (m + 4) | 0), (_ = (_ + 4) | 0);
          while ((m | 0) < (y | 0));
          (y = (Oi(A[o >> 2] | 0) | 0) == 0),
            (f = y ? f : d),
            (d = (a + 4) | 0),
            xf(d),
            yf(d),
            Oi(A[o >> 2] | 0) | 0 && (_s(d), (A[o >> 2] = (A[o >> 2] | 0) + 1)),
            (A[l >> 2] = A[a >> 2]),
            (o = (l + 4) | 0),
            ni(d, f, o),
            Wn(o),
            (A[(l + 16) >> 2] = A[a >> 2]),
            (o = (l + 20) | 0),
            ni(d, (f + 12) | 0, o),
            Wn(o),
            (A[(l + 32) >> 2] = A[a >> 2]),
            (o = (l + 36) | 0),
            ni(d, (f + 24) | 0, o),
            Wn(o),
            (A[(l + 48) >> 2] = A[a >> 2]),
            (o = (l + 52) | 0),
            ni(d, (f + 36) | 0, o),
            Wn(o),
            (A[(l + 64) >> 2] = A[a >> 2]),
            (o = (l + 68) | 0),
            ni(d, (f + 48) | 0, o),
            Wn(o),
            (A[(l + 80) >> 2] = A[a >> 2]),
            (l = (l + 84) | 0),
            ni(d, (f + 60) | 0, l),
            Wn(l),
            (z = T);
        }
        function wg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (o & 15) | 0
          );
        }
        function wf(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (o & 127) | 0
          );
        }
        function g0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          if (
            !(!0 & (((o & -16777216) | 0) == 134217728)) ||
            ((_ = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (_ = _ & 127),
            _ >>> 0 > 121)
          )
            return (o = 0), o | 0;
          (l = De(a | 0, o | 0, 52) | 0), W() | 0, (l = l & 15);
          do
            if (l | 0) {
              for (d = 1, f = 0; ; ) {
                if (
                  ((m = De(a | 0, o | 0, (((15 - d) | 0) * 3) | 0) | 0),
                  W() | 0,
                  (m = m & 7),
                  ((m | 0) != 0) & (f ^ 1))
                )
                  if (((m | 0) == 1) & ((un(_) | 0) != 0)) {
                    (y = 0), (f = 13);
                    break;
                  } else f = 1;
                if ((m | 0) == 7) {
                  (y = 0), (f = 13);
                  break;
                }
                if (d >>> 0 < l >>> 0) d = (d + 1) | 0;
                else {
                  f = 9;
                  break;
                }
              }
              if ((f | 0) == 9) {
                if ((l | 0) == 15) y = 1;
                else break;
                return y | 0;
              } else if ((f | 0) == 13) return y | 0;
            }
          while (0);
          for (;;) {
            if (
              ((y = De(a | 0, o | 0, (((14 - l) | 0) * 3) | 0) | 0),
              W() | 0,
              !((((y & 7) | 0) == 7) & !0))
            ) {
              (y = 0), (f = 13);
              break;
            }
            if (l >>> 0 < 14) l = (l + 1) | 0;
            else {
              (y = 1), (f = 13);
              break;
            }
          }
          return (f | 0) == 13 ? y | 0 : 0;
        }
        function v0(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0;
          if (
            ((m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            l >>> 0 > 15)
          )
            return (f = 4), f | 0;
          if ((m | 0) < (l | 0)) return (f = 12), f | 0;
          if ((m | 0) == (l | 0))
            return (A[f >> 2] = a), (A[(f + 4) >> 2] = o), (f = 0), f | 0;
          if (
            ((d = je(l | 0, 0, 52) | 0),
            (d = d | a),
            (a = W() | 0 | (o & -15728641)),
            (m | 0) > (l | 0))
          )
            do
              (o = je(7, 0, (((14 - l) | 0) * 3) | 0) | 0),
                (l = (l + 1) | 0),
                (d = o | d),
                (a = W() | 0 | a);
            while ((l | 0) < (m | 0));
          return (A[f >> 2] = d), (A[(f + 4) >> 2] = a), (f = 0), f | 0;
        }
        function rA(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0;
          if (
            ((m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            !(((l | 0) < 16) & ((m | 0) <= (l | 0))))
          )
            return (f = 4), f | 0;
          (d = (l - m) | 0), (l = De(a | 0, o | 0, 45) | 0), W() | 0;
          e: do
            if (!(un(l & 127) | 0))
              (l = Wr(7, 0, d, (((d | 0) < 0) << 31) >> 31) | 0), (d = W() | 0);
            else {
              t: do
                if (m | 0) {
                  for (
                    l = 1;
                    (_ = je(7, 0, (((15 - l) | 0) * 3) | 0) | 0),
                      !!((((_ & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0));

                  )
                    if (l >>> 0 < m >>> 0) l = (l + 1) | 0;
                    else break t;
                  (l = Wr(7, 0, d, (((d | 0) < 0) << 31) >> 31) | 0),
                    (d = W() | 0);
                  break e;
                }
              while (0);
              (l = Wr(7, 0, d, (((d | 0) < 0) << 31) >> 31) | 0),
                (l = Xn(l | 0, W() | 0, 5, 0) | 0),
                (l = zt(l | 0, W() | 0, -5, -1) | 0),
                (l = bs(l | 0, W() | 0, 6, 0) | 0),
                (l = zt(l | 0, W() | 0, 1, 0) | 0),
                (d = W() | 0);
            }
          while (0);
          return (
            (_ = f), (A[_ >> 2] = l), (A[(_ + 4) >> 2] = d), (_ = 0), _ | 0
          );
        }
        function cn(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          if (((d = De(a | 0, o | 0, 45) | 0), W() | 0, !(un(d & 127) | 0)))
            return (d = 0), d | 0;
          (d = De(a | 0, o | 0, 52) | 0), W() | 0, (d = d & 15);
          e: do
            if (!d) l = 0;
            else
              for (f = 1; ; ) {
                if (
                  ((l = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
                  W() | 0,
                  (l = l & 7),
                  l | 0)
                )
                  break e;
                if (f >>> 0 < d >>> 0) f = (f + 1) | 0;
                else {
                  l = 0;
                  break;
                }
              }
          while (0);
          return (d = ((l | 0) == 0) & 1), d | 0;
        }
        function Sg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0;
          if (
            ((_ = z),
            (z = (z + 16) | 0),
            (m = _),
            Cf(m, a, o, l),
            (o = m),
            (a = A[o >> 2] | 0),
            (o = A[(o + 4) >> 2] | 0),
            ((a | 0) == 0) & ((o | 0) == 0))
          )
            return (z = _), 0;
          (d = 0), (l = 0);
          do
            (y = (f + (d << 3)) | 0),
              (A[y >> 2] = a),
              (A[(y + 4) >> 2] = o),
              (d = zt(d | 0, l | 0, 1, 0) | 0),
              (l = W() | 0),
              Rf(m),
              (y = m),
              (a = A[y >> 2] | 0),
              (o = A[(y + 4) >> 2] | 0);
          while (!(((a | 0) == 0) & ((o | 0) == 0)));
          return (z = _), 0;
        }
        function Tg(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (f | 0) < (l | 0)
              ? ((l = o), (f = a), St(l | 0), f | 0)
              : ((l = je(-1, -1, (((((f - l) | 0) * 3) | 0) + 3) | 0) | 0),
                (f = je(~l | 0, ~(W() | 0) | 0, (((15 - f) | 0) * 3) | 0) | 0),
                (l = ~(W() | 0) & o),
                (f = ~f & a),
                St(l | 0),
                f | 0)
          );
        }
        function Cg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0;
          return (
            (d = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (d = d & 15),
            ((l | 0) < 16) & ((d | 0) <= (l | 0))
              ? ((d | 0) < (l | 0) &&
                  ((d =
                    je(-1, -1, (((((l + -1 - d) | 0) * 3) | 0) + 3) | 0) | 0),
                  (d =
                    je(~d | 0, ~(W() | 0) | 0, (((15 - l) | 0) * 3) | 0) | 0),
                  (o = ~(W() | 0) & o),
                  (a = ~d & a)),
                (d = je(l | 0, 0, 52) | 0),
                (l = (o & -15728641) | (W() | 0)),
                (A[f >> 2] = a | d),
                (A[(f + 4) >> 2] = l),
                (f = 0),
                f | 0)
              : ((f = 4), f | 0)
          );
        }
        function Rg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0;
          if (((l | 0) == 0) & ((f | 0) == 0)) return (Ve = 0), Ve | 0;
          if (
            ((d = a),
            (m = A[d >> 2] | 0),
            (d = A[(d + 4) >> 2] | 0),
            !0 & (((d & 15728640) | 0) == 0))
          ) {
            if (
              !(((f | 0) > 0) | (((f | 0) == 0) & (l >>> 0 > 0))) ||
              ((Ve = o),
              (A[Ve >> 2] = m),
              (A[(Ve + 4) >> 2] = d),
              ((l | 0) == 1) & ((f | 0) == 0))
            )
              return (Ve = 0), Ve | 0;
            d = 1;
            do
              (Ze = (a + (d << 3)) | 0),
                (st = A[(Ze + 4) >> 2] | 0),
                (Ve = (o + (d << 3)) | 0),
                (A[Ve >> 2] = A[Ze >> 2]),
                (A[(Ve + 4) >> 2] = st),
                (d = (d + 1) | 0);
            while ((0 < (f | 0)) | (((f | 0) == 0) & (d >>> 0 < l >>> 0)));
            return (d = 0), d | 0;
          }
          if (((ue = l << 3), (st = Ar(ue) | 0), !st)) return (Ve = 13), Ve | 0;
          if ((aA(st | 0, a | 0, ue | 0) | 0, (Ze = lr(l, 8) | 0), !Ze))
            return yt(st), (Ve = 13), Ve | 0;
          e: do
            if (l | 0) {
              t: for (;;) {
                (d = st),
                  (Ee = A[d >> 2] | 0),
                  (d = A[(d + 4) >> 2] | 0),
                  (ve = De(Ee | 0, d | 0, 52) | 0),
                  W() | 0,
                  (ve = ve & 15),
                  (_e = (ve + -1) | 0),
                  (we = (l | 0) > 0);
                n: do
                  if (((ve | 0) != 0) & we) {
                    if (
                      ((se = (((l | 0) < 0) << 31) >> 31),
                      (Z = je(_e | 0, 0, 52) | 0),
                      (fe = W() | 0),
                      _e >>> 0 > 15)
                    ) {
                      if (!(((Ee | 0) == 0) & ((d | 0) == 0))) {
                        Ve = 17;
                        break t;
                      }
                      for (m = 0; ; ) {
                        if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break n;
                        if (
                          ((f = (st + (m << 3)) | 0),
                          (fe = A[f >> 2] | 0),
                          (f = A[(f + 4) >> 2] | 0),
                          !(((fe | 0) == 0) & ((f | 0) == 0)))
                        ) {
                          (d = f), (Ve = 17);
                          break t;
                        }
                      }
                    }
                    for (m = 0, a = Ee, f = d; ; ) {
                      if (!(((a | 0) == 0) & ((f | 0) == 0))) {
                        if (!(!0 & (((f & 117440512) | 0) == 0))) {
                          Ve = 22;
                          break t;
                        }
                        if (
                          ((y = De(a | 0, f | 0, 52) | 0),
                          W() | 0,
                          (y = y & 15),
                          (y | 0) < (_e | 0))
                        ) {
                          (d = 12), (Ve = 28);
                          break t;
                        }
                        if (
                          (y | 0) != (_e | 0) &&
                          ((a = a | Z),
                          (f = (f & -15728641) | fe),
                          y >>> 0 >= ve >>> 0)
                        ) {
                          _ = _e;
                          do
                            (ee = je(7, 0, (((14 - _) | 0) * 3) | 0) | 0),
                              (_ = (_ + 1) | 0),
                              (a = ee | a),
                              (f = W() | 0 | f);
                          while (_ >>> 0 < y >>> 0);
                        }
                        if (
                          ((_ = eo(a | 0, f | 0, l | 0, se | 0) | 0),
                          W() | 0,
                          (P = (Ze + (_ << 3)) | 0),
                          (y = P),
                          (T = A[y >> 2] | 0),
                          (y = A[(y + 4) >> 2] | 0),
                          ((T | 0) == 0) & ((y | 0) == 0))
                        )
                          _ = P;
                        else
                          for (ee = 0; ; ) {
                            if ((ee | 0) > (l | 0)) {
                              Ve = 32;
                              break t;
                            }
                            if (
                              ((T | 0) == (a | 0)) &
                              (((y & -117440513) | 0) == (f | 0))
                            ) {
                              (B = De(T | 0, y | 0, 56) | 0),
                                W() | 0,
                                (B = B & 7),
                                (j = (B + 1) | 0),
                                (Ke = De(T | 0, y | 0, 45) | 0),
                                W() | 0;
                              i: do
                                if (!(un(Ke & 127) | 0)) y = 7;
                                else {
                                  if (
                                    ((T = De(T | 0, y | 0, 52) | 0),
                                    W() | 0,
                                    (T = T & 15),
                                    !T)
                                  ) {
                                    y = 6;
                                    break;
                                  }
                                  for (y = 1; ; ) {
                                    if (
                                      ((Ke =
                                        je(7, 0, (((15 - y) | 0) * 3) | 0) | 0),
                                      !(
                                        (((Ke & a) | 0) == 0) &
                                        ((((W() | 0) & f) | 0) == 0)
                                      ))
                                    ) {
                                      y = 7;
                                      break i;
                                    }
                                    if (y >>> 0 < T >>> 0) y = (y + 1) | 0;
                                    else {
                                      y = 6;
                                      break;
                                    }
                                  }
                                }
                              while (0);
                              if (((B + 2) | 0) >>> 0 > y >>> 0) {
                                Ve = 42;
                                break t;
                              }
                              (Ke = je(j | 0, 0, 56) | 0),
                                (f = W() | 0 | (f & -117440513)),
                                (j = P),
                                (A[j >> 2] = 0),
                                (A[(j + 4) >> 2] = 0),
                                (a = Ke | a);
                            } else _ = ((_ + 1) | 0) % (l | 0) | 0;
                            if (
                              ((P = (Ze + (_ << 3)) | 0),
                              (y = P),
                              (T = A[y >> 2] | 0),
                              (y = A[(y + 4) >> 2] | 0),
                              ((T | 0) == 0) & ((y | 0) == 0))
                            ) {
                              _ = P;
                              break;
                            } else ee = (ee + 1) | 0;
                          }
                        (Ke = _), (A[Ke >> 2] = a), (A[(Ke + 4) >> 2] = f);
                      }
                      if (((m = (m + 1) | 0), (m | 0) >= (l | 0))) break n;
                      (f = (st + (m << 3)) | 0),
                        (a = A[f >> 2] | 0),
                        (f = A[(f + 4) >> 2] | 0);
                    }
                  }
                while (0);
                if (((l + 5) | 0) >>> 0 < 11) {
                  Ve = 85;
                  break;
                }
                if (((fe = lr(((l | 0) / 6) | 0, 8) | 0), !fe)) {
                  Ve = 49;
                  break;
                }
                n: do
                  if (we) {
                    (ee = 0), (j = 0);
                    do {
                      if (
                        ((y = (Ze + (ee << 3)) | 0),
                        (f = y),
                        (m = A[f >> 2] | 0),
                        (f = A[(f + 4) >> 2] | 0),
                        !(((m | 0) == 0) & ((f | 0) == 0)))
                      ) {
                        (T = De(m | 0, f | 0, 56) | 0),
                          W() | 0,
                          (T = T & 7),
                          (a = (T + 1) | 0),
                          (P = f & -117440513),
                          (Ke = De(m | 0, f | 0, 45) | 0),
                          W() | 0;
                        i: do
                          if (un(Ke & 127) | 0) {
                            if (
                              ((B = De(m | 0, f | 0, 52) | 0),
                              W() | 0,
                              (B = B & 15),
                              B | 0)
                            )
                              for (_ = 1; ; ) {
                                if (
                                  ((Ke =
                                    je(7, 0, (((15 - _) | 0) * 3) | 0) | 0),
                                  !(
                                    (((m & Ke) | 0) == 0) &
                                    (((P & (W() | 0)) | 0) == 0)
                                  ))
                                )
                                  break i;
                                if (_ >>> 0 < B >>> 0) _ = (_ + 1) | 0;
                                else break;
                              }
                            (f = je(a | 0, 0, 56) | 0),
                              (m = f | m),
                              (f = W() | 0 | P),
                              (a = y),
                              (A[a >> 2] = m),
                              (A[(a + 4) >> 2] = f),
                              (a = (T + 2) | 0);
                          }
                        while (0);
                        (a | 0) == 7 &&
                          ((Ke = (fe + (j << 3)) | 0),
                          (A[Ke >> 2] = m),
                          (A[(Ke + 4) >> 2] = f & -117440513),
                          (j = (j + 1) | 0));
                      }
                      ee = (ee + 1) | 0;
                    } while ((ee | 0) != (l | 0));
                    if (we) {
                      if (
                        ((ee = (((l | 0) < 0) << 31) >> 31),
                        (se = je(_e | 0, 0, 52) | 0),
                        (Z = W() | 0),
                        _e >>> 0 > 15)
                      ) {
                        if (!(((Ee | 0) == 0) & ((d | 0) == 0))) {
                          (d = 4), (Ve = 84);
                          break t;
                        }
                        for (d = 0; ; ) {
                          if (((d = (d + 1) | 0), (d | 0) >= (l | 0))) {
                            (m = 0), (d = j);
                            break n;
                          }
                          if (
                            ((Ke = (st + (d << 3)) | 0),
                            !(
                              ((A[Ke >> 2] | 0) == 0) &
                              ((A[(Ke + 4) >> 2] | 0) == 0)
                            ))
                          ) {
                            (d = 4), (Ve = 84);
                            break t;
                          }
                        }
                      }
                      for (B = 0, m = 0, P = Ee; ; ) {
                        do
                          if (!(((P | 0) == 0) & ((d | 0) == 0))) {
                            if (
                              ((y = De(P | 0, d | 0, 52) | 0),
                              W() | 0,
                              (y = y & 15),
                              (y | 0) < (_e | 0))
                            ) {
                              (d = 12), (Ve = 84);
                              break t;
                            }
                            do
                              if ((y | 0) == (_e | 0)) (f = P), (y = d);
                              else {
                                if (
                                  ((f = P | se),
                                  (a = (d & -15728641) | Z),
                                  y >>> 0 < ve >>> 0)
                                ) {
                                  y = a;
                                  break;
                                }
                                _ = _e;
                                do
                                  (Ke = je(7, 0, (((14 - _) | 0) * 3) | 0) | 0),
                                    (_ = (_ + 1) | 0),
                                    (f = Ke | f),
                                    (a = W() | 0 | a);
                                while (_ >>> 0 < y >>> 0);
                                y = a;
                              }
                            while (0);
                            for (
                              _ = eo(f | 0, y | 0, l | 0, ee | 0) | 0,
                                W() | 0,
                                a = 0;
                              ;

                            ) {
                              if ((a | 0) > (l | 0)) {
                                Ve = 77;
                                break t;
                              }
                              if (
                                ((Ke = (Ze + (_ << 3)) | 0),
                                (T = A[(Ke + 4) >> 2] | 0),
                                ((T & -117440513) | 0) == (y | 0) &&
                                  (A[Ke >> 2] | 0) == (f | 0))
                              ) {
                                Ve = 79;
                                break;
                              }
                              if (
                                ((_ = ((_ + 1) | 0) % (l | 0) | 0),
                                (Ke = (Ze + (_ << 3)) | 0),
                                (A[Ke >> 2] | 0) == (f | 0) &&
                                  (A[(Ke + 4) >> 2] | 0) == (y | 0))
                              )
                                break;
                              a = (a + 1) | 0;
                            }
                            if (
                              (Ve | 0) == 79 &&
                              ((Ve = 0),
                              !0 & (((T & 117440512) | 0) == 100663296))
                            )
                              break;
                            (Ke = (o + (m << 3)) | 0),
                              (A[Ke >> 2] = P),
                              (A[(Ke + 4) >> 2] = d),
                              (m = (m + 1) | 0);
                          }
                        while (0);
                        if (((d = (B + 1) | 0), (d | 0) >= (l | 0))) {
                          d = j;
                          break n;
                        }
                        (Ke = (st + (d << 3)) | 0),
                          (B = d),
                          (P = A[Ke >> 2] | 0),
                          (d = A[(Ke + 4) >> 2] | 0);
                      }
                    } else (m = 0), (d = j);
                  } else (m = 0), (d = 0);
                while (0);
                if (
                  (Ms(Ze | 0, 0, ue | 0) | 0,
                  aA(st | 0, fe | 0, (d << 3) | 0) | 0,
                  yt(fe),
                  d)
                )
                  (o = (o + (m << 3)) | 0), (l = d);
                else break e;
              }
              if ((Ve | 0) == 17)
                !0 & (((d & 117440512) | 0) == 0)
                  ? ((d = 4), (Ve = 28))
                  : (Ve = 22);
              else if ((Ve | 0) == 32) ht(23313, 22674, 362, 22684);
              else {
                if ((Ve | 0) == 42) return yt(st), yt(Ze), (Ke = 10), Ke | 0;
                if ((Ve | 0) == 49) return yt(st), yt(Ze), (Ke = 13), Ke | 0;
                if ((Ve | 0) == 77) ht(23313, 22674, 462, 22684);
                else {
                  if ((Ve | 0) == 84)
                    return yt(fe), yt(st), yt(Ze), (Ke = d), Ke | 0;
                  if ((Ve | 0) == 85) {
                    aA(o | 0, st | 0, (l << 3) | 0) | 0;
                    break;
                  }
                }
              }
              if ((Ve | 0) == 22) return yt(st), yt(Ze), (Ke = 5), Ke | 0;
              if ((Ve | 0) == 28) return yt(st), yt(Ze), (Ke = d), Ke | 0;
            }
          while (0);
          return yt(st), yt(Ze), (Ke = 0), Ke | 0;
        }
        function Pg(a, o, l, f, d, m, _) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (m = m | 0),
            (_ = _ | 0);
          var y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0;
          if (
            ((fe = z),
            (z = (z + 16) | 0),
            (Z = fe),
            !(((l | 0) > 0) | (((l | 0) == 0) & (o >>> 0 > 0))))
          )
            return (Z = 0), (z = fe), Z | 0;
          if ((_ | 0) >= 16) return (Z = 12), (z = fe), Z | 0;
          (ee = 0), (se = 0), (j = 0), (y = 0);
          e: for (;;) {
            if (
              ((P = (a + (ee << 3)) | 0),
              (T = A[P >> 2] | 0),
              (P = A[(P + 4) >> 2] | 0),
              (B = De(T | 0, P | 0, 52) | 0),
              W() | 0,
              ((B & 15) | 0) > (_ | 0))
            ) {
              (y = 12), (T = 11);
              break;
            }
            if (
              (Cf(Z, T, P, _),
              (B = Z),
              (P = A[B >> 2] | 0),
              (B = A[(B + 4) >> 2] | 0),
              ((P | 0) == 0) & ((B | 0) == 0))
            )
              T = j;
            else {
              T = j;
              do {
                if (
                  !(
                    ((y | 0) < (m | 0)) |
                    (((y | 0) == (m | 0)) & (T >>> 0 < d >>> 0))
                  )
                ) {
                  T = 10;
                  break e;
                }
                (j = (f + (T << 3)) | 0),
                  (A[j >> 2] = P),
                  (A[(j + 4) >> 2] = B),
                  (T = zt(T | 0, y | 0, 1, 0) | 0),
                  (y = W() | 0),
                  Rf(Z),
                  (j = Z),
                  (P = A[j >> 2] | 0),
                  (B = A[(j + 4) >> 2] | 0);
              } while (!(((P | 0) == 0) & ((B | 0) == 0)));
            }
            if (
              ((ee = zt(ee | 0, se | 0, 1, 0) | 0),
              (se = W() | 0),
              ((se | 0) < (l | 0)) |
                (((se | 0) == (l | 0)) & (ee >>> 0 < o >>> 0)))
            )
              j = T;
            else {
              (y = 0), (T = 11);
              break;
            }
          }
          return (T | 0) == 10
            ? ((Z = 14), (z = fe), Z | 0)
            : (T | 0) == 11
            ? ((z = fe), y | 0)
            : 0;
        }
        function Lg(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0;
          (ee = z), (z = (z + 16) | 0), (j = ee);
          e: do
            if (((l | 0) > 0) | (((l | 0) == 0) & (o >>> 0 > 0))) {
              for (P = 0, _ = 0, m = 0, B = 0; ; ) {
                if (
                  ((T = (a + (P << 3)) | 0),
                  (y = A[T >> 2] | 0),
                  (T = A[(T + 4) >> 2] | 0),
                  !(((y | 0) == 0) & ((T | 0) == 0)) &&
                    ((T = (rA(y, T, f, j) | 0) == 0),
                    (y = j),
                    (_ =
                      zt(A[y >> 2] | 0, A[(y + 4) >> 2] | 0, _ | 0, m | 0) | 0),
                    (m = W() | 0),
                    !T))
                ) {
                  m = 12;
                  break;
                }
                if (
                  ((P = zt(P | 0, B | 0, 1, 0) | 0),
                  (B = W() | 0),
                  !(
                    ((B | 0) < (l | 0)) |
                    (((B | 0) == (l | 0)) & (P >>> 0 < o >>> 0))
                  ))
                )
                  break e;
              }
              return (z = ee), m | 0;
            } else (_ = 0), (m = 0);
          while (0);
          return (
            (A[d >> 2] = _), (A[(d + 4) >> 2] = m), (d = 0), (z = ee), d | 0
          );
        }
        function Dg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            (o = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (o & 1) | 0
          );
        }
        function di(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          if (((d = De(a | 0, o | 0, 52) | 0), W() | 0, (d = d & 15), !d))
            return (d = 0), d | 0;
          for (f = 1; ; ) {
            if (
              ((l = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
              W() | 0,
              (l = l & 7),
              l | 0)
            ) {
              f = 5;
              break;
            }
            if (f >>> 0 < d >>> 0) f = (f + 1) | 0;
            else {
              (l = 0), (f = 5);
              break;
            }
          }
          return (f | 0) == 5 ? l | 0 : 0;
        }
        function _0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          if (((T = De(a | 0, o | 0, 52) | 0), W() | 0, (T = T & 15), !T))
            return (y = o), (T = a), St(y | 0), T | 0;
          for (y = 1, l = 0; ; ) {
            (m = (((15 - y) | 0) * 3) | 0),
              (f = je(7, 0, m | 0) | 0),
              (d = W() | 0),
              (_ = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (m = je(xs(_ & 7) | 0, 0, m | 0) | 0),
              (_ = W() | 0),
              (a = m | (a & ~f)),
              (o = _ | (o & ~d));
            e: do
              if (!l)
                if ((((m & f) | 0) == 0) & (((_ & d) | 0) == 0)) l = 0;
                else if (
                  ((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f)
                )
                  l = 1;
                else {
                  l = 1;
                  t: for (;;) {
                    switch (
                      ((_ = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      _ & 7)
                    ) {
                      case 1:
                        break t;
                      case 0:
                        break;
                      default: {
                        l = 1;
                        break e;
                      }
                    }
                    if (l >>> 0 < f >>> 0) l = (l + 1) | 0;
                    else {
                      l = 1;
                      break e;
                    }
                  }
                  for (l = 1; ; )
                    if (
                      ((_ = (((15 - l) | 0) * 3) | 0),
                      (d = De(a | 0, o | 0, _ | 0) | 0),
                      W() | 0,
                      (m = je(7, 0, _ | 0) | 0),
                      (o = o & ~(W() | 0)),
                      (_ = je(xs(d & 7) | 0, 0, _ | 0) | 0),
                      (a = (a & ~m) | _),
                      (o = o | (W() | 0)),
                      l >>> 0 < f >>> 0)
                    )
                      l = (l + 1) | 0;
                    else {
                      l = 1;
                      break;
                    }
                }
            while (0);
            if (y >>> 0 < T >>> 0) y = (y + 1) | 0;
            else break;
          }
          return St(o | 0), a | 0;
        }
        function ys(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0;
          if (((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f))
            return (l = o), (f = a), St(l | 0), f | 0;
          for (
            l = 1;
            (m = (((15 - l) | 0) * 3) | 0),
              (_ = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (d = je(7, 0, m | 0) | 0),
              (o = o & ~(W() | 0)),
              (m = je(xs(_ & 7) | 0, 0, m | 0) | 0),
              (a = m | (a & ~d)),
              (o = W() | 0 | o),
              l >>> 0 < f >>> 0;

          )
            l = (l + 1) | 0;
          return St(o | 0), a | 0;
        }
        function Ig(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          if (((T = De(a | 0, o | 0, 52) | 0), W() | 0, (T = T & 15), !T))
            return (y = o), (T = a), St(y | 0), T | 0;
          for (y = 1, l = 0; ; ) {
            (m = (((15 - y) | 0) * 3) | 0),
              (f = je(7, 0, m | 0) | 0),
              (d = W() | 0),
              (_ = De(a | 0, o | 0, m | 0) | 0),
              W() | 0,
              (m = je(Vr(_ & 7) | 0, 0, m | 0) | 0),
              (_ = W() | 0),
              (a = m | (a & ~f)),
              (o = _ | (o & ~d));
            e: do
              if (!l)
                if ((((m & f) | 0) == 0) & (((_ & d) | 0) == 0)) l = 0;
                else if (
                  ((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f)
                )
                  l = 1;
                else {
                  l = 1;
                  t: for (;;) {
                    switch (
                      ((_ = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      _ & 7)
                    ) {
                      case 1:
                        break t;
                      case 0:
                        break;
                      default: {
                        l = 1;
                        break e;
                      }
                    }
                    if (l >>> 0 < f >>> 0) l = (l + 1) | 0;
                    else {
                      l = 1;
                      break e;
                    }
                  }
                  for (l = 1; ; )
                    if (
                      ((d = (((15 - l) | 0) * 3) | 0),
                      (m = je(7, 0, d | 0) | 0),
                      (_ = o & ~(W() | 0)),
                      (o = De(a | 0, o | 0, d | 0) | 0),
                      W() | 0,
                      (o = je(Vr(o & 7) | 0, 0, d | 0) | 0),
                      (a = (a & ~m) | o),
                      (o = _ | (W() | 0)),
                      l >>> 0 < f >>> 0)
                    )
                      l = (l + 1) | 0;
                    else {
                      l = 1;
                      break;
                    }
                }
            while (0);
            if (y >>> 0 < T >>> 0) y = (y + 1) | 0;
            else break;
          }
          return St(o | 0), a | 0;
        }
        function x0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0;
          if (((f = De(a | 0, o | 0, 52) | 0), W() | 0, (f = f & 15), !f))
            return (l = o), (f = a), St(l | 0), f | 0;
          for (
            l = 1;
            (_ = (((15 - l) | 0) * 3) | 0),
              (m = je(7, 0, _ | 0) | 0),
              (d = o & ~(W() | 0)),
              (o = De(a | 0, o | 0, _ | 0) | 0),
              W() | 0,
              (o = je(Vr(o & 7) | 0, 0, _ | 0) | 0),
              (a = o | (a & ~m)),
              (o = W() | 0 | d),
              l >>> 0 < f >>> 0;

          )
            l = (l + 1) | 0;
          return St(o | 0), a | 0;
        }
        function Og(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            ((T = z),
            (z = (z + 64) | 0),
            (y = (T + 40) | 0),
            (f = (T + 24) | 0),
            (d = (T + 12) | 0),
            (m = T),
            je(o | 0, 0, 52) | 0,
            (l = W() | 0 | 134225919),
            !o)
          )
            return (A[(a + 4) >> 2] | 0) > 2 ||
              (A[(a + 8) >> 2] | 0) > 2 ||
              (A[(a + 12) >> 2] | 0) > 2
              ? ((_ = 0), (y = 0), St(_ | 0), (z = T), y | 0)
              : (je(cf(a) | 0, 0, 45) | 0,
                (_ = W() | 0 | l),
                (y = -1),
                St(_ | 0),
                (z = T),
                y | 0);
          if (
            ((A[y >> 2] = A[a >> 2]),
            (A[(y + 4) >> 2] = A[(a + 4) >> 2]),
            (A[(y + 8) >> 2] = A[(a + 8) >> 2]),
            (A[(y + 12) >> 2] = A[(a + 12) >> 2]),
            (_ = (y + 4) | 0),
            (o | 0) > 0)
          )
            for (
              a = -1;
              (A[f >> 2] = A[_ >> 2]),
                (A[(f + 4) >> 2] = A[(_ + 4) >> 2]),
                (A[(f + 8) >> 2] = A[(_ + 8) >> 2]),
                o & 1
                  ? (lg(_),
                    (A[d >> 2] = A[_ >> 2]),
                    (A[(d + 4) >> 2] = A[(_ + 4) >> 2]),
                    (A[(d + 8) >> 2] = A[(_ + 8) >> 2]),
                    tA(d))
                  : (gf(_),
                    (A[d >> 2] = A[_ >> 2]),
                    (A[(d + 4) >> 2] = A[(_ + 4) >> 2]),
                    (A[(d + 8) >> 2] = A[(_ + 8) >> 2]),
                    _s(d)),
                h0(f, d, m),
                Wn(m),
                (B = (((15 - o) | 0) * 3) | 0),
                (P = je(7, 0, B | 0) | 0),
                (l = l & ~(W() | 0)),
                (B = je(eA(m) | 0, 0, B | 0) | 0),
                (a = B | (a & ~P)),
                (l = W() | 0 | l),
                (o | 0) > 1;

            )
              o = (o + -1) | 0;
          else a = -1;
          e: do
            if (
              (A[_ >> 2] | 0) <= 2 &&
              (A[(y + 8) >> 2] | 0) <= 2 &&
              (A[(y + 12) >> 2] | 0) <= 2
            ) {
              if (
                ((f = cf(y) | 0),
                (o = je(f | 0, 0, 45) | 0),
                (o = o | a),
                (a = W() | 0 | (l & -1040385)),
                (m = Jm(y) | 0),
                !(un(f) | 0))
              ) {
                if ((m | 0) <= 0) break;
                for (d = 0; ; ) {
                  if (
                    ((f = De(o | 0, a | 0, 52) | 0), W() | 0, (f = f & 15), f)
                  )
                    for (
                      l = 1;
                      (B = (((15 - l) | 0) * 3) | 0),
                        (y = De(o | 0, a | 0, B | 0) | 0),
                        W() | 0,
                        (P = je(7, 0, B | 0) | 0),
                        (a = a & ~(W() | 0)),
                        (B = je(xs(y & 7) | 0, 0, B | 0) | 0),
                        (o = (o & ~P) | B),
                        (a = a | (W() | 0)),
                        l >>> 0 < f >>> 0;

                    )
                      l = (l + 1) | 0;
                  if (((d = (d + 1) | 0), (d | 0) == (m | 0))) break e;
                }
              }
              (d = De(o | 0, a | 0, 52) | 0), W() | 0, (d = d & 15);
              t: do
                if (d) {
                  l = 1;
                  n: for (;;) {
                    switch (
                      ((B = De(o | 0, a | 0, (((15 - l) | 0) * 3) | 0) | 0),
                      W() | 0,
                      B & 7)
                    ) {
                      case 1:
                        break n;
                      case 0:
                        break;
                      default:
                        break t;
                    }
                    if (l >>> 0 < d >>> 0) l = (l + 1) | 0;
                    else break t;
                  }
                  if (ff(f, A[y >> 2] | 0) | 0)
                    for (
                      l = 1;
                      (y = (((15 - l) | 0) * 3) | 0),
                        (P = je(7, 0, y | 0) | 0),
                        (B = a & ~(W() | 0)),
                        (a = De(o | 0, a | 0, y | 0) | 0),
                        W() | 0,
                        (a = je(Vr(a & 7) | 0, 0, y | 0) | 0),
                        (o = (o & ~P) | a),
                        (a = B | (W() | 0)),
                        l >>> 0 < d >>> 0;

                    )
                      l = (l + 1) | 0;
                  else
                    for (
                      l = 1;
                      (B = (((15 - l) | 0) * 3) | 0),
                        (y = De(o | 0, a | 0, B | 0) | 0),
                        W() | 0,
                        (P = je(7, 0, B | 0) | 0),
                        (a = a & ~(W() | 0)),
                        (B = je(xs(y & 7) | 0, 0, B | 0) | 0),
                        (o = (o & ~P) | B),
                        (a = a | (W() | 0)),
                        l >>> 0 < d >>> 0;

                    )
                      l = (l + 1) | 0;
                }
              while (0);
              if ((m | 0) > 0) {
                l = 0;
                do (o = _0(o, a) | 0), (a = W() | 0), (l = (l + 1) | 0);
                while ((l | 0) != (m | 0));
              }
            } else (o = 0), (a = 0);
          while (0);
          return (P = a), (B = o), St(P | 0), (z = T), B | 0;
        }
        function Oi(a) {
          return (a = a | 0), (a | 0) % 2 | 0 | 0;
        }
        function Sf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0;
          return (
            (d = z),
            (z = (z + 16) | 0),
            (f = d),
            o >>> 0 > 15
              ? ((f = 4), (z = d), f | 0)
              : ((A[(a + 4) >> 2] & 2146435072) | 0) == 2146435072 ||
                ((A[(a + 8 + 4) >> 2] & 2146435072) | 0) == 2146435072
              ? ((f = 3), (z = d), f | 0)
              : (xg(a, o, f),
                (o = Og(f, o) | 0),
                (f = W() | 0),
                (A[l >> 2] = o),
                (A[(l + 4) >> 2] = f),
                ((o | 0) == 0) & ((f | 0) == 0) && ht(23313, 22674, 786, 22697),
                (f = 0),
                (z = d),
                f | 0)
          );
        }
        function y0(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          if (
            ((d = (l + 4) | 0),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            (_ = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (f = (m | 0) == 0),
            un(_ & 127) | 0)
          ) {
            if (f) return (_ = 1), _ | 0;
            f = 1;
          } else {
            if (f) return (_ = 0), _ | 0;
            !(A[d >> 2] | 0) && !(A[(l + 8) >> 2] | 0)
              ? (f = ((A[(l + 12) >> 2] | 0) != 0) & 1)
              : (f = 1);
          }
          for (
            l = 1;
            l & 1 ? tA(d) : _s(d),
              (_ = De(a | 0, o | 0, (((15 - l) | 0) * 3) | 0) | 0),
              W() | 0,
              vf(d, _ & 7),
              l >>> 0 < m >>> 0;

          )
            l = (l + 1) | 0;
          return f | 0;
        }
        function Ks(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            ((B = z),
            (z = (z + 16) | 0),
            (T = B),
            (P = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (P = P & 127),
            P >>> 0 > 121)
          )
            return (
              (A[l >> 2] = 0),
              (A[(l + 4) >> 2] = 0),
              (A[(l + 8) >> 2] = 0),
              (A[(l + 12) >> 2] = 0),
              (P = 5),
              (z = B),
              P | 0
            );
          e: do
            if (
              un(P) | 0 &&
              ((m = De(a | 0, o | 0, 52) | 0),
              W() | 0,
              (m = m & 15),
              (m | 0) != 0)
            ) {
              f = 1;
              t: for (;;) {
                switch (
                  ((y = De(a | 0, o | 0, (((15 - f) | 0) * 3) | 0) | 0),
                  W() | 0,
                  y & 7)
                ) {
                  case 5:
                    break t;
                  case 0:
                    break;
                  default: {
                    f = o;
                    break e;
                  }
                }
                if (f >>> 0 < m >>> 0) f = (f + 1) | 0;
                else {
                  f = o;
                  break e;
                }
              }
              for (
                d = 1, f = o;
                (o = (((15 - d) | 0) * 3) | 0),
                  (_ = je(7, 0, o | 0) | 0),
                  (y = f & ~(W() | 0)),
                  (f = De(a | 0, f | 0, o | 0) | 0),
                  W() | 0,
                  (f = je(Vr(f & 7) | 0, 0, o | 0) | 0),
                  (a = (a & ~_) | f),
                  (f = y | (W() | 0)),
                  d >>> 0 < m >>> 0;

              )
                d = (d + 1) | 0;
            } else f = o;
          while (0);
          if (
            ((y = (7696 + ((P * 28) | 0)) | 0),
            (A[l >> 2] = A[y >> 2]),
            (A[(l + 4) >> 2] = A[(y + 4) >> 2]),
            (A[(l + 8) >> 2] = A[(y + 8) >> 2]),
            (A[(l + 12) >> 2] = A[(y + 12) >> 2]),
            !(y0(a, f, l) | 0))
          )
            return (P = 0), (z = B), P | 0;
          if (
            ((_ = (l + 4) | 0),
            (A[T >> 2] = A[_ >> 2]),
            (A[(T + 4) >> 2] = A[(_ + 4) >> 2]),
            (A[(T + 8) >> 2] = A[(_ + 8) >> 2]),
            (m = De(a | 0, f | 0, 52) | 0),
            W() | 0,
            (y = m & 15),
            m & 1 ? (_s(_), (m = (y + 1) | 0)) : (m = y),
            !(un(P) | 0))
          )
            f = 0;
          else {
            e: do
              if (!y) f = 0;
              else
                for (o = 1; ; ) {
                  if (
                    ((d = De(a | 0, f | 0, (((15 - o) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (d = d & 7),
                    d | 0)
                  ) {
                    f = d;
                    break e;
                  }
                  if (o >>> 0 < y >>> 0) o = (o + 1) | 0;
                  else {
                    f = 0;
                    break;
                  }
                }
            while (0);
            f = ((f | 0) == 4) & 1;
          }
          if (!(Zs(l, m, f, 0) | 0))
            (m | 0) != (y | 0) &&
              ((A[_ >> 2] = A[T >> 2]),
              (A[(_ + 4) >> 2] = A[(T + 4) >> 2]),
              (A[(_ + 8) >> 2] = A[(T + 8) >> 2]));
          else {
            if (un(P) | 0)
              do;
              while (Zs(l, m, 0, 0) | 0);
            (m | 0) != (y | 0) && gf(_);
          }
          return (P = 0), (z = B), P | 0;
        }
        function na(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          return (
            (m = z),
            (z = (z + 16) | 0),
            (f = m),
            (d = Ks(a, o, f) | 0),
            d | 0
              ? ((z = m), d | 0)
              : ((d = De(a | 0, o | 0, 52) | 0),
                W() | 0,
                Mg(f, d & 15, l),
                (d = 0),
                (z = m),
                d | 0)
          );
        }
        function ia(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          if (
            ((_ = z), (z = (z + 16) | 0), (m = _), (f = Ks(a, o, m) | 0), f | 0)
          )
            return (m = f), (z = _), m | 0;
          (f = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (f = (un(f & 127) | 0) == 0),
            (d = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (d = d & 15);
          e: do
            if (!f) {
              if (d | 0)
                for (f = 1; ; ) {
                  if (
                    ((y = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                    !((((y & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                  )
                    break e;
                  if (f >>> 0 < d >>> 0) f = (f + 1) | 0;
                  else break;
                }
              return p0(m, d, 0, 5, l), (y = 0), (z = _), y | 0;
            }
          while (0);
          return m0(m, d, 0, 6, l), (y = 0), (z = _), y | 0;
        }
        function qg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          if (((d = De(a | 0, o | 0, 45) | 0), W() | 0, !(un(d & 127) | 0)))
            return (d = 2), (A[l >> 2] = d), 0;
          if (((d = De(a | 0, o | 0, 52) | 0), W() | 0, (d = d & 15), !d))
            return (d = 5), (A[l >> 2] = d), 0;
          for (f = 1; ; ) {
            if (
              ((m = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
              !((((m & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
            ) {
              (f = 2), (a = 6);
              break;
            }
            if (f >>> 0 < d >>> 0) f = (f + 1) | 0;
            else {
              (f = 5), (a = 6);
              break;
            }
          }
          return (a | 0) == 6 && (A[l >> 2] = f), 0;
        }
        function Tf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0;
          (j = z),
            (z = (z + 128) | 0),
            (P = (j + 112) | 0),
            (m = (j + 96) | 0),
            (B = j),
            (d = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (y = d & 15),
            (A[P >> 2] = y),
            (_ = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (_ = _ & 127);
          e: do
            if (un(_) | 0) {
              if (y | 0)
                for (f = 1; ; ) {
                  if (
                    ((T = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                    !((((T & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                  ) {
                    d = 0;
                    break e;
                  }
                  if (f >>> 0 < y >>> 0) f = (f + 1) | 0;
                  else break;
                }
              if (d & 1) d = 1;
              else
                return (
                  (T = je((y + 1) | 0, 0, 52) | 0),
                  (B = W() | 0 | (o & -15728641)),
                  (P = je(7, 0, (((14 - y) | 0) * 3) | 0) | 0),
                  (B = Tf((T | a) & ~P, B & ~(W() | 0), l) | 0),
                  (z = j),
                  B | 0
                );
            } else d = 0;
          while (0);
          if (((f = Ks(a, o, m) | 0), !f)) {
            d ? (Mf(m, P, B), (T = 5)) : (Ef(m, P, B), (T = 6));
            e: do
              if (un(_) | 0)
                if (!y) a = 5;
                else
                  for (f = 1; ; ) {
                    if (
                      ((_ = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                      !((((_ & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0)))
                    ) {
                      a = 2;
                      break e;
                    }
                    if (f >>> 0 < y >>> 0) f = (f + 1) | 0;
                    else {
                      a = 5;
                      break;
                    }
                  }
              else a = 2;
            while (0);
            Ms(l | 0, -1, (a << 2) | 0) | 0;
            e: do
              if (d)
                for (m = 0; ; ) {
                  if (
                    ((_ = (B + (m << 4)) | 0),
                    Eg(_, A[P >> 2] | 0) | 0,
                    (_ = A[_ >> 2] | 0),
                    (y = A[l >> 2] | 0),
                    ((y | 0) == -1) | ((y | 0) == (_ | 0)))
                  )
                    f = l;
                  else {
                    d = 0;
                    do {
                      if (((d = (d + 1) | 0), d >>> 0 >= a >>> 0)) {
                        f = 1;
                        break e;
                      }
                      (f = (l + (d << 2)) | 0), (y = A[f >> 2] | 0);
                    } while (!(((y | 0) == -1) | ((y | 0) == (_ | 0))));
                  }
                  if (
                    ((A[f >> 2] = _), (m = (m + 1) | 0), m >>> 0 >= T >>> 0)
                  ) {
                    f = 0;
                    break;
                  }
                }
              else
                for (m = 0; ; ) {
                  if (
                    ((_ = (B + (m << 4)) | 0),
                    Zs(_, A[P >> 2] | 0, 0, 1) | 0,
                    (_ = A[_ >> 2] | 0),
                    (y = A[l >> 2] | 0),
                    ((y | 0) == -1) | ((y | 0) == (_ | 0)))
                  )
                    f = l;
                  else {
                    d = 0;
                    do {
                      if (((d = (d + 1) | 0), d >>> 0 >= a >>> 0)) {
                        f = 1;
                        break e;
                      }
                      (f = (l + (d << 2)) | 0), (y = A[f >> 2] | 0);
                    } while (!(((y | 0) == -1) | ((y | 0) == (_ | 0))));
                  }
                  if (
                    ((A[f >> 2] = _), (m = (m + 1) | 0), m >>> 0 >= T >>> 0)
                  ) {
                    f = 0;
                    break;
                  }
                }
            while (0);
          }
          return (B = f), (z = j), B | 0;
        }
        function Ug() {
          return 12;
        }
        function b0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          if (a >>> 0 > 15) return (y = 4), y | 0;
          if ((je(a | 0, 0, 52) | 0, (y = W() | 0 | 134225919), !a)) {
            (l = 0), (f = 0);
            do
              un(f) | 0 &&
                (je(f | 0, 0, 45) | 0,
                (_ = y | (W() | 0)),
                (a = (o + (l << 3)) | 0),
                (A[a >> 2] = -1),
                (A[(a + 4) >> 2] = _),
                (l = (l + 1) | 0)),
                (f = (f + 1) | 0);
            while ((f | 0) != 122);
            return (l = 0), l | 0;
          }
          (l = 0), (_ = 0);
          do {
            if (un(_) | 0) {
              for (
                je(_ | 0, 0, 45) | 0, f = 1, d = -1, m = y | (W() | 0);
                (T = je(7, 0, (((15 - f) | 0) * 3) | 0) | 0),
                  (d = d & ~T),
                  (m = m & ~(W() | 0)),
                  (f | 0) != (a | 0);

              )
                f = (f + 1) | 0;
              (T = (o + (l << 3)) | 0),
                (A[T >> 2] = d),
                (A[(T + 4) >> 2] = m),
                (l = (l + 1) | 0);
            }
            _ = (_ + 1) | 0;
          } while ((_ | 0) != 122);
          return (l = 0), l | 0;
        }
        function Bg(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0;
          if (
            ((ve = z),
            (z = (z + 16) | 0),
            (we = ve),
            (Ee = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (Ee = Ee & 15),
            l >>> 0 > 15)
          )
            return (Ee = 4), (z = ve), Ee | 0;
          if ((Ee | 0) < (l | 0)) return (Ee = 12), (z = ve), Ee | 0;
          if ((Ee | 0) != (l | 0))
            if (
              ((m = je(l | 0, 0, 52) | 0),
              (m = m | a),
              (y = W() | 0 | (o & -15728641)),
              (Ee | 0) > (l | 0))
            ) {
              T = l;
              do
                (fe = je(7, 0, (((14 - T) | 0) * 3) | 0) | 0),
                  (T = (T + 1) | 0),
                  (m = fe | m),
                  (y = W() | 0 | y);
              while ((T | 0) < (Ee | 0));
              fe = m;
            } else fe = m;
          else (fe = a), (y = o);
          (Z = De(fe | 0, y | 0, 45) | 0), W() | 0;
          e: do
            if (un(Z & 127) | 0) {
              if (
                ((T = De(fe | 0, y | 0, 52) | 0), W() | 0, (T = T & 15), T | 0)
              )
                for (m = 1; ; ) {
                  if (
                    ((Z = je(7, 0, (((15 - m) | 0) * 3) | 0) | 0),
                    !((((Z & fe) | 0) == 0) & ((((W() | 0) & y) | 0) == 0)))
                  ) {
                    P = 33;
                    break e;
                  }
                  if (m >>> 0 < T >>> 0) m = (m + 1) | 0;
                  else break;
                }
              if (
                ((Z = f),
                (A[Z >> 2] = 0),
                (A[(Z + 4) >> 2] = 0),
                (Ee | 0) > (l | 0))
              ) {
                for (Z = o & -15728641, se = Ee; ; ) {
                  if (
                    ((ee = se),
                    (se = (se + -1) | 0),
                    (se >>> 0 > 15) | ((Ee | 0) < (se | 0)))
                  ) {
                    P = 19;
                    break;
                  }
                  if ((Ee | 0) != (se | 0))
                    if (
                      ((m = je(se | 0, 0, 52) | 0),
                      (m = m | a),
                      (T = W() | 0 | Z),
                      (Ee | 0) < (ee | 0))
                    )
                      j = m;
                    else {
                      P = se;
                      do
                        (j = je(7, 0, (((14 - P) | 0) * 3) | 0) | 0),
                          (P = (P + 1) | 0),
                          (m = j | m),
                          (T = W() | 0 | T);
                      while ((P | 0) < (Ee | 0));
                      j = m;
                    }
                  else (j = a), (T = o);
                  if (
                    ((B = De(j | 0, T | 0, 45) | 0),
                    W() | 0,
                    !(un(B & 127) | 0))
                  )
                    m = 0;
                  else {
                    (B = De(j | 0, T | 0, 52) | 0), W() | 0, (B = B & 15);
                    t: do
                      if (!B) m = 0;
                      else
                        for (P = 1; ; ) {
                          if (
                            ((m =
                              De(j | 0, T | 0, (((15 - P) | 0) * 3) | 0) | 0),
                            W() | 0,
                            (m = m & 7),
                            m | 0)
                          )
                            break t;
                          if (P >>> 0 < B >>> 0) P = (P + 1) | 0;
                          else {
                            m = 0;
                            break;
                          }
                        }
                    while (0);
                    m = ((m | 0) == 0) & 1;
                  }
                  if (
                    ((T = De(a | 0, o | 0, (((15 - ee) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (T = T & 7),
                    (T | 0) == 7)
                  ) {
                    (d = 5), (P = 42);
                    break;
                  }
                  if (((m = (m | 0) != 0), ((T | 0) == 1) & m)) {
                    (d = 5), (P = 42);
                    break;
                  }
                  if (
                    ((j = (T + (((((T | 0) != 0) & m) << 31) >> 31)) | 0),
                    j | 0 &&
                      ((P = (Ee - ee) | 0),
                      (P = Wr(7, 0, P, (((P | 0) < 0) << 31) >> 31) | 0),
                      (B = W() | 0),
                      m
                        ? ((m = Xn(P | 0, B | 0, 5, 0) | 0),
                          (m = zt(m | 0, W() | 0, -5, -1) | 0),
                          (m = bs(m | 0, W() | 0, 6, 0) | 0),
                          (m = zt(m | 0, W() | 0, 1, 0) | 0),
                          (T = W() | 0))
                        : ((m = P), (T = B)),
                      (ee = (j + -1) | 0),
                      (ee =
                        Xn(
                          P | 0,
                          B | 0,
                          ee | 0,
                          ((((ee | 0) < 0) << 31) >> 31) | 0
                        ) | 0),
                      (ee = zt(m | 0, T | 0, ee | 0, W() | 0) | 0),
                      (j = W() | 0),
                      (B = f),
                      (B =
                        zt(ee | 0, j | 0, A[B >> 2] | 0, A[(B + 4) >> 2] | 0) |
                        0),
                      (j = W() | 0),
                      (ee = f),
                      (A[ee >> 2] = B),
                      (A[(ee + 4) >> 2] = j)),
                    (se | 0) <= (l | 0))
                  ) {
                    P = 37;
                    break;
                  }
                }
                if ((P | 0) == 19) ht(23313, 22674, 1099, 22710);
                else if ((P | 0) == 37) {
                  (_ = f), (d = A[(_ + 4) >> 2] | 0), (_ = A[_ >> 2] | 0);
                  break;
                } else if ((P | 0) == 42) return (z = ve), d | 0;
              } else (d = 0), (_ = 0);
            } else P = 33;
          while (0);
          e: do
            if ((P | 0) == 33)
              if (
                ((Z = f),
                (A[Z >> 2] = 0),
                (A[(Z + 4) >> 2] = 0),
                (Ee | 0) > (l | 0))
              ) {
                for (m = Ee; ; ) {
                  if (
                    ((d = De(a | 0, o | 0, (((15 - m) | 0) * 3) | 0) | 0),
                    W() | 0,
                    (d = d & 7),
                    (d | 0) == 7)
                  ) {
                    d = 5;
                    break;
                  }
                  if (
                    ((_ = (Ee - m) | 0),
                    (_ = Wr(7, 0, _, (((_ | 0) < 0) << 31) >> 31) | 0),
                    (d = Xn(_ | 0, W() | 0, d | 0, 0) | 0),
                    (_ = W() | 0),
                    (Z = f),
                    (_ =
                      zt(A[Z >> 2] | 0, A[(Z + 4) >> 2] | 0, d | 0, _ | 0) | 0),
                    (d = W() | 0),
                    (Z = f),
                    (A[Z >> 2] = _),
                    (A[(Z + 4) >> 2] = d),
                    (m = (m + -1) | 0),
                    (m | 0) <= (l | 0))
                  )
                    break e;
                }
                return (z = ve), d | 0;
              } else (d = 0), (_ = 0);
          while (0);
          return (
            rA(fe, y, Ee, we) | 0 && ht(23313, 22674, 1063, 22725),
            (Ee = we),
            (we = A[(Ee + 4) >> 2] | 0),
            (((d | 0) > -1) | (((d | 0) == -1) & (_ >>> 0 > 4294967295))) &
            (((we | 0) > (d | 0)) |
              ((we | 0) == (d | 0) ? (A[Ee >> 2] | 0) >>> 0 > _ >>> 0 : 0))
              ? ((Ee = 0), (z = ve), Ee | 0)
              : (ht(23313, 22674, 1139, 22710), 0)
          );
        }
        function Ng(a, o, l, f, d, m) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (m = m | 0);
          var _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0;
          if (((j = z), (z = (z + 16) | 0), (_ = j), d >>> 0 > 15))
            return (m = 4), (z = j), m | 0;
          if (
            ((y = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (y = y & 15),
            (y | 0) > (d | 0))
          )
            return (m = 12), (z = j), m | 0;
          if (
            (rA(l, f, d, _) | 0 && ht(23313, 22674, 1063, 22725),
            (B = _),
            (P = A[(B + 4) >> 2] | 0),
            !(
              (((o | 0) > -1) | (((o | 0) == -1) & (a >>> 0 > 4294967295))) &
              (((P | 0) > (o | 0)) |
                ((P | 0) == (o | 0) ? (A[B >> 2] | 0) >>> 0 > a >>> 0 : 0))
            ))
          )
            return (m = 2), (z = j), m | 0;
          (B = (d - y) | 0),
            (d = je(d | 0, 0, 52) | 0),
            (T = W() | 0 | (f & -15728641)),
            (P = m),
            (A[P >> 2] = d | l),
            (A[(P + 4) >> 2] = T),
            (P = De(l | 0, f | 0, 45) | 0),
            W() | 0;
          e: do
            if (un(P & 127) | 0) {
              if (y | 0)
                for (_ = 1; ; ) {
                  if (
                    ((P = je(7, 0, (((15 - _) | 0) * 3) | 0) | 0),
                    !((((P & l) | 0) == 0) & ((((W() | 0) & f) | 0) == 0)))
                  )
                    break e;
                  if (_ >>> 0 < y >>> 0) _ = (_ + 1) | 0;
                  else break;
                }
              if ((B | 0) < 1) return (m = 0), (z = j), m | 0;
              for (P = y ^ 15, f = -1, T = 1, _ = 1; ; ) {
                (y = (B - T) | 0),
                  (y = Wr(7, 0, y, (((y | 0) < 0) << 31) >> 31) | 0),
                  (l = W() | 0);
                do
                  if (_)
                    if (
                      ((_ = Xn(y | 0, l | 0, 5, 0) | 0),
                      (_ = zt(_ | 0, W() | 0, -5, -1) | 0),
                      (_ = bs(_ | 0, W() | 0, 6, 0) | 0),
                      (d = W() | 0),
                      ((o | 0) > (d | 0)) |
                        (((o | 0) == (d | 0)) & (a >>> 0 > _ >>> 0)))
                    ) {
                      (o = zt(a | 0, o | 0, -1, -1) | 0),
                        (o = jn(o | 0, W() | 0, _ | 0, d | 0) | 0),
                        (_ = W() | 0),
                        (ee = m),
                        (Z = A[ee >> 2] | 0),
                        (ee = A[(ee + 4) >> 2] | 0),
                        (fe = (((P + f) | 0) * 3) | 0),
                        (se = je(7, 0, fe | 0) | 0),
                        (ee = ee & ~(W() | 0)),
                        (f = bs(o | 0, _ | 0, y | 0, l | 0) | 0),
                        (a = W() | 0),
                        (d = zt(f | 0, a | 0, 2, 0) | 0),
                        (fe = je(d | 0, W() | 0, fe | 0) | 0),
                        (ee = W() | 0 | ee),
                        (d = m),
                        (A[d >> 2] = fe | (Z & ~se)),
                        (A[(d + 4) >> 2] = ee),
                        (a = Xn(f | 0, a | 0, y | 0, l | 0) | 0),
                        (a = jn(o | 0, _ | 0, a | 0, W() | 0) | 0),
                        (_ = 0),
                        (o = W() | 0);
                      break;
                    } else {
                      (fe = m),
                        (se = A[fe >> 2] | 0),
                        (fe = A[(fe + 4) >> 2] | 0),
                        (Z = je(7, 0, (((P + f) | 0) * 3) | 0) | 0),
                        (fe = fe & ~(W() | 0)),
                        (_ = m),
                        (A[_ >> 2] = se & ~Z),
                        (A[(_ + 4) >> 2] = fe),
                        (_ = 1);
                      break;
                    }
                  else
                    (se = m),
                      (d = A[se >> 2] | 0),
                      (se = A[(se + 4) >> 2] | 0),
                      (f = (((P + f) | 0) * 3) | 0),
                      (ee = je(7, 0, f | 0) | 0),
                      (se = se & ~(W() | 0)),
                      (fe = bs(a | 0, o | 0, y | 0, l | 0) | 0),
                      (_ = W() | 0),
                      (f = je(fe | 0, _ | 0, f | 0) | 0),
                      (se = W() | 0 | se),
                      (Z = m),
                      (A[Z >> 2] = f | (d & ~ee)),
                      (A[(Z + 4) >> 2] = se),
                      (_ = Xn(fe | 0, _ | 0, y | 0, l | 0) | 0),
                      (a = jn(a | 0, o | 0, _ | 0, W() | 0) | 0),
                      (_ = 0),
                      (o = W() | 0);
                while (0);
                if ((B | 0) > (T | 0)) (f = ~T), (T = (T + 1) | 0);
                else {
                  o = 0;
                  break;
                }
              }
              return (z = j), o | 0;
            }
          while (0);
          if ((B | 0) < 1) return (fe = 0), (z = j), fe | 0;
          for (d = y ^ 15, _ = 1; ; )
            if (
              ((Z = (B - _) | 0),
              (Z = Wr(7, 0, Z, (((Z | 0) < 0) << 31) >> 31) | 0),
              (fe = W() | 0),
              (T = m),
              (l = A[T >> 2] | 0),
              (T = A[(T + 4) >> 2] | 0),
              (y = (((d - _) | 0) * 3) | 0),
              (f = je(7, 0, y | 0) | 0),
              (T = T & ~(W() | 0)),
              (ee = bs(a | 0, o | 0, Z | 0, fe | 0) | 0),
              (se = W() | 0),
              (y = je(ee | 0, se | 0, y | 0) | 0),
              (T = W() | 0 | T),
              (P = m),
              (A[P >> 2] = y | (l & ~f)),
              (A[(P + 4) >> 2] = T),
              (fe = Xn(ee | 0, se | 0, Z | 0, fe | 0) | 0),
              (a = jn(a | 0, o | 0, fe | 0, W() | 0) | 0),
              (o = W() | 0),
              (B | 0) <= (_ | 0))
            ) {
              o = 0;
              break;
            } else _ = (_ + 1) | 0;
          return (z = j), o | 0;
        }
        function Cf(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0;
          (d = De(o | 0, l | 0, 52) | 0),
            W() | 0,
            (d = d & 15),
            (((o | 0) == 0) & ((l | 0) == 0)) |
            (((f | 0) > 15) | ((d | 0) > (f | 0)))
              ? ((f = -1), (d = -1), (o = 0), (l = 0))
              : ((m = Tg(o, l, (d + 1) | 0, f) | 0),
                (l = (W() | 0) & -15728641),
                (o = je(f | 0, 0, 52) | 0),
                (o = m | o),
                (l = l | (W() | 0)),
                (m = (cn(o, l) | 0) == 0),
                (f = m ? -1 : f)),
            (m = a),
            (A[m >> 2] = o),
            (A[(m + 4) >> 2] = l),
            (A[(a + 8) >> 2] = d),
            (A[(a + 12) >> 2] = f);
        }
        function Rf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          if (
            ((l = a),
            (o = A[l >> 2] | 0),
            (l = A[(l + 4) >> 2] | 0),
            !(((o | 0) == 0) & ((l | 0) == 0)) &&
              ((f = De(o | 0, l | 0, 52) | 0),
              W() | 0,
              (f = f & 15),
              (y = je(1, 0, ((f ^ 15) * 3) | 0) | 0),
              (o = zt(y | 0, W() | 0, o | 0, l | 0) | 0),
              (l = W() | 0),
              (y = a),
              (A[y >> 2] = o),
              (A[(y + 4) >> 2] = l),
              (y = (a + 8) | 0),
              (_ = A[y >> 2] | 0),
              !((f | 0) < (_ | 0))))
          ) {
            for (T = (a + 12) | 0, m = f; ; ) {
              if ((m | 0) == (_ | 0)) {
                f = 5;
                break;
              }
              if (
                ((P = (m | 0) == (A[T >> 2] | 0)),
                (d = (((15 - m) | 0) * 3) | 0),
                (f = De(o | 0, l | 0, d | 0) | 0),
                W() | 0,
                (f = f & 7),
                P & (((f | 0) == 1) & !0))
              ) {
                f = 7;
                break;
              }
              if (!(((f | 0) == 7) & !0)) {
                f = 10;
                break;
              }
              if (
                ((P = je(1, 0, d | 0) | 0),
                (o = zt(o | 0, l | 0, P | 0, W() | 0) | 0),
                (l = W() | 0),
                (P = a),
                (A[P >> 2] = o),
                (A[(P + 4) >> 2] = l),
                (m | 0) > (_ | 0))
              )
                m = (m + -1) | 0;
              else {
                f = 10;
                break;
              }
            }
            if ((f | 0) == 5) {
              (P = a),
                (A[P >> 2] = 0),
                (A[(P + 4) >> 2] = 0),
                (A[y >> 2] = -1),
                (A[T >> 2] = -1);
              return;
            } else if ((f | 0) == 7) {
              (_ = je(1, 0, d | 0) | 0),
                (_ = zt(o | 0, l | 0, _ | 0, W() | 0) | 0),
                (y = W() | 0),
                (P = a),
                (A[P >> 2] = _),
                (A[(P + 4) >> 2] = y),
                (A[T >> 2] = m + -1);
              return;
            } else if ((f | 0) == 10) return;
          }
        }
        function ra(a) {
          a = +a;
          var o = 0;
          return (
            (o = a < 0 ? a + 6.283185307179586 : a),
            +(a >= 6.283185307179586 ? o + -6.283185307179586 : o)
          );
        }
        function Js(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            +Ae(+(+V[a >> 3] - +V[o >> 3])) < 17453292519943298e-27
              ? ((o =
                  +Ae(+(+V[(a + 8) >> 3] - +V[(o + 8) >> 3])) <
                  17453292519943298e-27),
                o | 0)
              : ((o = 0), o | 0)
          );
        }
        function Fg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          return (
            (d = +V[o >> 3]),
            (f = +V[a >> 3]),
            (m = +He(+((d - f) * 0.5))),
            (l = +He(+((+V[(o + 8) >> 3] - +V[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+d) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2)
          );
        }
        function sa(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          return (
            (d = +V[o >> 3]),
            (f = +V[a >> 3]),
            (m = +He(+((d - f) * 0.5))),
            (l = +He(+((+V[(o + 8) >> 3] - +V[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+d) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2 * 6371.007180918475)
          );
        }
        function kg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          return (
            (d = +V[o >> 3]),
            (f = +V[a >> 3]),
            (m = +He(+((d - f) * 0.5))),
            (l = +He(+((+V[(o + 8) >> 3] - +V[(a + 8) >> 3]) * 0.5))),
            (l = m * m + l * (+Qe(+d) * +Qe(+f) * l)),
            +(+jt(+(+ge(+l)), +(+ge(+(1 - l)))) * 2 * 6371.007180918475 * 1e3)
          );
        }
        function zg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0;
          return (
            (m = +V[o >> 3]),
            (f = +Qe(+m)),
            (d = +V[(o + 8) >> 3] - +V[(a + 8) >> 3]),
            (_ = f * +He(+d)),
            (l = +V[a >> 3]),
            +(+jt(+_, +(+He(+m) * +Qe(+l) - +Qe(+d) * (f * +He(+l)))))
          );
        }
        function Gg(a, o, l, f) {
          (a = a | 0), (o = +o), (l = +l), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0;
          if (l < 1e-16) {
            (A[f >> 2] = A[a >> 2]),
              (A[(f + 4) >> 2] = A[(a + 4) >> 2]),
              (A[(f + 8) >> 2] = A[(a + 8) >> 2]),
              (A[(f + 12) >> 2] = A[(a + 12) >> 2]);
            return;
          }
          (m = o < 0 ? o + 6.283185307179586 : o),
            (m = o >= 6.283185307179586 ? m + -6.283185307179586 : m);
          do
            if (m < 1e-16) (o = +V[a >> 3] + l), (V[f >> 3] = o), (d = f);
            else {
              if (
                ((d = +Ae(+(m + -3.141592653589793)) < 1e-16),
                (o = +V[a >> 3]),
                d)
              ) {
                (o = o - l), (V[f >> 3] = o), (d = f);
                break;
              }
              if (
                ((_ = +Qe(+l)),
                (l = +He(+l)),
                (o = _ * +He(+o) + +Qe(+m) * (l * +Qe(+o))),
                (o = o > 1 ? 1 : o),
                (o = +vt(+(o < -1 ? -1 : o))),
                (V[f >> 3] = o),
                +Ae(+(o + -1.5707963267948966)) < 1e-16)
              ) {
                (V[f >> 3] = 1.5707963267948966), (V[(f + 8) >> 3] = 0);
                return;
              }
              if (+Ae(+(o + 1.5707963267948966)) < 1e-16) {
                (V[f >> 3] = -1.5707963267948966), (V[(f + 8) >> 3] = 0);
                return;
              }
              if (
                ((y = +Qe(+o)),
                (m = (l * +He(+m)) / y),
                (l = +V[a >> 3]),
                (o = (_ - +He(+o) * +He(+l)) / +Qe(+l) / y),
                (_ = m > 1 ? 1 : m),
                (o = o > 1 ? 1 : o),
                (o =
                  +V[(a + 8) >> 3] +
                  +jt(+(_ < -1 ? -1 : _), +(o < -1 ? -1 : o))),
                o > 3.141592653589793)
              )
                do o = o + -6.283185307179586;
                while (o > 3.141592653589793);
              if (o < -3.141592653589793)
                do o = o + 6.283185307179586;
                while (o < -3.141592653589793);
              V[(f + 8) >> 3] = o;
              return;
            }
          while (0);
          if (+Ae(+(o + -1.5707963267948966)) < 1e-16) {
            (V[d >> 3] = 1.5707963267948966), (V[(f + 8) >> 3] = 0);
            return;
          }
          if (+Ae(+(o + 1.5707963267948966)) < 1e-16) {
            (V[d >> 3] = -1.5707963267948966), (V[(f + 8) >> 3] = 0);
            return;
          }
          if (((o = +V[(a + 8) >> 3]), o > 3.141592653589793))
            do o = o + -6.283185307179586;
            while (o > 3.141592653589793);
          if (o < -3.141592653589793)
            do o = o + 6.283185307179586;
            while (o < -3.141592653589793);
          V[(f + 8) >> 3] = o;
        }
        function Hg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((V[o >> 3] = +V[(20528 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function Vg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((V[o >> 3] = +V[(20656 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function Wg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((V[o >> 3] = +V[(20784 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function jg(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            a >>> 0 > 15
              ? ((o = 4), o | 0)
              : ((V[o >> 3] = +V[(20912 + (a << 3)) >> 3]), (o = 0), o | 0)
          );
        }
        function M0(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          return a >>> 0 > 15
            ? ((o = 4), o | 0)
            : ((l = Wr(7, 0, a, (((a | 0) < 0) << 31) >> 31) | 0),
              (l = Xn(l | 0, W() | 0, 120, 0) | 0),
              (a = W() | 0),
              (A[o >> 2] = l | 2),
              (A[(o + 4) >> 2] = a),
              (o = 0),
              o | 0);
        }
        function Pf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0;
          return (
            (ee = +V[o >> 3]),
            (B = +V[a >> 3]),
            (T = +He(+((ee - B) * 0.5))),
            (m = +V[(o + 8) >> 3]),
            (P = +V[(a + 8) >> 3]),
            (_ = +He(+((m - P) * 0.5))),
            (y = +Qe(+B)),
            (j = +Qe(+ee)),
            (_ = T * T + _ * (j * y * _)),
            (_ = +jt(+(+ge(+_)), +(+ge(+(1 - _)))) * 2),
            (T = +V[l >> 3]),
            (ee = +He(+((T - ee) * 0.5))),
            (f = +V[(l + 8) >> 3]),
            (m = +He(+((f - m) * 0.5))),
            (d = +Qe(+T)),
            (m = ee * ee + m * (j * d * m)),
            (m = +jt(+(+ge(+m)), +(+ge(+(1 - m)))) * 2),
            (T = +He(+((B - T) * 0.5))),
            (f = +He(+((P - f) * 0.5))),
            (f = T * T + f * (y * d * f)),
            (f = +jt(+(+ge(+f)), +(+ge(+(1 - f)))) * 2),
            (d = (_ + m + f) * 0.5),
            +(
              +Pt(
                +(+ge(
                  +(
                    +ft(+(d * 0.5)) *
                    +ft(+((d - _) * 0.5)) *
                    +ft(+((d - m) * 0.5)) *
                    +ft(+((d - f) * 0.5))
                  )
                ))
              ) * 4
            )
          );
        }
        function E0(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          if (
            ((y = z),
            (z = (z + 192) | 0),
            (m = (y + 168) | 0),
            (_ = y),
            (d = na(a, o, m) | 0),
            d | 0)
          )
            return (l = d), (z = y), l | 0;
          if (
            (ia(a, o, _) | 0 && ht(23313, 22742, 386, 22751),
            (o = A[_ >> 2] | 0),
            (o | 0) > 0)
          ) {
            if (
              ((f =
                +Pf((_ + 8) | 0, (_ + 8 + ((((o | 0) != 1) & 1) << 4)) | 0, m) +
                0),
              (o | 0) != 1)
            ) {
              a = 1;
              do
                (d = a),
                  (a = (a + 1) | 0),
                  (f =
                    f +
                    +Pf(
                      (_ + 8 + (d << 4)) | 0,
                      (_ + 8 + (((a | 0) % (o | 0) | 0) << 4)) | 0,
                      m
                    ));
              while ((a | 0) < (o | 0));
            }
          } else f = 0;
          return (V[l >> 3] = f), (l = 0), (z = y), l | 0;
        }
        function Xg(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (a = E0(a, o, l) | 0),
            a | 0 ||
              (V[l >> 3] = +V[l >> 3] * 6371.007180918475 * 6371.007180918475),
            a | 0
          );
        }
        function Qg(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (a = E0(a, o, l) | 0),
            a | 0 ||
              (V[l >> 3] =
                +V[l >> 3] * 6371.007180918475 * 6371.007180918475 * 1e3 * 1e3),
            a | 0
          );
        }
        function $g(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (_ = y),
            (a = iA(a, o, _) | 0),
            a | 0)
          )
            return (_ = a), (z = y), _ | 0;
          if (((V[l >> 3] = 0), (a = A[_ >> 2] | 0), (a | 0) <= 1))
            return (_ = 0), (z = y), _ | 0;
          (o = (a + -1) | 0),
            (a = 0),
            (f = +V[(_ + 8) >> 3]),
            (d = +V[(_ + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +V[(_ + 8 + (a << 4)) >> 3]),
              (B = +He(+((f - P) * 0.5))),
              (T = d),
              (d = +V[(_ + 8 + (a << 4) + 8) >> 3]),
              (T = +He(+((d - T) * 0.5))),
              (T = B * B + T * (+Qe(+f) * +Qe(+P) * T)),
              (m = m + +jt(+(+ge(+T)), +(+ge(+(1 - T)))) * 2);
          while ((a | 0) < (o | 0));
          return (V[l >> 3] = m), (_ = 0), (z = y), _ | 0;
        }
        function Yg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (_ = y),
            (a = iA(a, o, _) | 0),
            a | 0)
          )
            return (
              (_ = a),
              (m = +V[l >> 3]),
              (m = m * 6371.007180918475),
              (V[l >> 3] = m),
              (z = y),
              _ | 0
            );
          if (((V[l >> 3] = 0), (a = A[_ >> 2] | 0), (a | 0) <= 1))
            return (
              (_ = 0),
              (m = 0),
              (m = m * 6371.007180918475),
              (V[l >> 3] = m),
              (z = y),
              _ | 0
            );
          (o = (a + -1) | 0),
            (a = 0),
            (f = +V[(_ + 8) >> 3]),
            (d = +V[(_ + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +V[(_ + 8 + (a << 4)) >> 3]),
              (B = +He(+((f - P) * 0.5))),
              (T = d),
              (d = +V[(_ + 8 + (a << 4) + 8) >> 3]),
              (T = +He(+((d - T) * 0.5))),
              (T = B * B + T * (+Qe(+P) * +Qe(+f) * T)),
              (m = m + +jt(+(+ge(+T)), +(+ge(+(1 - T)))) * 2);
          while ((a | 0) != (o | 0));
          return (
            (V[l >> 3] = m),
            (_ = 0),
            (B = m),
            (B = B * 6371.007180918475),
            (V[l >> 3] = B),
            (z = y),
            _ | 0
          );
        }
        function Zg(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            ((y = z),
            (z = (z + 176) | 0),
            (_ = y),
            (a = iA(a, o, _) | 0),
            a | 0)
          )
            return (
              (_ = a),
              (m = +V[l >> 3]),
              (m = m * 6371.007180918475),
              (m = m * 1e3),
              (V[l >> 3] = m),
              (z = y),
              _ | 0
            );
          if (((V[l >> 3] = 0), (a = A[_ >> 2] | 0), (a | 0) <= 1))
            return (
              (_ = 0),
              (m = 0),
              (m = m * 6371.007180918475),
              (m = m * 1e3),
              (V[l >> 3] = m),
              (z = y),
              _ | 0
            );
          (o = (a + -1) | 0),
            (a = 0),
            (f = +V[(_ + 8) >> 3]),
            (d = +V[(_ + 16) >> 3]),
            (m = 0);
          do
            (a = (a + 1) | 0),
              (P = f),
              (f = +V[(_ + 8 + (a << 4)) >> 3]),
              (B = +He(+((f - P) * 0.5))),
              (T = d),
              (d = +V[(_ + 8 + (a << 4) + 8) >> 3]),
              (T = +He(+((d - T) * 0.5))),
              (T = B * B + T * (+Qe(+P) * +Qe(+f) * T)),
              (m = m + +jt(+(+ge(+T)), +(+ge(+(1 - T)))) * 2);
          while ((a | 0) != (o | 0));
          return (
            (V[l >> 3] = m),
            (_ = 0),
            (B = m),
            (B = B * 6371.007180918475),
            (B = B * 1e3),
            (V[l >> 3] = B),
            (z = y),
            _ | 0
          );
        }
        function Kg(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          return (
            (o = lr(1, 12) | 0),
            o || ht(22832, 22787, 49, 22845),
            (l = (a + 4) | 0),
            (f = A[l >> 2] | 0),
            f | 0
              ? ((f = (f + 8) | 0), (A[f >> 2] = o), (A[l >> 2] = o), o | 0)
              : (A[a >> 2] | 0 && ht(22862, 22787, 61, 22885),
                (f = a),
                (A[f >> 2] = o),
                (A[l >> 2] = o),
                o | 0)
          );
        }
        function Jg(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0;
          return (
            (f = Ar(24) | 0),
            f || ht(22899, 22787, 78, 22913),
            (A[f >> 2] = A[o >> 2]),
            (A[(f + 4) >> 2] = A[(o + 4) >> 2]),
            (A[(f + 8) >> 2] = A[(o + 8) >> 2]),
            (A[(f + 12) >> 2] = A[(o + 12) >> 2]),
            (A[(f + 16) >> 2] = 0),
            (o = (a + 4) | 0),
            (l = A[o >> 2] | 0),
            l | 0
              ? ((A[(l + 16) >> 2] = f), (A[o >> 2] = f), f | 0)
              : (A[a >> 2] | 0 && ht(22928, 22787, 82, 22913),
                (A[a >> 2] = f),
                (A[o >> 2] = f),
                f | 0)
          );
        }
        function Lf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0;
          if (a)
            for (f = 1; ; ) {
              if (((o = A[a >> 2] | 0), o | 0))
                do {
                  if (((l = A[o >> 2] | 0), l | 0))
                    do (d = l), (l = A[(l + 16) >> 2] | 0), yt(d);
                    while (l | 0);
                  (d = o), (o = A[(o + 8) >> 2] | 0), yt(d);
                } while (o | 0);
              if (((o = a), (a = A[(a + 8) >> 2] | 0), f || yt(o), a)) f = 0;
              else break;
            }
        }
        function e3(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0,
            Zt = 0,
            Xt = 0,
            Qt = 0,
            qt = 0,
            Ct = 0,
            Ut = 0,
            tn = 0,
            bt = 0;
          if (((d = (a + 8) | 0), A[d >> 2] | 0)) return (bt = 1), bt | 0;
          if (((f = A[a >> 2] | 0), !f)) return (bt = 0), bt | 0;
          (o = f), (l = 0);
          do (l = (l + 1) | 0), (o = A[(o + 8) >> 2] | 0);
          while (o | 0);
          if (l >>> 0 < 2) return (bt = 0), bt | 0;
          (Ut = Ar(l << 2) | 0),
            Ut || ht(22948, 22787, 317, 22967),
            (Ct = Ar(l << 5) | 0),
            Ct || ht(22989, 22787, 321, 22967),
            (A[a >> 2] = 0),
            (st = (a + 4) | 0),
            (A[st >> 2] = 0),
            (A[d >> 2] = 0),
            (l = 0),
            (qt = 0),
            (Ze = 0),
            (j = 0);
          e: for (;;) {
            if (((B = A[f >> 2] | 0), B)) {
              (m = 0), (_ = B);
              do {
                if (
                  ((T = +V[(_ + 8) >> 3]),
                  (o = _),
                  (_ = A[(_ + 16) >> 2] | 0),
                  (P = (_ | 0) == 0),
                  (d = P ? B : _),
                  (y = +V[(d + 8) >> 3]),
                  +Ae(+(T - y)) > 3.141592653589793)
                ) {
                  bt = 14;
                  break;
                }
                m = m + (y - T) * (+V[o >> 3] + +V[d >> 3]);
              } while (!P);
              if ((bt | 0) == 14) {
                (bt = 0), (m = 0), (o = B);
                do
                  (ue = +V[(o + 8) >> 3]),
                    (Qt = (o + 16) | 0),
                    (Xt = A[Qt >> 2] | 0),
                    (Xt = Xt | 0 ? Xt : B),
                    (_e = +V[(Xt + 8) >> 3]),
                    (m =
                      m +
                      (+V[o >> 3] + +V[Xt >> 3]) *
                        ((_e < 0 ? _e + 6.283185307179586 : _e) -
                          (ue < 0 ? ue + 6.283185307179586 : ue))),
                    (o = A[(o | 0 ? Qt : f) >> 2] | 0);
                while (o | 0);
              }
              m > 0
                ? ((A[(Ut + (qt << 2)) >> 2] = f),
                  (qt = (qt + 1) | 0),
                  (d = Ze),
                  (o = j))
                : (bt = 19);
            } else bt = 19;
            if ((bt | 0) == 19) {
              bt = 0;
              do
                if (l) {
                  if (((o = (l + 8) | 0), A[o >> 2] | 0)) {
                    bt = 21;
                    break e;
                  }
                  if (((l = lr(1, 12) | 0), !l)) {
                    bt = 23;
                    break e;
                  }
                  (A[o >> 2] = l), (d = (l + 4) | 0), (_ = l), (o = j);
                } else if (j) {
                  (d = st), (_ = (j + 8) | 0), (o = f), (l = a);
                  break;
                } else if (A[a >> 2] | 0) {
                  bt = 27;
                  break e;
                } else {
                  (d = st), (_ = a), (o = f), (l = a);
                  break;
                }
              while (0);
              if (
                ((A[_ >> 2] = f),
                (A[d >> 2] = f),
                (_ = (Ct + (Ze << 5)) | 0),
                (P = A[f >> 2] | 0),
                P)
              ) {
                for (
                  B = (Ct + (Ze << 5) + 8) | 0,
                    V[B >> 3] = 17976931348623157e292,
                    j = (Ct + (Ze << 5) + 24) | 0,
                    V[j >> 3] = 17976931348623157e292,
                    V[_ >> 3] = -17976931348623157e292,
                    ee = (Ct + (Ze << 5) + 16) | 0,
                    V[ee >> 3] = -17976931348623157e292,
                    Ee = 17976931348623157e292,
                    ve = -17976931348623157e292,
                    d = 0,
                    se = P,
                    T = 17976931348623157e292,
                    fe = 17976931348623157e292,
                    we = -17976931348623157e292,
                    y = -17976931348623157e292;
                  (m = +V[se >> 3]),
                    (ue = +V[(se + 8) >> 3]),
                    (se = A[(se + 16) >> 2] | 0),
                    (Z = (se | 0) == 0),
                    (_e = +V[((Z ? P : se) + 8) >> 3]),
                    m < T && ((V[B >> 3] = m), (T = m)),
                    ue < fe && ((V[j >> 3] = ue), (fe = ue)),
                    m > we ? (V[_ >> 3] = m) : (m = we),
                    ue > y && ((V[ee >> 3] = ue), (y = ue)),
                    (Ee = (ue > 0) & (ue < Ee) ? ue : Ee),
                    (ve = (ue < 0) & (ue > ve) ? ue : ve),
                    (d = d | (+Ae(+(ue - _e)) > 3.141592653589793)),
                    !Z;

                )
                  we = m;
                d && ((V[ee >> 3] = ve), (V[j >> 3] = Ee));
              } else
                (A[_ >> 2] = 0),
                  (A[(_ + 4) >> 2] = 0),
                  (A[(_ + 8) >> 2] = 0),
                  (A[(_ + 12) >> 2] = 0),
                  (A[(_ + 16) >> 2] = 0),
                  (A[(_ + 20) >> 2] = 0),
                  (A[(_ + 24) >> 2] = 0),
                  (A[(_ + 28) >> 2] = 0);
              d = (Ze + 1) | 0;
            }
            if (((Qt = (f + 8) | 0), (f = A[Qt >> 2] | 0), (A[Qt >> 2] = 0), f))
              (Ze = d), (j = o);
            else {
              bt = 45;
              break;
            }
          }
          if ((bt | 0) == 21) ht(22765, 22787, 35, 22799);
          else if ((bt | 0) == 23) ht(22819, 22787, 37, 22799);
          else if ((bt | 0) == 27) ht(22862, 22787, 61, 22885);
          else if ((bt | 0) == 45) {
            e: do
              if ((qt | 0) > 0) {
                for (
                  Qt = (d | 0) == 0,
                    Zt = d << 2,
                    Xt = (a | 0) == 0,
                    Ke = 0,
                    o = 0;
                  ;

                ) {
                  if (((Ve = A[(Ut + (Ke << 2)) >> 2] | 0), Qt)) bt = 73;
                  else {
                    if (((Ze = Ar(Zt) | 0), !Ze)) {
                      bt = 50;
                      break;
                    }
                    if (((st = Ar(Zt) | 0), !st)) {
                      bt = 52;
                      break;
                    }
                    t: do
                      if (Xt) l = 0;
                      else {
                        for (
                          d = 0, l = 0, _ = a;
                          (f = (Ct + (d << 5)) | 0),
                            Df(A[_ >> 2] | 0, f, A[Ve >> 2] | 0) | 0
                              ? ((A[(Ze + (l << 2)) >> 2] = _),
                                (A[(st + (l << 2)) >> 2] = f),
                                (Z = (l + 1) | 0))
                              : (Z = l),
                            (_ = A[(_ + 8) >> 2] | 0),
                            _;

                        )
                          (d = (d + 1) | 0), (l = Z);
                        if ((Z | 0) > 0)
                          if (((f = A[Ze >> 2] | 0), (Z | 0) == 1)) l = f;
                          else
                            for (ee = 0, se = -1, l = f, j = f; ; ) {
                              for (
                                P = A[j >> 2] | 0, f = 0, _ = 0;
                                (d = A[A[(Ze + (_ << 2)) >> 2] >> 2] | 0),
                                  (d | 0) == (P | 0)
                                    ? (B = f)
                                    : (B =
                                        (f +
                                          ((Df(
                                            d,
                                            A[(st + (_ << 2)) >> 2] | 0,
                                            A[P >> 2] | 0
                                          ) |
                                            0) &
                                            1)) |
                                        0),
                                  (_ = (_ + 1) | 0),
                                  (_ | 0) != (Z | 0);

                              )
                                f = B;
                              if (
                                ((d = (B | 0) > (se | 0)),
                                (l = d ? j : l),
                                (f = (ee + 1) | 0),
                                (f | 0) == (Z | 0))
                              )
                                break t;
                              (ee = f),
                                (se = d ? B : se),
                                (j = A[(Ze + (f << 2)) >> 2] | 0);
                            }
                        else l = 0;
                      }
                    while (0);
                    if ((yt(Ze), yt(st), l)) {
                      if (((d = (l + 4) | 0), (f = A[d >> 2] | 0), f))
                        l = (f + 8) | 0;
                      else if (A[l >> 2] | 0) {
                        bt = 70;
                        break;
                      }
                      (A[l >> 2] = Ve), (A[d >> 2] = Ve);
                    } else bt = 73;
                  }
                  if ((bt | 0) == 73) {
                    if (((bt = 0), (o = A[Ve >> 2] | 0), o | 0))
                      do (st = o), (o = A[(o + 16) >> 2] | 0), yt(st);
                      while (o | 0);
                    yt(Ve), (o = 1);
                  }
                  if (((Ke = (Ke + 1) | 0), (Ke | 0) >= (qt | 0))) {
                    tn = o;
                    break e;
                  }
                }
                (bt | 0) == 50
                  ? ht(23004, 22787, 249, 23023)
                  : (bt | 0) == 52
                  ? ht(23042, 22787, 252, 23023)
                  : (bt | 0) == 70 && ht(22862, 22787, 61, 22885);
              } else tn = 0;
            while (0);
            return yt(Ut), yt(Ct), (bt = tn), bt | 0;
          }
          return 0;
        }
        function Df(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0;
          if (
            !(df(o, l) | 0) ||
            ((o = hf(o) | 0),
            (f = +V[l >> 3]),
            (d = +V[(l + 8) >> 3]),
            (d = o & (d < 0) ? d + 6.283185307179586 : d),
            (a = A[a >> 2] | 0),
            !a)
          )
            return (a = 0), a | 0;
          if (o) {
            (o = 0), (P = d), (l = a);
            e: for (;;) {
              for (
                ;
                (_ = +V[l >> 3]),
                  (d = +V[(l + 8) >> 3]),
                  (l = (l + 16) | 0),
                  (B = A[l >> 2] | 0),
                  (B = B | 0 ? B : a),
                  (m = +V[B >> 3]),
                  (y = +V[(B + 8) >> 3]),
                  _ > m
                    ? ((T = _), (_ = y))
                    : ((T = m), (m = _), (_ = d), (d = y)),
                  (f = (f == m) | (f == T) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > T));

              )
                if (((l = A[l >> 2] | 0), !l)) {
                  l = 22;
                  break e;
                }
              if (
                ((y = _ < 0 ? _ + 6.283185307179586 : _),
                (_ = d < 0 ? d + 6.283185307179586 : d),
                (P = (y == P) | (_ == P) ? P + -2220446049250313e-31 : P),
                (T = y + (_ - y) * ((f - m) / (T - m))),
                (T < 0 ? T + 6.283185307179586 : T) > P && (o = o ^ 1),
                (l = A[l >> 2] | 0),
                !l)
              ) {
                l = 22;
                break;
              }
            }
            if ((l | 0) == 22) return o | 0;
          } else {
            (o = 0), (P = d), (l = a);
            e: for (;;) {
              for (
                ;
                (_ = +V[l >> 3]),
                  (d = +V[(l + 8) >> 3]),
                  (l = (l + 16) | 0),
                  (B = A[l >> 2] | 0),
                  (B = B | 0 ? B : a),
                  (m = +V[B >> 3]),
                  (y = +V[(B + 8) >> 3]),
                  _ > m
                    ? ((T = _), (_ = y))
                    : ((T = m), (m = _), (_ = d), (d = y)),
                  (f = (f == m) | (f == T) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > T));

              )
                if (((l = A[l >> 2] | 0), !l)) {
                  l = 22;
                  break e;
                }
              if (
                ((P = (_ == P) | (d == P) ? P + -2220446049250313e-31 : P),
                _ + (d - _) * ((f - m) / (T - m)) > P && (o = o ^ 1),
                (l = A[l >> 2] | 0),
                !l)
              ) {
                l = 22;
                break;
              }
            }
            if ((l | 0) == 22) return o | 0;
          }
          return 0;
        }
        function Er(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0;
          if (
            ((ve = z),
            (z = (z + 32) | 0),
            (Ee = (ve + 16) | 0),
            (we = ve),
            (m = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (m = m & 15),
            (se = De(l | 0, f | 0, 52) | 0),
            W() | 0,
            (m | 0) != ((se & 15) | 0))
          )
            return (Ee = 12), (z = ve), Ee | 0;
          if (
            ((P = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (P = P & 127),
            (B = De(l | 0, f | 0, 45) | 0),
            W() | 0,
            (B = B & 127),
            (P >>> 0 > 121) | (B >>> 0 > 121))
          )
            return (Ee = 5), (z = ve), Ee | 0;
          if (((se = (P | 0) != (B | 0)), se)) {
            if (((y = f0(P, B) | 0), (y | 0) == 7))
              return (Ee = 1), (z = ve), Ee | 0;
            (T = f0(B, P) | 0),
              (T | 0) == 7 ? ht(23066, 23090, 161, 23100) : ((Z = y), (_ = T));
          } else (Z = 0), (_ = 0);
          (j = un(P) | 0),
            (ee = un(B) | 0),
            (A[Ee >> 2] = 0),
            (A[(Ee + 4) >> 2] = 0),
            (A[(Ee + 8) >> 2] = 0),
            (A[(Ee + 12) >> 2] = 0);
          do
            if (Z) {
              if (
                ((B = A[(4272 + ((P * 28) | 0) + (Z << 2)) >> 2] | 0),
                (y = (B | 0) > 0),
                ee)
              )
                if (y) {
                  (P = 0), (T = l), (y = f);
                  do
                    (T = Ig(T, y) | 0),
                      (y = W() | 0),
                      (_ = Vr(_) | 0),
                      (_ | 0) == 1 && (_ = Vr(1) | 0),
                      (P = (P + 1) | 0);
                  while ((P | 0) != (B | 0));
                  (B = _), (P = T), (T = y);
                } else (B = _), (P = l), (T = f);
              else if (y) {
                (P = 0), (T = l), (y = f);
                do
                  (T = x0(T, y) | 0),
                    (y = W() | 0),
                    (_ = Vr(_) | 0),
                    (P = (P + 1) | 0);
                while ((P | 0) != (B | 0));
                (B = _), (P = T), (T = y);
              } else (B = _), (P = l), (T = f);
              if (
                (y0(P, T, Ee) | 0,
                se || ht(23115, 23090, 191, 23100),
                (y = (j | 0) != 0),
                (_ = (ee | 0) != 0),
                y & _ && ht(23142, 23090, 192, 23100),
                y)
              ) {
                if (((_ = di(a, o) | 0), (_ | 0) == 7)) {
                  m = 5;
                  break;
                }
                if (pt[(21872 + ((_ * 7) | 0) + Z) >> 0] | 0) {
                  m = 1;
                  break;
                }
                (T = A[(21040 + ((_ * 28) | 0) + (Z << 2)) >> 2] | 0), (P = T);
              } else if (_) {
                if (((_ = di(P, T) | 0), (_ | 0) == 7)) {
                  m = 5;
                  break;
                }
                if (pt[(21872 + ((_ * 7) | 0) + B) >> 0] | 0) {
                  m = 1;
                  break;
                }
                (P = 0), (T = A[(21040 + ((B * 28) | 0) + (_ << 2)) >> 2] | 0);
              } else (P = 0), (T = 0);
              if ((P | T | 0) < 0) m = 5;
              else {
                if ((T | 0) > 0) {
                  (y = (Ee + 4) | 0), (_ = 0);
                  do nA(y), (_ = (_ + 1) | 0);
                  while ((_ | 0) != (T | 0));
                }
                if (
                  ((A[we >> 2] = 0),
                  (A[(we + 4) >> 2] = 0),
                  (A[(we + 8) >> 2] = 0),
                  vf(we, Z),
                  m | 0)
                )
                  for (; Oi(m) | 0 ? tA(we) : _s(we), (m | 0) > 1; )
                    m = (m + -1) | 0;
                if ((P | 0) > 0) {
                  m = 0;
                  do nA(we), (m = (m + 1) | 0);
                  while ((m | 0) != (P | 0));
                }
                (fe = (Ee + 4) | 0), ni(fe, we, fe), Wn(fe), (fe = 51);
              }
            } else if ((y0(l, f, Ee) | 0, ((j | 0) != 0) & ((ee | 0) != 0)))
              if (
                ((B | 0) != (P | 0) && ht(23173, 23090, 261, 23100),
                (_ = di(a, o) | 0),
                (m = di(l, f) | 0),
                ((_ | 0) == 7) | ((m | 0) == 7))
              )
                m = 5;
              else if (pt[(21872 + ((_ * 7) | 0) + m) >> 0] | 0) m = 1;
              else if (
                ((_ = A[(21040 + ((_ * 28) | 0) + (m << 2)) >> 2] | 0),
                (_ | 0) > 0)
              ) {
                (y = (Ee + 4) | 0), (m = 0);
                do nA(y), (m = (m + 1) | 0);
                while ((m | 0) != (_ | 0));
                fe = 51;
              } else fe = 51;
            else fe = 51;
          while (0);
          return (
            (fe | 0) == 51 &&
              ((m = (Ee + 4) | 0),
              (A[d >> 2] = A[m >> 2]),
              (A[(d + 4) >> 2] = A[(m + 4) >> 2]),
              (A[(d + 8) >> 2] = A[(m + 8) >> 2]),
              (m = 0)),
            (Ee = m),
            (z = ve),
            Ee | 0
          );
        }
        function If(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0;
          if (
            ((fe = z),
            (z = (z + 48) | 0),
            (P = (fe + 36) | 0),
            (_ = (fe + 24) | 0),
            (y = (fe + 12) | 0),
            (T = fe),
            (d = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (d = d & 15),
            (ee = De(a | 0, o | 0, 45) | 0),
            W() | 0,
            (ee = ee & 127),
            ee >>> 0 > 121)
          )
            return (f = 5), (z = fe), f | 0;
          if (
            ((B = un(ee) | 0),
            je(d | 0, 0, 52) | 0,
            (we = W() | 0 | 134225919),
            (m = f),
            (A[m >> 2] = -1),
            (A[(m + 4) >> 2] = we),
            !d)
          )
            return (
              (d = eA(l) | 0),
              (d | 0) == 7 || ((d = c0(ee, d) | 0), (d | 0) == 127)
                ? ((we = 1), (z = fe), we | 0)
                : ((se = je(d | 0, 0, 45) | 0),
                  (Z = W() | 0),
                  (ee = f),
                  (Z = (A[(ee + 4) >> 2] & -1040385) | Z),
                  (we = f),
                  (A[we >> 2] = A[ee >> 2] | se),
                  (A[(we + 4) >> 2] = Z),
                  (we = 0),
                  (z = fe),
                  we | 0)
            );
          for (
            A[P >> 2] = A[l >> 2],
              A[(P + 4) >> 2] = A[(l + 4) >> 2],
              A[(P + 8) >> 2] = A[(l + 8) >> 2],
              l = d;
            ;

          ) {
            if (
              ((m = l),
              (l = (l + -1) | 0),
              (A[_ >> 2] = A[P >> 2]),
              (A[(_ + 4) >> 2] = A[(P + 4) >> 2]),
              (A[(_ + 8) >> 2] = A[(P + 8) >> 2]),
              Oi(m) | 0)
            ) {
              if (((d = ag(P) | 0), d | 0)) {
                l = 13;
                break;
              }
              (A[y >> 2] = A[P >> 2]),
                (A[(y + 4) >> 2] = A[(P + 4) >> 2]),
                (A[(y + 8) >> 2] = A[(P + 8) >> 2]),
                tA(y);
            } else {
              if (((d = Ag(P) | 0), d | 0)) {
                l = 13;
                break;
              }
              (A[y >> 2] = A[P >> 2]),
                (A[(y + 4) >> 2] = A[(P + 4) >> 2]),
                (A[(y + 8) >> 2] = A[(P + 8) >> 2]),
                _s(y);
            }
            if (
              (h0(_, y, T),
              Wn(T),
              (d = f),
              (ve = A[d >> 2] | 0),
              (d = A[(d + 4) >> 2] | 0),
              (_e = (((15 - m) | 0) * 3) | 0),
              (Ee = je(7, 0, _e | 0) | 0),
              (d = d & ~(W() | 0)),
              (_e = je(eA(T) | 0, 0, _e | 0) | 0),
              (d = W() | 0 | d),
              (we = f),
              (A[we >> 2] = _e | (ve & ~Ee)),
              (A[(we + 4) >> 2] = d),
              (m | 0) <= 1)
            ) {
              l = 14;
              break;
            }
          }
          e: do
            if ((l | 0) != 13 && (l | 0) == 14)
              if (
                (A[P >> 2] | 0) <= 1 &&
                (A[(P + 4) >> 2] | 0) <= 1 &&
                (A[(P + 8) >> 2] | 0) <= 1
              ) {
                (l = eA(P) | 0),
                  (d = c0(ee, l) | 0),
                  (d | 0) == 127 ? (T = 0) : (T = un(d) | 0);
                t: do
                  if (l) {
                    if (B) {
                      if (((d = di(a, o) | 0), (d | 0) == 7)) {
                        d = 5;
                        break e;
                      }
                      if (
                        ((m = A[(21248 + ((d * 28) | 0) + (l << 2)) >> 2] | 0),
                        (m | 0) > 0)
                      ) {
                        (d = l), (l = 0);
                        do (d = xs(d) | 0), (l = (l + 1) | 0);
                        while ((l | 0) != (m | 0));
                      } else d = l;
                      if ((d | 0) == 1) {
                        d = 9;
                        break e;
                      }
                      (l = c0(ee, d) | 0),
                        (l | 0) == 127 && ht(23200, 23090, 411, 23230),
                        un(l) | 0
                          ? ht(23245, 23090, 412, 23230)
                          : ((Z = l), (se = m), (j = d));
                    } else (Z = d), (se = 0), (j = l);
                    if (
                      ((y = A[(4272 + ((ee * 28) | 0) + (j << 2)) >> 2] | 0),
                      (y | 0) <= -1 && ht(23276, 23090, 419, 23230),
                      !T)
                    ) {
                      if ((se | 0) < 0) {
                        d = 5;
                        break e;
                      }
                      if (se | 0) {
                        (m = f),
                          (d = 0),
                          (l = A[m >> 2] | 0),
                          (m = A[(m + 4) >> 2] | 0);
                        do
                          (l = ys(l, m) | 0),
                            (m = W() | 0),
                            (_e = f),
                            (A[_e >> 2] = l),
                            (A[(_e + 4) >> 2] = m),
                            (d = (d + 1) | 0);
                        while ((d | 0) < (se | 0));
                      }
                      if ((y | 0) <= 0) {
                        (d = Z), (l = 58);
                        break;
                      }
                      for (
                        m = f,
                          d = 0,
                          l = A[m >> 2] | 0,
                          m = A[(m + 4) >> 2] | 0;
                        ;

                      )
                        if (
                          ((l = ys(l, m) | 0),
                          (m = W() | 0),
                          (_e = f),
                          (A[_e >> 2] = l),
                          (A[(_e + 4) >> 2] = m),
                          (d = (d + 1) | 0),
                          (d | 0) == (y | 0))
                        ) {
                          (d = Z), (l = 58);
                          break t;
                        }
                    }
                    if (
                      ((_ = f0(Z, ee) | 0),
                      (_ | 0) == 7 && ht(23066, 23090, 428, 23230),
                      (d = f),
                      (l = A[d >> 2] | 0),
                      (d = A[(d + 4) >> 2] | 0),
                      (y | 0) > 0)
                    ) {
                      m = 0;
                      do
                        (l = ys(l, d) | 0),
                          (d = W() | 0),
                          (_e = f),
                          (A[_e >> 2] = l),
                          (A[(_e + 4) >> 2] = d),
                          (m = (m + 1) | 0);
                      while ((m | 0) != (y | 0));
                    }
                    if (
                      ((d = di(l, d) | 0),
                      (d | 0) == 7 && ht(23313, 23090, 440, 23230),
                      (l = u0(Z) | 0),
                      (l =
                        A[
                          ((l ? 21664 : 21456) + ((_ * 28) | 0) + (d << 2)) >> 2
                        ] | 0),
                      (l | 0) < 0 && ht(23313, 23090, 454, 23230),
                      !l)
                    )
                      (d = Z), (l = 58);
                    else {
                      (_ = f),
                        (d = 0),
                        (m = A[_ >> 2] | 0),
                        (_ = A[(_ + 4) >> 2] | 0);
                      do
                        (m = _0(m, _) | 0),
                          (_ = W() | 0),
                          (_e = f),
                          (A[_e >> 2] = m),
                          (A[(_e + 4) >> 2] = _),
                          (d = (d + 1) | 0);
                      while ((d | 0) < (l | 0));
                      (d = Z), (l = 58);
                    }
                  } else if (((B | 0) != 0) & ((T | 0) != 0)) {
                    if (
                      ((l = di(a, o) | 0),
                      (m = f),
                      (m = di(A[m >> 2] | 0, A[(m + 4) >> 2] | 0) | 0),
                      ((l | 0) == 7) | ((m | 0) == 7))
                    ) {
                      d = 5;
                      break e;
                    }
                    if (
                      ((m = A[(21248 + ((l * 28) | 0) + (m << 2)) >> 2] | 0),
                      (m | 0) < 0)
                    ) {
                      d = 5;
                      break e;
                    }
                    if (!m) l = 59;
                    else {
                      (y = f),
                        (l = 0),
                        (_ = A[y >> 2] | 0),
                        (y = A[(y + 4) >> 2] | 0);
                      do
                        (_ = ys(_, y) | 0),
                          (y = W() | 0),
                          (_e = f),
                          (A[_e >> 2] = _),
                          (A[(_e + 4) >> 2] = y),
                          (l = (l + 1) | 0);
                      while ((l | 0) < (m | 0));
                      l = 58;
                    }
                  } else l = 58;
                while (0);
                if (
                  ((l | 0) == 58 && T && (l = 59),
                  (l | 0) == 59 &&
                    ((_e = f),
                    (di(A[_e >> 2] | 0, A[(_e + 4) >> 2] | 0) | 0) == 1))
                ) {
                  d = 9;
                  break;
                }
                (_e = f),
                  (Ee = A[_e >> 2] | 0),
                  (_e = A[(_e + 4) >> 2] & -1040385),
                  (ve = je(d | 0, 0, 45) | 0),
                  (_e = _e | (W() | 0)),
                  (d = f),
                  (A[d >> 2] = Ee | ve),
                  (A[(d + 4) >> 2] = _e),
                  (d = 0);
              } else d = 1;
          while (0);
          return (_e = d), (z = fe), _e | 0;
        }
        function t3(a, o, l, f, d, m) {
          (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (d = d | 0),
            (m = m | 0);
          var _ = 0,
            y = 0;
          return (
            (y = z),
            (z = (z + 16) | 0),
            (_ = y),
            d
              ? (a = 15)
              : ((a = Er(a, o, l, f, _) | 0), a || (ug(_, m), (a = 0))),
            (z = y),
            a | 0
          );
        }
        function n3(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0;
          return (
            (_ = z),
            (z = (z + 16) | 0),
            (m = _),
            f ? (l = 15) : ((l = cg(l, m) | 0), l || (l = If(a, o, m, d) | 0)),
            (z = _),
            l | 0
          );
        }
        function i3(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0;
          return (
            (T = z),
            (z = (z + 32) | 0),
            (_ = (T + 12) | 0),
            (y = T),
            (m = Er(a, o, a, o, _) | 0),
            m | 0
              ? ((y = m), (z = T), y | 0)
              : ((a = Er(a, o, l, f, y) | 0),
                a | 0
                  ? ((y = a), (z = T), y | 0)
                  : ((_ = d0(_, y) | 0),
                    (y = d),
                    (A[y >> 2] = _),
                    (A[(y + 4) >> 2] = (((_ | 0) < 0) << 31) >> 31),
                    (y = 0),
                    (z = T),
                    y | 0))
          );
        }
        function r3(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0;
          return (
            (T = z),
            (z = (z + 32) | 0),
            (_ = (T + 12) | 0),
            (y = T),
            (m = Er(a, o, a, o, _) | 0),
            !m && ((m = Er(a, o, l, f, y) | 0), !m)
              ? ((f = d0(_, y) | 0),
                (f = zt(f | 0, ((((f | 0) < 0) << 31) >> 31) | 0, 1, 0) | 0),
                (_ = W() | 0),
                (y = d),
                (A[y >> 2] = f),
                (A[(y + 4) >> 2] = _),
                (y = 0),
                (z = T),
                y | 0)
              : ((y = m), (z = T), y | 0)
          );
        }
        function s3(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0,
            Ke = 0;
          if (
            ((Ve = z),
            (z = (z + 48) | 0),
            (_ = (Ve + 24) | 0),
            (y = (Ve + 12) | 0),
            (st = Ve),
            (m = Er(a, o, a, o, _) | 0),
            !m && ((m = Er(a, o, l, f, y) | 0), !m))
          ) {
            (ue = d0(_, y) | 0),
              (Ze = (((ue | 0) < 0) << 31) >> 31),
              (A[_ >> 2] = 0),
              (A[(_ + 4) >> 2] = 0),
              (A[(_ + 8) >> 2] = 0),
              (A[y >> 2] = 0),
              (A[(y + 4) >> 2] = 0),
              (A[(y + 8) >> 2] = 0),
              Er(a, o, a, o, _) | 0 && ht(23313, 23090, 691, 23299),
              Er(a, o, l, f, y) | 0 && ht(23313, 23090, 696, 23299),
              bf(_),
              bf(y),
              ue
                ? ((j = A[_ >> 2] | 0),
                  (Z = +(ue | 0)),
                  (Ee = (_ + 4) | 0),
                  (ee = A[Ee >> 2] | 0),
                  (ve = (_ + 8) | 0),
                  (se = A[ve >> 2] | 0),
                  (_e = _),
                  (f = j),
                  (m = ee),
                  (l = se),
                  (fe = +(((A[y >> 2] | 0) - j) | 0) / Z),
                  (we = +(((A[(y + 4) >> 2] | 0) - ee) | 0) / Z),
                  (Z = +(((A[(y + 8) >> 2] | 0) - se) | 0) / Z))
                : ((m = (_ + 4) | 0),
                  (l = (_ + 8) | 0),
                  (Ee = m),
                  (ve = l),
                  (_e = _),
                  (f = A[_ >> 2] | 0),
                  (m = A[m >> 2] | 0),
                  (l = A[l >> 2] | 0),
                  (fe = 0),
                  (we = 0),
                  (Z = 0)),
              (A[st >> 2] = f),
              (se = (st + 4) | 0),
              (A[se >> 2] = m),
              (ee = (st + 8) | 0),
              (A[ee >> 2] = l);
            e: do
              if ((ue | 0) < 0) m = 0;
              else
                for (B = 0, j = 0, m = f; ; ) {
                  (P = +(j >>> 0) + 4294967296 * +(B | 0)),
                    (Ke = fe * P + +(m | 0)),
                    (T = we * P + +(A[Ee >> 2] | 0)),
                    (P = Z * P + +(A[ve >> 2] | 0)),
                    (l = ~~+oA(+Ke)),
                    (_ = ~~+oA(+T)),
                    (m = ~~+oA(+P)),
                    (Ke = +Ae(+(+(l | 0) - Ke))),
                    (T = +Ae(+(+(_ | 0) - T))),
                    (P = +Ae(+(+(m | 0) - P)));
                  do
                    if ((Ke > T) & (Ke > P)) (l = (0 - (_ + m)) | 0), (f = _);
                    else if (((y = (0 - l) | 0), T > P)) {
                      f = (y - m) | 0;
                      break;
                    } else {
                      (f = _), (m = (y - _) | 0);
                      break;
                    }
                  while (0);
                  if (
                    ((A[st >> 2] = l),
                    (A[se >> 2] = f),
                    (A[ee >> 2] = m),
                    fg(st),
                    (m = If(a, o, st, (d + (j << 3)) | 0) | 0),
                    m | 0)
                  )
                    break e;
                  if (
                    !(
                      ((B | 0) < (Ze | 0)) |
                      (((B | 0) == (Ze | 0)) & (j >>> 0 < ue >>> 0))
                    )
                  ) {
                    m = 0;
                    break e;
                  }
                  (m = zt(j | 0, B | 0, 1, 0) | 0),
                    (y = W() | 0),
                    (B = y),
                    (j = m),
                    (m = A[_e >> 2] | 0);
                }
            while (0);
            return (st = m), (z = Ve), st | 0;
          }
          return (st = m), (z = Ve), st | 0;
        }
        function Wr(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0;
          if (((l | 0) == 0) & ((f | 0) == 0))
            return (d = 0), (m = 1), St(d | 0), m | 0;
          (m = a), (d = o), (a = 1), (o = 0);
          do
            (_ = (((l & 1) | 0) == 0) & !0),
              (a = Xn((_ ? 1 : m) | 0, (_ ? 0 : d) | 0, a | 0, o | 0) | 0),
              (o = W() | 0),
              (l = Hf(l | 0, f | 0, 1) | 0),
              (f = W() | 0),
              (m = Xn(m | 0, d | 0, m | 0, d | 0) | 0),
              (d = W() | 0);
          while (!(((l | 0) == 0) & ((f | 0) == 0)));
          return St(o | 0), a | 0;
        }
        function Of(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0;
          if (
            !(df(o, l) | 0) ||
            ((o = hf(o) | 0),
            (f = +V[l >> 3]),
            (d = +V[(l + 8) >> 3]),
            (d = o & (d < 0) ? d + 6.283185307179586 : d),
            (ee = A[a >> 2] | 0),
            (ee | 0) <= 0)
          )
            return (ee = 0), ee | 0;
          if (((j = A[(a + 4) >> 2] | 0), o)) {
            (o = 0), (B = d), (l = -1), (a = 0);
            e: for (;;) {
              for (
                P = a;
                (_ = +V[(j + (P << 4)) >> 3]),
                  (d = +V[(j + (P << 4) + 8) >> 3]),
                  (a = ((l + 2) | 0) % (ee | 0) | 0),
                  (m = +V[(j + (a << 4)) >> 3]),
                  (y = +V[(j + (a << 4) + 8) >> 3]),
                  _ > m
                    ? ((T = _), (_ = y))
                    : ((T = m), (m = _), (_ = d), (d = y)),
                  (f = (f == m) | (f == T) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > T));

              )
                if (((l = (P + 1) | 0), (l | 0) >= (ee | 0))) {
                  l = 22;
                  break e;
                } else (a = P), (P = l), (l = a);
              if (
                ((y = _ < 0 ? _ + 6.283185307179586 : _),
                (_ = d < 0 ? d + 6.283185307179586 : d),
                (B = (y == B) | (_ == B) ? B + -2220446049250313e-31 : B),
                (T = y + (_ - y) * ((f - m) / (T - m))),
                (T < 0 ? T + 6.283185307179586 : T) > B && (o = o ^ 1),
                (a = (P + 1) | 0),
                (a | 0) >= (ee | 0))
              ) {
                l = 22;
                break;
              } else l = P;
            }
            if ((l | 0) == 22) return o | 0;
          } else {
            (o = 0), (B = d), (l = -1), (a = 0);
            e: for (;;) {
              for (
                P = a;
                (_ = +V[(j + (P << 4)) >> 3]),
                  (d = +V[(j + (P << 4) + 8) >> 3]),
                  (a = ((l + 2) | 0) % (ee | 0) | 0),
                  (m = +V[(j + (a << 4)) >> 3]),
                  (y = +V[(j + (a << 4) + 8) >> 3]),
                  _ > m
                    ? ((T = _), (_ = y))
                    : ((T = m), (m = _), (_ = d), (d = y)),
                  (f = (f == m) | (f == T) ? f + 2220446049250313e-31 : f),
                  !!((f < m) | (f > T));

              )
                if (((l = (P + 1) | 0), (l | 0) >= (ee | 0))) {
                  l = 22;
                  break e;
                } else (a = P), (P = l), (l = a);
              if (
                ((B = (_ == B) | (d == B) ? B + -2220446049250313e-31 : B),
                _ + (d - _) * ((f - m) / (T - m)) > B && (o = o ^ 1),
                (a = (P + 1) | 0),
                (a | 0) >= (ee | 0))
              ) {
                l = 22;
                break;
              } else l = P;
            }
            if ((l | 0) == 22) return o | 0;
          }
          return 0;
        }
        function qf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0;
          if (((Z = A[a >> 2] | 0), !Z)) {
            (A[o >> 2] = 0),
              (A[(o + 4) >> 2] = 0),
              (A[(o + 8) >> 2] = 0),
              (A[(o + 12) >> 2] = 0),
              (A[(o + 16) >> 2] = 0),
              (A[(o + 20) >> 2] = 0),
              (A[(o + 24) >> 2] = 0),
              (A[(o + 28) >> 2] = 0);
            return;
          }
          if (
            ((fe = (o + 8) | 0),
            (V[fe >> 3] = 17976931348623157e292),
            (we = (o + 24) | 0),
            (V[we >> 3] = 17976931348623157e292),
            (V[o >> 3] = -17976931348623157e292),
            (Ee = (o + 16) | 0),
            (V[Ee >> 3] = -17976931348623157e292),
            !((Z | 0) <= 0))
          ) {
            for (
              ee = A[(a + 4) >> 2] | 0,
                P = 17976931348623157e292,
                B = -17976931348623157e292,
                j = 0,
                a = -1,
                m = 17976931348623157e292,
                _ = 17976931348623157e292,
                T = -17976931348623157e292,
                f = -17976931348623157e292,
                se = 0;
              (l = +V[(ee + (se << 4)) >> 3]),
                (y = +V[(ee + (se << 4) + 8) >> 3]),
                (a = (a + 2) | 0),
                (d = +V[(ee + (((a | 0) == (Z | 0) ? 0 : a) << 4) + 8) >> 3]),
                l < m && ((V[fe >> 3] = l), (m = l)),
                y < _ && ((V[we >> 3] = y), (_ = y)),
                l > T ? (V[o >> 3] = l) : (l = T),
                y > f && ((V[Ee >> 3] = y), (f = y)),
                (P = (y > 0) & (y < P) ? y : P),
                (B = (y < 0) & (y > B) ? y : B),
                (j = j | (+Ae(+(y - d)) > 3.141592653589793)),
                (a = (se + 1) | 0),
                (a | 0) != (Z | 0);

            )
              (ve = se), (T = l), (se = a), (a = ve);
            j && ((V[Ee >> 3] = B), (V[we >> 3] = P));
          }
        }
        function o3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0,
            st = 0,
            Ve = 0;
          if (((Z = A[a >> 2] | 0), Z)) {
            if (
              ((fe = (o + 8) | 0),
              (V[fe >> 3] = 17976931348623157e292),
              (we = (o + 24) | 0),
              (V[we >> 3] = 17976931348623157e292),
              (V[o >> 3] = -17976931348623157e292),
              (Ee = (o + 16) | 0),
              (V[Ee >> 3] = -17976931348623157e292),
              (Z | 0) > 0)
            ) {
              for (
                d = A[(a + 4) >> 2] | 0,
                  ee = 17976931348623157e292,
                  se = -17976931348623157e292,
                  f = 0,
                  l = -1,
                  T = 17976931348623157e292,
                  P = 17976931348623157e292,
                  j = -17976931348623157e292,
                  _ = -17976931348623157e292,
                  ve = 0;
                (m = +V[(d + (ve << 4)) >> 3]),
                  (B = +V[(d + (ve << 4) + 8) >> 3]),
                  (st = (l + 2) | 0),
                  (y =
                    +V[(d + (((st | 0) == (Z | 0) ? 0 : st) << 4) + 8) >> 3]),
                  m < T && ((V[fe >> 3] = m), (T = m)),
                  B < P && ((V[we >> 3] = B), (P = B)),
                  m > j ? (V[o >> 3] = m) : (m = j),
                  B > _ && ((V[Ee >> 3] = B), (_ = B)),
                  (ee = (B > 0) & (B < ee) ? B : ee),
                  (se = (B < 0) & (B > se) ? B : se),
                  (f = f | (+Ae(+(B - y)) > 3.141592653589793)),
                  (l = (ve + 1) | 0),
                  (l | 0) != (Z | 0);

              )
                (st = ve), (j = m), (ve = l), (l = st);
              f && ((V[Ee >> 3] = se), (V[we >> 3] = ee));
            }
          } else
            (A[o >> 2] = 0),
              (A[(o + 4) >> 2] = 0),
              (A[(o + 8) >> 2] = 0),
              (A[(o + 12) >> 2] = 0),
              (A[(o + 16) >> 2] = 0),
              (A[(o + 20) >> 2] = 0),
              (A[(o + 24) >> 2] = 0),
              (A[(o + 28) >> 2] = 0);
          if (((st = (a + 8) | 0), (l = A[st >> 2] | 0), !((l | 0) <= 0))) {
            (Ze = (a + 12) | 0), (ue = 0);
            do
              if (
                ((d = A[Ze >> 2] | 0),
                (f = ue),
                (ue = (ue + 1) | 0),
                (we = (o + (ue << 5)) | 0),
                (Ee = A[(d + (f << 3)) >> 2] | 0),
                Ee)
              ) {
                if (
                  ((ve = (o + (ue << 5) + 8) | 0),
                  (V[ve >> 3] = 17976931348623157e292),
                  (a = (o + (ue << 5) + 24) | 0),
                  (V[a >> 3] = 17976931348623157e292),
                  (V[we >> 3] = -17976931348623157e292),
                  (_e = (o + (ue << 5) + 16) | 0),
                  (V[_e >> 3] = -17976931348623157e292),
                  (Ee | 0) > 0)
                ) {
                  for (
                    Z = A[(d + (f << 3) + 4) >> 2] | 0,
                      ee = 17976931348623157e292,
                      se = -17976931348623157e292,
                      d = 0,
                      f = -1,
                      fe = 0,
                      T = 17976931348623157e292,
                      P = 17976931348623157e292,
                      B = -17976931348623157e292,
                      _ = -17976931348623157e292;
                    (m = +V[(Z + (fe << 4)) >> 3]),
                      (j = +V[(Z + (fe << 4) + 8) >> 3]),
                      (f = (f + 2) | 0),
                      (y =
                        +V[
                          (Z + (((f | 0) == (Ee | 0) ? 0 : f) << 4) + 8) >> 3
                        ]),
                      m < T && ((V[ve >> 3] = m), (T = m)),
                      j < P && ((V[a >> 3] = j), (P = j)),
                      m > B ? (V[we >> 3] = m) : (m = B),
                      j > _ && ((V[_e >> 3] = j), (_ = j)),
                      (ee = (j > 0) & (j < ee) ? j : ee),
                      (se = (j < 0) & (j > se) ? j : se),
                      (d = d | (+Ae(+(j - y)) > 3.141592653589793)),
                      (f = (fe + 1) | 0),
                      (f | 0) != (Ee | 0);

                  )
                    (Ve = fe), (fe = f), (B = m), (f = Ve);
                  d && ((V[_e >> 3] = se), (V[a >> 3] = ee));
                }
              } else
                (A[we >> 2] = 0),
                  (A[(we + 4) >> 2] = 0),
                  (A[(we + 8) >> 2] = 0),
                  (A[(we + 12) >> 2] = 0),
                  (A[(we + 16) >> 2] = 0),
                  (A[(we + 20) >> 2] = 0),
                  (A[(we + 24) >> 2] = 0),
                  (A[(we + 28) >> 2] = 0),
                  (l = A[st >> 2] | 0);
            while ((ue | 0) < (l | 0));
          }
        }
        function a3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          if (!(Of(a, o, l) | 0)) return (d = 0), d | 0;
          if (((d = (a + 8) | 0), (A[d >> 2] | 0) <= 0)) return (d = 1), d | 0;
          for (f = (a + 12) | 0, a = 0; ; ) {
            if (
              ((m = a),
              (a = (a + 1) | 0),
              Of(((A[f >> 2] | 0) + (m << 3)) | 0, (o + (a << 5)) | 0, l) | 0)
            ) {
              (a = 0), (f = 6);
              break;
            }
            if ((a | 0) >= (A[d >> 2] | 0)) {
              (a = 1), (f = 6);
              break;
            }
          }
          return (f | 0) == 6 ? a | 0 : 0;
        }
        function A3() {
          return 8;
        }
        function l3() {
          return 16;
        }
        function u3() {
          return 168;
        }
        function c3() {
          return 8;
        }
        function f3() {
          return 16;
        }
        function h3() {
          return 12;
        }
        function d3() {
          return 8;
        }
        function p3(a) {
          return (
            (a = a | 0),
            +(+((A[a >> 2] | 0) >>> 0) + 4294967296 * +(A[(a + 4) >> 2] | 0))
          );
        }
        function m3(a) {
          a = a | 0;
          var o = 0,
            l = 0;
          return (
            (l = +V[a >> 3]), (o = +V[(a + 8) >> 3]), +(+ge(+(l * l + o * o)))
          );
        }
        function Uf(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0;
          (P = +V[a >> 3]),
            (T = +V[o >> 3] - P),
            (y = +V[(a + 8) >> 3]),
            (_ = +V[(o + 8) >> 3] - y),
            (j = +V[l >> 3]),
            (m = +V[f >> 3] - j),
            (ee = +V[(l + 8) >> 3]),
            (B = +V[(f + 8) >> 3] - ee),
            (m = (m * (y - ee) - (P - j) * B) / (T * B - _ * m)),
            (V[d >> 3] = P + T * m),
            (V[(d + 8) >> 3] = y + _ * m);
        }
        function Bf(a, o) {
          return (
            (a = a | 0),
            (o = o | 0),
            +Ae(+(+V[a >> 3] - +V[o >> 3])) < 11920928955078125e-23
              ? ((o =
                  +Ae(+(+V[(a + 8) >> 3] - +V[(o + 8) >> 3])) <
                  11920928955078125e-23),
                o | 0)
              : ((o = 0), o | 0)
          );
        }
        function Sn(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          return (
            (d = +V[a >> 3] - +V[o >> 3]),
            (f = +V[(a + 8) >> 3] - +V[(o + 8) >> 3]),
            (l = +V[(a + 16) >> 3] - +V[(o + 16) >> 3]),
            +(d * d + f * f + l * l)
          );
        }
        function g3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0;
          (l = +V[a >> 3]),
            (f = +Qe(+l)),
            (l = +He(+l)),
            (V[(o + 16) >> 3] = l),
            (l = +V[(a + 8) >> 3]),
            (d = f * +Qe(+l)),
            (V[o >> 3] = d),
            (l = f * +He(+l)),
            (V[(o + 8) >> 3] = l);
        }
        function v3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          if (
            ((m = z),
            (z = (z + 16) | 0),
            (d = m),
            (f = cn(a, o) | 0),
            ((l + -1) | 0) >>> 0 > 5 ||
              ((f = (f | 0) != 0), ((l | 0) == 1) & f))
          )
            return (d = -1), (z = m), d | 0;
          do
            if (oa(a, o, d) | 0) f = -1;
            else if (f) {
              f =
                (((A[(21936 + (l << 2)) >> 2] | 0) + 5 - (A[d >> 2] | 0)) | 0) %
                  5 |
                0;
              break;
            } else {
              f =
                (((A[(21968 + (l << 2)) >> 2] | 0) + 6 - (A[d >> 2] | 0)) | 0) %
                  6 |
                0;
              break;
            }
          while (0);
          return (d = f), (z = m), d | 0;
        }
        function oa(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          if (
            ((P = z),
            (z = (z + 32) | 0),
            (_ = (P + 16) | 0),
            (y = P),
            (f = Ks(a, o, _) | 0),
            f | 0)
          )
            return (l = f), (z = P), l | 0;
          (m = wf(a, o) | 0),
            (T = di(a, o) | 0),
            eg(m, y),
            (f = tg(m, A[_ >> 2] | 0) | 0);
          e: do
            if (un(m) | 0) {
              do
                switch (m | 0) {
                  case 4: {
                    a = 0;
                    break;
                  }
                  case 14: {
                    a = 1;
                    break;
                  }
                  case 24: {
                    a = 2;
                    break;
                  }
                  case 38: {
                    a = 3;
                    break;
                  }
                  case 49: {
                    a = 4;
                    break;
                  }
                  case 58: {
                    a = 5;
                    break;
                  }
                  case 63: {
                    a = 6;
                    break;
                  }
                  case 72: {
                    a = 7;
                    break;
                  }
                  case 83: {
                    a = 8;
                    break;
                  }
                  case 97: {
                    a = 9;
                    break;
                  }
                  case 107: {
                    a = 10;
                    break;
                  }
                  case 117: {
                    a = 11;
                    break;
                  }
                  default: {
                    f = 1;
                    break e;
                  }
                }
              while (0);
              if (
                ((d = A[(22e3 + ((a * 24) | 0) + 8) >> 2] | 0),
                (o = A[(22e3 + ((a * 24) | 0) + 16) >> 2] | 0),
                (a = A[_ >> 2] | 0),
                (a | 0) != (A[y >> 2] | 0) &&
                  ((y = u0(m) | 0),
                  (a = A[_ >> 2] | 0),
                  y | ((a | 0) == (o | 0)) && (f = ((f + 1) | 0) % 6 | 0)),
                ((T | 0) == 3) & ((a | 0) == (o | 0)))
              ) {
                (f = ((f + 5) | 0) % 6 | 0), (d = 22);
                break;
              }
              ((T | 0) == 5) & ((a | 0) == (d | 0)) &&
                (f = ((f + 1) | 0) % 6 | 0),
                (d = 22);
            } else d = 22;
          while (0);
          return (
            (d | 0) == 22 && ((A[l >> 2] = f), (f = 0)), (l = f), (z = P), l | 0
          );
        }
        function qi(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0;
          if (
            ((_e = z),
            (z = (z + 32) | 0),
            (ve = (_e + 24) | 0),
            (we = (_e + 20) | 0),
            (Z = (_e + 8) | 0),
            (se = (_e + 16) | 0),
            (ee = _e),
            (T = (cn(a, o) | 0) == 0),
            (T = T ? 6 : 5),
            (B = De(a | 0, o | 0, 52) | 0),
            W() | 0,
            (B = B & 15),
            T >>> 0 <= l >>> 0)
          )
            return (f = 2), (z = _e), f | 0;
          (j = (B | 0) == 0),
            !j &&
            ((fe = je(7, 0, ((B ^ 15) * 3) | 0) | 0),
            (((fe & a) | 0) == 0) & ((((W() | 0) & o) | 0) == 0))
              ? (d = l)
              : (m = 4);
          e: do
            if ((m | 0) == 4) {
              if (
                ((d = (cn(a, o) | 0) != 0),
                ((d ? 4 : 5) | 0) < (l | 0) ||
                  oa(a, o, ve) | 0 ||
                  ((m = ((A[ve >> 2] | 0) + l) | 0),
                  d
                    ? (d = (22288 + (((m | 0) % 5 | 0) << 2)) | 0)
                    : (d = (22320 + (((m | 0) % 6 | 0) << 2)) | 0),
                  (fe = A[d >> 2] | 0),
                  (fe | 0) == 7))
              )
                return (f = 1), (z = _e), f | 0;
              (A[we >> 2] = 0), (d = Nn(a, o, fe, we, Z) | 0);
              do
                if (!d) {
                  if (
                    ((y = Z),
                    (P = A[y >> 2] | 0),
                    (y = A[(y + 4) >> 2] | 0),
                    (_ =
                      (y >>> 0 < o >>> 0) |
                      (((y | 0) == (o | 0)) & (P >>> 0 < a >>> 0))),
                    (m = _ ? P : a),
                    (_ = _ ? y : o),
                    !j &&
                      ((j = je(7, 0, ((B ^ 15) * 3) | 0) | 0),
                      (((P & j) | 0) == 0) & (((y & (W() | 0)) | 0) == 0)))
                  )
                    d = l;
                  else {
                    if (
                      ((y = ((l + -1 + T) | 0) % (T | 0) | 0),
                      (d = cn(a, o) | 0),
                      (y | 0) < 0 && ht(23313, 23315, 245, 23324),
                      (T = (d | 0) != 0),
                      ((T ? 4 : 5) | 0) < (y | 0) &&
                        ht(23313, 23315, 245, 23324),
                      oa(a, o, ve) | 0 && ht(23313, 23315, 245, 23324),
                      (d = ((A[ve >> 2] | 0) + y) | 0),
                      T
                        ? (d = (22288 + (((d | 0) % 5 | 0) << 2)) | 0)
                        : (d = (22320 + (((d | 0) % 6 | 0) << 2)) | 0),
                      (y = A[d >> 2] | 0),
                      (y | 0) == 7 && ht(23313, 23315, 245, 23324),
                      (A[se >> 2] = 0),
                      (d = Nn(a, o, y, se, ee) | 0),
                      d | 0)
                    )
                      break;
                    (P = ee), (T = A[P >> 2] | 0), (P = A[(P + 4) >> 2] | 0);
                    do
                      if (
                        (P >>> 0 < _ >>> 0) |
                        (((P | 0) == (_ | 0)) & (T >>> 0 < m >>> 0))
                      ) {
                        if (
                          (cn(T, P) | 0
                            ? (m = l0(T, P, a, o) | 0)
                            : (m =
                                A[
                                  (22384 +
                                    (((((A[se >> 2] | 0) +
                                      (A[(22352 + (y << 2)) >> 2] | 0)) |
                                      0) %
                                      6 |
                                      0) <<
                                      2)) >>
                                    2
                                ] | 0),
                          (d = cn(T, P) | 0),
                          ((m + -1) | 0) >>> 0 > 5)
                        ) {
                          (d = -1), (m = T), (_ = P);
                          break;
                        }
                        if (((d = (d | 0) != 0), ((m | 0) == 1) & d)) {
                          (d = -1), (m = T), (_ = P);
                          break;
                        }
                        do
                          if (oa(T, P, ve) | 0) d = -1;
                          else if (d) {
                            d =
                              (((A[(21936 + (m << 2)) >> 2] | 0) +
                                5 -
                                (A[ve >> 2] | 0)) |
                                0) %
                                5 |
                              0;
                            break;
                          } else {
                            d =
                              (((A[(21968 + (m << 2)) >> 2] | 0) +
                                6 -
                                (A[ve >> 2] | 0)) |
                                0) %
                                6 |
                              0;
                            break;
                          }
                        while (0);
                        (m = T), (_ = P);
                      } else d = l;
                    while (0);
                    (y = Z), (P = A[y >> 2] | 0), (y = A[(y + 4) >> 2] | 0);
                  }
                  if (((m | 0) == (P | 0)) & ((_ | 0) == (y | 0))) {
                    if (
                      ((T = (cn(P, y) | 0) != 0),
                      T
                        ? (a = l0(P, y, a, o) | 0)
                        : (a =
                            A[
                              (22384 +
                                (((((A[we >> 2] | 0) +
                                  (A[(22352 + (fe << 2)) >> 2] | 0)) |
                                  0) %
                                  6 |
                                  0) <<
                                  2)) >>
                                2
                            ] | 0),
                      (d = cn(P, y) | 0),
                      ((a + -1) | 0) >>> 0 <= 5 &&
                        ((Ee = (d | 0) != 0), !(((a | 0) == 1) & Ee)))
                    )
                      do
                        if (oa(P, y, ve) | 0) d = -1;
                        else if (Ee) {
                          d =
                            (((A[(21936 + (a << 2)) >> 2] | 0) +
                              5 -
                              (A[ve >> 2] | 0)) |
                              0) %
                              5 |
                            0;
                          break;
                        } else {
                          d =
                            (((A[(21968 + (a << 2)) >> 2] | 0) +
                              6 -
                              (A[ve >> 2] | 0)) |
                              0) %
                              6 |
                            0;
                          break;
                        }
                      while (0);
                    else d = -1;
                    (d = (d + 1) | 0),
                      (d = ((d | 0) == 6) | (T & ((d | 0) == 5)) ? 0 : d);
                  }
                  (o = _), (a = m);
                  break e;
                }
              while (0);
              return (f = d), (z = _e), f | 0;
            }
          while (0);
          return (
            (Ee = je(d | 0, 0, 56) | 0),
            (ve = W() | 0 | (o & -2130706433) | 536870912),
            (A[f >> 2] = Ee | a),
            (A[(f + 4) >> 2] = ve),
            (f = 0),
            (z = _e),
            f | 0
          );
        }
        function _3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          return (
            (m = (cn(a, o) | 0) == 0),
            (f = qi(a, o, 0, l) | 0),
            (d = (f | 0) == 0),
            m
              ? !d ||
                ((f = qi(a, o, 1, (l + 8) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 2, (l + 16) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 3, (l + 24) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 4, (l + 32) | 0) | 0), f)
                ? ((m = f), m | 0)
                : qi(a, o, 5, (l + 40) | 0) | 0
              : !d ||
                ((f = qi(a, o, 1, (l + 8) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 2, (l + 16) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 3, (l + 24) | 0) | 0), f | 0) ||
                ((f = qi(a, o, 4, (l + 32) | 0) | 0), f | 0)
              ? ((m = f), m | 0)
              : ((m = (l + 40) | 0),
                (A[m >> 2] = 0),
                (A[(m + 4) >> 2] = 0),
                (m = 0),
                m | 0)
          );
        }
        function x3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          return (
            (T = z),
            (z = (z + 192) | 0),
            (d = T),
            (m = (T + 168) | 0),
            (_ = De(a | 0, o | 0, 56) | 0),
            W() | 0,
            (_ = _ & 7),
            (y = (o & -2130706433) | 134217728),
            (f = Ks(a, y, m) | 0),
            f | 0
              ? ((y = f), (z = T), y | 0)
              : ((o = De(a | 0, o | 0, 52) | 0),
                W() | 0,
                (o = o & 15),
                cn(a, y) | 0 ? p0(m, o, _, 1, d) : m0(m, o, _, 1, d),
                (y = (d + 8) | 0),
                (A[l >> 2] = A[y >> 2]),
                (A[(l + 4) >> 2] = A[(y + 4) >> 2]),
                (A[(l + 8) >> 2] = A[(y + 8) >> 2]),
                (A[(l + 12) >> 2] = A[(y + 12) >> 2]),
                (y = 0),
                (z = T),
                y | 0)
          );
        }
        function y3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          return (
            (d = z),
            (z = (z + 16) | 0),
            (l = d),
            !(!0 & (((o & 2013265920) | 0) == 536870912)) ||
            ((f = (o & -2130706433) | 134217728), !(g0(a, f) | 0))
              ? ((f = 0), (z = d), f | 0)
              : ((m = De(a | 0, o | 0, 56) | 0),
                W() | 0,
                (m = (qi(a, f, m & 7, l) | 0) == 0),
                (f = l),
                (f =
                  m &
                  ((A[f >> 2] | 0) == (a | 0)
                    ? (A[(f + 4) >> 2] | 0) == (o | 0)
                    : 0) &
                  1),
                (z = d),
                f | 0)
          );
        }
        function Nf(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0;
          (o | 0) > 0
            ? ((f = lr(o, 4) | 0),
              (A[a >> 2] = f),
              f || ht(23337, 23360, 40, 23374))
            : (A[a >> 2] = 0),
            (A[(a + 4) >> 2] = o),
            (A[(a + 8) >> 2] = 0),
            (A[(a + 12) >> 2] = l);
        }
        function Ff(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0;
          (d = (a + 4) | 0), (m = (a + 12) | 0), (_ = (a + 8) | 0);
          e: for (;;) {
            for (l = A[d >> 2] | 0, o = 0; ; ) {
              if ((o | 0) >= (l | 0)) break e;
              if (((f = A[a >> 2] | 0), (y = A[(f + (o << 2)) >> 2] | 0), !y))
                o = (o + 1) | 0;
              else break;
            }
            (o =
              (f +
                ((~~(
                  +Ae(
                    +(
                      +rt(10, +(+((15 - (A[m >> 2] | 0)) | 0))) *
                      (+V[y >> 3] + +V[(y + 8) >> 3])
                    )
                  ) % +(l | 0)
                ) >>>
                  0) <<
                  2)) |
              0),
              (l = A[o >> 2] | 0);
            t: do
              if (l | 0) {
                if (((f = (y + 32) | 0), (l | 0) == (y | 0)))
                  A[o >> 2] = A[f >> 2];
                else {
                  if (((l = (l + 32) | 0), (o = A[l >> 2] | 0), !o)) break;
                  for (; (o | 0) != (y | 0); )
                    if (((l = (o + 32) | 0), (o = A[l >> 2] | 0), !o)) break t;
                  A[l >> 2] = A[f >> 2];
                }
                yt(y), (A[_ >> 2] = (A[_ >> 2] | 0) + -1);
              }
            while (0);
          }
          yt(A[a >> 2] | 0);
        }
        function kf(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          for (f = A[(a + 4) >> 2] | 0, l = 0; ; ) {
            if ((l | 0) >= (f | 0)) {
              (o = 0), (l = 4);
              break;
            }
            if (((o = A[((A[a >> 2] | 0) + (l << 2)) >> 2] | 0), !o))
              l = (l + 1) | 0;
            else {
              l = 4;
              break;
            }
          }
          return (l | 0) == 4 ? o | 0 : 0;
        }
        function zf(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          if (
            ((l =
              ~~(
                +Ae(
                  +(
                    +rt(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+V[o >> 3] + +V[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (l = ((A[a >> 2] | 0) + (l << 2)) | 0),
            (f = A[l >> 2] | 0),
            !f)
          )
            return (m = 1), m | 0;
          m = (o + 32) | 0;
          do
            if ((f | 0) != (o | 0)) {
              if (((l = A[(f + 32) >> 2] | 0), !l)) return (m = 1), m | 0;
              for (d = l; ; ) {
                if ((d | 0) == (o | 0)) {
                  d = 8;
                  break;
                }
                if (((l = A[(d + 32) >> 2] | 0), l)) (f = d), (d = l);
                else {
                  (l = 1), (d = 10);
                  break;
                }
              }
              if ((d | 0) == 8) {
                A[(f + 32) >> 2] = A[m >> 2];
                break;
              } else if ((d | 0) == 10) return l | 0;
            } else A[l >> 2] = A[m >> 2];
          while (0);
          return (
            yt(o),
            (m = (a + 8) | 0),
            (A[m >> 2] = (A[m >> 2] | 0) + -1),
            (m = 0),
            m | 0
          );
        }
        function b3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          (m = Ar(40) | 0),
            m || ht(23390, 23360, 98, 23403),
            (A[m >> 2] = A[o >> 2]),
            (A[(m + 4) >> 2] = A[(o + 4) >> 2]),
            (A[(m + 8) >> 2] = A[(o + 8) >> 2]),
            (A[(m + 12) >> 2] = A[(o + 12) >> 2]),
            (d = (m + 16) | 0),
            (A[d >> 2] = A[l >> 2]),
            (A[(d + 4) >> 2] = A[(l + 4) >> 2]),
            (A[(d + 8) >> 2] = A[(l + 8) >> 2]),
            (A[(d + 12) >> 2] = A[(l + 12) >> 2]),
            (A[(m + 32) >> 2] = 0),
            (d =
              ~~(
                +Ae(
                  +(
                    +rt(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+V[o >> 3] + +V[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (d = ((A[a >> 2] | 0) + (d << 2)) | 0),
            (f = A[d >> 2] | 0);
          do
            if (!f) A[d >> 2] = m;
            else {
              for (; !(Js(f, o) | 0 && Js((f + 16) | 0, l) | 0); )
                if (
                  ((d = A[(f + 32) >> 2] | 0),
                  (f = d | 0 ? d : f),
                  !(A[(f + 32) >> 2] | 0))
                ) {
                  _ = 10;
                  break;
                }
              if ((_ | 0) == 10) {
                A[(f + 32) >> 2] = m;
                break;
              }
              return yt(m), (_ = f), _ | 0;
            }
          while (0);
          return (
            (_ = (a + 8) | 0), (A[_ >> 2] = (A[_ >> 2] | 0) + 1), (_ = m), _ | 0
          );
        }
        function M3(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0;
          if (
            ((d =
              ~~(
                +Ae(
                  +(
                    +rt(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+V[o >> 3] + +V[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (d = A[((A[a >> 2] | 0) + (d << 2)) >> 2] | 0),
            !d)
          )
            return (l = 0), l | 0;
          if (!l) {
            for (a = d; ; ) {
              if (Js(a, o) | 0) {
                f = 10;
                break;
              }
              if (((a = A[(a + 32) >> 2] | 0), !a)) {
                (a = 0), (f = 10);
                break;
              }
            }
            if ((f | 0) == 10) return a | 0;
          }
          for (a = d; ; ) {
            if (Js(a, o) | 0 && Js((a + 16) | 0, l) | 0) {
              f = 10;
              break;
            }
            if (((a = A[(a + 32) >> 2] | 0), !a)) {
              (a = 0), (f = 10);
              break;
            }
          }
          return (f | 0) == 10 ? a | 0 : 0;
        }
        function E3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          if (
            ((l =
              ~~(
                +Ae(
                  +(
                    +rt(10, +(+((15 - (A[(a + 12) >> 2] | 0)) | 0))) *
                    (+V[o >> 3] + +V[(o + 8) >> 3])
                  )
                ) % +(A[(a + 4) >> 2] | 0)
              ) >>> 0),
            (a = A[((A[a >> 2] | 0) + (l << 2)) >> 2] | 0),
            !a)
          )
            return (l = 0), l | 0;
          for (;;) {
            if (Js(a, o) | 0) {
              o = 5;
              break;
            }
            if (((a = A[(a + 32) >> 2] | 0), !a)) {
              (a = 0), (o = 5);
              break;
            }
          }
          return (o | 0) == 5 ? a | 0 : 0;
        }
        function w3() {
          return 23424;
        }
        function S3(a) {
          return (a = +a), +(+Wf(+a));
        }
        function jr(a) {
          return (a = +a), ~~+S3(a) | 0;
        }
        function Ar(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0,
            fe = 0,
            we = 0,
            Ee = 0,
            ve = 0,
            _e = 0,
            ue = 0,
            Ze = 0;
          (Ze = z), (z = (z + 16) | 0), (ee = Ze);
          do
            if (a >>> 0 < 245) {
              if (
                ((P = a >>> 0 < 11 ? 16 : (a + 11) & -8),
                (a = P >>> 3),
                (j = A[5857] | 0),
                (l = j >>> a),
                (l & 3) | 0)
              )
                return (
                  (o = (((l & 1) ^ 1) + a) | 0),
                  (a = (23468 + ((o << 1) << 2)) | 0),
                  (l = (a + 8) | 0),
                  (f = A[l >> 2] | 0),
                  (d = (f + 8) | 0),
                  (m = A[d >> 2] | 0),
                  (m | 0) == (a | 0)
                    ? (A[5857] = j & ~(1 << o))
                    : ((A[(m + 12) >> 2] = a), (A[l >> 2] = m)),
                  (ue = o << 3),
                  (A[(f + 4) >> 2] = ue | 3),
                  (ue = (f + ue + 4) | 0),
                  (A[ue >> 2] = A[ue >> 2] | 1),
                  (ue = d),
                  (z = Ze),
                  ue | 0
                );
              if (((B = A[5859] | 0), P >>> 0 > B >>> 0)) {
                if (l | 0)
                  return (
                    (o = 2 << a),
                    (o = (l << a) & (o | (0 - o))),
                    (o = ((o & (0 - o)) + -1) | 0),
                    (y = (o >>> 12) & 16),
                    (o = o >>> y),
                    (l = (o >>> 5) & 8),
                    (o = o >>> l),
                    (m = (o >>> 2) & 4),
                    (o = o >>> m),
                    (a = (o >>> 1) & 2),
                    (o = o >>> a),
                    (f = (o >>> 1) & 1),
                    (f = ((l | y | m | a | f) + (o >>> f)) | 0),
                    (o = (23468 + ((f << 1) << 2)) | 0),
                    (a = (o + 8) | 0),
                    (m = A[a >> 2] | 0),
                    (y = (m + 8) | 0),
                    (l = A[y >> 2] | 0),
                    (l | 0) == (o | 0)
                      ? ((a = j & ~(1 << f)), (A[5857] = a))
                      : ((A[(l + 12) >> 2] = o), (A[a >> 2] = l), (a = j)),
                    (ue = f << 3),
                    (_ = (ue - P) | 0),
                    (A[(m + 4) >> 2] = P | 3),
                    (d = (m + P) | 0),
                    (A[(d + 4) >> 2] = _ | 1),
                    (A[(m + ue) >> 2] = _),
                    B | 0 &&
                      ((f = A[5862] | 0),
                      (o = B >>> 3),
                      (l = (23468 + ((o << 1) << 2)) | 0),
                      (o = 1 << o),
                      a & o
                        ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                        : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                      (A[a >> 2] = f),
                      (A[(o + 12) >> 2] = f),
                      (A[(f + 8) >> 2] = o),
                      (A[(f + 12) >> 2] = l)),
                    (A[5859] = _),
                    (A[5862] = d),
                    (ue = y),
                    (z = Ze),
                    ue | 0
                  );
                if (((m = A[5858] | 0), m)) {
                  for (
                    l = ((m & (0 - m)) + -1) | 0,
                      d = (l >>> 12) & 16,
                      l = l >>> d,
                      f = (l >>> 5) & 8,
                      l = l >>> f,
                      _ = (l >>> 2) & 4,
                      l = l >>> _,
                      y = (l >>> 1) & 2,
                      l = l >>> y,
                      T = (l >>> 1) & 1,
                      T =
                        A[
                          (23732 + (((f | d | _ | y | T) + (l >>> T)) << 2)) >>
                            2
                        ] | 0,
                      l = T,
                      y = T,
                      T = ((A[(T + 4) >> 2] & -8) - P) | 0;
                    (a = A[(l + 16) >> 2] | 0),
                      !(!a && ((a = A[(l + 20) >> 2] | 0), !a));

                  )
                    (_ = ((A[(a + 4) >> 2] & -8) - P) | 0),
                      (d = _ >>> 0 < T >>> 0),
                      (l = a),
                      (y = d ? a : y),
                      (T = d ? _ : T);
                  if (((_ = (y + P) | 0), _ >>> 0 > y >>> 0)) {
                    (d = A[(y + 24) >> 2] | 0), (o = A[(y + 12) >> 2] | 0);
                    do
                      if ((o | 0) == (y | 0)) {
                        if (
                          ((a = (y + 20) | 0),
                          (o = A[a >> 2] | 0),
                          !o && ((a = (y + 16) | 0), (o = A[a >> 2] | 0), !o))
                        ) {
                          l = 0;
                          break;
                        }
                        for (;;)
                          if (((f = (o + 20) | 0), (l = A[f >> 2] | 0), l))
                            (o = l), (a = f);
                          else if (((f = (o + 16) | 0), (l = A[f >> 2] | 0), l))
                            (o = l), (a = f);
                          else break;
                        (A[a >> 2] = 0), (l = o);
                      } else
                        (l = A[(y + 8) >> 2] | 0),
                          (A[(l + 12) >> 2] = o),
                          (A[(o + 8) >> 2] = l),
                          (l = o);
                    while (0);
                    do
                      if (d | 0) {
                        if (
                          ((o = A[(y + 28) >> 2] | 0),
                          (a = (23732 + (o << 2)) | 0),
                          (y | 0) == (A[a >> 2] | 0))
                        ) {
                          if (((A[a >> 2] = l), !l)) {
                            A[5858] = m & ~(1 << o);
                            break;
                          }
                        } else if (
                          ((ue = (d + 16) | 0),
                          (A[
                            ((A[ue >> 2] | 0) == (y | 0) ? ue : (d + 20) | 0) >>
                              2
                          ] = l),
                          !l)
                        )
                          break;
                        (A[(l + 24) >> 2] = d),
                          (o = A[(y + 16) >> 2] | 0),
                          o | 0 &&
                            ((A[(l + 16) >> 2] = o), (A[(o + 24) >> 2] = l)),
                          (o = A[(y + 20) >> 2] | 0),
                          o | 0 &&
                            ((A[(l + 20) >> 2] = o), (A[(o + 24) >> 2] = l));
                      }
                    while (0);
                    return (
                      T >>> 0 < 16
                        ? ((ue = (T + P) | 0),
                          (A[(y + 4) >> 2] = ue | 3),
                          (ue = (y + ue + 4) | 0),
                          (A[ue >> 2] = A[ue >> 2] | 1))
                        : ((A[(y + 4) >> 2] = P | 3),
                          (A[(_ + 4) >> 2] = T | 1),
                          (A[(_ + T) >> 2] = T),
                          B | 0 &&
                            ((f = A[5862] | 0),
                            (o = B >>> 3),
                            (l = (23468 + ((o << 1) << 2)) | 0),
                            (o = 1 << o),
                            o & j
                              ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                              : ((A[5857] = o | j), (o = l), (a = (l + 8) | 0)),
                            (A[a >> 2] = f),
                            (A[(o + 12) >> 2] = f),
                            (A[(f + 8) >> 2] = o),
                            (A[(f + 12) >> 2] = l)),
                          (A[5859] = T),
                          (A[5862] = _)),
                      (ue = (y + 8) | 0),
                      (z = Ze),
                      ue | 0
                    );
                  } else j = P;
                } else j = P;
              } else j = P;
            } else if (a >>> 0 <= 4294967231)
              if (((a = (a + 11) | 0), (P = a & -8), (f = A[5858] | 0), f)) {
                (d = (0 - P) | 0),
                  (a = a >>> 8),
                  a
                    ? P >>> 0 > 16777215
                      ? (T = 31)
                      : ((j = (((a + 1048320) | 0) >>> 16) & 8),
                        (fe = a << j),
                        (y = (((fe + 520192) | 0) >>> 16) & 4),
                        (fe = fe << y),
                        (T = (((fe + 245760) | 0) >>> 16) & 2),
                        (T = (14 - (y | j | T) + ((fe << T) >>> 15)) | 0),
                        (T = ((P >>> ((T + 7) | 0)) & 1) | (T << 1)))
                    : (T = 0),
                  (l = A[(23732 + (T << 2)) >> 2] | 0);
                e: do
                  if (!l) (l = 0), (a = 0), (fe = 61);
                  else
                    for (
                      a = 0,
                        y = P << ((T | 0) == 31 ? 0 : (25 - (T >>> 1)) | 0),
                        m = 0;
                      ;

                    ) {
                      if (
                        ((_ = ((A[(l + 4) >> 2] & -8) - P) | 0),
                        _ >>> 0 < d >>> 0)
                      )
                        if (_) (a = l), (d = _);
                        else {
                          (a = l), (d = 0), (fe = 65);
                          break e;
                        }
                      if (
                        ((fe = A[(l + 20) >> 2] | 0),
                        (l = A[(l + 16 + ((y >>> 31) << 2)) >> 2] | 0),
                        (m = ((fe | 0) == 0) | ((fe | 0) == (l | 0)) ? m : fe),
                        l)
                      )
                        y = y << 1;
                      else {
                        (l = m), (fe = 61);
                        break;
                      }
                    }
                while (0);
                if ((fe | 0) == 61) {
                  if (((l | 0) == 0) & ((a | 0) == 0)) {
                    if (((a = 2 << T), (a = (a | (0 - a)) & f), !a)) {
                      j = P;
                      break;
                    }
                    (j = ((a & (0 - a)) + -1) | 0),
                      (_ = (j >>> 12) & 16),
                      (j = j >>> _),
                      (m = (j >>> 5) & 8),
                      (j = j >>> m),
                      (y = (j >>> 2) & 4),
                      (j = j >>> y),
                      (T = (j >>> 1) & 2),
                      (j = j >>> T),
                      (l = (j >>> 1) & 1),
                      (a = 0),
                      (l =
                        A[
                          (23732 + (((m | _ | y | T | l) + (j >>> l)) << 2)) >>
                            2
                        ] | 0);
                  }
                  l ? (fe = 65) : ((y = a), (_ = d));
                }
                if ((fe | 0) == 65)
                  for (m = l; ; )
                    if (
                      ((j = ((A[(m + 4) >> 2] & -8) - P) | 0),
                      (l = j >>> 0 < d >>> 0),
                      (d = l ? j : d),
                      (a = l ? m : a),
                      (l = A[(m + 16) >> 2] | 0),
                      l || (l = A[(m + 20) >> 2] | 0),
                      l)
                    )
                      m = l;
                    else {
                      (y = a), (_ = d);
                      break;
                    }
                if (
                  y | 0 &&
                  _ >>> 0 < (((A[5859] | 0) - P) | 0) >>> 0 &&
                  ((B = (y + P) | 0), B >>> 0 > y >>> 0)
                ) {
                  (m = A[(y + 24) >> 2] | 0), (o = A[(y + 12) >> 2] | 0);
                  do
                    if ((o | 0) == (y | 0)) {
                      if (
                        ((a = (y + 20) | 0),
                        (o = A[a >> 2] | 0),
                        !o && ((a = (y + 16) | 0), (o = A[a >> 2] | 0), !o))
                      ) {
                        o = 0;
                        break;
                      }
                      for (;;)
                        if (((d = (o + 20) | 0), (l = A[d >> 2] | 0), l))
                          (o = l), (a = d);
                        else if (((d = (o + 16) | 0), (l = A[d >> 2] | 0), l))
                          (o = l), (a = d);
                        else break;
                      A[a >> 2] = 0;
                    } else
                      (ue = A[(y + 8) >> 2] | 0),
                        (A[(ue + 12) >> 2] = o),
                        (A[(o + 8) >> 2] = ue);
                  while (0);
                  do
                    if (m) {
                      if (
                        ((a = A[(y + 28) >> 2] | 0),
                        (l = (23732 + (a << 2)) | 0),
                        (y | 0) == (A[l >> 2] | 0))
                      ) {
                        if (((A[l >> 2] = o), !o)) {
                          (f = f & ~(1 << a)), (A[5858] = f);
                          break;
                        }
                      } else if (
                        ((ue = (m + 16) | 0),
                        (A[
                          ((A[ue >> 2] | 0) == (y | 0) ? ue : (m + 20) | 0) >> 2
                        ] = o),
                        !o)
                      )
                        break;
                      (A[(o + 24) >> 2] = m),
                        (a = A[(y + 16) >> 2] | 0),
                        a | 0 &&
                          ((A[(o + 16) >> 2] = a), (A[(a + 24) >> 2] = o)),
                        (a = A[(y + 20) >> 2] | 0),
                        a && ((A[(o + 20) >> 2] = a), (A[(a + 24) >> 2] = o));
                    }
                  while (0);
                  e: do
                    if (_ >>> 0 < 16)
                      (ue = (_ + P) | 0),
                        (A[(y + 4) >> 2] = ue | 3),
                        (ue = (y + ue + 4) | 0),
                        (A[ue >> 2] = A[ue >> 2] | 1);
                    else {
                      if (
                        ((A[(y + 4) >> 2] = P | 3),
                        (A[(B + 4) >> 2] = _ | 1),
                        (A[(B + _) >> 2] = _),
                        (o = _ >>> 3),
                        _ >>> 0 < 256)
                      ) {
                        (l = (23468 + ((o << 1) << 2)) | 0),
                          (a = A[5857] | 0),
                          (o = 1 << o),
                          a & o
                            ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                            : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                          (A[a >> 2] = B),
                          (A[(o + 12) >> 2] = B),
                          (A[(B + 8) >> 2] = o),
                          (A[(B + 12) >> 2] = l);
                        break;
                      }
                      if (
                        ((o = _ >>> 8),
                        o
                          ? _ >>> 0 > 16777215
                            ? (l = 31)
                            : ((_e = (((o + 1048320) | 0) >>> 16) & 8),
                              (ue = o << _e),
                              (ve = (((ue + 520192) | 0) >>> 16) & 4),
                              (ue = ue << ve),
                              (l = (((ue + 245760) | 0) >>> 16) & 2),
                              (l =
                                (14 - (ve | _e | l) + ((ue << l) >>> 15)) | 0),
                              (l = ((_ >>> ((l + 7) | 0)) & 1) | (l << 1)))
                          : (l = 0),
                        (o = (23732 + (l << 2)) | 0),
                        (A[(B + 28) >> 2] = l),
                        (a = (B + 16) | 0),
                        (A[(a + 4) >> 2] = 0),
                        (A[a >> 2] = 0),
                        (a = 1 << l),
                        !(f & a))
                      ) {
                        (A[5858] = f | a),
                          (A[o >> 2] = B),
                          (A[(B + 24) >> 2] = o),
                          (A[(B + 12) >> 2] = B),
                          (A[(B + 8) >> 2] = B);
                        break;
                      }
                      o = A[o >> 2] | 0;
                      t: do
                        if (((A[(o + 4) >> 2] & -8) | 0) != (_ | 0)) {
                          for (
                            f = _ << ((l | 0) == 31 ? 0 : (25 - (l >>> 1)) | 0);
                            (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                              (a = A[l >> 2] | 0),
                              !!a;

                          )
                            if (((A[(a + 4) >> 2] & -8) | 0) == (_ | 0)) {
                              o = a;
                              break t;
                            } else (f = f << 1), (o = a);
                          (A[l >> 2] = B),
                            (A[(B + 24) >> 2] = o),
                            (A[(B + 12) >> 2] = B),
                            (A[(B + 8) >> 2] = B);
                          break e;
                        }
                      while (0);
                      (_e = (o + 8) | 0),
                        (ue = A[_e >> 2] | 0),
                        (A[(ue + 12) >> 2] = B),
                        (A[_e >> 2] = B),
                        (A[(B + 8) >> 2] = ue),
                        (A[(B + 12) >> 2] = o),
                        (A[(B + 24) >> 2] = 0);
                    }
                  while (0);
                  return (ue = (y + 8) | 0), (z = Ze), ue | 0;
                } else j = P;
              } else j = P;
            else j = -1;
          while (0);
          if (((l = A[5859] | 0), l >>> 0 >= j >>> 0))
            return (
              (o = (l - j) | 0),
              (a = A[5862] | 0),
              o >>> 0 > 15
                ? ((ue = (a + j) | 0),
                  (A[5862] = ue),
                  (A[5859] = o),
                  (A[(ue + 4) >> 2] = o | 1),
                  (A[(a + l) >> 2] = o),
                  (A[(a + 4) >> 2] = j | 3))
                : ((A[5859] = 0),
                  (A[5862] = 0),
                  (A[(a + 4) >> 2] = l | 3),
                  (ue = (a + l + 4) | 0),
                  (A[ue >> 2] = A[ue >> 2] | 1)),
              (ue = (a + 8) | 0),
              (z = Ze),
              ue | 0
            );
          if (((_ = A[5860] | 0), _ >>> 0 > j >>> 0))
            return (
              (ve = (_ - j) | 0),
              (A[5860] = ve),
              (ue = A[5863] | 0),
              (_e = (ue + j) | 0),
              (A[5863] = _e),
              (A[(_e + 4) >> 2] = ve | 1),
              (A[(ue + 4) >> 2] = j | 3),
              (ue = (ue + 8) | 0),
              (z = Ze),
              ue | 0
            );
          if (
            (A[5975] | 0
              ? (a = A[5977] | 0)
              : ((A[5977] = 4096),
                (A[5976] = 4096),
                (A[5978] = -1),
                (A[5979] = -1),
                (A[5980] = 0),
                (A[5968] = 0),
                (A[5975] = (ee & -16) ^ 1431655768),
                (a = 4096)),
            (y = (j + 48) | 0),
            (T = (j + 47) | 0),
            (m = (a + T) | 0),
            (d = (0 - a) | 0),
            (P = m & d),
            P >>> 0 <= j >>> 0 ||
              ((a = A[5967] | 0),
              a | 0 &&
                ((B = A[5965] | 0),
                (ee = (B + P) | 0),
                (ee >>> 0 <= B >>> 0) | (ee >>> 0 > a >>> 0))))
          )
            return (ue = 0), (z = Ze), ue | 0;
          e: do
            if (A[5968] & 4) (o = 0), (fe = 143);
            else {
              l = A[5863] | 0;
              t: do
                if (l) {
                  for (
                    f = 23876;
                    (ee = A[f >> 2] | 0),
                      !(
                        ee >>> 0 <= l >>> 0 &&
                        ((ee + (A[(f + 4) >> 2] | 0)) | 0) >>> 0 > l >>> 0
                      );

                  )
                    if (((a = A[(f + 8) >> 2] | 0), a)) f = a;
                    else {
                      fe = 128;
                      break t;
                    }
                  if (((o = (m - _) & d), o >>> 0 < 2147483647))
                    if (
                      ((a = Xr(o | 0) | 0),
                      (a | 0) ==
                        (((A[f >> 2] | 0) + (A[(f + 4) >> 2] | 0)) | 0))
                    ) {
                      if ((a | 0) != -1) {
                        (_ = o), (m = a), (fe = 145);
                        break e;
                      }
                    } else (f = a), (fe = 136);
                  else o = 0;
                } else fe = 128;
              while (0);
              do
                if ((fe | 0) == 128)
                  if (
                    ((l = Xr(0) | 0),
                    (l | 0) != -1 &&
                      ((o = l),
                      (se = A[5976] | 0),
                      (Z = (se + -1) | 0),
                      (o =
                        (((Z & o) | 0 ? (((Z + o) & (0 - se)) - o) | 0 : 0) +
                          P) |
                        0),
                      (se = A[5965] | 0),
                      (Z = (o + se) | 0),
                      (o >>> 0 > j >>> 0) & (o >>> 0 < 2147483647)))
                  ) {
                    if (
                      ((ee = A[5967] | 0),
                      ee | 0 && (Z >>> 0 <= se >>> 0) | (Z >>> 0 > ee >>> 0))
                    ) {
                      o = 0;
                      break;
                    }
                    if (((a = Xr(o | 0) | 0), (a | 0) == (l | 0))) {
                      (_ = o), (m = l), (fe = 145);
                      break e;
                    } else (f = a), (fe = 136);
                  } else o = 0;
              while (0);
              do
                if ((fe | 0) == 136) {
                  if (
                    ((l = (0 - o) | 0),
                    !(
                      (y >>> 0 > o >>> 0) &
                      ((o >>> 0 < 2147483647) & ((f | 0) != -1))
                    ))
                  )
                    if ((f | 0) == -1) {
                      o = 0;
                      break;
                    } else {
                      (_ = o), (m = f), (fe = 145);
                      break e;
                    }
                  if (
                    ((a = A[5977] | 0),
                    (a = (T - o + a) & (0 - a)),
                    a >>> 0 >= 2147483647)
                  ) {
                    (_ = o), (m = f), (fe = 145);
                    break e;
                  }
                  if ((Xr(a | 0) | 0) == -1) {
                    Xr(l | 0) | 0, (o = 0);
                    break;
                  } else {
                    (_ = (a + o) | 0), (m = f), (fe = 145);
                    break e;
                  }
                }
              while (0);
              (A[5968] = A[5968] | 4), (fe = 143);
            }
          while (0);
          if (
            ((fe | 0) == 143 &&
              P >>> 0 < 2147483647 &&
              ((ve = Xr(P | 0) | 0),
              (Z = Xr(0) | 0),
              (we = (Z - ve) | 0),
              (Ee = we >>> 0 > ((j + 40) | 0) >>> 0),
              !(
                ((ve | 0) == -1) |
                (Ee ^ 1) |
                (((ve >>> 0 < Z >>> 0) & (((ve | 0) != -1) & ((Z | 0) != -1))) ^
                  1)
              )) &&
              ((_ = Ee ? we : o), (m = ve), (fe = 145)),
            (fe | 0) == 145)
          ) {
            (o = ((A[5965] | 0) + _) | 0),
              (A[5965] = o),
              o >>> 0 > (A[5966] | 0) >>> 0 && (A[5966] = o),
              (T = A[5863] | 0);
            e: do
              if (T) {
                for (o = 23876; ; ) {
                  if (
                    ((a = A[o >> 2] | 0),
                    (l = A[(o + 4) >> 2] | 0),
                    (m | 0) == ((a + l) | 0))
                  ) {
                    fe = 154;
                    break;
                  }
                  if (((f = A[(o + 8) >> 2] | 0), f)) o = f;
                  else break;
                }
                if (
                  (fe | 0) == 154 &&
                  ((_e = (o + 4) | 0), ((A[(o + 12) >> 2] & 8) | 0) == 0) &&
                  (m >>> 0 > T >>> 0) & (a >>> 0 <= T >>> 0)
                ) {
                  (A[_e >> 2] = l + _),
                    (ue = ((A[5860] | 0) + _) | 0),
                    (ve = (T + 8) | 0),
                    (ve = (ve & 7) | 0 ? (0 - ve) & 7 : 0),
                    (_e = (T + ve) | 0),
                    (ve = (ue - ve) | 0),
                    (A[5863] = _e),
                    (A[5860] = ve),
                    (A[(_e + 4) >> 2] = ve | 1),
                    (A[(T + ue + 4) >> 2] = 40),
                    (A[5864] = A[5979]);
                  break;
                }
                for (
                  m >>> 0 < (A[5861] | 0) >>> 0 && (A[5861] = m),
                    l = (m + _) | 0,
                    o = 23876;
                  ;

                ) {
                  if ((A[o >> 2] | 0) == (l | 0)) {
                    fe = 162;
                    break;
                  }
                  if (((a = A[(o + 8) >> 2] | 0), a)) o = a;
                  else break;
                }
                if ((fe | 0) == 162 && !((A[(o + 12) >> 2] & 8) | 0)) {
                  (A[o >> 2] = m),
                    (B = (o + 4) | 0),
                    (A[B >> 2] = (A[B >> 2] | 0) + _),
                    (B = (m + 8) | 0),
                    (B = (m + ((B & 7) | 0 ? (0 - B) & 7 : 0)) | 0),
                    (o = (l + 8) | 0),
                    (o = (l + ((o & 7) | 0 ? (0 - o) & 7 : 0)) | 0),
                    (P = (B + j) | 0),
                    (y = (o - B - j) | 0),
                    (A[(B + 4) >> 2] = j | 3);
                  t: do
                    if ((T | 0) == (o | 0))
                      (ue = ((A[5860] | 0) + y) | 0),
                        (A[5860] = ue),
                        (A[5863] = P),
                        (A[(P + 4) >> 2] = ue | 1);
                    else {
                      if ((A[5862] | 0) == (o | 0)) {
                        (ue = ((A[5859] | 0) + y) | 0),
                          (A[5859] = ue),
                          (A[5862] = P),
                          (A[(P + 4) >> 2] = ue | 1),
                          (A[(P + ue) >> 2] = ue);
                        break;
                      }
                      if (((a = A[(o + 4) >> 2] | 0), ((a & 3) | 0) == 1)) {
                        (_ = a & -8), (f = a >>> 3);
                        n: do
                          if (a >>> 0 < 256)
                            if (
                              ((a = A[(o + 8) >> 2] | 0),
                              (l = A[(o + 12) >> 2] | 0),
                              (l | 0) == (a | 0))
                            ) {
                              A[5857] = A[5857] & ~(1 << f);
                              break;
                            } else {
                              (A[(a + 12) >> 2] = l), (A[(l + 8) >> 2] = a);
                              break;
                            }
                          else {
                            (m = A[(o + 24) >> 2] | 0),
                              (a = A[(o + 12) >> 2] | 0);
                            do
                              if ((a | 0) == (o | 0)) {
                                if (
                                  ((l = (o + 16) | 0),
                                  (f = (l + 4) | 0),
                                  (a = A[f >> 2] | 0),
                                  a)
                                )
                                  l = f;
                                else if (((a = A[l >> 2] | 0), !a)) {
                                  a = 0;
                                  break;
                                }
                                for (;;)
                                  if (
                                    ((d = (a + 20) | 0), (f = A[d >> 2] | 0), f)
                                  )
                                    (a = f), (l = d);
                                  else if (
                                    ((d = (a + 16) | 0), (f = A[d >> 2] | 0), f)
                                  )
                                    (a = f), (l = d);
                                  else break;
                                A[l >> 2] = 0;
                              } else
                                (ue = A[(o + 8) >> 2] | 0),
                                  (A[(ue + 12) >> 2] = a),
                                  (A[(a + 8) >> 2] = ue);
                            while (0);
                            if (!m) break;
                            (l = A[(o + 28) >> 2] | 0),
                              (f = (23732 + (l << 2)) | 0);
                            do
                              if ((A[f >> 2] | 0) != (o | 0)) {
                                if (
                                  ((ue = (m + 16) | 0),
                                  (A[
                                    ((A[ue >> 2] | 0) == (o | 0)
                                      ? ue
                                      : (m + 20) | 0) >> 2
                                  ] = a),
                                  !a)
                                )
                                  break n;
                              } else {
                                if (((A[f >> 2] = a), a | 0)) break;
                                A[5858] = A[5858] & ~(1 << l);
                                break n;
                              }
                            while (0);
                            if (
                              ((A[(a + 24) >> 2] = m),
                              (l = (o + 16) | 0),
                              (f = A[l >> 2] | 0),
                              f | 0 &&
                                ((A[(a + 16) >> 2] = f),
                                (A[(f + 24) >> 2] = a)),
                              (l = A[(l + 4) >> 2] | 0),
                              !l)
                            )
                              break;
                            (A[(a + 20) >> 2] = l), (A[(l + 24) >> 2] = a);
                          }
                        while (0);
                        (o = (o + _) | 0), (d = (_ + y) | 0);
                      } else d = y;
                      if (
                        ((o = (o + 4) | 0),
                        (A[o >> 2] = A[o >> 2] & -2),
                        (A[(P + 4) >> 2] = d | 1),
                        (A[(P + d) >> 2] = d),
                        (o = d >>> 3),
                        d >>> 0 < 256)
                      ) {
                        (l = (23468 + ((o << 1) << 2)) | 0),
                          (a = A[5857] | 0),
                          (o = 1 << o),
                          a & o
                            ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                            : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                          (A[a >> 2] = P),
                          (A[(o + 12) >> 2] = P),
                          (A[(P + 8) >> 2] = o),
                          (A[(P + 12) >> 2] = l);
                        break;
                      }
                      o = d >>> 8;
                      do
                        if (!o) f = 0;
                        else {
                          if (d >>> 0 > 16777215) {
                            f = 31;
                            break;
                          }
                          (_e = (((o + 1048320) | 0) >>> 16) & 8),
                            (ue = o << _e),
                            (ve = (((ue + 520192) | 0) >>> 16) & 4),
                            (ue = ue << ve),
                            (f = (((ue + 245760) | 0) >>> 16) & 2),
                            (f = (14 - (ve | _e | f) + ((ue << f) >>> 15)) | 0),
                            (f = ((d >>> ((f + 7) | 0)) & 1) | (f << 1));
                        }
                      while (0);
                      if (
                        ((o = (23732 + (f << 2)) | 0),
                        (A[(P + 28) >> 2] = f),
                        (a = (P + 16) | 0),
                        (A[(a + 4) >> 2] = 0),
                        (A[a >> 2] = 0),
                        (a = A[5858] | 0),
                        (l = 1 << f),
                        !(a & l))
                      ) {
                        (A[5858] = a | l),
                          (A[o >> 2] = P),
                          (A[(P + 24) >> 2] = o),
                          (A[(P + 12) >> 2] = P),
                          (A[(P + 8) >> 2] = P);
                        break;
                      }
                      o = A[o >> 2] | 0;
                      n: do
                        if (((A[(o + 4) >> 2] & -8) | 0) != (d | 0)) {
                          for (
                            f = d << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                            (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                              (a = A[l >> 2] | 0),
                              !!a;

                          )
                            if (((A[(a + 4) >> 2] & -8) | 0) == (d | 0)) {
                              o = a;
                              break n;
                            } else (f = f << 1), (o = a);
                          (A[l >> 2] = P),
                            (A[(P + 24) >> 2] = o),
                            (A[(P + 12) >> 2] = P),
                            (A[(P + 8) >> 2] = P);
                          break t;
                        }
                      while (0);
                      (_e = (o + 8) | 0),
                        (ue = A[_e >> 2] | 0),
                        (A[(ue + 12) >> 2] = P),
                        (A[_e >> 2] = P),
                        (A[(P + 8) >> 2] = ue),
                        (A[(P + 12) >> 2] = o),
                        (A[(P + 24) >> 2] = 0);
                    }
                  while (0);
                  return (ue = (B + 8) | 0), (z = Ze), ue | 0;
                }
                for (
                  o = 23876;
                  (a = A[o >> 2] | 0),
                    !(
                      a >>> 0 <= T >>> 0 &&
                      ((ue = (a + (A[(o + 4) >> 2] | 0)) | 0),
                      ue >>> 0 > T >>> 0)
                    );

                )
                  o = A[(o + 8) >> 2] | 0;
                (d = (ue + -47) | 0),
                  (a = (d + 8) | 0),
                  (a = (d + ((a & 7) | 0 ? (0 - a) & 7 : 0)) | 0),
                  (d = (T + 16) | 0),
                  (a = a >>> 0 < d >>> 0 ? T : a),
                  (o = (a + 8) | 0),
                  (l = (_ + -40) | 0),
                  (ve = (m + 8) | 0),
                  (ve = (ve & 7) | 0 ? (0 - ve) & 7 : 0),
                  (_e = (m + ve) | 0),
                  (ve = (l - ve) | 0),
                  (A[5863] = _e),
                  (A[5860] = ve),
                  (A[(_e + 4) >> 2] = ve | 1),
                  (A[(m + l + 4) >> 2] = 40),
                  (A[5864] = A[5979]),
                  (l = (a + 4) | 0),
                  (A[l >> 2] = 27),
                  (A[o >> 2] = A[5969]),
                  (A[(o + 4) >> 2] = A[5970]),
                  (A[(o + 8) >> 2] = A[5971]),
                  (A[(o + 12) >> 2] = A[5972]),
                  (A[5969] = m),
                  (A[5970] = _),
                  (A[5972] = 0),
                  (A[5971] = o),
                  (o = (a + 24) | 0);
                do (_e = o), (o = (o + 4) | 0), (A[o >> 2] = 7);
                while (((_e + 8) | 0) >>> 0 < ue >>> 0);
                if ((a | 0) != (T | 0)) {
                  if (
                    ((m = (a - T) | 0),
                    (A[l >> 2] = A[l >> 2] & -2),
                    (A[(T + 4) >> 2] = m | 1),
                    (A[a >> 2] = m),
                    (o = m >>> 3),
                    m >>> 0 < 256)
                  ) {
                    (l = (23468 + ((o << 1) << 2)) | 0),
                      (a = A[5857] | 0),
                      (o = 1 << o),
                      a & o
                        ? ((a = (l + 8) | 0), (o = A[a >> 2] | 0))
                        : ((A[5857] = a | o), (o = l), (a = (l + 8) | 0)),
                      (A[a >> 2] = T),
                      (A[(o + 12) >> 2] = T),
                      (A[(T + 8) >> 2] = o),
                      (A[(T + 12) >> 2] = l);
                    break;
                  }
                  if (
                    ((o = m >>> 8),
                    o
                      ? m >>> 0 > 16777215
                        ? (f = 31)
                        : ((_e = (((o + 1048320) | 0) >>> 16) & 8),
                          (ue = o << _e),
                          (ve = (((ue + 520192) | 0) >>> 16) & 4),
                          (ue = ue << ve),
                          (f = (((ue + 245760) | 0) >>> 16) & 2),
                          (f = (14 - (ve | _e | f) + ((ue << f) >>> 15)) | 0),
                          (f = ((m >>> ((f + 7) | 0)) & 1) | (f << 1)))
                      : (f = 0),
                    (l = (23732 + (f << 2)) | 0),
                    (A[(T + 28) >> 2] = f),
                    (A[(T + 20) >> 2] = 0),
                    (A[d >> 2] = 0),
                    (o = A[5858] | 0),
                    (a = 1 << f),
                    !(o & a))
                  ) {
                    (A[5858] = o | a),
                      (A[l >> 2] = T),
                      (A[(T + 24) >> 2] = l),
                      (A[(T + 12) >> 2] = T),
                      (A[(T + 8) >> 2] = T);
                    break;
                  }
                  o = A[l >> 2] | 0;
                  t: do
                    if (((A[(o + 4) >> 2] & -8) | 0) != (m | 0)) {
                      for (
                        f = m << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                        (l = (o + 16 + ((f >>> 31) << 2)) | 0),
                          (a = A[l >> 2] | 0),
                          !!a;

                      )
                        if (((A[(a + 4) >> 2] & -8) | 0) == (m | 0)) {
                          o = a;
                          break t;
                        } else (f = f << 1), (o = a);
                      (A[l >> 2] = T),
                        (A[(T + 24) >> 2] = o),
                        (A[(T + 12) >> 2] = T),
                        (A[(T + 8) >> 2] = T);
                      break e;
                    }
                  while (0);
                  (_e = (o + 8) | 0),
                    (ue = A[_e >> 2] | 0),
                    (A[(ue + 12) >> 2] = T),
                    (A[_e >> 2] = T),
                    (A[(T + 8) >> 2] = ue),
                    (A[(T + 12) >> 2] = o),
                    (A[(T + 24) >> 2] = 0);
                }
              } else
                (ue = A[5861] | 0),
                  ((ue | 0) == 0) | (m >>> 0 < ue >>> 0) && (A[5861] = m),
                  (A[5969] = m),
                  (A[5970] = _),
                  (A[5972] = 0),
                  (A[5866] = A[5975]),
                  (A[5865] = -1),
                  (A[5870] = 23468),
                  (A[5869] = 23468),
                  (A[5872] = 23476),
                  (A[5871] = 23476),
                  (A[5874] = 23484),
                  (A[5873] = 23484),
                  (A[5876] = 23492),
                  (A[5875] = 23492),
                  (A[5878] = 23500),
                  (A[5877] = 23500),
                  (A[5880] = 23508),
                  (A[5879] = 23508),
                  (A[5882] = 23516),
                  (A[5881] = 23516),
                  (A[5884] = 23524),
                  (A[5883] = 23524),
                  (A[5886] = 23532),
                  (A[5885] = 23532),
                  (A[5888] = 23540),
                  (A[5887] = 23540),
                  (A[5890] = 23548),
                  (A[5889] = 23548),
                  (A[5892] = 23556),
                  (A[5891] = 23556),
                  (A[5894] = 23564),
                  (A[5893] = 23564),
                  (A[5896] = 23572),
                  (A[5895] = 23572),
                  (A[5898] = 23580),
                  (A[5897] = 23580),
                  (A[5900] = 23588),
                  (A[5899] = 23588),
                  (A[5902] = 23596),
                  (A[5901] = 23596),
                  (A[5904] = 23604),
                  (A[5903] = 23604),
                  (A[5906] = 23612),
                  (A[5905] = 23612),
                  (A[5908] = 23620),
                  (A[5907] = 23620),
                  (A[5910] = 23628),
                  (A[5909] = 23628),
                  (A[5912] = 23636),
                  (A[5911] = 23636),
                  (A[5914] = 23644),
                  (A[5913] = 23644),
                  (A[5916] = 23652),
                  (A[5915] = 23652),
                  (A[5918] = 23660),
                  (A[5917] = 23660),
                  (A[5920] = 23668),
                  (A[5919] = 23668),
                  (A[5922] = 23676),
                  (A[5921] = 23676),
                  (A[5924] = 23684),
                  (A[5923] = 23684),
                  (A[5926] = 23692),
                  (A[5925] = 23692),
                  (A[5928] = 23700),
                  (A[5927] = 23700),
                  (A[5930] = 23708),
                  (A[5929] = 23708),
                  (A[5932] = 23716),
                  (A[5931] = 23716),
                  (ue = (_ + -40) | 0),
                  (ve = (m + 8) | 0),
                  (ve = (ve & 7) | 0 ? (0 - ve) & 7 : 0),
                  (_e = (m + ve) | 0),
                  (ve = (ue - ve) | 0),
                  (A[5863] = _e),
                  (A[5860] = ve),
                  (A[(_e + 4) >> 2] = ve | 1),
                  (A[(m + ue + 4) >> 2] = 40),
                  (A[5864] = A[5979]);
            while (0);
            if (((o = A[5860] | 0), o >>> 0 > j >>> 0))
              return (
                (ve = (o - j) | 0),
                (A[5860] = ve),
                (ue = A[5863] | 0),
                (_e = (ue + j) | 0),
                (A[5863] = _e),
                (A[(_e + 4) >> 2] = ve | 1),
                (A[(ue + 4) >> 2] = j | 3),
                (ue = (ue + 8) | 0),
                (z = Ze),
                ue | 0
              );
          }
          return (ue = w3() | 0), (A[ue >> 2] = 12), (ue = 0), (z = Ze), ue | 0;
        }
        function yt(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0,
            d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0;
          if (a) {
            (l = (a + -8) | 0),
              (d = A[5861] | 0),
              (a = A[(a + -4) >> 2] | 0),
              (o = a & -8),
              (T = (l + o) | 0);
            do
              if (a & 1) (y = l), (_ = l);
              else {
                if (
                  ((f = A[l >> 2] | 0),
                  !(a & 3) ||
                    ((_ = (l + (0 - f)) | 0),
                    (m = (f + o) | 0),
                    _ >>> 0 < d >>> 0))
                )
                  return;
                if ((A[5862] | 0) == (_ | 0)) {
                  if (
                    ((a = (T + 4) | 0), (o = A[a >> 2] | 0), ((o & 3) | 0) != 3)
                  ) {
                    (y = _), (o = m);
                    break;
                  }
                  (A[5859] = m),
                    (A[a >> 2] = o & -2),
                    (A[(_ + 4) >> 2] = m | 1),
                    (A[(_ + m) >> 2] = m);
                  return;
                }
                if (((l = f >>> 3), f >>> 0 < 256))
                  if (
                    ((a = A[(_ + 8) >> 2] | 0),
                    (o = A[(_ + 12) >> 2] | 0),
                    (o | 0) == (a | 0))
                  ) {
                    (A[5857] = A[5857] & ~(1 << l)), (y = _), (o = m);
                    break;
                  } else {
                    (A[(a + 12) >> 2] = o),
                      (A[(o + 8) >> 2] = a),
                      (y = _),
                      (o = m);
                    break;
                  }
                (d = A[(_ + 24) >> 2] | 0), (a = A[(_ + 12) >> 2] | 0);
                do
                  if ((a | 0) == (_ | 0)) {
                    if (
                      ((o = (_ + 16) | 0),
                      (l = (o + 4) | 0),
                      (a = A[l >> 2] | 0),
                      a)
                    )
                      o = l;
                    else if (((a = A[o >> 2] | 0), !a)) {
                      a = 0;
                      break;
                    }
                    for (;;)
                      if (((f = (a + 20) | 0), (l = A[f >> 2] | 0), l))
                        (a = l), (o = f);
                      else if (((f = (a + 16) | 0), (l = A[f >> 2] | 0), l))
                        (a = l), (o = f);
                      else break;
                    A[o >> 2] = 0;
                  } else
                    (y = A[(_ + 8) >> 2] | 0),
                      (A[(y + 12) >> 2] = a),
                      (A[(a + 8) >> 2] = y);
                while (0);
                if (d) {
                  if (
                    ((o = A[(_ + 28) >> 2] | 0),
                    (l = (23732 + (o << 2)) | 0),
                    (A[l >> 2] | 0) == (_ | 0))
                  ) {
                    if (((A[l >> 2] = a), !a)) {
                      (A[5858] = A[5858] & ~(1 << o)), (y = _), (o = m);
                      break;
                    }
                  } else if (
                    ((y = (d + 16) | 0),
                    (A[((A[y >> 2] | 0) == (_ | 0) ? y : (d + 20) | 0) >> 2] =
                      a),
                    !a)
                  ) {
                    (y = _), (o = m);
                    break;
                  }
                  (A[(a + 24) >> 2] = d),
                    (o = (_ + 16) | 0),
                    (l = A[o >> 2] | 0),
                    l | 0 && ((A[(a + 16) >> 2] = l), (A[(l + 24) >> 2] = a)),
                    (o = A[(o + 4) >> 2] | 0),
                    o
                      ? ((A[(a + 20) >> 2] = o),
                        (A[(o + 24) >> 2] = a),
                        (y = _),
                        (o = m))
                      : ((y = _), (o = m));
                } else (y = _), (o = m);
              }
            while (0);
            if (
              !(_ >>> 0 >= T >>> 0) &&
              ((a = (T + 4) | 0), (f = A[a >> 2] | 0), !!(f & 1))
            ) {
              if (f & 2)
                (A[a >> 2] = f & -2),
                  (A[(y + 4) >> 2] = o | 1),
                  (A[(_ + o) >> 2] = o),
                  (d = o);
              else {
                if ((A[5863] | 0) == (T | 0)) {
                  if (
                    ((T = ((A[5860] | 0) + o) | 0),
                    (A[5860] = T),
                    (A[5863] = y),
                    (A[(y + 4) >> 2] = T | 1),
                    (y | 0) != (A[5862] | 0))
                  )
                    return;
                  (A[5862] = 0), (A[5859] = 0);
                  return;
                }
                if ((A[5862] | 0) == (T | 0)) {
                  (T = ((A[5859] | 0) + o) | 0),
                    (A[5859] = T),
                    (A[5862] = _),
                    (A[(y + 4) >> 2] = T | 1),
                    (A[(_ + T) >> 2] = T);
                  return;
                }
                (d = ((f & -8) + o) | 0), (l = f >>> 3);
                do
                  if (f >>> 0 < 256)
                    if (
                      ((o = A[(T + 8) >> 2] | 0),
                      (a = A[(T + 12) >> 2] | 0),
                      (a | 0) == (o | 0))
                    ) {
                      A[5857] = A[5857] & ~(1 << l);
                      break;
                    } else {
                      (A[(o + 12) >> 2] = a), (A[(a + 8) >> 2] = o);
                      break;
                    }
                  else {
                    (m = A[(T + 24) >> 2] | 0), (a = A[(T + 12) >> 2] | 0);
                    do
                      if ((a | 0) == (T | 0)) {
                        if (
                          ((o = (T + 16) | 0),
                          (l = (o + 4) | 0),
                          (a = A[l >> 2] | 0),
                          a)
                        )
                          o = l;
                        else if (((a = A[o >> 2] | 0), !a)) {
                          l = 0;
                          break;
                        }
                        for (;;)
                          if (((f = (a + 20) | 0), (l = A[f >> 2] | 0), l))
                            (a = l), (o = f);
                          else if (((f = (a + 16) | 0), (l = A[f >> 2] | 0), l))
                            (a = l), (o = f);
                          else break;
                        (A[o >> 2] = 0), (l = a);
                      } else
                        (l = A[(T + 8) >> 2] | 0),
                          (A[(l + 12) >> 2] = a),
                          (A[(a + 8) >> 2] = l),
                          (l = a);
                    while (0);
                    if (m | 0) {
                      if (
                        ((a = A[(T + 28) >> 2] | 0),
                        (o = (23732 + (a << 2)) | 0),
                        (A[o >> 2] | 0) == (T | 0))
                      ) {
                        if (((A[o >> 2] = l), !l)) {
                          A[5858] = A[5858] & ~(1 << a);
                          break;
                        }
                      } else if (
                        ((f = (m + 16) | 0),
                        (A[
                          ((A[f >> 2] | 0) == (T | 0) ? f : (m + 20) | 0) >> 2
                        ] = l),
                        !l)
                      )
                        break;
                      (A[(l + 24) >> 2] = m),
                        (a = (T + 16) | 0),
                        (o = A[a >> 2] | 0),
                        o | 0 &&
                          ((A[(l + 16) >> 2] = o), (A[(o + 24) >> 2] = l)),
                        (a = A[(a + 4) >> 2] | 0),
                        a | 0 &&
                          ((A[(l + 20) >> 2] = a), (A[(a + 24) >> 2] = l));
                    }
                  }
                while (0);
                if (
                  ((A[(y + 4) >> 2] = d | 1),
                  (A[(_ + d) >> 2] = d),
                  (y | 0) == (A[5862] | 0))
                ) {
                  A[5859] = d;
                  return;
                }
              }
              if (((a = d >>> 3), d >>> 0 < 256)) {
                (l = (23468 + ((a << 1) << 2)) | 0),
                  (o = A[5857] | 0),
                  (a = 1 << a),
                  o & a
                    ? ((o = (l + 8) | 0), (a = A[o >> 2] | 0))
                    : ((A[5857] = o | a), (a = l), (o = (l + 8) | 0)),
                  (A[o >> 2] = y),
                  (A[(a + 12) >> 2] = y),
                  (A[(y + 8) >> 2] = a),
                  (A[(y + 12) >> 2] = l);
                return;
              }
              (a = d >>> 8),
                a
                  ? d >>> 0 > 16777215
                    ? (f = 31)
                    : ((_ = (((a + 1048320) | 0) >>> 16) & 8),
                      (T = a << _),
                      (m = (((T + 520192) | 0) >>> 16) & 4),
                      (T = T << m),
                      (f = (((T + 245760) | 0) >>> 16) & 2),
                      (f = (14 - (m | _ | f) + ((T << f) >>> 15)) | 0),
                      (f = ((d >>> ((f + 7) | 0)) & 1) | (f << 1)))
                  : (f = 0),
                (a = (23732 + (f << 2)) | 0),
                (A[(y + 28) >> 2] = f),
                (A[(y + 20) >> 2] = 0),
                (A[(y + 16) >> 2] = 0),
                (o = A[5858] | 0),
                (l = 1 << f);
              e: do
                if (!(o & l))
                  (A[5858] = o | l),
                    (A[a >> 2] = y),
                    (A[(y + 24) >> 2] = a),
                    (A[(y + 12) >> 2] = y),
                    (A[(y + 8) >> 2] = y);
                else {
                  a = A[a >> 2] | 0;
                  t: do
                    if (((A[(a + 4) >> 2] & -8) | 0) != (d | 0)) {
                      for (
                        f = d << ((f | 0) == 31 ? 0 : (25 - (f >>> 1)) | 0);
                        (l = (a + 16 + ((f >>> 31) << 2)) | 0),
                          (o = A[l >> 2] | 0),
                          !!o;

                      )
                        if (((A[(o + 4) >> 2] & -8) | 0) == (d | 0)) {
                          a = o;
                          break t;
                        } else (f = f << 1), (a = o);
                      (A[l >> 2] = y),
                        (A[(y + 24) >> 2] = a),
                        (A[(y + 12) >> 2] = y),
                        (A[(y + 8) >> 2] = y);
                      break e;
                    }
                  while (0);
                  (_ = (a + 8) | 0),
                    (T = A[_ >> 2] | 0),
                    (A[(T + 12) >> 2] = y),
                    (A[_ >> 2] = y),
                    (A[(y + 8) >> 2] = T),
                    (A[(y + 12) >> 2] = a),
                    (A[(y + 24) >> 2] = 0);
                }
              while (0);
              if (((T = ((A[5865] | 0) + -1) | 0), (A[5865] = T), !(T | 0))) {
                for (a = 23884; (a = A[a >> 2] | 0), a; ) a = (a + 8) | 0;
                A[5865] = -1;
              }
            }
          }
        }
        function lr(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0;
          return (
            a
              ? ((l = gn(o, a) | 0),
                (o | a) >>> 0 > 65535 &&
                  (l = (((l >>> 0) / (a >>> 0)) | 0 | 0) == (o | 0) ? l : -1))
              : (l = 0),
            (a = Ar(l) | 0),
            !a || !(A[(a + -4) >> 2] & 3) || Ms(a | 0, 0, l | 0) | 0,
            a | 0
          );
        }
        function zt(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (l = (a + l) >>> 0),
            St(((o + f + ((l >>> 0 < a >>> 0) | 0)) >>> 0) | 0),
            l | 0 | 0
          );
        }
        function jn(a, o, l, f) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (f = f | 0),
            (f = (o - f - ((l >>> 0 > a >>> 0) | 0)) >>> 0),
            St(f | 0),
            ((a - l) >>> 0) | 0 | 0
          );
        }
        function Gf(a) {
          return (a = a | 0), (a ? (31 - (Lt(a ^ (a - 1)) | 0)) | 0 : 32) | 0;
        }
        function w0(a, o, l, f, d) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0), (d = d | 0);
          var m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0,
            B = 0,
            j = 0,
            ee = 0,
            se = 0,
            Z = 0;
          if (((B = a), (T = o), (P = T), (_ = l), (ee = f), (y = ee), !P))
            return (
              (m = (d | 0) != 0),
              y
                ? m
                  ? ((A[d >> 2] = a | 0),
                    (A[(d + 4) >> 2] = o & 0),
                    (ee = 0),
                    (d = 0),
                    St(ee | 0),
                    d | 0)
                  : ((ee = 0), (d = 0), St(ee | 0), d | 0)
                : (m &&
                    ((A[d >> 2] = (B >>> 0) % (_ >>> 0)),
                    (A[(d + 4) >> 2] = 0)),
                  (ee = 0),
                  (d = ((B >>> 0) / (_ >>> 0)) >>> 0),
                  St(ee | 0),
                  d | 0)
            );
          m = (y | 0) == 0;
          do
            if (_) {
              if (!m) {
                if (
                  ((m = ((Lt(y | 0) | 0) - (Lt(P | 0) | 0)) | 0), m >>> 0 <= 31)
                ) {
                  (j = (m + 1) | 0),
                    (y = (31 - m) | 0),
                    (o = (m - 31) >> 31),
                    (_ = j),
                    (a = ((B >>> (j >>> 0)) & o) | (P << y)),
                    (o = (P >>> (j >>> 0)) & o),
                    (m = 0),
                    (y = B << y);
                  break;
                }
                return d
                  ? ((A[d >> 2] = a | 0),
                    (A[(d + 4) >> 2] = T | (o & 0)),
                    (ee = 0),
                    (d = 0),
                    St(ee | 0),
                    d | 0)
                  : ((ee = 0), (d = 0), St(ee | 0), d | 0);
              }
              if (((m = (_ - 1) | 0), (m & _) | 0)) {
                (y = ((Lt(_ | 0) | 0) + 33 - (Lt(P | 0) | 0)) | 0),
                  (Z = (64 - y) | 0),
                  (j = (32 - y) | 0),
                  (T = j >> 31),
                  (se = (y - 32) | 0),
                  (o = se >> 31),
                  (_ = y),
                  (a =
                    (((j - 1) >> 31) & (P >>> (se >>> 0))) |
                    (((P << j) | (B >>> (y >>> 0))) & o)),
                  (o = o & (P >>> (y >>> 0))),
                  (m = (B << Z) & T),
                  (y =
                    (((P << Z) | (B >>> (se >>> 0))) & T) |
                    ((B << j) & ((y - 33) >> 31)));
                break;
              }
              return (
                d | 0 && ((A[d >> 2] = m & B), (A[(d + 4) >> 2] = 0)),
                (_ | 0) == 1
                  ? ((se = T | (o & 0)), (Z = a | 0 | 0), St(se | 0), Z | 0)
                  : ((Z = Gf(_ | 0) | 0),
                    (se = (P >>> (Z >>> 0)) | 0),
                    (Z = (P << (32 - Z)) | (B >>> (Z >>> 0)) | 0),
                    St(se | 0),
                    Z | 0)
              );
            } else {
              if (m)
                return (
                  d | 0 &&
                    ((A[d >> 2] = (P >>> 0) % (_ >>> 0)),
                    (A[(d + 4) >> 2] = 0)),
                  (se = 0),
                  (Z = ((P >>> 0) / (_ >>> 0)) >>> 0),
                  St(se | 0),
                  Z | 0
                );
              if (!B)
                return (
                  d | 0 &&
                    ((A[d >> 2] = 0),
                    (A[(d + 4) >> 2] = (P >>> 0) % (y >>> 0))),
                  (se = 0),
                  (Z = ((P >>> 0) / (y >>> 0)) >>> 0),
                  St(se | 0),
                  Z | 0
                );
              if (((m = (y - 1) | 0), !(m & y)))
                return (
                  d | 0 &&
                    ((A[d >> 2] = a | 0),
                    (A[(d + 4) >> 2] = (m & P) | (o & 0))),
                  (se = 0),
                  (Z = P >>> ((Gf(y | 0) | 0) >>> 0)),
                  St(se | 0),
                  Z | 0
                );
              if (
                ((m = ((Lt(y | 0) | 0) - (Lt(P | 0) | 0)) | 0), m >>> 0 <= 30)
              ) {
                (o = (m + 1) | 0),
                  (y = (31 - m) | 0),
                  (_ = o),
                  (a = (P << y) | (B >>> (o >>> 0))),
                  (o = P >>> (o >>> 0)),
                  (m = 0),
                  (y = B << y);
                break;
              }
              return d
                ? ((A[d >> 2] = a | 0),
                  (A[(d + 4) >> 2] = T | (o & 0)),
                  (se = 0),
                  (Z = 0),
                  St(se | 0),
                  Z | 0)
                : ((se = 0), (Z = 0), St(se | 0), Z | 0);
            }
          while (0);
          if (!_) (P = y), (T = 0), (y = 0);
          else {
            (j = l | 0 | 0),
              (B = ee | (f & 0)),
              (P = zt(j | 0, B | 0, -1, -1) | 0),
              (l = W() | 0),
              (T = y),
              (y = 0);
            do
              (f = T),
                (T = (m >>> 31) | (T << 1)),
                (m = y | (m << 1)),
                (f = (a << 1) | (f >>> 31) | 0),
                (ee = (a >>> 31) | (o << 1) | 0),
                jn(P | 0, l | 0, f | 0, ee | 0) | 0,
                (Z = W() | 0),
                (se = (Z >> 31) | (((Z | 0) < 0 ? -1 : 0) << 1)),
                (y = se & 1),
                (a =
                  jn(
                    f | 0,
                    ee | 0,
                    (se & j) | 0,
                    (((((Z | 0) < 0 ? -1 : 0) >> 31) |
                      (((Z | 0) < 0 ? -1 : 0) << 1)) &
                      B) |
                      0
                  ) | 0),
                (o = W() | 0),
                (_ = (_ - 1) | 0);
            while (_ | 0);
            (P = T), (T = 0);
          }
          return (
            (_ = 0),
            d | 0 && ((A[d >> 2] = a), (A[(d + 4) >> 2] = o)),
            (se =
              ((m | 0) >>> 31) |
              ((P | _) << 1) |
              (((_ << 1) | (m >>> 31)) & 0) |
              T),
            (Z = (((m << 1) | 0) & -2) | y),
            St(se | 0),
            Z | 0
          );
        }
        function bs(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          return (
            (P = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (T =
              (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (m = (f >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (d =
              (((f | 0) < 0 ? -1 : 0) >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (y = jn((P ^ a) | 0, (T ^ o) | 0, P | 0, T | 0) | 0),
            (_ = W() | 0),
            (a = m ^ P),
            (o = d ^ T),
            jn(
              ((w0(
                y,
                _,
                jn((m ^ l) | 0, (d ^ f) | 0, m | 0, d | 0) | 0,
                W() | 0,
                0
              ) |
                0) ^
                a) |
                0,
              ((W() | 0) ^ o) | 0,
              a | 0,
              o | 0
            ) | 0
          );
        }
        function T3(a, o) {
          (a = a | 0), (o = o | 0);
          var l = 0,
            f = 0,
            d = 0,
            m = 0;
          return (
            (m = a & 65535),
            (d = o & 65535),
            (l = gn(d, m) | 0),
            (f = a >>> 16),
            (a = ((l >>> 16) + (gn(d, f) | 0)) | 0),
            (d = o >>> 16),
            (o = gn(d, m) | 0),
            St(
              ((a >>> 16) + (gn(d, f) | 0) + ((((a & 65535) + o) | 0) >>> 16)) |
                0
            ),
            ((a + o) << 16) | (l & 65535) | 0 | 0
          );
        }
        function Xn(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0;
          return (
            (d = a),
            (m = l),
            (l = T3(d, m) | 0),
            (a = W() | 0),
            St(((gn(o, m) | 0) + (gn(f, d) | 0) + a) | (a & 0) | 0),
            l | 0 | 0 | 0
          );
        }
        function sA(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0,
            _ = 0,
            y = 0,
            T = 0,
            P = 0;
          return (
            (d = z),
            (z = (z + 16) | 0),
            (y = d | 0),
            (_ = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (m =
              (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1)),
            (P = (f >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (T =
              (((f | 0) < 0 ? -1 : 0) >> 31) | (((f | 0) < 0 ? -1 : 0) << 1)),
            (a = jn((_ ^ a) | 0, (m ^ o) | 0, _ | 0, m | 0) | 0),
            (o = W() | 0),
            w0(
              a,
              o,
              jn((P ^ l) | 0, (T ^ f) | 0, P | 0, T | 0) | 0,
              W() | 0,
              y
            ) | 0,
            (f =
              jn((A[y >> 2] ^ _) | 0, (A[(y + 4) >> 2] ^ m) | 0, _ | 0, m | 0) |
              0),
            (l = W() | 0),
            (z = d),
            St(l | 0),
            f | 0
          );
        }
        function eo(a, o, l, f) {
          (a = a | 0), (o = o | 0), (l = l | 0), (f = f | 0);
          var d = 0,
            m = 0;
          return (
            (m = z),
            (z = (z + 16) | 0),
            (d = m | 0),
            w0(a, o, l, f, d) | 0,
            (z = m),
            St(A[(d + 4) >> 2] | 0),
            A[d >> 2] | 0 | 0
          );
        }
        function Hf(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (St((o >> l) | 0),
                (a >>> l) | ((o & ((1 << l) - 1)) << (32 - l)))
              : (St(((o | 0) < 0 ? -1 : 0) | 0), (o >> (l - 32)) | 0)
          );
        }
        function De(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (St((o >>> l) | 0),
                (a >>> l) | ((o & ((1 << l) - 1)) << (32 - l)))
              : (St(0), (o >>> (l - 32)) | 0)
          );
        }
        function je(a, o, l) {
          return (
            (a = a | 0),
            (o = o | 0),
            (l = l | 0),
            (l | 0) < 32
              ? (St(
                  (o << l) |
                    ((a & (((1 << l) - 1) << (32 - l))) >>> (32 - l)) |
                    0
                ),
                a << l)
              : (St((a << (l - 32)) | 0), 0)
          );
        }
        function Vf(a, o) {
          return (a = +a), (o = +o), a != a ? +o : o != o ? +a : +yn(+a, +o);
        }
        function S0(a, o) {
          return (a = +a), (o = +o), a != a ? +o : o != o ? +a : +bi(+a, +o);
        }
        function oA(a) {
          return (a = +a), a >= 0 ? +ye(a + 0.5) : +sn(a - 0.5);
        }
        function aA(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0;
          if ((l | 0) >= 8192) return Jo(a | 0, o | 0, l | 0) | 0, a | 0;
          if (((m = a | 0), (d = (a + l) | 0), (a & 3) == (o & 3))) {
            for (; a & 3; ) {
              if (!l) return m | 0;
              (pt[a >> 0] = pt[o >> 0] | 0),
                (a = (a + 1) | 0),
                (o = (o + 1) | 0),
                (l = (l - 1) | 0);
            }
            for (l = (d & -4) | 0, f = (l - 64) | 0; (a | 0) <= (f | 0); )
              (A[a >> 2] = A[o >> 2]),
                (A[(a + 4) >> 2] = A[(o + 4) >> 2]),
                (A[(a + 8) >> 2] = A[(o + 8) >> 2]),
                (A[(a + 12) >> 2] = A[(o + 12) >> 2]),
                (A[(a + 16) >> 2] = A[(o + 16) >> 2]),
                (A[(a + 20) >> 2] = A[(o + 20) >> 2]),
                (A[(a + 24) >> 2] = A[(o + 24) >> 2]),
                (A[(a + 28) >> 2] = A[(o + 28) >> 2]),
                (A[(a + 32) >> 2] = A[(o + 32) >> 2]),
                (A[(a + 36) >> 2] = A[(o + 36) >> 2]),
                (A[(a + 40) >> 2] = A[(o + 40) >> 2]),
                (A[(a + 44) >> 2] = A[(o + 44) >> 2]),
                (A[(a + 48) >> 2] = A[(o + 48) >> 2]),
                (A[(a + 52) >> 2] = A[(o + 52) >> 2]),
                (A[(a + 56) >> 2] = A[(o + 56) >> 2]),
                (A[(a + 60) >> 2] = A[(o + 60) >> 2]),
                (a = (a + 64) | 0),
                (o = (o + 64) | 0);
            for (; (a | 0) < (l | 0); )
              (A[a >> 2] = A[o >> 2]), (a = (a + 4) | 0), (o = (o + 4) | 0);
          } else
            for (l = (d - 4) | 0; (a | 0) < (l | 0); )
              (pt[a >> 0] = pt[o >> 0] | 0),
                (pt[(a + 1) >> 0] = pt[(o + 1) >> 0] | 0),
                (pt[(a + 2) >> 0] = pt[(o + 2) >> 0] | 0),
                (pt[(a + 3) >> 0] = pt[(o + 3) >> 0] | 0),
                (a = (a + 4) | 0),
                (o = (o + 4) | 0);
          for (; (a | 0) < (d | 0); )
            (pt[a >> 0] = pt[o >> 0] | 0), (a = (a + 1) | 0), (o = (o + 1) | 0);
          return m | 0;
        }
        function Ms(a, o, l) {
          (a = a | 0), (o = o | 0), (l = l | 0);
          var f = 0,
            d = 0,
            m = 0,
            _ = 0;
          if (((m = (a + l) | 0), (o = o & 255), (l | 0) >= 67)) {
            for (; a & 3; ) (pt[a >> 0] = o), (a = (a + 1) | 0);
            for (
              f = (m & -4) | 0,
                _ = o | (o << 8) | (o << 16) | (o << 24),
                d = (f - 64) | 0;
              (a | 0) <= (d | 0);

            )
              (A[a >> 2] = _),
                (A[(a + 4) >> 2] = _),
                (A[(a + 8) >> 2] = _),
                (A[(a + 12) >> 2] = _),
                (A[(a + 16) >> 2] = _),
                (A[(a + 20) >> 2] = _),
                (A[(a + 24) >> 2] = _),
                (A[(a + 28) >> 2] = _),
                (A[(a + 32) >> 2] = _),
                (A[(a + 36) >> 2] = _),
                (A[(a + 40) >> 2] = _),
                (A[(a + 44) >> 2] = _),
                (A[(a + 48) >> 2] = _),
                (A[(a + 52) >> 2] = _),
                (A[(a + 56) >> 2] = _),
                (A[(a + 60) >> 2] = _),
                (a = (a + 64) | 0);
            for (; (a | 0) < (f | 0); ) (A[a >> 2] = _), (a = (a + 4) | 0);
          }
          for (; (a | 0) < (m | 0); ) (pt[a >> 0] = o), (a = (a + 1) | 0);
          return (m - l) | 0;
        }
        function Wf(a) {
          return (a = +a), a >= 0 ? +ye(a + 0.5) : +sn(a - 0.5);
        }
        function Xr(a) {
          a = a | 0;
          var o = 0,
            l = 0,
            f = 0;
          return (
            (f = gs() | 0),
            (l = A[le >> 2] | 0),
            (o = (l + a) | 0),
            (((a | 0) > 0) & ((o | 0) < (l | 0))) | ((o | 0) < 0)
              ? (br(o | 0) | 0, Ko(12), -1)
              : (o | 0) > (f | 0) && !(kn(o | 0) | 0)
              ? (Ko(12), -1)
              : ((A[le >> 2] = o), l | 0)
          );
        }
        return {
          ___divdi3: bs,
          ___muldi3: Xn,
          ___remdi3: sA,
          ___uremdi3: eo,
          _areNeighborCells: hg,
          _bitshift64Ashr: Hf,
          _bitshift64Lshr: De,
          _bitshift64Shl: je,
          _calloc: lr,
          _cellAreaKm2: Xg,
          _cellAreaM2: Qg,
          _cellAreaRads2: E0,
          _cellToBoundary: ia,
          _cellToCenterChild: Cg,
          _cellToChildPos: Bg,
          _cellToChildren: Sg,
          _cellToChildrenSize: rA,
          _cellToLatLng: na,
          _cellToLocalIj: t3,
          _cellToParent: v0,
          _cellToVertex: qi,
          _cellToVertexes: _3,
          _cellsToDirectedEdge: dg,
          _cellsToLinkedMultiPolygon: Km,
          _childPosToCell: Ng,
          _compactCells: Rg,
          _destroyLinkedMultiPolygon: Lf,
          _directedEdgeToBoundary: iA,
          _directedEdgeToCells: vg,
          _edgeLengthKm: Yg,
          _edgeLengthM: Zg,
          _edgeLengthRads: $g,
          _emscripten_replace_memory: ti,
          _free: yt,
          _getBaseCellNumber: wf,
          _getDirectedEdgeDestination: mg,
          _getDirectedEdgeOrigin: pg,
          _getHexagonAreaAvgKm2: Hg,
          _getHexagonAreaAvgM2: Vg,
          _getHexagonEdgeLengthAvgKm: Wg,
          _getHexagonEdgeLengthAvgM: jg,
          _getIcosahedronFaces: Tf,
          _getNumCells: M0,
          _getPentagons: b0,
          _getRes0Cells: ig,
          _getResolution: wg,
          _greatCircleDistanceKm: sa,
          _greatCircleDistanceM: kg,
          _greatCircleDistanceRads: Fg,
          _gridDisk: af,
          _gridDiskDistances: Af,
          _gridDistance: i3,
          _gridPathCells: s3,
          _gridPathCellsSize: r3,
          _gridRingUnsafe: Qm,
          _i64Add: zt,
          _i64Subtract: jn,
          _isPentagon: cn,
          _isResClassIII: Dg,
          _isValidCell: g0,
          _isValidDirectedEdge: gg,
          _isValidVertex: y3,
          _latLngToCell: Sf,
          _llvm_maxnum_f64: Vf,
          _llvm_minnum_f64: S0,
          _llvm_round_f64: oA,
          _localIjToCell: n3,
          _malloc: Ar,
          _maxFaceCount: qg,
          _maxGridDiskSize: Xm,
          _maxPolygonToCellsSize: $m,
          _memcpy: aA,
          _memset: Ms,
          _originToDirectedEdges: _g,
          _pentagonCount: Ug,
          _polygonToCells: Ym,
          _readInt64AsDoubleFromPointer: p3,
          _res0CellCount: ng,
          _round: Wf,
          _sbrk: Xr,
          _sizeOfCellBoundary: u3,
          _sizeOfCoordIJ: d3,
          _sizeOfGeoLoop: c3,
          _sizeOfGeoPolygon: f3,
          _sizeOfH3Index: A3,
          _sizeOfLatLng: l3,
          _sizeOfLinkedGeoPolygon: h3,
          _uncompactCells: Pg,
          _uncompactCellsSize: Lg,
          _vertexToLatLng: x3,
          establishStackSpace: jm,
          stackAlloc: ea,
          stackRestore: Ja,
          stackSave: A0,
        };
      })(Me, Ue, k);
    (e.___divdi3 = pe.___divdi3),
      (e.___muldi3 = pe.___muldi3),
      (e.___remdi3 = pe.___remdi3),
      (e.___uremdi3 = pe.___uremdi3),
      (e._areNeighborCells = pe._areNeighborCells),
      (e._bitshift64Ashr = pe._bitshift64Ashr),
      (e._bitshift64Lshr = pe._bitshift64Lshr),
      (e._bitshift64Shl = pe._bitshift64Shl),
      (e._calloc = pe._calloc),
      (e._cellAreaKm2 = pe._cellAreaKm2),
      (e._cellAreaM2 = pe._cellAreaM2),
      (e._cellAreaRads2 = pe._cellAreaRads2),
      (e._cellToBoundary = pe._cellToBoundary),
      (e._cellToCenterChild = pe._cellToCenterChild),
      (e._cellToChildPos = pe._cellToChildPos),
      (e._cellToChildren = pe._cellToChildren),
      (e._cellToChildrenSize = pe._cellToChildrenSize),
      (e._cellToLatLng = pe._cellToLatLng),
      (e._cellToLocalIj = pe._cellToLocalIj),
      (e._cellToParent = pe._cellToParent),
      (e._cellToVertex = pe._cellToVertex),
      (e._cellToVertexes = pe._cellToVertexes),
      (e._cellsToDirectedEdge = pe._cellsToDirectedEdge),
      (e._cellsToLinkedMultiPolygon = pe._cellsToLinkedMultiPolygon),
      (e._childPosToCell = pe._childPosToCell),
      (e._compactCells = pe._compactCells),
      (e._destroyLinkedMultiPolygon = pe._destroyLinkedMultiPolygon),
      (e._directedEdgeToBoundary = pe._directedEdgeToBoundary),
      (e._directedEdgeToCells = pe._directedEdgeToCells),
      (e._edgeLengthKm = pe._edgeLengthKm),
      (e._edgeLengthM = pe._edgeLengthM),
      (e._edgeLengthRads = pe._edgeLengthRads);
    var kt = (e._emscripten_replace_memory = pe._emscripten_replace_memory);
    (e._free = pe._free),
      (e._getBaseCellNumber = pe._getBaseCellNumber),
      (e._getDirectedEdgeDestination = pe._getDirectedEdgeDestination),
      (e._getDirectedEdgeOrigin = pe._getDirectedEdgeOrigin),
      (e._getHexagonAreaAvgKm2 = pe._getHexagonAreaAvgKm2),
      (e._getHexagonAreaAvgM2 = pe._getHexagonAreaAvgM2),
      (e._getHexagonEdgeLengthAvgKm = pe._getHexagonEdgeLengthAvgKm),
      (e._getHexagonEdgeLengthAvgM = pe._getHexagonEdgeLengthAvgM),
      (e._getIcosahedronFaces = pe._getIcosahedronFaces),
      (e._getNumCells = pe._getNumCells),
      (e._getPentagons = pe._getPentagons),
      (e._getRes0Cells = pe._getRes0Cells),
      (e._getResolution = pe._getResolution),
      (e._greatCircleDistanceKm = pe._greatCircleDistanceKm),
      (e._greatCircleDistanceM = pe._greatCircleDistanceM),
      (e._greatCircleDistanceRads = pe._greatCircleDistanceRads),
      (e._gridDisk = pe._gridDisk),
      (e._gridDiskDistances = pe._gridDiskDistances),
      (e._gridDistance = pe._gridDistance),
      (e._gridPathCells = pe._gridPathCells),
      (e._gridPathCellsSize = pe._gridPathCellsSize),
      (e._gridRingUnsafe = pe._gridRingUnsafe),
      (e._i64Add = pe._i64Add),
      (e._i64Subtract = pe._i64Subtract),
      (e._isPentagon = pe._isPentagon),
      (e._isResClassIII = pe._isResClassIII),
      (e._isValidCell = pe._isValidCell),
      (e._isValidDirectedEdge = pe._isValidDirectedEdge),
      (e._isValidVertex = pe._isValidVertex),
      (e._latLngToCell = pe._latLngToCell),
      (e._llvm_maxnum_f64 = pe._llvm_maxnum_f64),
      (e._llvm_minnum_f64 = pe._llvm_minnum_f64),
      (e._llvm_round_f64 = pe._llvm_round_f64),
      (e._localIjToCell = pe._localIjToCell),
      (e._malloc = pe._malloc),
      (e._maxFaceCount = pe._maxFaceCount),
      (e._maxGridDiskSize = pe._maxGridDiskSize),
      (e._maxPolygonToCellsSize = pe._maxPolygonToCellsSize),
      (e._memcpy = pe._memcpy),
      (e._memset = pe._memset),
      (e._originToDirectedEdges = pe._originToDirectedEdges),
      (e._pentagonCount = pe._pentagonCount),
      (e._polygonToCells = pe._polygonToCells),
      (e._readInt64AsDoubleFromPointer = pe._readInt64AsDoubleFromPointer),
      (e._res0CellCount = pe._res0CellCount),
      (e._round = pe._round),
      (e._sbrk = pe._sbrk),
      (e._sizeOfCellBoundary = pe._sizeOfCellBoundary),
      (e._sizeOfCoordIJ = pe._sizeOfCoordIJ),
      (e._sizeOfGeoLoop = pe._sizeOfGeoLoop),
      (e._sizeOfGeoPolygon = pe._sizeOfGeoPolygon),
      (e._sizeOfH3Index = pe._sizeOfH3Index),
      (e._sizeOfLatLng = pe._sizeOfLatLng),
      (e._sizeOfLinkedGeoPolygon = pe._sizeOfLinkedGeoPolygon),
      (e._uncompactCells = pe._uncompactCells),
      (e._uncompactCellsSize = pe._uncompactCellsSize),
      (e._vertexToLatLng = pe._vertexToLatLng),
      (e.establishStackSpace = pe.establishStackSpace);
    var Yt = (e.stackAlloc = pe.stackAlloc),
      rn = (e.stackRestore = pe.stackRestore),
      ei = (e.stackSave = pe.stackSave);
    if (((e.asm = pe), (e.cwrap = S), (e.setValue = M), (e.getValue = w), xt)) {
      Y(xt) || (xt = s(xt));
      {
        at();
        var en = function (me) {
            me.byteLength && (me = new Uint8Array(me)),
              H.set(me, x),
              e.memoryInitializerRequest &&
                delete e.memoryInitializerRequest.response,
              mt();
          },
          yi = function () {
            u(xt, en, function () {
              throw "could not load memory initializer " + xt;
            });
          },
          Bn = Ye(xt);
        if (Bn) en(Bn.buffer);
        else if (e.memoryInitializerRequest) {
          var Yo = function () {
            var me = e.memoryInitializerRequest,
              Te = me.response;
            if (me.status !== 200 && me.status !== 0) {
              var We = Ye(e.memoryInitializerRequestURL);
              if (We) Te = We.buffer;
              else {
                console.warn(
                  "a problem seems to have happened with Module.memoryInitializerRequest, status: " +
                    me.status +
                    ", retrying " +
                    xt
                ),
                  yi();
                return;
              }
            }
            en(Te);
          };
          e.memoryInitializerRequest.response
            ? setTimeout(Yo, 0)
            : e.memoryInitializerRequest.addEventListener("load", Yo);
        } else yi();
      }
    }
    var ms;
    it = function me() {
      ms || Zo(), ms || (it = me);
    };
    function Zo(me) {
      if (At > 0 || (nt(), At > 0)) return;
      function Te() {
        ms ||
          ((ms = !0),
          !C &&
            (ot(),
            Rt(),
            e.onRuntimeInitialized && e.onRuntimeInitialized(),
            Ot()));
      }
      e.setStatus
        ? (e.setStatus("Running..."),
          setTimeout(function () {
            setTimeout(function () {
              e.setStatus("");
            }, 1),
              Te();
          }, 1))
        : Te();
    }
    e.run = Zo;
    function Ii(me) {
      throw (
        (e.onAbort && e.onAbort(me),
        (me += ""),
        c(me),
        h(me),
        (C = !0),
        "abort(" + me + "). Build with -s ASSERTIONS=1 for more info.")
      );
    }
    if (((e.abort = Ii), e.preInit))
      for (
        typeof e.preInit == "function" && (e.preInit = [e.preInit]);
        e.preInit.length > 0;

      )
        e.preInit.pop()();
    return Zo(), n;
  })(typeof Wt == "object" ? Wt : {}),
  Bt = "number",
  gt = Bt,
  pa = Bt,
  Mt = Bt,
  Et = Bt,
  Zn = Bt,
  lt = Bt,
  yS = [
    ["sizeOfH3Index", Bt],
    ["sizeOfLatLng", Bt],
    ["sizeOfCellBoundary", Bt],
    ["sizeOfGeoLoop", Bt],
    ["sizeOfGeoPolygon", Bt],
    ["sizeOfLinkedGeoPolygon", Bt],
    ["sizeOfCoordIJ", Bt],
    ["readInt64AsDoubleFromPointer", Bt],
    ["isValidCell", pa, [Mt, Et]],
    ["latLngToCell", gt, [Bt, Bt, Zn, lt]],
    ["cellToLatLng", gt, [Mt, Et, lt]],
    ["cellToBoundary", gt, [Mt, Et, lt]],
    ["maxGridDiskSize", gt, [Bt, lt]],
    ["gridDisk", gt, [Mt, Et, Bt, lt]],
    ["gridDiskDistances", gt, [Mt, Et, Bt, lt, lt]],
    ["gridRingUnsafe", gt, [Mt, Et, Bt, lt]],
    ["maxPolygonToCellsSize", gt, [lt, Zn, Bt, lt]],
    ["polygonToCells", gt, [lt, Zn, Bt, lt]],
    ["cellsToLinkedMultiPolygon", gt, [lt, Bt, lt]],
    ["destroyLinkedMultiPolygon", null, [lt]],
    ["compactCells", gt, [lt, lt, Bt, Bt]],
    ["uncompactCells", gt, [lt, Bt, Bt, lt, Bt, Zn]],
    ["uncompactCellsSize", gt, [lt, Bt, Bt, Zn, lt]],
    ["isPentagon", pa, [Mt, Et]],
    ["isResClassIII", pa, [Mt, Et]],
    ["getBaseCellNumber", Bt, [Mt, Et]],
    ["getResolution", Bt, [Mt, Et]],
    ["maxFaceCount", gt, [Mt, Et, lt]],
    ["getIcosahedronFaces", gt, [Mt, Et, lt]],
    ["cellToParent", gt, [Mt, Et, Zn, lt]],
    ["cellToChildren", gt, [Mt, Et, Zn, lt]],
    ["cellToCenterChild", gt, [Mt, Et, Zn, lt]],
    ["cellToChildrenSize", gt, [Mt, Et, Zn, lt]],
    ["cellToChildPos", gt, [Mt, Et, Zn, lt]],
    ["childPosToCell", gt, [Bt, Bt, Mt, Et, Zn, lt]],
    ["areNeighborCells", gt, [Mt, Et, Mt, Et, lt]],
    ["cellsToDirectedEdge", gt, [Mt, Et, Mt, Et, lt]],
    ["getDirectedEdgeOrigin", gt, [Mt, Et, lt]],
    ["getDirectedEdgeDestination", gt, [Mt, Et, lt]],
    ["isValidDirectedEdge", pa, [Mt, Et]],
    ["directedEdgeToCells", gt, [Mt, Et, lt]],
    ["originToDirectedEdges", gt, [Mt, Et, lt]],
    ["directedEdgeToBoundary", gt, [Mt, Et, lt]],
    ["gridDistance", gt, [Mt, Et, Mt, Et, lt]],
    ["gridPathCells", gt, [Mt, Et, Mt, Et, lt]],
    ["gridPathCellsSize", gt, [Mt, Et, Mt, Et, lt]],
    ["cellToLocalIj", gt, [Mt, Et, Mt, Et, Bt, lt]],
    ["localIjToCell", gt, [Mt, Et, lt, Bt, lt]],
    ["getHexagonAreaAvgM2", gt, [Zn, lt]],
    ["getHexagonAreaAvgKm2", gt, [Zn, lt]],
    ["getHexagonEdgeLengthAvgM", gt, [Zn, lt]],
    ["getHexagonEdgeLengthAvgKm", gt, [Zn, lt]],
    ["greatCircleDistanceM", Bt, [lt, lt]],
    ["greatCircleDistanceKm", Bt, [lt, lt]],
    ["greatCircleDistanceRads", Bt, [lt, lt]],
    ["cellAreaM2", gt, [Mt, Et, lt]],
    ["cellAreaKm2", gt, [Mt, Et, lt]],
    ["cellAreaRads2", gt, [Mt, Et, lt]],
    ["edgeLengthM", gt, [Mt, Et, lt]],
    ["edgeLengthKm", gt, [Mt, Et, lt]],
    ["edgeLengthRads", gt, [Mt, Et, lt]],
    ["getNumCells", gt, [Zn, lt]],
    ["getRes0Cells", gt, [lt]],
    ["res0CellCount", Bt],
    ["getPentagons", gt, [Bt, lt]],
    ["pentagonCount", Bt],
    ["cellToVertex", gt, [Mt, Et, Bt, lt]],
    ["cellToVertexes", gt, [Mt, Et, lt]],
    ["vertexToLatLng", gt, [Mt, Et, lt]],
    ["isValidVertex", pa, [Mt, Et]],
  ],
  bS = 0,
  MS = 1,
  ES = 2,
  wS = 3,
  em = 4,
  SS = 5,
  TS = 6,
  CS = 7,
  RS = 8,
  PS = 9,
  LS = 10,
  DS = 11,
  IS = 12,
  OS = 13,
  qS = 14,
  US = 15,
  Vn = {};
Vn[bS] = "Success";
Vn[MS] = "The operation failed but a more specific error is not available";
Vn[ES] = "Argument was outside of acceptable range";
Vn[wS] = "Latitude or longitude arguments were outside of acceptable range";
Vn[em] = "Resolution argument was outside of acceptable range";
Vn[SS] = "Cell argument was not valid";
Vn[TS] = "Directed edge argument was not valid";
Vn[CS] = "Undirected edge argument was not valid";
Vn[RS] = "Vertex argument was not valid";
Vn[PS] = "Pentagon distortion was encountered";
Vn[LS] = "Duplicate input";
Vn[DS] = "Cell arguments were not neighbors";
Vn[IS] = "Cell arguments had incompatible resolutions";
Vn[OS] = "Memory allocation failed";
Vn[qS] = "Bounds of provided memory were insufficient";
Vn[US] = "Mode or flags argument was not valid";
var BS = 1e3,
  tm = 1001,
  nm = 1002,
  o0 = {};
o0[BS] = "Unknown unit";
o0[tm] = "Array length out of bounds";
o0[nm] = "Got unexpected null value for H3 index";
var NS = "Unknown error";
function im(n, e, t) {
  var i = t && "value" in t,
    r = new Error(
      (n[e] || NS) + " (code: " + e + (i ? ", value: " + t.value : "") + ")"
    );
  return (r.code = e), r;
}
function rm(n, e) {
  var t = arguments.length === 2 ? { value: e } : {};
  return im(Vn, n, t);
}
function sm(n, e) {
  var t = arguments.length === 2 ? { value: e } : {};
  return im(o0, n, t);
}
function Wa(n) {
  if (n !== 0) throw rm(n);
}
var _i = {};
yS.forEach(function (e) {
  _i[e[0]] = Wt.cwrap.apply(Wt, e);
});
var Io = 16,
  ja = 4,
  Xo = 8,
  FS = 8,
  Hl = _i.sizeOfH3Index(),
  tf = _i.sizeOfLatLng(),
  kS = _i.sizeOfCellBoundary(),
  zS = _i.sizeOfGeoPolygon(),
  Ca = _i.sizeOfGeoLoop();
_i.sizeOfLinkedGeoPolygon();
_i.sizeOfCoordIJ();
function GS(n) {
  if (typeof n != "number" || n < 0 || n > 15 || Math.floor(n) !== n)
    throw rm(em, n);
  return n;
}
function HS(n) {
  if (!n) throw sm(nm);
  return n;
}
var VS = Math.pow(2, 32) - 1;
function WS(n) {
  if (n > VS) throw sm(tm, n);
  return n;
}
var jS = /[^0-9a-fA-F]/;
function om(n) {
  if (
    Array.isArray(n) &&
    n.length === 2 &&
    Number.isInteger(n[0]) &&
    Number.isInteger(n[1])
  )
    return n;
  if (typeof n != "string" || jS.test(n)) return [0, 0];
  var e = parseInt(n.substring(0, n.length - 8), Io),
    t = parseInt(n.substring(n.length - 8), Io);
  return [t, e];
}
function Qp(n) {
  if (n >= 0) return n.toString(Io);
  n = n & 2147483647;
  var e = am(8, n.toString(Io)),
    t = (parseInt(e[0], Io) + 8).toString(Io);
  return (e = t + e.substring(1)), e;
}
function XS(n, e) {
  return Qp(e) + am(8, Qp(n));
}
function am(n, e) {
  for (var t = n - e.length, i = "", r = 0; r < t; r++) i += "0";
  return (i = i + e), i;
}
function $p(n, e, t) {
  for (
    var i = n.length,
      r = Wt._calloc(i, tf),
      s = t ? 1 : 0,
      u = t ? 0 : 1,
      c = 0;
    c < i * 2;
    c += 2
  )
    Wt.HEAPF64.set([n[c / 2][s], n[c / 2][u]].map(fm), r / Xo + c);
  return Wt.HEAPU32.set([i, r], e / ja), e;
}
function QS(n, e) {
  var t = n.length - 1,
    i = Wt._calloc(zS),
    r = 0,
    s = r + Ca,
    u = s + ja;
  $p(n[0], i + r, e);
  var c;
  if (t > 0) {
    c = Wt._calloc(t, Ca);
    for (var h = 0; h < t; h++) $p(n[h + 1], c + Ca * h, e);
  }
  return Wt.setValue(i + s, t, "i32"), Wt.setValue(i + u, c, "i32"), i;
}
function $S(n) {
  var e = 0,
    t = e + Ca,
    i = t + ja,
    r = ja;
  Wt._free(Wt.getValue(n + e + r, "i8*"));
  var s = Wt.getValue(n + t, "i32");
  if (s > 0) {
    for (var u = Wt.getValue(n + i, "i32"), c = 0; c < s; c++)
      Wt._free(Wt.getValue(u + Ca * c + r, "i8*"));
    Wt._free(u);
  }
  Wt._free(n);
}
function Am(n, e) {
  e === void 0 && (e = 0);
  var t = Wt.getValue(n + Hl * e, "i32"),
    i = Wt.getValue(n + Hl * e + ja, "i32");
  return i ? XS(t, i) : null;
}
function YS(n) {
  return _i.readInt64AsDoubleFromPointer(n);
}
function ZS(n, e) {
  for (var t = [], i = 0; i < e; i++) {
    var r = Am(n, i);
    r !== null && t.push(r);
  }
  return t;
}
function Vl(n) {
  return t7(Wt.getValue(n, "double"));
}
function lm(n) {
  return [Vl(n), Vl(n + Xo)];
}
function KS(n) {
  return [Vl(n + Xo), Vl(n)];
}
function JS(n, e, t) {
  for (
    var i = Wt.getValue(n, "i32"), r = n + Xo, s = [], u = e ? KS : lm, c = 0;
    c < i * 2;
    c += 2
  )
    s.push(u(r + Xo * c));
  return t && s.push(s[0]), s;
}
function e7(n, e, t) {
  var i = Wt._malloc(tf);
  Wt.HEAPF64.set([n, e].map(fm), i / Xo);
  var r = Wt._malloc(Hl);
  try {
    return Wa(_i.latLngToCell(i, t, r)), HS(Am(r));
  } finally {
    Wt._free(r), Wt._free(i);
  }
}
function um(n) {
  var e = Wt._malloc(tf),
    t = om(n),
    i = t[0],
    r = t[1];
  try {
    return Wa(_i.cellToLatLng(i, r, e)), lm(e);
  } finally {
    Wt._free(e);
  }
}
function cm(n, e) {
  var t = Wt._malloc(kS),
    i = om(n),
    r = i[0],
    s = i[1];
  try {
    return Wa(_i.cellToBoundary(r, s, t)), JS(t, e, e);
  } finally {
    Wt._free(t);
  }
}
function Yp(n, e, t) {
  if ((GS(e), (t = !!t), n.length === 0 || n[0].length === 0)) return [];
  var i = typeof n[0][0] == "number" ? [n] : n,
    r = QS(i, t),
    s = Wt._malloc(FS);
  try {
    Wa(_i.maxPolygonToCellsSize(r, e, 0, s));
    var u = WS(YS(s)),
      c = Wt._calloc(u, Hl);
    try {
      return Wa(_i.polygonToCells(r, e, 0, c)), ZS(c, u);
    } finally {
      Wt._free(c);
    }
  } finally {
    Wt._free(s), $S(r);
  }
}
function fm(n) {
  return (n * Math.PI) / 180;
}
function t7(n) {
  return (n * 180) / Math.PI;
}
function n7(n) {
  return (
    (n = Math.max(0, Math.min(1, n))),
    "rgb(" +
      Math.max(
        0,
        Math.min(
          255,
          Math.round(
            34.61 +
              n *
                (1172.33 -
                  n *
                    (10793.56 - n * (33300.12 - n * (38394.49 - n * 14825.05))))
          )
        )
      ) +
      ", " +
      Math.max(
        0,
        Math.min(
          255,
          Math.round(
            23.31 +
              n *
                (557.33 +
                  n * (1225.33 - n * (3574.96 - n * (1073.77 + n * 707.56))))
          )
        )
      ) +
      ", " +
      Math.max(
        0,
        Math.min(
          255,
          Math.round(
            27.2 +
              n *
                (3211.1 -
                  n * (15327.97 - n * (27814 - n * (22569.18 - n * 6838.66))))
          )
        )
      ) +
      ")"
  );
}
var hm = dm;
function dm(n, e, t, i) {
  (this.x = typeof n == "number" ? n : 0),
    (this.y = typeof e == "number" ? e : 0),
    (this.z = typeof t == "number" ? t : 0),
    (this.half = typeof i == "number" ? i : 0);
}
dm.prototype.contains = function (e, t, i) {
  var r = this.half;
  return (
    this.x - r <= e &&
    e < this.x + r &&
    this.y - r <= t &&
    t < this.y + r &&
    this.z - r <= i &&
    i < this.z + r
  );
};
var Kr = hm,
  i7 = 4,
  r7 = Ni;
function Ni(n) {
  (this.bounds = n),
    (this.q0 = null),
    (this.q1 = null),
    (this.q2 = null),
    (this.q3 = null),
    (this.q4 = null),
    (this.q5 = null),
    (this.q6 = null),
    (this.q7 = null),
    (this.items = null);
}
Ni.prototype.subdivide = function () {
  var e = this.bounds,
    t = e.half / 2;
  (this.q0 = new Ni(new Kr(e.x - t, e.y - t, e.z - t, t))),
    (this.q1 = new Ni(new Kr(e.x + t, e.y - t, e.z - t, t))),
    (this.q2 = new Ni(new Kr(e.x - t, e.y + t, e.z - t, t))),
    (this.q3 = new Ni(new Kr(e.x + t, e.y + t, e.z - t, t))),
    (this.q4 = new Ni(new Kr(e.x - t, e.y - t, e.z + t, t))),
    (this.q5 = new Ni(new Kr(e.x + t, e.y - t, e.z + t, t))),
    (this.q6 = new Ni(new Kr(e.x - t, e.y + t, e.z + t, t))),
    (this.q7 = new Ni(new Kr(e.x + t, e.y + t, e.z + t, t)));
};
Ni.prototype.insert = function (e, t, i) {
  var r = this.q0 === null;
  if (r) {
    if (
      (this.items === null ? (this.items = [e]) : this.items.push(e),
      this.items.length >= i7 && i < 16)
    ) {
      this.subdivide();
      for (var s = 0; s < this.items.length; ++s)
        this.insert(this.items[s], t, i + 1);
      this.items = null;
    }
  } else {
    var u = t[e],
      c = t[e + 1],
      h = t[e + 2],
      p = this.bounds,
      g = 0;
    u > p.x && (g += 1), c > p.y && (g += 2), h > p.z && (g += 4);
    var v = s7(this, g);
    v.insert(e, t, i + 1);
  }
};
Ni.prototype.query = function (e, t, i, r) {
  if (i(this.bounds)) {
    var s = this.items,
      u = typeof r == "function";
    if (s)
      for (var c = 0; c < s.length; ++c) {
        var h = s[c];
        u ? r(t[h], t[h + 1], t[h + 2]) && e.push(h) : e.push(h);
      }
    this.q0 &&
      (this.q0.query(e, t, i, r),
      this.q1.query(e, t, i, r),
      this.q2.query(e, t, i, r),
      this.q3.query(e, t, i, r),
      this.q4.query(e, t, i, r),
      this.q5.query(e, t, i, r),
      this.q6.query(e, t, i, r),
      this.q7.query(e, t, i, r));
  }
};
function s7(n, e) {
  if (e === 0) return n.q0;
  if (e === 1) return n.q1;
  if (e === 2) return n.q2;
  if (e === 3) return n.q3;
  if (e === 4) return n.q4;
  if (e === 5) return n.q5;
  if (e === 6) return n.q6;
  if (e === 7) return n.q7;
}
var o7 = a7;
function a7(n, e, t, i) {
  var r = 0,
    s = 0;
  i = i || {};
  var u = i.step || 1,
    c = i.maxTimeMS || 8,
    h = i.probeElements || 5e3;
  setTimeout(p, 0);
  function p() {
    var g = Math.min(n.length, r + h),
      v = r,
      x = new Date();
    for (v = r; v < g; v += u) e(n[v], v, n);
    v < n.length
      ? ((s += new Date() - x),
        (r = v),
        (h = Math.round((r * c) / s)),
        setTimeout(p, 0))
      : t(n);
  }
}
var mc = hm,
  Zp = r7,
  A7 = new mc(),
  l7 = o7,
  u7 = c7;
function c7(n) {
  var e = [],
    t,
    i,
    r = {
      initAsync: g,
      init: p,
      bounds: x,
      intersectRay: h,
      intersectSphere: u,
      getRoot: s,
    };
  return r;
  function s() {
    return t;
  }
  function u(w, C, E, b) {
    if (!t) return e;
    var L = [],
      S = b * b;
    return t.query(L, i, R, U), L;
    function R(q) {
      var I = S,
        N = q.half;
      return (
        w < q.x - N
          ? (I -= c(w - (q.x - N)))
          : w > q.x + N && (I -= c(w - (q.x + N))),
        C < q.y - N
          ? (I -= c(C - (q.y - N)))
          : C > q.y + N && (I -= c(C - (q.y + N))),
        E < q.z - N
          ? (I -= c(E - (q.z - N)))
          : E > q.z + N && (I -= c(E - (q.z + N))),
        I > 0
      );
    }
    function U(q, I, N) {
      return c(q - w) + c(I - C) + c(N - E) < S;
    }
  }
  function c(w) {
    return w * w;
  }
  function h(w, C, E, b) {
    if (!t) return e;
    E === void 0 && (E = 0),
      b === void 0 && (b = Number.POSITIVE_INFINITY),
      (E *= E),
      (b *= b);
    var L = [];
    return t.query(L, i, S, R), L.sort(U);
    function S(q) {
      var I = q.half,
        N = (q.x - I - w.x) / C.x,
        D = (q.x + I - w.x) / C.x,
        O = (q.y + I - w.y) / C.y,
        k = (q.y - I - w.y) / C.y,
        $ = (q.z - I - w.z) / C.z,
        H = (q.z + I - w.z) / C.z,
        Q = Math.min(Math.min(Math.max(N, D), Math.max(O, k)), Math.max($, H)),
        F;
      return Q < 0
        ? !1
        : ((F = Math.max(
            Math.max(Math.min(N, D), Math.min(O, k)),
            Math.min($, H)
          )),
          F <= Q && F <= b);
    }
    function R(q, I, N) {
      var D =
        (q - w.x) * (q - w.x) + (I - w.y) * (I - w.y) + (N - w.z) * (N - w.z);
      return E <= D && D <= b;
    }
    function U(q, I) {
      var N = w[q],
        D = w[q + 1],
        O = w[q + 2],
        k =
          (N - w.x) * (N - w.x) + (D - w.y) * (D - w.y) + (O - w.z) * (O - w.z),
        $ = w[I],
        H = w[I + 1],
        Q = w[I + 2],
        F =
          ($ - w.x) * ($ - w.x) + (H - w.y) * (H - w.y) + (Q - w.z) * (Q - w.z);
      return k - F;
    }
  }
  function p(w) {
    v(w), (i = w), (t = M(w));
    for (var C = 0; C < w.length; C += 3) t.insert(C, i, 0);
  }
  function g(w, C) {
    v(w);
    var E = M(w);
    l7(w, b, L, { step: 3 });
    function b(S, R) {
      E.insert(R, w, 0);
    }
    function L() {
      (i = w), (t = E), typeof C == "function" && C(r);
    }
  }
  function v(w) {
    if (!w) throw new Error("Points array is required for quadtree to work");
    if (typeof w.length != "number")
      throw new Error("Points should be array-like object");
    if (w.length % 3 !== 0)
      throw new Error(
        "Points array should consist of series of x,y,z coordinates and be multiple of 3"
      );
  }
  function x() {
    return t ? t.bounds : A7;
  }
  function M(w) {
    if (w.length === 0) {
      var C = new mc();
      return new Zp(C);
    }
    for (
      var E = Number.POSITIVE_INFINITY,
        b = Number.POSITIVE_INFINITY,
        L = Number.POSITIVE_INFINITY,
        S = Number.NEGATIVE_INFINITY,
        R = Number.NEGATIVE_INFINITY,
        U = Number.NEGATIVE_INFINITY,
        q = 0;
      q < w.length;
      q += 3
    ) {
      var I = w[q],
        N = w[q + 1],
        D = w[q + 2];
      I < E && (E = I),
        I > S && (S = I),
        N < b && (b = N),
        N > R && (R = N),
        D < L && (L = D),
        D > U && (U = D);
    }
    var O = Math.max(Math.max(S - E, R - b), U - L);
    (O += 2), (E -= 1), (b -= 1), (L -= 1);
    var k = O / 2,
      $ = new mc(E + k, b + k, L + k, k);
    return new Zp($);
  }
}
const f7 = Fc(u7),
  ai = window.THREE
    ? window.THREE
    : {
        Box3: Xs,
        BufferGeometry: fn,
        Float32BufferAttribute: Jt,
        InstancedBufferGeometry: q8,
        InstancedInterleavedBuffer: s2,
        InterleavedBufferAttribute: $a,
        Sphere: Qo,
        Vector3: te,
        WireframeGeometry: S8,
      };
var bo = new ai.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute";
const Kp = new ai.Box3(),
  WA = new ai.Vector3();
class nf extends ai.InstancedBufferGeometry {
  constructor() {
    super(), (this.type = "LineSegmentsGeometry");
    const e = [
        -1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1,
        -1, 0,
      ],
      t = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2],
      i = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];
    this.setIndex(i),
      this[bo]("position", new ai.Float32BufferAttribute(e, 3)),
      this[bo]("uv", new ai.Float32BufferAttribute(t, 2));
  }
  applyMatrix4(e) {
    const t = this.attributes.instanceStart,
      i = this.attributes.instanceEnd;
    return (
      t !== void 0 &&
        (t.applyMatrix4(e), i.applyMatrix4(e), (t.needsUpdate = !0)),
      this.boundingBox !== null && this.computeBoundingBox(),
      this.boundingSphere !== null && this.computeBoundingSphere(),
      this
    );
  }
  setPositions(e) {
    let t;
    e instanceof Float32Array
      ? (t = e)
      : Array.isArray(e) && (t = new Float32Array(e));
    const i = new ai.InstancedInterleavedBuffer(t, 6, 1);
    return (
      this[bo]("instanceStart", new ai.InterleavedBufferAttribute(i, 3, 0)),
      this[bo]("instanceEnd", new ai.InterleavedBufferAttribute(i, 3, 3)),
      this.computeBoundingBox(),
      this.computeBoundingSphere(),
      this
    );
  }
  setColors(e) {
    let t;
    e instanceof Float32Array
      ? (t = e)
      : Array.isArray(e) && (t = new Float32Array(e));
    const i = new ai.InstancedInterleavedBuffer(t, 6, 1);
    return (
      this[bo](
        "instanceColorStart",
        new ai.InterleavedBufferAttribute(i, 3, 0)
      ),
      this[bo]("instanceColorEnd", new ai.InterleavedBufferAttribute(i, 3, 3)),
      this
    );
  }
  fromWireframeGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromEdgesGeometry(e) {
    return this.setPositions(e.attributes.position.array), this;
  }
  fromMesh(e) {
    return (
      this.fromWireframeGeometry(new ai.WireframeGeometry(e.geometry)), this
    );
  }
  fromLineSegments(e) {
    const t = e.geometry;
    if (t.isGeometry) {
      console.error(
        "LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead."
      );
      return;
    } else t.isBufferGeometry && this.setPositions(t.attributes.position.array);
    return this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new ai.Box3());
    const e = this.attributes.instanceStart,
      t = this.attributes.instanceEnd;
    e !== void 0 &&
      t !== void 0 &&
      (this.boundingBox.setFromBufferAttribute(e),
      Kp.setFromBufferAttribute(t),
      this.boundingBox.union(Kp));
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new ai.Sphere()),
      this.boundingBox === null && this.computeBoundingBox();
    const e = this.attributes.instanceStart,
      t = this.attributes.instanceEnd;
    if (e !== void 0 && t !== void 0) {
      const i = this.boundingSphere.center;
      this.boundingBox.getCenter(i);
      let r = 0;
      for (let s = 0, u = e.count; s < u; s++)
        WA.fromBufferAttribute(e, s),
          (r = Math.max(r, i.distanceToSquared(WA))),
          WA.fromBufferAttribute(t, s),
          (r = Math.max(r, i.distanceToSquared(WA)));
      (this.boundingSphere.radius = Math.sqrt(r)),
        isNaN(this.boundingSphere.radius) &&
          console.error(
            "THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",
            this
          );
    }
  }
  toJSON() {}
  applyMatrix(e) {
    return (
      console.warn(
        "THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."
      ),
      this.applyMatrix4(e)
    );
  }
}
nf.prototype.isLineSegmentsGeometry = !0;
const zi = window.THREE
  ? window.THREE
  : {
      ShaderLib: er,
      ShaderMaterial: or,
      UniformsLib: Je,
      UniformsUtils: N1,
      Vector2: ke,
    };
zi.UniformsLib.line = {
  worldUnits: { value: 1 },
  linewidth: { value: 1 },
  resolution: { value: new zi.Vector2(1, 1) },
  dashScale: { value: 1 },
  dashSize: { value: 1 },
  dashOffset: { value: 0 },
  gapSize: { value: 1 },
};
zi.ShaderLib.line = {
  uniforms: zi.UniformsUtils.merge([
    zi.UniformsLib.common,
    zi.UniformsLib.fog,
    zi.UniformsLib.line,
  ]),
  vertexShader: `
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		varying vec2 vUv;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;

			#endif

			float aspect = resolution.x / resolution.y;

			vUv = uv;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			worldStart = start.xyz;
			worldEnd = end.xyz;

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				// get the offset direction as perpendicular to the view vector
				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 offset;
				if ( position.y < 0.5 ) {

					offset = normalize( cross( start.xyz, worldDir ) );

				} else {

					offset = normalize( cross( end.xyz, worldDir ) );

				}

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// extend the line bounds to encompass  endcaps
					start.xyz += - worldDir * linewidth * 0.5;
					end.xyz += worldDir * linewidth * 0.5;

					// shift the position of the quad so it hugs the forward edge of the line
					offset.xy -= dir * forwardOffset;
					offset.z += 0.5;

				#endif

				// endcaps
				if ( position.y > 1.0 || position.y < 0.0 ) {

					offset.xy += dir * 2.0 * forwardOffset;

				}

				// adjust for linewidth
				offset *= linewidth * 0.5;

				// set the world position
				worldPos = ( position.y < 0.5 ) ? start : end;
				worldPos.xyz += offset;

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segements overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

			vec2 offset = vec2( dir.y, - dir.x );
			// undo aspect ratio adjustment
			dir.x /= aspect;
			offset.x /= aspect;

			// sign flip
			if ( position.x < 0.0 ) offset *= - 1.0;

			// endcaps
			if ( position.y < 0.0 ) {

				offset += - dir;

			} else if ( position.y > 1.0 ) {

				offset += dir;

			}

			// adjust for linewidth
			offset *= linewidth;

			// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
			offset /= resolution.y;

			// select end
			vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

			// back to clip space
			offset *= clip.w;

			clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,
  fragmentShader: `
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		varying vec2 vUv;

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

			#endif

			#else

				#ifdef ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

			if ( abs( vUv.y ) > 1.0 ) {

				float a = vUv.x;
				float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
				float len2 = a * a + b * b;

				if ( len2 > 1.0 ) discard;

			}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <encodings_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`,
};
class a0 extends zi.ShaderMaterial {
  constructor(e) {
    super({
      type: "LineMaterial",
      uniforms: zi.UniformsUtils.clone(zi.ShaderLib.line.uniforms),
      vertexShader: zi.ShaderLib.line.vertexShader,
      fragmentShader: zi.ShaderLib.line.fragmentShader,
      clipping: !0,
    }),
      Object.defineProperties(this, {
        color: {
          enumerable: !0,
          get: function () {
            return this.uniforms.diffuse.value;
          },
          set: function (t) {
            this.uniforms.diffuse.value = t;
          },
        },
        worldUnits: {
          enumerable: !0,
          get: function () {
            return "WORLD_UNITS" in this.defines;
          },
          set: function (t) {
            t === !0
              ? (this.defines.WORLD_UNITS = "")
              : delete this.defines.WORLD_UNITS;
          },
        },
        linewidth: {
          enumerable: !0,
          get: function () {
            return this.uniforms.linewidth.value;
          },
          set: function (t) {
            this.uniforms.linewidth.value = t;
          },
        },
        dashed: {
          enumerable: !0,
          get: function () {
            return "USE_DASH" in this.defines;
          },
          set(t) {
            !!t != "USE_DASH" in this.defines && (this.needsUpdate = !0),
              t === !0
                ? (this.defines.USE_DASH = "")
                : delete this.defines.USE_DASH;
          },
        },
        dashScale: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashScale.value;
          },
          set: function (t) {
            this.uniforms.dashScale.value = t;
          },
        },
        dashSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashSize.value;
          },
          set: function (t) {
            this.uniforms.dashSize.value = t;
          },
        },
        dashOffset: {
          enumerable: !0,
          get: function () {
            return this.uniforms.dashOffset.value;
          },
          set: function (t) {
            this.uniforms.dashOffset.value = t;
          },
        },
        gapSize: {
          enumerable: !0,
          get: function () {
            return this.uniforms.gapSize.value;
          },
          set: function (t) {
            this.uniforms.gapSize.value = t;
          },
        },
        opacity: {
          enumerable: !0,
          get: function () {
            return this.uniforms.opacity.value;
          },
          set: function (t) {
            this.uniforms.opacity.value = t;
          },
        },
        resolution: {
          enumerable: !0,
          get: function () {
            return this.uniforms.resolution.value;
          },
          set: function (t) {
            this.uniforms.resolution.value.copy(t);
          },
        },
        alphaToCoverage: {
          enumerable: !0,
          get: function () {
            return "ALPHA_TO_COVERAGE" in this.defines;
          },
          set: function (t) {
            !!t != "ALPHA_TO_COVERAGE" in this.defines &&
              (this.needsUpdate = !0),
              t === !0
                ? ((this.defines.ALPHA_TO_COVERAGE = ""),
                  (this.extensions.derivatives = !0))
                : (delete this.defines.ALPHA_TO_COVERAGE,
                  (this.extensions.derivatives = !1));
          },
        },
      }),
      this.setValues(e);
  }
}
a0.prototype.isLineMaterial = !0;
const Cn = window.THREE
  ? window.THREE
  : {
      Box3: Xs,
      BufferGeometry: fn,
      InstancedInterleavedBuffer: s2,
      InterleavedBufferAttribute: $a,
      Line3: B8,
      MathUtils: R1,
      Matrix4: dn,
      Mesh: wn,
      Sphere: Qo,
      Vector3: te,
      Vector4: In,
    };
var Jp = new Cn.BufferGeometry().setAttribute ? "setAttribute" : "addAttribute";
const e1 = new Cn.Vector3(),
  t1 = new Cn.Vector3(),
  zn = new Cn.Vector4(),
  Gn = new Cn.Vector4(),
  ur = new Cn.Vector4(),
  pu = new Cn.Vector3(),
  mu = new Cn.Matrix4(),
  Bi = new Cn.Line3(),
  n1 = new Cn.Vector3(),
  Dr = new Cn.Box3(),
  jA = new Cn.Sphere(),
  cr = new Cn.Vector4();
class pm extends Cn.Mesh {
  constructor(e = new nf(), t = new a0({ color: Math.random() * 16777215 })) {
    super(e, t), (this.type = "LineSegments2");
  }
  computeLineDistances() {
    const e = this.geometry,
      t = e.attributes.instanceStart,
      i = e.attributes.instanceEnd,
      r = new Float32Array(2 * t.count);
    for (let u = 0, c = 0, h = t.count; u < h; u++, c += 2)
      e1.fromBufferAttribute(t, u),
        t1.fromBufferAttribute(i, u),
        (r[c] = c === 0 ? 0 : r[c - 1]),
        (r[c + 1] = r[c] + e1.distanceTo(t1));
    const s = new Cn.InstancedInterleavedBuffer(r, 2, 1);
    return (
      e[Jp](
        "instanceDistanceStart",
        new Cn.InterleavedBufferAttribute(s, 1, 0)
      ),
      e[Jp]("instanceDistanceEnd", new Cn.InterleavedBufferAttribute(s, 1, 1)),
      this
    );
  }
  raycast(e, t) {
    e.camera === null &&
      console.error(
        'LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.'
      );
    const i = (e.params.Line2 !== void 0 && e.params.Line2.threshold) || 0,
      r = e.ray,
      s = e.camera,
      u = s.projectionMatrix,
      c = this.matrixWorld,
      h = this.geometry,
      p = this.material,
      g = p.resolution,
      v = p.linewidth + i,
      x = h.attributes.instanceStart,
      M = h.attributes.instanceEnd,
      w = -s.near,
      C = 2 * Math.max(v / g.width, v / g.height);
    h.boundingSphere === null && h.computeBoundingSphere(),
      jA.copy(h.boundingSphere).applyMatrix4(c);
    const E = Math.max(s.near, jA.distanceToPoint(r.origin));
    cr.set(0, 0, -E, 1).applyMatrix4(s.projectionMatrix),
      cr.multiplyScalar(1 / cr.w),
      cr.applyMatrix4(s.projectionMatrixInverse);
    const b = Math.abs(C / cr.w) * 0.5;
    if (((jA.radius += b), e.ray.intersectsSphere(jA) === !1)) return;
    h.boundingBox === null && h.computeBoundingBox(),
      Dr.copy(h.boundingBox).applyMatrix4(c);
    const L = Math.max(s.near, Dr.distanceToPoint(r.origin));
    cr.set(0, 0, -L, 1).applyMatrix4(s.projectionMatrix),
      cr.multiplyScalar(1 / cr.w),
      cr.applyMatrix4(s.projectionMatrixInverse);
    const S = Math.abs(C / cr.w) * 0.5;
    if (
      ((Dr.max.x += S),
      (Dr.max.y += S),
      (Dr.max.z += S),
      (Dr.min.x -= S),
      (Dr.min.y -= S),
      (Dr.min.z -= S),
      e.ray.intersectsBox(Dr) !== !1)
    ) {
      r.at(1, ur),
        (ur.w = 1),
        ur.applyMatrix4(s.matrixWorldInverse),
        ur.applyMatrix4(u),
        ur.multiplyScalar(1 / ur.w),
        (ur.x *= g.x / 2),
        (ur.y *= g.y / 2),
        (ur.z = 0),
        pu.copy(ur),
        mu.multiplyMatrices(s.matrixWorldInverse, c);
      for (let U = 0, q = x.count; U < q; U++) {
        zn.fromBufferAttribute(x, U),
          Gn.fromBufferAttribute(M, U),
          (zn.w = 1),
          (Gn.w = 1),
          zn.applyMatrix4(mu),
          Gn.applyMatrix4(mu);
        var R = zn.z > w && Gn.z > w;
        if (R) continue;
        if (zn.z > w) {
          const k = zn.z - Gn.z,
            $ = (zn.z - w) / k;
          zn.lerp(Gn, $);
        } else if (Gn.z > w) {
          const k = Gn.z - zn.z,
            $ = (Gn.z - w) / k;
          Gn.lerp(zn, $);
        }
        zn.applyMatrix4(u),
          Gn.applyMatrix4(u),
          zn.multiplyScalar(1 / zn.w),
          Gn.multiplyScalar(1 / Gn.w),
          (zn.x *= g.x / 2),
          (zn.y *= g.y / 2),
          (Gn.x *= g.x / 2),
          (Gn.y *= g.y / 2),
          Bi.start.copy(zn),
          (Bi.start.z = 0),
          Bi.end.copy(Gn),
          (Bi.end.z = 0);
        const I = Bi.closestPointToPointParameter(pu, !0);
        Bi.at(I, n1);
        const N = Cn.MathUtils.lerp(zn.z, Gn.z, I),
          D = N >= -1 && N <= 1,
          O = pu.distanceTo(n1) < v * 0.5;
        if (D && O) {
          Bi.start.fromBufferAttribute(x, U),
            Bi.end.fromBufferAttribute(M, U),
            Bi.start.applyMatrix4(c),
            Bi.end.applyMatrix4(c);
          const k = new Cn.Vector3(),
            $ = new Cn.Vector3();
          r.distanceSqToSegment(Bi.start, Bi.end, $, k),
            t.push({
              point: $,
              pointOnLine: k,
              distance: r.origin.distanceTo($),
              object: this,
              face: null,
              faceIndex: U,
              uv: null,
              uv2: null,
            });
        }
      }
    }
  }
}
pm.prototype.LineSegments2 = !0;
class rf extends nf {
  constructor() {
    super(), (this.type = "LineGeometry");
  }
  setPositions(e) {
    for (
      var t = e.length - 3, i = new Float32Array(2 * t), r = 0;
      r < t;
      r += 3
    )
      (i[2 * r] = e[r]),
        (i[2 * r + 1] = e[r + 1]),
        (i[2 * r + 2] = e[r + 2]),
        (i[2 * r + 3] = e[r + 3]),
        (i[2 * r + 4] = e[r + 4]),
        (i[2 * r + 5] = e[r + 5]);
    return super.setPositions(i), this;
  }
  setColors(e) {
    for (
      var t = e.length - 3, i = new Float32Array(2 * t), r = 0;
      r < t;
      r += 3
    )
      (i[2 * r] = e[r]),
        (i[2 * r + 1] = e[r + 1]),
        (i[2 * r + 2] = e[r + 2]),
        (i[2 * r + 3] = e[r + 3]),
        (i[2 * r + 4] = e[r + 4]),
        (i[2 * r + 5] = e[r + 5]);
    return super.setColors(i), this;
  }
  fromLine(e) {
    var t = e.geometry;
    if (t.isGeometry) {
      console.error(
        "THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead."
      );
      return;
    } else t.isBufferGeometry && this.setPositions(t.attributes.position.array);
    return this;
  }
}
rf.prototype.isLineGeometry = !0;
class mm extends pm {
  constructor(e = new rf(), t = new a0({ color: Math.random() * 16777215 })) {
    super(e, t), (this.type = "Line2");
  }
}
mm.prototype.isLine2 = !0;
class i1 extends Uc {
  constructor(e, t = {}) {
    const i = t.font;
    if (i === void 0) super();
    else {
      const r = i.generateShapes(e, t.size);
      (t.depth = t.height !== void 0 ? t.height : 50),
        t.bevelThickness === void 0 && (t.bevelThickness = 10),
        t.bevelSize === void 0 && (t.bevelSize = 8),
        t.bevelEnabled === void 0 && (t.bevelEnabled = !1),
        super(r, t);
    }
    this.type = "TextGeometry";
  }
}
class h7 {
  constructor(e) {
    (this.isFont = !0), (this.type = "Font"), (this.data = e);
  }
  generateShapes(e, t = 100) {
    const i = [],
      r = d7(e, t, this.data);
    for (let s = 0, u = r.length; s < u; s++) i.push(...r[s].toShapes());
    return i;
  }
}
function d7(n, e, t) {
  const i = Array.from(n),
    r = e / t.resolution,
    s = (t.boundingBox.yMax - t.boundingBox.yMin + t.underlineThickness) * r,
    u = [];
  let c = 0,
    h = 0;
  for (let p = 0; p < i.length; p++) {
    const g = i[p];
    if (
      g ===
      `
`
    )
      (c = 0), (h -= s);
    else {
      const v = p7(g, r, c, h, t);
      (c += v.offsetX), u.push(v.path);
    }
  }
  return u;
}
function p7(n, e, t, i, r) {
  const s = r.glyphs[n] || r.glyphs["?"];
  if (!s) {
    console.error(
      'THREE.Font: character "' +
        n +
        '" does not exists in font family ' +
        r.familyName +
        "."
    );
    return;
  }
  const u = new N8();
  let c, h, p, g, v, x, M, w;
  if (s.o) {
    const C = s._cachedOutline || (s._cachedOutline = s.o.split(" "));
    for (let E = 0, b = C.length; E < b; )
      switch (C[E++]) {
        case "m":
          (c = C[E++] * e + t), (h = C[E++] * e + i), u.moveTo(c, h);
          break;
        case "l":
          (c = C[E++] * e + t), (h = C[E++] * e + i), u.lineTo(c, h);
          break;
        case "q":
          (p = C[E++] * e + t),
            (g = C[E++] * e + i),
            (v = C[E++] * e + t),
            (x = C[E++] * e + i),
            u.quadraticCurveTo(v, x, p, g);
          break;
        case "b":
          (p = C[E++] * e + t),
            (g = C[E++] * e + i),
            (v = C[E++] * e + t),
            (x = C[E++] * e + i),
            (M = C[E++] * e + t),
            (w = C[E++] * e + i),
            u.bezierCurveTo(v, x, M, w, p, g);
          break;
      }
  }
  return { offsetX: s.ha * e, path: u };
}
class m7 extends Rn {
  constructor(e = document.createElement("div")) {
    super(),
      (this.isCSS2DObject = !0),
      (this.element = e),
      (this.element.style.position = "absolute"),
      (this.element.style.userSelect = "none"),
      this.element.setAttribute("draggable", !1),
      (this.center = new ke(0.5, 0.5)),
      this.addEventListener("removed", function () {
        this.traverse(function (t) {
          t.element instanceof Element &&
            t.element.parentNode !== null &&
            t.element.parentNode.removeChild(t.element);
        });
      });
  }
  copy(e, t) {
    return (
      super.copy(e, t),
      (this.element = e.element.cloneNode(!0)),
      (this.center = e.center),
      this
    );
  }
}
new te();
new dn();
new dn();
new te();
new te();
function g7(n, e) {
  var t =
    n == null
      ? null
      : (typeof Symbol < "u" && n[Symbol.iterator]) || n["@@iterator"];
  if (t != null) {
    var i,
      r,
      s,
      u,
      c = [],
      h = !0,
      p = !1;
    try {
      if (((s = (t = t.call(n)).next), e === 0)) {
        if (Object(t) !== t) return;
        h = !1;
      } else
        for (
          ;
          !(h = (i = s.call(t)).done) && (c.push(i.value), c.length !== e);
          h = !0
        );
    } catch (g) {
      (p = !0), (r = g);
    } finally {
      try {
        if (!h && t.return != null && ((u = t.return()), Object(u) !== u))
          return;
      } finally {
        if (p) throw r;
      }
    }
    return c;
  }
}
function r1(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(n);
    e &&
      (i = i.filter(function (r) {
        return Object.getOwnPropertyDescriptor(n, r).enumerable;
      })),
      t.push.apply(t, i);
  }
  return t;
}
function Kt(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? r1(Object(t), !0).forEach(function (i) {
          Jn(n, i, t[i]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t))
      : r1(Object(t)).forEach(function (i) {
          Object.defineProperty(n, i, Object.getOwnPropertyDescriptor(t, i));
        });
  }
  return n;
}
function sf(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function s1(n, e) {
  for (var t = 0; t < e.length; t++) {
    var i = e[t];
    (i.enumerable = i.enumerable || !1),
      (i.configurable = !0),
      "value" in i && (i.writable = !0),
      Object.defineProperty(n, bm(i.key), i);
  }
}
function of(n, e, t) {
  return (
    e && s1(n.prototype, e),
    t && s1(n, t),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    n
  );
}
function Jn(n, e, t) {
  return (
    (e = bm(e)),
    e in n
      ? Object.defineProperty(n, e, {
          value: t,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (n[e] = t),
    n
  );
}
function gm(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (n.prototype = Object.create(e && e.prototype, {
    constructor: { value: n, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(n, "prototype", { writable: !1 }),
    e && jl(n, e);
}
function Wl(n) {
  return (
    (Wl = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        }),
    Wl(n)
  );
}
function jl(n, e) {
  return (
    (jl = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (i, r) {
          return (i.__proto__ = r), i;
        }),
    jl(n, e)
  );
}
function vm() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
function Al(n, e, t) {
  return (
    vm()
      ? (Al = Reflect.construct.bind())
      : (Al = function (r, s, u) {
          var c = [null];
          c.push.apply(c, s);
          var h = Function.bind.apply(r, c),
            p = new h();
          return u && jl(p, u.prototype), p;
        }),
    Al.apply(null, arguments)
  );
}
function v7(n, e) {
  if (n == null) return {};
  var t = {},
    i = Object.keys(n),
    r,
    s;
  for (s = 0; s < i.length; s++)
    (r = i[s]), !(e.indexOf(r) >= 0) && (t[r] = n[r]);
  return t;
}
function _7(n, e) {
  if (n == null) return {};
  var t = v7(n, e),
    i,
    r;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(n);
    for (r = 0; r < s.length; r++)
      (i = s[r]),
        !(e.indexOf(i) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(n, i) &&
          (t[i] = n[i]);
  }
  return t;
}
function _m(n) {
  if (n === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return n;
}
function x7(n, e) {
  if (e && (typeof e == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return _m(n);
}
function xm(n) {
  var e = vm();
  return function () {
    var i = Wl(n),
      r;
    if (e) {
      var s = Wl(this).constructor;
      r = Reflect.construct(i, arguments, s);
    } else r = i.apply(this, arguments);
    return x7(this, r);
  };
}
function On(n, e) {
  return b7(n) || g7(n, e) || ym(n, e) || w7();
}
function An(n) {
  return y7(n) || M7(n) || ym(n) || E7();
}
function y7(n) {
  if (Array.isArray(n)) return gc(n);
}
function b7(n) {
  if (Array.isArray(n)) return n;
}
function M7(n) {
  if (
    (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
    n["@@iterator"] != null
  )
    return Array.from(n);
}
function ym(n, e) {
  if (n) {
    if (typeof n == "string") return gc(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (
      (t === "Object" && n.constructor && (t = n.constructor.name),
      t === "Map" || t === "Set")
    )
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return gc(n, e);
  }
}
function gc(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, i = new Array(e); t < e; t++) i[t] = n[t];
  return i;
}
function E7() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function w7() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function S7(n, e) {
  if (typeof n != "object" || n === null) return n;
  var t = n[Symbol.toPrimitive];
  if (t !== void 0) {
    var i = t.call(n, e || "default");
    if (typeof i != "object") return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(n);
}
function bm(n) {
  var e = S7(n, "string");
  return typeof e == "symbol" ? e : String(e);
}
function XA(n, e) {
  var t = Mm(n, e, "get");
  return T7(n, t);
}
function gu(n, e, t) {
  var i = Mm(n, e, "set");
  return C7(n, i, t), t;
}
function Mm(n, e, t) {
  if (!e.has(n))
    throw new TypeError("attempted to " + t + " private field on non-instance");
  return e.get(n);
}
function T7(n, e) {
  return e.get ? e.get.call(n) : e.value;
}
function C7(n, e, t) {
  if (e.set) e.set.call(n, t);
  else {
    if (!e.writable)
      throw new TypeError("attempted to set read only private field");
    e.value = t;
  }
}
function R7(n, e, t) {
  if (!e.has(n))
    throw new TypeError("attempted to get private field on non-instance");
  return t;
}
function Em(n, e) {
  if (e.has(n))
    throw new TypeError(
      "Cannot initialize the same private elements twice on an object"
    );
}
function vu(n, e, t) {
  Em(n, e), e.set(n, t);
}
function P7(n, e) {
  Em(n, e), e.add(n);
}
var L7 = function n(e) {
    e instanceof Array ? e.forEach(n) : (e.map && e.map.dispose(), e.dispose());
  },
  wm = function n(e) {
    e.geometry && e.geometry.dispose(),
      e.material && L7(e.material),
      e.texture && e.texture.dispose(),
      e.children && e.children.forEach(n);
  },
  mn = function (e) {
    if (e && e.children)
      for (; e.children.length; ) {
        var t = e.children[0];
        e.remove(t), wm(t);
      }
  };
function xi(n, e) {
  var t = new e();
  return {
    linkProp: function (r) {
      return {
        default: t[r](),
        onChange: function (u, c) {
          c[n][r](u);
        },
        triggerUpdate: !1,
      };
    },
    linkMethod: function (r) {
      return function (s) {
        for (
          var u = s[n],
            c = arguments.length,
            h = new Array(c > 1 ? c - 1 : 0),
            p = 1;
          p < c;
          p++
        )
          h[p - 1] = arguments[p];
        var g = u[r].apply(u, h);
        return g === u ? this : g;
      };
    },
  };
}
var Pn = 100;
function o1() {
  return Pn;
}
function Wi(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
    i = ((90 - n) * Math.PI) / 180,
    r = ((90 - e) * Math.PI) / 180,
    s = Pn * (1 + t);
  return {
    x: s * Math.sin(i) * Math.cos(r),
    y: s * Math.cos(i),
    z: s * Math.sin(i) * Math.sin(r),
  };
}
function Sm(n) {
  var e = n.x,
    t = n.y,
    i = n.z,
    r = Math.sqrt(e * e + t * t + i * i),
    s = Math.acos(t / r),
    u = Math.atan2(i, e);
  return {
    lat: 90 - (s * 180) / Math.PI,
    lng: 90 - (u * 180) / Math.PI - (u < -Math.PI / 2 ? 360 : 0),
    altitude: r / Pn - 1,
  };
}
function ma(n) {
  return (n * Math.PI) / 180;
}
var Xa = window.THREE
    ? window.THREE
    : {
        BackSide: fi,
        BufferAttribute: En,
        Color: Dt,
        Mesh: wn,
        ShaderMaterial: or,
      },
  D7 = `
uniform vec3 color;
uniform float coefficient;
uniform float power;
varying vec3 vVertexNormal;
varying vec3 vVertexWorldPosition;
void main() {
  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;
  vec3 viewCameraToVertex	= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;
  viewCameraToVertex = normalize(viewCameraToVertex);
  float intensity	= pow(
    coefficient + dot(vVertexNormal, viewCameraToVertex),
    power
  );
  gl_FragColor = vec4(color, intensity);
}`,
  I7 = `
varying vec3 vVertexWorldPosition;
varying vec3 vVertexNormal;
void main() {
  vVertexNormal	= normalize(normalMatrix * normal);
  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;
  gl_Position	= projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,
  O7 = { backside: !0, coefficient: 0.5, color: "gold", size: 2, power: 1 };
function q7(n, e, t) {
  return new Xa.ShaderMaterial({
    depthWrite: !1,
    fragmentShader: D7,
    transparent: !0,
    uniforms: {
      coefficient: { value: n },
      color: { value: new Xa.Color(e) },
      power: { value: t },
    },
    vertexShader: I7,
  });
}
function U7(n, e) {
  for (
    var t = n.clone(),
      i = new Float32Array(n.attributes.position.count * 3),
      r = 0,
      s = i.length;
    r < s;
    r++
  ) {
    var u = n.attributes.normal.array[r],
      c = n.attributes.position.array[r];
    i[r] = c + u * e;
  }
  return t.setAttribute("position", new Xa.BufferAttribute(i, 3)), t;
}
function B7(n) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : O7,
    t = e.backside,
    i = e.coefficient,
    r = e.color,
    s = e.size,
    u = e.power,
    c = U7(n, s),
    h = q7(i, r, u);
  return t && (h.side = Xa.BackSide), new Xa.Mesh(c, h);
}
var Ir = window.THREE
    ? window.THREE
    : {
        Color: Dt,
        LineBasicMaterial: Jl,
        LineSegments: Y1,
        Mesh: wn,
        MeshPhongMaterial: T8,
        SphereGeometry: $s,
        SRGBColorSpace: hn,
        TextureLoader: L8,
      },
  Tm = hi({
    props: {
      globeImageUrl: {},
      bumpImageUrl: {},
      showGlobe: {
        default: !0,
        onChange: function (e, t) {
          t.globeObj.visible = !!e;
        },
        triggerUpdate: !1,
      },
      showGraticules: {
        default: !1,
        onChange: function (e, t) {
          t.graticulesObj.visible = !!e;
        },
        triggerUpdate: !1,
      },
      showAtmosphere: {
        default: !0,
        onChange: function (e, t) {
          t.atmosphereObj && (t.atmosphereObj.visible = !!e);
        },
        triggerUpdate: !1,
      },
      atmosphereColor: { default: "lightskyblue" },
      atmosphereAltitude: { default: 0.15 },
      onReady: { default: function () {}, triggerUpdate: !1 },
    },
    methods: {
      globeMaterial: function (e, t) {
        return t !== void 0
          ? ((e.globeObj.material = t || e.defaultGlobeMaterial), this)
          : e.globeObj.material;
      },
      _destructor: function (e) {
        mn(e.globeObj), mn(e.graticulesObj);
      },
    },
    stateInit: function () {
      var e = new Ir.SphereGeometry(Pn, 75, 75),
        t = new Ir.MeshPhongMaterial({ color: 0 }),
        i = new Ir.Mesh(e, t);
      (i.rotation.y = -Math.PI / 2), (i.__globeObjType = "globe");
      var r = new Ir.LineSegments(
        new I2(Nb(), Pn, 2),
        new Ir.LineBasicMaterial({
          color: "lightgrey",
          transparent: !0,
          opacity: 0.1,
        })
      );
      return { globeObj: i, graticulesObj: r, defaultGlobeMaterial: t };
    },
    init: function (e, t) {
      mn(e),
        (t.scene = e),
        t.scene.add(t.globeObj),
        t.scene.add(t.graticulesObj),
        (t.ready = !1);
    },
    update: function (e, t) {
      var i = e.globeObj.material;
      if (
        (t.hasOwnProperty("globeImageUrl") &&
          (e.globeImageUrl
            ? new Ir.TextureLoader().load(e.globeImageUrl, function (s) {
                (s.colorSpace = Ir.SRGBColorSpace),
                  (i.map = s),
                  (i.color = null),
                  (i.needsUpdate = !0),
                  !e.ready && (e.ready = !0) && setTimeout(e.onReady);
              })
            : !i.color && (i.color = new Ir.Color(0))),
        t.hasOwnProperty("bumpImageUrl") &&
          (e.bumpImageUrl
            ? e.bumpImageUrl &&
              new Ir.TextureLoader().load(e.bumpImageUrl, function (s) {
                (i.bumpMap = s), (i.needsUpdate = !0);
              })
            : ((i.bumpMap = null), (i.needsUpdate = !0))),
        (t.hasOwnProperty("atmosphereColor") ||
          t.hasOwnProperty("atmosphereAltitude")) &&
          (e.atmosphereObj &&
            (e.scene.remove(e.atmosphereObj), mn(e.atmosphereObj)),
          e.atmosphereColor && e.atmosphereAltitude))
      ) {
        var r = (e.atmosphereObj = B7(e.globeObj.geometry, {
          backside: !0,
          color: e.atmosphereColor,
          size: Pn * e.atmosphereAltitude,
          power: 3.5,
          coefficient: 0.1,
        }));
        (r.visible = !!e.showAtmosphere),
          (r.__globeObjType = "atmosphere"),
          e.scene.add(r);
      }
      !e.ready && !e.globeImageUrl && ((e.ready = !0), e.onReady());
    },
  }),
  Hr = function (e) {
    return isNaN(e) ? parseInt(dt(e).toHex(), 16) : e;
  },
  vr = function (e) {
    return e && isNaN(e) ? Vs(e).opacity : 1;
  },
  ds = function (e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0,
      i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
      r,
      s = 1,
      u =
        /^rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.eE+-]+)\s*\)$/.exec(
          e.trim().toLowerCase()
        );
    if (u) {
      var c = u.slice(1),
        h = On(c, 4),
        p = h[0],
        g = h[1],
        v = h[2],
        x = h[3];
      (r = new Dt("rgb(".concat(+p, ",").concat(+g, ",").concat(+v, ")"))),
        (s = Math.min(+x, 1));
    } else r = new Dt(e);
    i && r.convertLinearToSRGB();
    var M = r.toArray();
    return t ? [].concat(An(M), [s]) : M;
  };
function N7(n, e, t) {
  return (
    (n.opacity = e),
    (n.transparent = e < 1),
    (n.depthWrite = t === void 0 ? e >= 1 : t),
    n
  );
}
var F7 = window.THREE ? window.THREE : { Float32BufferAttribute: Jt };
function ps(n, e) {
  var t =
      arguments.length > 2 && arguments[2] !== void 0
        ? arguments[2]
        : F7.Float32BufferAttribute,
    i = new t(n.length * e, e);
  return (
    e === 1
      ? n.forEach(function (r, s) {
          return i.setX(s, r);
        })
      : n.forEach(function (r, s) {
          return i.set(r, s * e);
        }),
    i
  );
}
function k7(n) {
  for (var e = n.itemSize, t = [], i = 0; i < n.count; i++)
    t.push(n.array.slice(i * e, (i + 1) * e));
  return t;
}
function Di(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
    i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
    r = i.removeDelay,
    s = r === void 0 ? 0 : r;
  return OE(
    n,
    e.children,
    function (u) {
      return e.add(u);
    },
    function (u) {
      var c = function () {
        e.remove(u),
          mn(u),
          u && u.hasOwnProperty("__data") && delete u.__data.__currentTargetD;
      };
      s ? setTimeout(c, s) : c();
    },
    Kt({ objBindAttr: "__threeObj" }, t)
  );
}
var Yi = window.THREE
    ? window.THREE
    : {
        BufferGeometry: fn,
        Color: Dt,
        CylinderGeometry: qc,
        Matrix4: dn,
        Mesh: wn,
        MeshLambertMaterial: Ys,
        Object3D: Rn,
        Vector3: te,
      },
  a1 = Object.assign({}, Wc),
  A1 = a1.BufferGeometryUtils || a1,
  Cm = hi({
    props: {
      pointsData: { default: [] },
      pointLat: { default: "lat" },
      pointLng: { default: "lng" },
      pointColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      pointAltitude: { default: 0.1 },
      pointRadius: { default: 0.25 },
      pointResolution: { default: 12, triggerUpdate: !1 },
      pointsMerge: { default: !1 },
      pointsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.pointLat),
        i = qe(e.pointLng),
        r = qe(e.pointAltitude),
        s = qe(e.pointRadius),
        u = qe(e.pointColor),
        c = new Yi.CylinderGeometry(1, 1, 1, e.pointResolution);
      c.applyMatrix4(new Yi.Matrix4().makeRotationX(Math.PI / 2)),
        c.applyMatrix4(new Yi.Matrix4().makeTranslation(0, 0, -0.5));
      var h = (2 * Math.PI * Pn) / 360,
        p = {},
        g = e.pointsMerge ? new Yi.Object3D() : e.scene;
      if (
        (Di(e.pointsData, g, { createObj: M, updateObj: w }), e.pointsMerge)
      ) {
        var v = e.pointsData.length
            ? (A1.mergeGeometries || A1.mergeBufferGeometries)(
                e.pointsData.map(function (C) {
                  var E = C.__threeObj;
                  C.__threeObj = void 0;
                  var b = E.geometry.clone();
                  E.updateMatrix(), b.applyMatrix4(E.matrix);
                  var L = ds(u(C));
                  return (
                    b.setAttribute(
                      "color",
                      ps(
                        An(new Array(b.getAttribute("position").count)).map(
                          function () {
                            return L;
                          }
                        ),
                        4
                      )
                    ),
                    b
                  );
                })
              )
            : new Yi.BufferGeometry(),
          x = new Yi.Mesh(
            v,
            new Yi.MeshLambertMaterial({
              color: 16777215,
              transparent: !0,
              vertexColors: !0,
            })
          );
        (x.__globeObjType = "points"),
          (x.__data = e.pointsData),
          mn(e.scene),
          e.scene.add(x);
      }
      function M() {
        var C = new Yi.Mesh(c);
        return (C.__globeObjType = "point"), C;
      }
      function w(C, E) {
        var b = function (N) {
            var D = (C.__currentTargetD = N),
              O = D.r,
              k = D.alt,
              $ = D.lat,
              H = D.lng;
            Object.assign(C.position, Wi($, H));
            var Q = e.pointsMerge
              ? new Yi.Vector3(0, 0, 0)
              : e.scene.localToWorld(new Yi.Vector3(0, 0, 0));
            C.lookAt(Q),
              (C.scale.x = C.scale.y = Math.min(30, O) * h),
              (C.scale.z = Math.max(k * Pn, 0.1));
          },
          L = { alt: +r(E), r: +s(E), lat: +t(E), lng: +i(E) },
          S = C.__currentTargetD || Object.assign({}, L, { alt: -0.001 });
        if (
          (Object.keys(L).some(function (I) {
            return S[I] !== L[I];
          }) &&
            (e.pointsMerge ||
            !e.pointsTransitionDuration ||
            e.pointsTransitionDuration < 0
              ? b(L)
              : new Pi(S)
                  .to(L, e.pointsTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate(b)
                  .start()),
          !e.pointsMerge)
        ) {
          var R = u(E),
            U = R ? vr(R) : 0,
            q = !!U;
          (C.visible = q),
            q &&
              (p.hasOwnProperty(R) ||
                (p[R] = new Yi.MeshLambertMaterial({
                  color: Hr(R),
                  transparent: U < 1,
                  opacity: U,
                })),
              (C.material = p[R]));
        }
      }
    },
  }),
  z7 = ["stroke"],
  Zi = window.THREE
    ? window.THREE
    : {
        BufferGeometry: fn,
        CubicBezierCurve3: K1,
        Curve: ar,
        Group: Gi,
        Line: e0,
        Mesh: wn,
        NormalBlending: As,
        QuadraticBezierCurve3: Dc,
        ShaderMaterial: or,
        TubeGeometry: Bc,
        Vector3: te,
      },
  G7 = Wo.default || Wo,
  H7 = {
    uniforms: {
      dashOffset: { value: 0 },
      dashSize: { value: 1 },
      gapSize: { value: 0 },
      dashTranslate: { value: 0 },
    },
    vertexShader: `
    uniform float dashTranslate; 

    attribute vec4 vertexColor;
    varying vec4 vColor;
    
    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
    fragmentShader: `
    uniform float dashOffset; 
    uniform float dashSize;
    uniform float gapSize; 
    
    varying vec4 vColor;
    varying float vRelDistance;
    
    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;
    
      // set px color: [r, g, b, a], interpolated between vertices 
      gl_FragColor = vColor; 
    }
  `,
  },
  Rm = hi({
    props: {
      arcsData: { default: [] },
      arcStartLat: { default: "startLat" },
      arcStartLng: { default: "startLng" },
      arcEndLat: { default: "endLat" },
      arcEndLng: { default: "endLng" },
      arcColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      arcAltitude: {},
      arcAltitudeAutoScale: { default: 0.5 },
      arcStroke: {},
      arcCurveResolution: { default: 64, triggerUpdate: !1 },
      arcCircularResolution: { default: 6, triggerUpdate: !1 },
      arcDashLength: { default: 1 },
      arcDashGap: { default: 0 },
      arcDashInitialGap: { default: 0 },
      arcDashAnimateTime: { default: 0 },
      arcsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      mn(e),
        (t.scene = e),
        (t.ticker = new G7()),
        t.ticker.onTick.add(function (i, r) {
          t.arcsData
            .filter(function (s) {
              return (
                s.__threeObj &&
                s.__threeObj.children.length &&
                s.__threeObj.children[0].material &&
                s.__threeObj.children[0].__dashAnimateStep
              );
            })
            .forEach(function (s) {
              var u = s.__threeObj.children[0],
                c = u.__dashAnimateStep * r,
                h = u.material.uniforms.dashTranslate.value % 1e9;
              u.material.uniforms.dashTranslate.value = h + c;
            });
        });
    },
    update: function (e) {
      var t = qe(e.arcStartLat),
        i = qe(e.arcStartLng),
        r = qe(e.arcEndLat),
        s = qe(e.arcEndLng),
        u = qe(e.arcAltitude),
        c = qe(e.arcAltitudeAutoScale),
        h = qe(e.arcStroke),
        p = qe(e.arcColor),
        g = qe(e.arcDashLength),
        v = qe(e.arcDashGap),
        x = qe(e.arcDashInitialGap),
        M = qe(e.arcDashAnimateTime),
        w = new Zi.ShaderMaterial(
          Kt(Kt({}, H7), {}, { transparent: !0, blending: Zi.NormalBlending })
        );
      Di(e.arcsData, e.scene, {
        createObj: function () {
          var S = new Zi.Group();
          return (S.__globeObjType = "arc"), S;
        },
        updateObj: function (S, R) {
          var U = h(R),
            q = U != null;
          if (!S.children.length || q !== (S.children[0].type === "Mesh")) {
            mn(S);
            var I = q ? new Zi.Mesh() : new Zi.Line(new Zi.BufferGeometry());
            (I.material = w.clone()), S.add(I);
          }
          var N = S.children[0];
          Object.assign(N.material.uniforms, {
            dashSize: { value: g(R) },
            gapSize: { value: v(R) },
            dashOffset: { value: x(R) },
          });
          var D = M(R);
          N.__dashAnimateStep = D > 0 ? 1e3 / D : 0;
          var O = E(
              p(R),
              e.arcCurveResolution,
              q ? e.arcCircularResolution + 1 : 1
            ),
            k = b(
              e.arcCurveResolution,
              q ? e.arcCircularResolution + 1 : 1,
              !0
            );
          N.geometry.setAttribute("vertexColor", O),
            N.geometry.setAttribute("vertexRelDistance", k);
          var $ = function (J) {
              var K = (R.__currentTargetD = J),
                ie = K.stroke,
                he = _7(K, z7),
                ce = C(he);
              q
                ? (N.geometry && N.geometry.dispose(),
                  (N.geometry = new Zi.TubeGeometry(
                    ce,
                    e.arcCurveResolution,
                    ie / 2,
                    e.arcCircularResolution
                  )),
                  N.geometry.setAttribute("vertexColor", O),
                  N.geometry.setAttribute("vertexRelDistance", k))
                : N.geometry.setFromPoints(ce.getPoints(e.arcCurveResolution));
            },
            H = {
              stroke: U,
              alt: u(R),
              altAutoScale: +c(R),
              startLat: +t(R),
              startLng: +i(R),
              endLat: +r(R),
              endLng: +s(R),
            },
            Q =
              R.__currentTargetD ||
              Object.assign({}, H, { altAutoScale: -0.001 });
          Object.keys(H).some(function (F) {
            return Q[F] !== H[F];
          }) &&
            (!e.arcsTransitionDuration || e.arcsTransitionDuration < 0
              ? $(H)
              : new Pi(Q)
                  .to(H, e.arcsTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate($)
                  .start());
        },
      });
      function C(L) {
        var S = L.alt,
          R = L.altAutoScale,
          U = L.startLat,
          q = L.startLng,
          I = L.endLat,
          N = L.endLng,
          D = function (de) {
            var Se = On(de, 3),
              Pe = Se[0],
              Oe = Se[1],
              $e = Se[2],
              nt = Wi(Oe, Pe, $e),
              ot = nt.x,
              Rt = nt.y,
              Ot = nt.z;
            return new Zi.Vector3(ot, Rt, Ot);
          },
          O = [q, U],
          k = [N, I],
          $ = S;
        if (($ == null && ($ = (hs(O, k) / 2) * R), $)) {
          var H = Gc(O, k),
            Q = [0.25, 0.75].map(function (oe) {
              return [].concat(An(H(oe)), [$ * 1.5]);
            }),
            F = On(Q, 2),
            J = F[0],
            K = F[1],
            ie = Al(Zi.CubicBezierCurve3, An([O, J, K, k].map(D)));
          return ie;
        } else {
          var he = 0.001;
          return ce.apply(
            void 0,
            An([[].concat(O, [he]), [].concat(k, [he])].map(D))
          );
        }
        function ce(oe, de) {
          var Se = oe.angleTo(de),
            Pe =
              Se === 0
                ? function () {
                    return oe.clone();
                  }
                : function ($e) {
                    return new Zi.Vector3()
                      .addVectors(
                        oe.clone().multiplyScalar(Math.sin((1 - $e) * Se)),
                        de.clone().multiplyScalar(Math.sin($e * Se))
                      )
                      .divideScalar(Math.sin(Se));
                  },
            Oe = new Zi.Curve();
          return (Oe.getPoint = Pe), Oe;
        }
      }
      function E(L, S) {
        var R =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
          U = S + 1,
          q;
        if (L instanceof Array || L instanceof Function) {
          var I =
            L instanceof Array
              ? Ws()
                  .domain(
                    L.map(function (Q, F) {
                      return F / (L.length - 1);
                    })
                  )
                  .range(L)
              : L;
          q = function (F) {
            return ds(I(F), !0, !0);
          };
        } else {
          var N = ds(L, !0, !0);
          q = function () {
            return N;
          };
        }
        for (var D = [], O = 0, k = U; O < k; O++)
          for (var $ = q(O / (k - 1)), H = 0; H < R; H++) D.push($);
        return ps(D, 4);
      }
      function b(L) {
        for (
          var S =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : 1,
            R =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : !1,
            U = L + 1,
            q = [],
            I = 0,
            N = U;
          I < N;
          I++
        )
          for (var D = I / (N - 1), O = 0; O < S; O++) q.push(D);
        return R && q.reverse(), ps(q, 1);
      }
    },
  }),
  Jr = window.THREE
    ? window.THREE
    : {
        BufferGeometry: fn,
        Color: Dt,
        DoubleSide: mi,
        Mesh: wn,
        MeshLambertMaterial: Ys,
        Object3D: Rn,
      },
  l1 = Object.assign({}, Wc),
  u1 = l1.BufferGeometryUtils || l1,
  Pm = hi({
    props: {
      hexBinPointsData: { default: [] },
      hexBinPointLat: { default: "lat" },
      hexBinPointLng: { default: "lng" },
      hexBinPointWeight: { default: 1 },
      hexBinResolution: { default: 4 },
      hexMargin: { default: 0.2 },
      hexTopCurvatureResolution: { default: 5 },
      hexTopColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexSideColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexAltitude: {
        default: function (e) {
          var t = e.sumWeight;
          return t * 0.01;
        },
      },
      hexBinMerge: { default: !1 },
      hexTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.hexBinPointLat),
        i = qe(e.hexBinPointLng),
        r = qe(e.hexBinPointWeight),
        s = qe(e.hexAltitude),
        u = qe(e.hexTopColor),
        c = qe(e.hexSideColor),
        h = qe(e.hexMargin),
        p = Ac(
          e.hexBinPointsData.map(function (b) {
            return Kt(
              Kt({}, b),
              {},
              { h3Idx: e7(t(b), i(b), e.hexBinResolution) }
            );
          }),
          "h3Idx"
        ),
        g = Object.entries(p).map(function (b) {
          var L = On(b, 2),
            S = L[0],
            R = L[1];
          return {
            h3Idx: S,
            points: R,
            sumWeight: R.reduce(function (U, q) {
              return U + +r(q);
            }, 0),
          };
        }),
        v = {},
        x = e.hexBinMerge ? new Jr.Object3D() : e.scene;
      if (
        (Di(g, x, {
          createObj: C,
          updateObj: E,
          idAccessor: function (L) {
            return L.h3Idx;
          },
        }),
        e.hexBinMerge)
      ) {
        var M = g.length
            ? (u1.mergeGeometries || u1.mergeBufferGeometries)(
                g.map(function (b) {
                  var L = b.__threeObj;
                  b.__threeObj = void 0;
                  var S = L.geometry.toNonIndexed();
                  L.updateMatrix(), S.applyMatrix4(L.matrix);
                  var R = ds(u(b)),
                    U = ds(c(b)),
                    q = S.getAttribute("position").count,
                    I = S.groups[0].count;
                  return (
                    S.setAttribute(
                      "color",
                      ps(
                        An(new Array(q)).map(function (N, D) {
                          return D >= I ? R : U;
                        }),
                        4
                      )
                    ),
                    S
                  );
                })
              )
            : new Jr.BufferGeometry(),
          w = new Jr.Mesh(
            M,
            new Jr.MeshLambertMaterial({
              color: 16777215,
              transparent: !0,
              vertexColors: !0,
              side: Jr.DoubleSide,
            })
          );
        (w.__globeObjType = "hexBinPoints"),
          (w.__data = g),
          mn(e.scene),
          e.scene.add(w);
      }
      function C(b) {
        var L = new Jr.Mesh();
        (L.__hexCenter = um(b.h3Idx)),
          (L.__hexGeoJson = cm(b.h3Idx, !0).reverse());
        var S = L.__hexCenter[1];
        return (
          L.__hexGeoJson.forEach(function (R) {
            var U = R[0];
            Math.abs(S - U) > 170 && (R[0] += S > U ? 360 : -360);
          }),
          (L.__globeObjType = "hexbin"),
          L
        );
      }
      function E(b, L) {
        var S = function (J, K, ie) {
            return J - (J - K) * ie;
          },
          R = Math.max(0, Math.min(1, +h(L))),
          U = On(b.__hexCenter, 2),
          q = U[0],
          I = U[1],
          N =
            R === 0
              ? b.__hexGeoJson
              : b.__hexGeoJson.map(function (F) {
                  var J = On(F, 2),
                    K = J[0],
                    ie = J[1];
                  return [
                    [K, I],
                    [ie, q],
                  ].map(function (he) {
                    var ce = On(he, 2),
                      oe = ce[0],
                      de = ce[1];
                    return S(oe, de, R);
                  });
                }),
          D = e.hexTopCurvatureResolution;
        b.geometry && b.geometry.dispose(),
          (b.geometry = new ef([N], 0, Pn, !1, !0, !0, D));
        var O = { alt: +s(L) },
          k = function (J) {
            var K = (b.__currentTargetD = J),
              ie = K.alt;
            b.scale.x = b.scale.y = b.scale.z = 1 + ie;
          },
          $ = b.__currentTargetD || Object.assign({}, O, { alt: -0.001 });
        if (
          (Object.keys(O).some(function (F) {
            return $[F] !== O[F];
          }) &&
            (e.hexBinMerge ||
            !e.hexTransitionDuration ||
            e.hexTransitionDuration < 0
              ? k(O)
              : new Pi($)
                  .to(O, e.hexTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate(k)
                  .start()),
          !e.hexBinMerge)
        ) {
          var H = c(L),
            Q = u(L);
          [H, Q].forEach(function (F) {
            if (!v.hasOwnProperty(F)) {
              var J = vr(F);
              v[F] = new Jr.MeshLambertMaterial({
                color: Hr(F),
                transparent: J < 1,
                opacity: J,
                side: Jr.DoubleSide,
              });
            }
          }),
            (b.material = [H, Q].map(function (F) {
              return v[F];
            }));
        }
      }
    },
  }),
  Lm = function (e) {
    return e * e;
  };
function V7(n, e) {
  var t = Math.sqrt,
    i = Math.cos,
    r = function (v) {
      return (v * Math.PI) / 180;
    },
    s = function (v) {
      return Lm(Math.sin(v / 2));
    },
    u = r(n[1]),
    c = r(e[1]),
    h = r(n[0]),
    p = r(e[0]);
  return 2 * Math.asin(t(s(c - u) + i(u) * i(c) * s(p - h)));
}
var W7 = Math.sqrt(2 * Math.PI);
function j7(n, e) {
  return Math.exp(-Lm(n / e) / 2) / (e * W7);
}
var X7 = function (e) {
    var t = On(e, 2),
      i = t[0],
      r = t[1],
      s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
      u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      c = u.lngAccessor,
      h =
        c === void 0
          ? function (E) {
              return E[0];
            }
          : c,
      p = u.latAccessor,
      g =
        p === void 0
          ? function (E) {
              return E[1];
            }
          : p,
      v = u.weightAccessor,
      x =
        v === void 0
          ? function () {
              return 1;
            }
          : v,
      M = u.bandwidth,
      w = [i, r],
      C = (M * Math.PI) / 180;
    return sb(
      s.map(function (E) {
        var b = x(E);
        if (!(b <= 0)) {
          var L = V7(w, [h(E), g(E)]);
          return j7(L, C) * b;
        }
      })
    );
  },
  QA = window.THREE
    ? window.THREE
    : { Mesh: wn, MeshLambertMaterial: Ys, SphereGeometry: $s },
  Q7 = 3.5,
  $7 = 0.1,
  Y7 = 3.5,
  c1 = new WeakSet(),
  _u = new WeakMap(),
  $A = new WeakMap(),
  xu = new WeakMap(),
  Z7 = (function () {
    function n(e, t) {
      sf(this, n),
        P7(this, c1),
        vu(this, _u, { writable: !0, value: void 0 }),
        vu(this, $A, { writable: !0, value: void 0 }),
        vu(this, xu, { writable: !0, value: void 0 }),
        gu(this, _u, e),
        gu(this, $A, f7()),
        XA(this, $A).init(
          e
            .map(function (i) {
              return [i.x, i.y, i.z];
            })
            .flat()
        ),
        gu(
          this,
          xu,
          R7(this, c1, K7).call(this, Wi(0, 0), Wi(0, Math.min(180, t)))
        );
    }
    return (
      of(n, [
        {
          key: "getNearPoints",
          value: function (t, i, r) {
            var s = this;
            return XA(this, $A)
              .intersectSphere(t, i, r, XA(this, xu))
              .map(function (u) {
                return XA(s, _u)[u / 3];
              });
          },
        },
      ]),
      n
    );
  })();
function K7(n, e) {
  return Math.sqrt(
    Math.pow(n.x - e.x, 2) + Math.pow(n.y - e.y, 2) + Math.pow(n.z - e.z, 2)
  );
}
var J7 = function (e) {
    var t = Vs(n7(e));
    return (t.opacity = Math.cbrt(e)), t.formatRgb();
  },
  Dm = hi({
    props: {
      heatmapsData: { default: [] },
      heatmapPoints: {
        default: function (e) {
          return e;
        },
      },
      heatmapPointLat: {
        default: function (e) {
          return e[0];
        },
      },
      heatmapPointLng: {
        default: function (e) {
          return e[1];
        },
      },
      heatmapPointWeight: { default: 1 },
      heatmapBandwidth: { default: 4 },
      heatmapColorFn: {
        default: function () {
          return J7;
        },
      },
      heatmapColorSaturation: { default: 1.5 },
      heatmapBaseAltitude: { default: 0.01 },
      heatmapTopAltitude: {},
      heatmapsTransitionDuration: { default: 0, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.heatmapPoints),
        i = qe(e.heatmapPointLat),
        r = qe(e.heatmapPointLng),
        s = qe(e.heatmapPointWeight),
        u = qe(e.heatmapBandwidth),
        c = qe(e.heatmapColorFn),
        h = qe(e.heatmapColorSaturation),
        p = qe(e.heatmapBaseAltitude),
        g = qe(e.heatmapTopAltitude);
      Di(e.heatmapsData, e.scene, {
        createObj: function (x) {
          var M = new QA.Mesh(
            new QA.SphereGeometry(Pn),
            new QA.MeshLambertMaterial({ vertexColors: !0, transparent: !0 })
          );
          return (M.__globeObjType = "heatmap"), M;
        },
        updateObj: function (x, M) {
          var w = u(M),
            C = c(M),
            E = h(M),
            b = p(M),
            L = g(M),
            S = t(M).map(function (H) {
              var Q = i(H),
                F = r(H),
                J = Wi(Q, F),
                K = J.x,
                ie = J.y,
                he = J.z;
              return { x: K, y: ie, z: he, lat: Q, lng: F, weight: s(H) };
            }),
            R = Math.max($7, w / Q7),
            U = Math.ceil(360 / (R || -1));
          x.geometry.parameters.widthSegments !== U &&
            (x.geometry.dispose(),
            (x.geometry = new QA.SphereGeometry(Pn, U, U / 2)));
          var q = k7(x.geometry.getAttribute("position")),
            I = q.map(function (H) {
              var Q = On(H, 3),
                F = Q[0],
                J = Q[1],
                K = Q[2],
                ie = Sm({ x: F, y: J, z: K }),
                he = ie.lng,
                ce = ie.lat;
              return [he, ce];
            }),
            N = new Z7(S, w * Y7),
            D = I.map(function (H, Q) {
              var F = On(q[Q], 3),
                J = F[0],
                K = F[1],
                ie = F[2];
              return X7(H, N.getNearPoints(J, K, ie), {
                latAccessor: function (ce) {
                  return ce.lat;
                },
                lngAccessor: function (ce) {
                  return ce.lng;
                },
                weightAccessor: function (ce) {
                  return ce.weight;
                },
                bandwidth: w,
              });
            }),
            O = function (Q) {
              var F = (x.__currentTargetD = Q),
                J = F.kdeVals,
                K = F.topAlt,
                ie = F.saturation,
                he = nb(J) || 1e-15;
              x.geometry.setAttribute(
                "color",
                ps(
                  J.map(function (oe) {
                    return ds(C((oe / he) * ie));
                  }),
                  4
                )
              );
              var ce = Ws([0, he], [b, K || b]);
              x.geometry.setAttribute(
                "position",
                ps(
                  J.map(function (oe, de) {
                    var Se = On(I[de], 2),
                      Pe = Se[0],
                      Oe = Se[1],
                      $e = ce(oe),
                      nt = Wi(Oe, Pe, $e);
                    return [nt.x, nt.y, nt.z];
                  }),
                  3
                )
              );
            },
            k = { kdeVals: D, topAlt: L, saturation: E },
            $ =
              x.__currentTargetD ||
              Object.assign({}, k, {
                kdeVals: D.map(function () {
                  return 0;
                }),
                topAlt: L && b,
                saturation: 0.5,
              });
          $.kdeVals.length !== D.length && ($.kdeVals = D.slice()),
            Object.keys(k).some(function (H) {
              return $[H] !== k[H];
            }) &&
              (!e.heatmapsTransitionDuration || e.heatmapsTransitionDuration < 0
                ? O(k)
                : new Pi($)
                    .to(k, e.heatmapsTransitionDuration)
                    .easing(Hn.Quadratic.InOut)
                    .onUpdate(O)
                    .start());
        },
      });
    },
  }),
  es = window.THREE
    ? window.THREE
    : {
        DoubleSide: mi,
        Group: Gi,
        LineBasicMaterial: Jl,
        LineSegments: Y1,
        Mesh: wn,
        MeshBasicMaterial: Zl,
      },
  Im = hi({
    props: {
      polygonsData: { default: [] },
      polygonGeoJsonGeometry: { default: "geometry" },
      polygonSideColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      polygonSideMaterial: {},
      polygonCapColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      polygonCapMaterial: {},
      polygonStrokeColor: {},
      polygonAltitude: { default: 0.01 },
      polygonCapCurvatureResolution: { default: 5 },
      polygonsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.polygonGeoJsonGeometry),
        i = qe(e.polygonAltitude),
        r = qe(e.polygonCapCurvatureResolution),
        s = qe(e.polygonCapColor),
        u = qe(e.polygonCapMaterial),
        c = qe(e.polygonSideColor),
        h = qe(e.polygonSideMaterial),
        p = qe(e.polygonStrokeColor),
        g = [];
      e.polygonsData.forEach(function (v) {
        var x = {
            data: v,
            capColor: s(v),
            capMaterial: u(v),
            sideColor: c(v),
            sideMaterial: h(v),
            strokeColor: p(v),
            altitude: +i(v),
            capCurvatureResolution: +r(v),
          },
          M = t(v),
          w = v.__id || "".concat(Math.round(Math.random() * 1e9));
        (v.__id = w),
          M.type === "Polygon"
            ? g.push(Kt({ id: "".concat(w, "_0"), coords: M.coordinates }, x))
            : M.type === "MultiPolygon"
            ? g.push.apply(
                g,
                An(
                  M.coordinates.map(function (C, E) {
                    return Kt(
                      { id: "".concat(w, "_").concat(E), coords: C },
                      x
                    );
                  })
                )
              )
            : console.warn(
                "Unsupported GeoJson geometry type: ".concat(
                  M.type,
                  ". Skipping geometry..."
                )
              );
      }),
        Di(g, e.scene, {
          idAccessor: function (x) {
            return x.id;
          },
          createObj: function () {
            var x = new es.Group();
            return (
              (x.__defaultSideMaterial = new es.MeshBasicMaterial({
                side: es.DoubleSide,
                depthWrite: !0,
              })),
              (x.__defaultCapMaterial = new es.MeshBasicMaterial({
                side: es.DoubleSide,
                depthWrite: !0,
              })),
              x.add(
                new es.Mesh(void 0, [
                  x.__defaultSideMaterial,
                  x.__defaultCapMaterial,
                ])
              ),
              x.add(new es.LineSegments(void 0, new es.LineBasicMaterial())),
              (x.__globeObjType = "polygon"),
              x
            );
          },
          updateObj: function (x, M) {
            var w = M.coords,
              C = M.capColor,
              E = M.capMaterial,
              b = M.sideColor,
              L = M.sideMaterial,
              S = M.strokeColor,
              R = M.altitude,
              U = M.capCurvatureResolution,
              q = On(x.children, 2),
              I = q[0],
              N = q[1],
              D = !!S;
            if (
              ((N.visible = D),
              eT(I.geometry.parameters || {}, {
                polygonGeoJson: w,
                curvatureResolution: U,
              }) ||
                (I.geometry && I.geometry.dispose(),
                (I.geometry = new ef(w, 0, Pn, !1, !0, !0, U))),
              D &&
                (!N.geometry.parameters ||
                  N.geometry.parameters.geoJson.coordinates !== w ||
                  N.geometry.parameters.resolution !== U) &&
                (N.geometry && N.geometry.dispose(),
                (N.geometry = new I2(
                  { type: "Polygon", coordinates: w },
                  Pn,
                  U
                ))),
              (I.material[0] = L || x.__defaultSideMaterial),
              (I.material[1] = E || x.__defaultCapMaterial),
              [!L && b, !E && C].forEach(function (F, J) {
                if (F) {
                  var K = I.material[J],
                    ie = vr(F);
                  K.color.set(Hr(F)),
                    (K.transparent = ie < 1),
                    (K.opacity = ie);
                }
              }),
              D)
            ) {
              var O = N.material,
                k = vr(S);
              O.color.set(Hr(S)), (O.transparent = k < 1), (O.opacity = k);
            }
            var $ = { alt: R },
              H = function (J) {
                var K = (x.__currentTargetD = J),
                  ie = K.alt;
                (I.scale.x = I.scale.y = I.scale.z = 1 + ie),
                  D && (N.scale.x = N.scale.y = N.scale.z = 1 + ie + 1e-4);
              },
              Q = x.__currentTargetD || Object.assign({}, $, { alt: -0.001 });
            Object.keys($).some(function (F) {
              return Q[F] !== $[F];
            }) &&
              (!e.polygonsTransitionDuration ||
              e.polygonsTransitionDuration < 0 ||
              Q.alt === $.alt
                ? H($)
                : new Pi(Q)
                    .to($, e.polygonsTransitionDuration)
                    .easing(Hn.Quadratic.InOut)
                    .onUpdate(H)
                    .start());
          },
        });
    },
  });
function eT(n, e) {
  var t =
    arguments.length > 2 && arguments[2] !== void 0
      ? arguments[2]
      : function () {
          return function (i, r) {
            return i === r;
          };
        };
  return Object.entries(e).every(function (i) {
    var r = On(i, 2),
      s = r[0],
      u = r[1];
    return n.hasOwnProperty(s) && t(s)(n[s], u);
  });
}
var YA = window.THREE
    ? window.THREE
    : { BufferGeometry: fn, DoubleSide: mi, Mesh: wn, MeshLambertMaterial: Ys },
  f1 = Object.assign({}, Wc),
  h1 = f1.BufferGeometryUtils || f1,
  Om = hi({
    props: {
      hexPolygonsData: { default: [] },
      hexPolygonGeoJsonGeometry: { default: "geometry" },
      hexPolygonColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      hexPolygonAltitude: { default: 0.001 },
      hexPolygonResolution: { default: 3 },
      hexPolygonMargin: { default: 0.2 },
      hexPolygonCurvatureResolution: { default: 5 },
      hexPolygonsTransitionDuration: { default: 0, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.hexPolygonGeoJsonGeometry),
        i = qe(e.hexPolygonColor),
        r = qe(e.hexPolygonAltitude),
        s = qe(e.hexPolygonResolution),
        u = qe(e.hexPolygonMargin),
        c = qe(e.hexPolygonCurvatureResolution);
      Di(e.hexPolygonsData, e.scene, {
        createObj: function (p) {
          var g = new YA.Mesh(
            void 0,
            new YA.MeshLambertMaterial({ side: YA.DoubleSide })
          );
          return (g.__globeObjType = "hexPolygon"), g;
        },
        updateObj: function (p, g) {
          var v = t(g),
            x = s(g),
            M = r(g),
            w = Math.max(0, Math.min(1, +u(g))),
            C = c(g),
            E = i(g),
            b = vr(E);
          p.material.color.set(Hr(E)),
            (p.material.transparent = b < 1),
            (p.material.opacity = b);
          var L = { alt: M, margin: w, curvatureResolution: C },
            S = { geoJson: v, h3Res: x },
            R = p.__currentTargetD || Object.assign({}, L, { alt: -0.001 }),
            U = p.__currentMemD || S;
          if (
            Object.keys(L).some(function (D) {
              return R[D] !== L[D];
            }) ||
            Object.keys(S).some(function (D) {
              return U[D] !== S[D];
            })
          ) {
            p.__currentMemD = S;
            var q = [];
            v.type === "Polygon"
              ? Yp(v.coordinates, x, !0).forEach(function (D) {
                  return q.push(D);
                })
              : v.type === "MultiPolygon"
              ? v.coordinates.forEach(function (D) {
                  return Yp(D, x, !0).forEach(function (O) {
                    return q.push(O);
                  });
                })
              : console.warn(
                  "Unsupported GeoJson geometry type: ".concat(
                    v.type,
                    ". Skipping geometry..."
                  )
                );
            var I = q.map(function (D) {
                var O = um(D),
                  k = cm(D, !0).reverse(),
                  $ = O[1];
                return (
                  k.forEach(function (H) {
                    var Q = H[0];
                    Math.abs($ - Q) > 170 && (H[0] += $ > Q ? 360 : -360);
                  }),
                  { h3Idx: D, hexCenter: O, hexGeoJson: k }
                );
              }),
              N = function (O) {
                var k = (p.__currentTargetD = O),
                  $ = k.alt,
                  H = k.margin,
                  Q = k.curvatureResolution;
                p.geometry && p.geometry.dispose(),
                  (p.geometry = I.length
                    ? (h1.mergeGeometries || h1.mergeBufferGeometries)(
                        I.map(function (F) {
                          var J = function (de, Se, Pe) {
                              return de - (de - Se) * Pe;
                            },
                            K = On(F.hexCenter, 2),
                            ie = K[0],
                            he = K[1],
                            ce =
                              H === 0
                                ? F.hexGeoJson
                                : F.hexGeoJson.map(function (oe) {
                                    var de = On(oe, 2),
                                      Se = de[0],
                                      Pe = de[1];
                                    return [
                                      [Se, he],
                                      [Pe, ie],
                                    ].map(function (Oe) {
                                      var $e = On(Oe, 2),
                                        nt = $e[0],
                                        ot = $e[1];
                                      return J(nt, ot, H);
                                    });
                                  });
                          return new ef([ce], Pn, Pn * (1 + $), !1, !0, !1, Q);
                        })
                      )
                    : new YA.BufferGeometry());
              };
            !e.hexPolygonsTransitionDuration ||
            e.hexPolygonsTransitionDuration < 0
              ? N(L)
              : new Pi(R)
                  .to(L, e.hexPolygonsTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate(N)
                  .start();
          }
        },
      });
    },
  }),
  tT = window.THREE ? window.THREE : { Vector3: te };
function nT(n, e) {
  var t = function (u, c) {
      var h = u[u.length - 1];
      return [].concat(
        An(u),
        An(
          An(new Array(c - u.length)).map(function () {
            return h;
          })
        )
      );
    },
    i = Math.max(n.length, e.length),
    r = kE.apply(
      void 0,
      An(
        [n, e]
          .map(function (s) {
            return s.map(function (u) {
              var c = u.x,
                h = u.y,
                p = u.z;
              return [c, h, p];
            });
          })
          .map(function (s) {
            return t(s, i);
          })
      )
    );
  return function (s) {
    return s === 0
      ? n
      : s === 1
      ? e
      : r(s).map(function (u) {
          var c = On(u, 3),
            h = c[0],
            p = c[1],
            g = c[2];
          return new tT.Vector3(h, p, g);
        });
  };
}
var Cs = window.THREE
    ? window.THREE
    : {
        BufferGeometry: fn,
        Color: Dt,
        Group: Gi,
        Line: e0,
        NormalBlending: As,
        ShaderMaterial: or,
        Vector3: te,
      },
  iT = Wo.default || Wo,
  rT = {
    uniforms: {
      dashOffset: { value: 0 },
      dashSize: { value: 1 },
      gapSize: { value: 0 },
      dashTranslate: { value: 0 },
    },
    vertexShader: `
    uniform float dashTranslate;

    attribute vec4 vertexColor;
    varying vec4 vColor;

    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
    fragmentShader: `
    uniform float dashOffset;
    uniform float dashSize;
    uniform float gapSize;

    varying vec4 vColor;
    varying float vRelDistance;

    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;

      // set px color: [r, g, b, a], interpolated between vertices
      gl_FragColor = vColor;
    }
  `,
  },
  qm = hi({
    props: {
      pathsData: { default: [] },
      pathPoints: {
        default: function (e) {
          return e;
        },
      },
      pathPointLat: {
        default: function (e) {
          return e[0];
        },
      },
      pathPointLng: {
        default: function (e) {
          return e[1];
        },
      },
      pathPointAlt: { default: 0.001 },
      pathResolution: { default: 2 },
      pathColor: {
        default: function () {
          return "#ffffaa";
        },
      },
      pathStroke: {},
      pathDashLength: { default: 1 },
      pathDashGap: { default: 0 },
      pathDashInitialGap: { default: 0 },
      pathDashAnimateTime: { default: 0 },
      pathTransitionDuration: { default: 1e3, triggerUpdate: !1 },
      rendererSize: {},
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      mn(e),
        (t.scene = e),
        (t.ticker = new iT()),
        t.ticker.onTick.add(function (i, r) {
          t.pathsData
            .filter(function (s) {
              return (
                s.__threeObj &&
                s.__threeObj.children.length &&
                s.__threeObj.children[0].material &&
                s.__threeObj.children[0].__dashAnimateStep
              );
            })
            .forEach(function (s) {
              var u = s.__threeObj.children[0],
                c = u.__dashAnimateStep * r;
              if (u.type === "Line") {
                var h = u.material.uniforms.dashTranslate.value % 1e9;
                u.material.uniforms.dashTranslate.value = h + c;
              } else if (u.type === "Line2") {
                for (
                  var p = u.material.dashOffset - c,
                    g = u.material.dashSize + u.material.gapSize;
                  p <= -g;

                )
                  p += g;
                u.material.dashOffset = p;
              }
            });
        });
    },
    update: function (e) {
      var t = qe(e.pathPoints),
        i = qe(e.pathPointLat),
        r = qe(e.pathPointLng),
        s = qe(e.pathPointAlt),
        u = qe(e.pathStroke),
        c = qe(e.pathColor),
        h = qe(e.pathDashLength),
        p = qe(e.pathDashGap),
        g = qe(e.pathDashInitialGap),
        v = qe(e.pathDashAnimateTime),
        x = new Cs.ShaderMaterial(
          Kt(Kt({}, rT), {}, { transparent: !0, blending: Cs.NormalBlending })
        );
      Di(e.pathsData, e.scene, {
        createObj: function () {
          var L = new Cs.Group();
          return (L.__globeObjType = "path"), L;
        },
        updateObj: function (L, S) {
          var R = u(S),
            U = R != null;
          if (!L.children.length || U === (L.children[0].type === "Line")) {
            mn(L);
            var q = U
              ? new mm(new rf(), new a0())
              : new Cs.Line(new Cs.BufferGeometry(), x.clone());
            L.add(q);
          }
          var I = L.children[0],
            N = w(t(S), i, r, s, e.pathResolution),
            D = v(S);
          if (((I.__dashAnimateStep = D > 0 ? 1e3 / D : 0), U)) {
            I.material.resolution = e.rendererSize;
            {
              var $ = h(S),
                H = p(S),
                Q = g(S);
              (I.material.dashed = H > 0),
                I.material.dashed
                  ? (I.material.defines.USE_DASH = "")
                  : delete I.material.defines.USE_DASH,
                I.material.dashed &&
                  ((I.material.dashScale = 1 / M(N)),
                  (I.material.dashSize = $),
                  (I.material.gapSize = H),
                  (I.material.dashOffset = -Q));
            }
            {
              var F = c(S);
              if (F instanceof Array) {
                var J = C(c(S), N.length - 1, 1, !1);
                I.geometry.setColors(J.array), (I.material.vertexColors = !0);
              } else {
                var K = F,
                  ie = vr(K);
                (I.material.color = new Cs.Color(Hr(K))),
                  (I.material.transparent = ie < 1),
                  (I.material.opacity = ie),
                  (I.material.vertexColors = !1);
              }
            }
            I.material.needsUpdate = !0;
          } else {
            Object.assign(I.material.uniforms, {
              dashSize: { value: h(S) },
              gapSize: { value: p(S) },
              dashOffset: { value: g(S) },
            });
            var O = C(c(S), N.length),
              k = E(N.length, 1, !0);
            I.geometry.setAttribute("vertexColor", O),
              I.geometry.setAttribute("vertexRelDistance", k);
          }
          var he = nT(
              (S.__currentTargetD && S.__currentTargetD.points) || [N[0]],
              N
            ),
            ce = function (Pe) {
              var Oe = (S.__currentTargetD = Pe),
                $e = Oe.stroke,
                nt = Oe.interpolK,
                ot = (S.__currentTargetD.points = he(nt));
              if (U) {
                var Rt;
                I.geometry.setPositions(
                  (Rt = []).concat.apply(
                    Rt,
                    An(
                      ot.map(function (Ot) {
                        var ct = Ot.x,
                          ne = Ot.y,
                          Ge = Ot.z;
                        return [ct, ne, Ge];
                      })
                    )
                  )
                ),
                  (I.material.linewidth = $e),
                  I.material.dashed && I.computeLineDistances();
              } else
                I.geometry.setFromPoints(ot),
                  I.geometry.computeBoundingSphere();
            },
            oe = { stroke: R, interpolK: 1 },
            de = Object.assign({}, S.__currentTargetD || oe, { interpolK: 0 });
          Object.keys(oe).some(function (Se) {
            return de[Se] !== oe[Se];
          }) &&
            (!e.pathTransitionDuration || e.pathTransitionDuration < 0
              ? ce(oe)
              : new Pi(de)
                  .to(oe, e.pathTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate(ce)
                  .start());
        },
      });
      function M(b) {
        var L = 0,
          S;
        return (
          b.forEach(function (R) {
            S && (L += S.distanceTo(R)), (S = R);
          }),
          L
        );
      }
      function w(b, L, S, R, U) {
        var q = function (O, k, $) {
            for (var H = [], Q = 1; Q <= $; Q++)
              H.push(O + ((k - O) * Q) / ($ + 1));
            return H;
          },
          I = function () {
            var O =
                arguments.length > 0 && arguments[0] !== void 0
                  ? arguments[0]
                  : [],
              k =
                arguments.length > 1 && arguments[1] !== void 0
                  ? arguments[1]
                  : 1,
              $ = [],
              H = null;
            return (
              O.forEach(function (Q) {
                if (H) {
                  for (; Math.abs(H[1] - Q[1]) > 180; )
                    H[1] += 360 * (H[1] < Q[1] ? 1 : -1);
                  var F = Math.sqrt(
                    Math.pow(Q[0] - H[0], 2) + Math.pow(Q[1] - H[1], 2)
                  );
                  if (F > k)
                    for (
                      var J = Math.floor(F / k),
                        K = q(H[0], Q[0], J),
                        ie = q(H[1], Q[1], J),
                        he = q(H[2], Q[2], J),
                        ce = 0,
                        oe = K.length;
                      ce < oe;
                      ce++
                    )
                      $.push([K[ce], ie[ce], he[ce]]);
                }
                $.push((H = Q));
              }),
              $
            );
          },
          N = function (O) {
            var k = On(O, 3),
              $ = k[0],
              H = k[1],
              Q = k[2],
              F = Wi($, H, Q),
              J = F.x,
              K = F.y,
              ie = F.z;
            return new Cs.Vector3(J, K, ie);
          };
        return I(
          b.map(function (D) {
            return [L(D), S(D), R(D)];
          }),
          U
        ).map(N);
      }
      function C(b, L) {
        var S =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1,
          R =
            arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0,
          U = L + 1,
          q;
        if (b instanceof Array || b instanceof Function) {
          var I =
            b instanceof Array
              ? Ws()
                  .domain(
                    b.map(function (Q, F) {
                      return F / (b.length - 1);
                    })
                  )
                  .range(b)
              : b;
          q = function (F) {
            return ds(I(F), R, !0);
          };
        } else {
          var N = ds(b, R, !0);
          q = function () {
            return N;
          };
        }
        for (var D = [], O = 0, k = U; O < k; O++)
          for (var $ = q(O / (k - 1)), H = 0; H < S; H++) D.push($);
        return ps(D, R ? 4 : 3);
      }
      function E(b) {
        for (
          var L =
              arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : 1,
            S =
              arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : !1,
            R = b + 1,
            U = [],
            q = 0,
            I = R;
          q < I;
          q++
        )
          for (var N = q / (I - 1), D = 0; D < L; D++) U.push(N);
        return S && U.reverse(), ps(U, 1);
      }
    },
  }),
  ZA = window.THREE
    ? window.THREE
    : { Euler: fs, Mesh: wn, MeshLambertMaterial: Ys, SphereGeometry: $s },
  Um = hi({
    props: {
      tilesData: { default: [] },
      tileLat: { default: "lat" },
      tileLng: { default: "lng" },
      tileAltitude: { default: 0.01 },
      tileWidth: { default: 1 },
      tileHeight: { default: 1 },
      tileUseGlobeProjection: { default: !0 },
      tileMaterial: {
        default: function () {
          return new ZA.MeshLambertMaterial({
            color: "#ffbb88",
            opacity: 0.4,
            transparent: !0,
          });
        },
      },
      tileCurvatureResolution: { default: 5 },
      tilesTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.tileLat),
        i = qe(e.tileLng),
        r = qe(e.tileAltitude),
        s = qe(e.tileWidth),
        u = qe(e.tileHeight),
        c = qe(e.tileUseGlobeProjection),
        h = qe(e.tileMaterial),
        p = qe(e.tileCurvatureResolution);
      Di(e.tilesData, e.scene, {
        createObj: function () {
          var v = new ZA.Mesh();
          return (v.__globeObjType = "tile"), v;
        },
        updateObj: function (v, x) {
          v.material = h(x);
          var M = c(x),
            w = p(x),
            C = function (S) {
              var R = (v.__currentTargetD = S),
                U = R.lat,
                q = R.lng,
                I = R.alt,
                N = R.width,
                D = R.height,
                O = Mo(q),
                k = Mo(-U);
              v.geometry && v.geometry.dispose(),
                (v.geometry = new ZA.SphereGeometry(
                  Pn * (1 + I),
                  Math.ceil(N / (w || -1)),
                  Math.ceil(D / (w || -1)),
                  Mo(90 - N / 2) + (M ? O : 0),
                  Mo(N),
                  Mo(90 - D / 2) + (M ? k : 0),
                  Mo(D)
                )),
                M || v.setRotationFromEuler(new ZA.Euler(k, O, 0, "YXZ"));
            },
            E = {
              lat: +t(x),
              lng: +i(x),
              alt: +r(x),
              width: +s(x),
              height: +u(x),
            },
            b =
              v.__currentTargetD ||
              Object.assign({}, E, { width: 0, height: 0 });
          Object.keys(E).some(function (L) {
            return b[L] !== E[L];
          }) &&
            (!e.tilesTransitionDuration || e.tilesTransitionDuration < 0
              ? C(E)
              : new Pi(b)
                  .to(E, e.tilesTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate(C)
                  .start());
        },
      });
    },
  }),
  Mo = function (e) {
    return (e * Math.PI) / 180;
  },
  sT = {
    0: {
      x_min: 73,
      x_max: 715,
      ha: 792,
      o: "m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 ",
    },
    1: {
      x_min: 215.671875,
      x_max: 574,
      ha: 792,
      o: "m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 ",
    },
    2: {
      x_min: 59,
      x_max: 731,
      ha: 792,
      o: "m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 ",
    },
    3: {
      x_min: 54,
      x_max: 737,
      ha: 792,
      o: "m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 ",
    },
    4: {
      x_min: 48,
      x_max: 742.453125,
      ha: 792,
      o: "m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 ",
    },
    5: {
      x_min: 54.171875,
      x_max: 738,
      ha: 792,
      o: "m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 ",
    },
    6: {
      x_min: 53,
      x_max: 739,
      ha: 792,
      o: "m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 ",
    },
    7: {
      x_min: 58.71875,
      x_max: 730.953125,
      ha: 792,
      o: "m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 ",
    },
    8: {
      x_min: 55,
      x_max: 736,
      ha: 792,
      o: "m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 ",
    },
    9: {
      x_min: 53,
      x_max: 739,
      ha: 792,
      o: "m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 ",
    },
    ο: {
      x_min: 0,
      x_max: 712,
      ha: 815,
      o: "m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 ",
    },
    S: {
      x_min: 0,
      x_max: 788,
      ha: 890,
      o: "m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 ",
    },
    "¦": {
      x_min: 343,
      x_max: 449,
      ha: 792,
      o: "m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 ",
    },
    "/": {
      x_min: 183.25,
      x_max: 608.328125,
      ha: 792,
      o: "m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 ",
    },
    Τ: {
      x_min: -0.4375,
      x_max: 777.453125,
      ha: 839,
      o: "m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 ",
    },
    y: {
      x_min: 0,
      x_max: 684.78125,
      ha: 771,
      o: "m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 ",
    },
    Π: {
      x_min: 0,
      x_max: 803,
      ha: 917,
      o: "m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 ",
    },
    ΐ: {
      x_min: -111,
      x_max: 339,
      ha: 361,
      o: "m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 ",
    },
    g: {
      x_min: 0,
      x_max: 686,
      ha: 838,
      o: "m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 ",
    },
    "²": {
      x_min: 0,
      x_max: 442,
      ha: 539,
      o: "m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 ",
    },
    "–": {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 ",
    },
    Κ: {
      x_min: 0,
      x_max: 819.5625,
      ha: 893,
      o: "m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 ",
    },
    ƒ: {
      x_min: -46.265625,
      x_max: 392,
      ha: 513,
      o: "m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 ",
    },
    e: {
      x_min: 0,
      x_max: 714,
      ha: 813,
      o: "m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 ",
    },
    ό: {
      x_min: 0,
      x_max: 712,
      ha: 815,
      o: "m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 ",
    },
    J: {
      x_min: 0,
      x_max: 588,
      ha: 699,
      o: "m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 ",
    },
    "»": {
      x_min: -1,
      x_max: 503,
      ha: 601,
      o: "m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 ",
    },
    "©": {
      x_min: -3,
      x_max: 1008,
      ha: 1106,
      o: "m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 ",
    },
    ώ: {
      x_min: 0,
      x_max: 922,
      ha: 1030,
      o: "m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 ",
    },
    "^": {
      x_min: 193.0625,
      x_max: 598.609375,
      ha: 792,
      o: "m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 ",
    },
    "«": {
      x_min: 0,
      x_max: 507.203125,
      ha: 604,
      o: "m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 ",
    },
    D: {
      x_min: 0,
      x_max: 828,
      ha: 935,
      o: "m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 ",
    },
    "∙": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 ",
    },
    ÿ: {
      x_min: 0,
      x_max: 47,
      ha: 125,
      o: "m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 ",
    },
    w: {
      x_min: 0,
      x_max: 1009.71875,
      ha: 1100,
      o: "m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 ",
    },
    $: {
      x_min: 0,
      x_max: 700,
      ha: 793,
      o: "m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 ",
    },
    "\\": {
      x_min: -0.015625,
      x_max: 425.0625,
      ha: 522,
      o: "m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 ",
    },
    µ: {
      x_min: 0,
      x_max: 697.21875,
      ha: 747,
      o: "m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 ",
    },
    Ι: {
      x_min: 42,
      x_max: 181,
      ha: 297,
      o: "m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 ",
    },
    Ύ: {
      x_min: 0,
      x_max: 1144.5,
      ha: 1214,
      o: "m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    "’": {
      x_min: 0,
      x_max: 139,
      ha: 236,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 ",
    },
    Ν: {
      x_min: 0,
      x_max: 801,
      ha: 915,
      o: "m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 ",
    },
    "-": {
      x_min: 8.71875,
      x_max: 350.390625,
      ha: 478,
      o: "m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 ",
    },
    Q: {
      x_min: 0,
      x_max: 968,
      ha: 1072,
      o: "m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 ",
    },
    ς: {
      x_min: 1,
      x_max: 676.28125,
      ha: 740,
      o: "m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 ",
    },
    M: {
      x_min: 0,
      x_max: 954,
      ha: 1067,
      o: "m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 ",
    },
    Ψ: {
      x_min: 0,
      x_max: 1006,
      ha: 1094,
      o: "m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 ",
    },
    C: {
      x_min: 0,
      x_max: 886,
      ha: 944,
      o: "m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 ",
    },
    "!": {
      x_min: 0,
      x_max: 138,
      ha: 236,
      o: "m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 ",
    },
    "{": {
      x_min: 0,
      x_max: 480.5625,
      ha: 578,
      o: "m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 ",
    },
    X: {
      x_min: -0.015625,
      x_max: 854.15625,
      ha: 940,
      o: "m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 ",
    },
    "#": {
      x_min: 0,
      x_max: 963.890625,
      ha: 1061,
      o: "m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 ",
    },
    ι: {
      x_min: 42,
      x_max: 284,
      ha: 361,
      o: "m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 ",
    },
    Ά: {
      x_min: 0,
      x_max: 906.953125,
      ha: 982,
      o: "m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 ",
    },
    ")": {
      x_min: 0,
      x_max: 318,
      ha: 415,
      o: "m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 ",
    },
    ε: {
      x_min: 0,
      x_max: 634.71875,
      ha: 714,
      o: "m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 ",
    },
    Δ: {
      x_min: 0,
      x_max: 952.78125,
      ha: 1028,
      o: "m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 ",
    },
    "}": {
      x_min: 0,
      x_max: 481,
      ha: 578,
      o: "m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 ",
    },
    "‰": {
      x_min: -3,
      x_max: 1672,
      ha: 1821,
      o: "m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 ",
    },
    a: {
      x_min: 0,
      x_max: 698.609375,
      ha: 794,
      o: "m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 ",
    },
    "—": {
      x_min: 0,
      x_max: 941.671875,
      ha: 1039,
      o: "m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 ",
    },
    "=": {
      x_min: 8.71875,
      x_max: 780.953125,
      ha: 792,
      o: "m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 ",
    },
    N: {
      x_min: 0,
      x_max: 801,
      ha: 914,
      o: "m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 ",
    },
    ρ: {
      x_min: 0,
      x_max: 712,
      ha: 797,
      o: "m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 ",
    },
    "¯": {
      x_min: 0,
      x_max: 941.671875,
      ha: 938,
      o: "m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 ",
    },
    Z: {
      x_min: 0,
      x_max: 779,
      ha: 849,
      o: "m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 ",
    },
    u: {
      x_min: 0,
      x_max: 617,
      ha: 729,
      o: "m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 ",
    },
    k: {
      x_min: 0,
      x_max: 612.484375,
      ha: 697,
      o: "m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 ",
    },
    Η: {
      x_min: 0,
      x_max: 803,
      ha: 917,
      o: "m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 ",
    },
    Α: {
      x_min: 0,
      x_max: 906.953125,
      ha: 985,
      o: "m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 ",
    },
    s: {
      x_min: 0,
      x_max: 604,
      ha: 697,
      o: "m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 ",
    },
    B: {
      x_min: 0,
      x_max: 778,
      ha: 876,
      o: "m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 ",
    },
    "…": {
      x_min: 0,
      x_max: 614,
      ha: 708,
      o: "m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 ",
    },
    "?": {
      x_min: 0,
      x_max: 607,
      ha: 704,
      o: "m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 ",
    },
    H: {
      x_min: 0,
      x_max: 803,
      ha: 915,
      o: "m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 ",
    },
    ν: {
      x_min: 0,
      x_max: 675,
      ha: 761,
      o: "m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 ",
    },
    c: {
      x_min: 1,
      x_max: 701.390625,
      ha: 775,
      o: "m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 ",
    },
    "¶": {
      x_min: 0,
      x_max: 566.671875,
      ha: 678,
      o: "m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 ",
    },
    β: {
      x_min: 0,
      x_max: 660,
      ha: 745,
      o: "m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 ",
    },
    Μ: {
      x_min: 0,
      x_max: 954,
      ha: 1068,
      o: "m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 ",
    },
    Ό: {
      x_min: 0.109375,
      x_max: 1120,
      ha: 1217,
      o: "m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    Ή: {
      x_min: 0,
      x_max: 1158,
      ha: 1275,
      o: "m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    "•": {
      x_min: 0,
      x_max: 663.890625,
      ha: 775,
      o: "m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 ",
    },
    "¥": {
      x_min: 0.1875,
      x_max: 819.546875,
      ha: 886,
      o: "m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 ",
    },
    "(": {
      x_min: 0,
      x_max: 318.0625,
      ha: 415,
      o: "m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 ",
    },
    U: {
      x_min: 0,
      x_max: 796,
      ha: 904,
      o: "m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 ",
    },
    γ: {
      x_min: 0.5,
      x_max: 744.953125,
      ha: 822,
      o: "m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 ",
    },
    α: {
      x_min: 0,
      x_max: 765.5625,
      ha: 809,
      o: "m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 ",
    },
    F: {
      x_min: 0,
      x_max: 683.328125,
      ha: 717,
      o: "m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 ",
    },
    "­": {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 ",
    },
    ":": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 ",
    },
    Χ: {
      x_min: 0,
      x_max: 854.171875,
      ha: 935,
      o: "m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 ",
    },
    "*": {
      x_min: 116,
      x_max: 674,
      ha: 792,
      o: "m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 ",
    },
    "†": {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 ",
    },
    "°": {
      x_min: 0,
      x_max: 347,
      ha: 444,
      o: "m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 ",
    },
    V: {
      x_min: 0,
      x_max: 862.71875,
      ha: 940,
      o: "m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 ",
    },
    Ξ: {
      x_min: 0,
      x_max: 734.71875,
      ha: 763,
      o: "m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 ",
    },
    " ": { x_min: 0, x_max: 0, ha: 853 },
    Ϋ: {
      x_min: 0.328125,
      x_max: 819.515625,
      ha: 889,
      o: "m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 ",
    },
    "”": {
      x_min: 0,
      x_max: 347,
      ha: 454,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 ",
    },
    "@": {
      x_min: 0,
      x_max: 1260,
      ha: 1357,
      o: "m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 ",
    },
    Ί: {
      x_min: 0,
      x_max: 499,
      ha: 613,
      o: "m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 ",
    },
    i: {
      x_min: 14,
      x_max: 136,
      ha: 275,
      o: "m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 ",
    },
    Β: {
      x_min: 0,
      x_max: 778,
      ha: 877,
      o: "m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 ",
    },
    υ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 ",
    },
    "]": {
      x_min: 0,
      x_max: 275,
      ha: 372,
      o: "m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 ",
    },
    m: {
      x_min: 0,
      x_max: 1019,
      ha: 1128,
      o: "m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 ",
    },
    χ: {
      x_min: 8.328125,
      x_max: 780.5625,
      ha: 815,
      o: "m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 ",
    },
    ί: {
      x_min: 42,
      x_max: 326.71875,
      ha: 361,
      o: "m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 ",
    },
    Ζ: {
      x_min: 0,
      x_max: 779.171875,
      ha: 850,
      o: "m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 ",
    },
    R: {
      x_min: 0,
      x_max: 781.953125,
      ha: 907,
      o: "m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 ",
    },
    o: {
      x_min: 0,
      x_max: 713,
      ha: 821,
      o: "m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 ",
    },
    K: {
      x_min: 0,
      x_max: 819.46875,
      ha: 906,
      o: "m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 ",
    },
    ",": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 ",
    },
    d: {
      x_min: 0,
      x_max: 683,
      ha: 796,
      o: "m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 ",
    },
    "¨": {
      x_min: -109,
      x_max: 247,
      ha: 232,
      o: "m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 ",
    },
    E: {
      x_min: 0,
      x_max: 736.109375,
      ha: 789,
      o: "m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 ",
    },
    Y: {
      x_min: 0,
      x_max: 820,
      ha: 886,
      o: "m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 ",
    },
    '"': {
      x_min: 0,
      x_max: 299,
      ha: 396,
      o: "m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 ",
    },
    "‹": {
      x_min: 17.984375,
      x_max: 773.609375,
      ha: 792,
      o: "m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 ",
    },
    "„": {
      x_min: 0,
      x_max: 364,
      ha: 467,
      o: "m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 ",
    },
    δ: {
      x_min: 1,
      x_max: 710,
      ha: 810,
      o: "m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 ",
    },
    έ: {
      x_min: 0,
      x_max: 634.71875,
      ha: 714,
      o: "m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 ",
    },
    ω: {
      x_min: 0,
      x_max: 922,
      ha: 1031,
      o: "m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 ",
    },
    "´": {
      x_min: 0,
      x_max: 96,
      ha: 251,
      o: "m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 ",
    },
    "±": {
      x_min: 11,
      x_max: 781,
      ha: 792,
      o: "m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 ",
    },
    "|": {
      x_min: 343,
      x_max: 449,
      ha: 792,
      o: "m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 ",
    },
    ϋ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 ",
    },
    "§": {
      x_min: 0,
      x_max: 593,
      ha: 690,
      o: "m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 ",
    },
    b: {
      x_min: 0,
      x_max: 685,
      ha: 783,
      o: "m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 ",
    },
    q: {
      x_min: 0,
      x_max: 683,
      ha: 876,
      o: "m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 ",
    },
    Ω: {
      x_min: -0.171875,
      x_max: 969.5625,
      ha: 1068,
      o: "m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 ",
    },
    ύ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 ",
    },
    z: {
      x_min: -0.015625,
      x_max: 613.890625,
      ha: 697,
      o: "m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 ",
    },
    "™": {
      x_min: 0,
      x_max: 894,
      ha: 1e3,
      o: "m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 ",
    },
    ή: {
      x_min: 0.78125,
      x_max: 697,
      ha: 810,
      o: "m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 ",
    },
    Θ: {
      x_min: 0,
      x_max: 960,
      ha: 1056,
      o: "m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 ",
    },
    "®": {
      x_min: -3,
      x_max: 1008,
      ha: 1106,
      o: "m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 ",
    },
    "~": {
      x_min: 0,
      x_max: 833,
      ha: 931,
      o: "m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 ",
    },
    Ε: {
      x_min: 0,
      x_max: 736.21875,
      ha: 778,
      o: "m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 ",
    },
    "³": {
      x_min: 0,
      x_max: 450,
      ha: 547,
      o: "m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 ",
    },
    "[": {
      x_min: 0,
      x_max: 273.609375,
      ha: 371,
      o: "m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 ",
    },
    L: {
      x_min: 0,
      x_max: 645.828125,
      ha: 696,
      o: "m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 ",
    },
    σ: {
      x_min: 0,
      x_max: 803.390625,
      ha: 894,
      o: "m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 ",
    },
    ζ: {
      x_min: 0,
      x_max: 573,
      ha: 642,
      o: "m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 ",
    },
    θ: {
      x_min: 0,
      x_max: 674,
      ha: 778,
      o: "m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 ",
    },
    Ο: {
      x_min: 0,
      x_max: 958,
      ha: 1054,
      o: "m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 ",
    },
    Γ: {
      x_min: 0,
      x_max: 705.28125,
      ha: 749,
      o: "m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 ",
    },
    " ": { x_min: 0, x_max: 0, ha: 375 },
    "%": {
      x_min: -3,
      x_max: 1089,
      ha: 1186,
      o: "m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 ",
    },
    P: {
      x_min: 0,
      x_max: 726,
      ha: 806,
      o: "m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 ",
    },
    Έ: {
      x_min: 0,
      x_max: 1078.21875,
      ha: 1118,
      o: "m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 ",
    },
    Ώ: {
      x_min: 0.125,
      x_max: 1136.546875,
      ha: 1235,
      o: "m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 ",
    },
    _: {
      x_min: 0,
      x_max: 705.5625,
      ha: 803,
      o: "m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 ",
    },
    Ϊ: {
      x_min: -110,
      x_max: 246,
      ha: 275,
      o: "m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 ",
    },
    "+": {
      x_min: 23,
      x_max: 768,
      ha: 792,
      o: "m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 ",
    },
    "½": {
      x_min: 0,
      x_max: 1050,
      ha: 1149,
      o: "m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 ",
    },
    Ρ: {
      x_min: 0,
      x_max: 720,
      ha: 783,
      o: "m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 ",
    },
    "'": {
      x_min: 0,
      x_max: 139,
      ha: 236,
      o: "m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 ",
    },
    ª: {
      x_min: 0,
      x_max: 350,
      ha: 397,
      o: "m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 ",
    },
    "΅": {
      x_min: 0,
      x_max: 450,
      ha: 553,
      o: "m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 ",
    },
    T: {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 ",
    },
    Φ: {
      x_min: 0,
      x_max: 915,
      ha: 997,
      o: "m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 ",
    },
    "⁋": { x_min: 0, x_max: 0, ha: 694 },
    j: {
      x_min: -77.78125,
      x_max: 167,
      ha: 349,
      o: "m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 ",
    },
    Σ: {
      x_min: 0,
      x_max: 756.953125,
      ha: 819,
      o: "m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 ",
    },
    "›": {
      x_min: 18.0625,
      x_max: 774,
      ha: 792,
      o: "m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 ",
    },
    "<": {
      x_min: 17.984375,
      x_max: 773.609375,
      ha: 792,
      o: "m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 ",
    },
    "£": {
      x_min: 0,
      x_max: 704.484375,
      ha: 801,
      o: "m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 ",
    },
    t: {
      x_min: 0,
      x_max: 367,
      ha: 458,
      o: "m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 ",
    },
    "¬": {
      x_min: 0,
      x_max: 706,
      ha: 803,
      o: "m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 ",
    },
    λ: {
      x_min: 0,
      x_max: 750,
      ha: 803,
      o: "m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 ",
    },
    W: {
      x_min: 0,
      x_max: 1263.890625,
      ha: 1351,
      o: "m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 ",
    },
    ">": {
      x_min: 18.0625,
      x_max: 774,
      ha: 792,
      o: "m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 ",
    },
    v: {
      x_min: 0,
      x_max: 675.15625,
      ha: 761,
      o: "m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 ",
    },
    τ: {
      x_min: 0.28125,
      x_max: 644.5,
      ha: 703,
      o: "m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 ",
    },
    ξ: {
      x_min: 0,
      x_max: 624.9375,
      ha: 699,
      o: "m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 ",
    },
    "&": {
      x_min: -3,
      x_max: 894.25,
      ha: 992,
      o: "m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 ",
    },
    Λ: {
      x_min: 0,
      x_max: 862.5,
      ha: 942,
      o: "m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 ",
    },
    I: {
      x_min: 41,
      x_max: 180,
      ha: 293,
      o: "m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 ",
    },
    G: {
      x_min: 0,
      x_max: 921,
      ha: 1011,
      o: "m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 ",
    },
    ΰ: {
      x_min: 0,
      x_max: 617,
      ha: 725,
      o: "m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 ",
    },
    "`": {
      x_min: 0,
      x_max: 138.890625,
      ha: 236,
      o: "m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 ",
    },
    "·": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 ",
    },
    Υ: {
      x_min: 0.328125,
      x_max: 819.515625,
      ha: 889,
      o: "m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 ",
    },
    r: {
      x_min: 0,
      x_max: 355.5625,
      ha: 432,
      o: "m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 ",
    },
    x: {
      x_min: 0,
      x_max: 675,
      ha: 764,
      o: "m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 ",
    },
    μ: {
      x_min: 0,
      x_max: 696.609375,
      ha: 747,
      o: "m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 ",
    },
    h: {
      x_min: 0,
      x_max: 615,
      ha: 724,
      o: "m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 ",
    },
    ".": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 ",
    },
    φ: {
      x_min: -2,
      x_max: 878,
      ha: 974,
      o: "m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 ",
    },
    ";": {
      x_min: 0,
      x_max: 142,
      ha: 239,
      o: "m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 ",
    },
    f: {
      x_min: 0,
      x_max: 378,
      ha: 472,
      o: "m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 ",
    },
    "“": {
      x_min: 1,
      x_max: 348.21875,
      ha: 454,
      o: "m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 ",
    },
    A: {
      x_min: 0.03125,
      x_max: 906.953125,
      ha: 1008,
      o: "m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 ",
    },
    "‘": {
      x_min: 1,
      x_max: 139.890625,
      ha: 236,
      o: "m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 ",
    },
    ϊ: {
      x_min: -70,
      x_max: 283,
      ha: 361,
      o: "m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 ",
    },
    π: {
      x_min: -0.21875,
      x_max: 773.21875,
      ha: 857,
      o: "m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 ",
    },
    ά: {
      x_min: 0,
      x_max: 765.5625,
      ha: 809,
      o: "m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 ",
    },
    O: {
      x_min: 0,
      x_max: 958,
      ha: 1057,
      o: "m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 ",
    },
    n: {
      x_min: 0,
      x_max: 615,
      ha: 724,
      o: "m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 ",
    },
    l: {
      x_min: 41,
      x_max: 166,
      ha: 279,
      o: "m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 ",
    },
    "¤": {
      x_min: 40.09375,
      x_max: 728.796875,
      ha: 825,
      o: "m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 ",
    },
    κ: {
      x_min: 0,
      x_max: 632.328125,
      ha: 679,
      o: "m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 ",
    },
    p: {
      x_min: 0,
      x_max: 685,
      ha: 786,
      o: "m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 ",
    },
    "‡": {
      x_min: 0,
      x_max: 777,
      ha: 835,
      o: "m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 ",
    },
    ψ: {
      x_min: 0,
      x_max: 808,
      ha: 907,
      o: "m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 ",
    },
    η: {
      x_min: 0.78125,
      x_max: 697,
      ha: 810,
      o: "m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 ",
    },
  },
  oT = "normal",
  aT = 1189,
  AT = -100,
  lT = "normal",
  uT = { yMin: -334, xMin: -111, yMax: 1189, xMax: 1672 },
  cT = 1e3,
  fT = {
    postscript_name: "Helvetiker-Regular",
    version_string: "Version 1.00 2004 initial release",
    vendor_url: "http://www.magenta.gr/",
    full_font_name: "Helvetiker",
    font_family_name: "Helvetiker",
    copyright: "Copyright (c) Μagenta ltd, 2004",
    description: "",
    trademark: "",
    designer: "",
    designer_url: "",
    unique_font_identifier: "Μagenta ltd:Helvetiker:22-10-104",
    license_url: "http://www.ellak.gr/fonts/MgOpen/license.html",
    license_description: `Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\r
\r
Permission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \r
\r
The above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\r
\r
The Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "MgOpen", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\r
\r
This License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "MgOpen" name.\r
\r
The Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \r
\r
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.`,
    manufacturer_name: "Μagenta ltd",
    font_sub_family_name: "Regular",
  },
  hT = -334,
  dT = "Helvetiker",
  pT = 1522,
  mT = 50,
  gT = {
    glyphs: sT,
    cssFontWeight: oT,
    ascender: aT,
    underlinePosition: AT,
    cssFontStyle: lT,
    boundingBox: uT,
    resolution: cT,
    original_font_information: fT,
    descender: hT,
    familyName: dT,
    lineHeight: pT,
    underlineThickness: mT,
  },
  ts = Kt(
    Kt(
      {},
      window.THREE
        ? window.THREE
        : {
            CircleGeometry: Oc,
            DoubleSide: mi,
            Group: Gi,
            Mesh: wn,
            MeshLambertMaterial: Ys,
            TextGeometry: i1,
            Vector3: te,
          }
    ),
    {},
    { Font: h7, TextGeometry: i1 }
  ),
  Bm = hi({
    props: {
      labelsData: { default: [] },
      labelLat: { default: "lat" },
      labelLng: { default: "lng" },
      labelAltitude: { default: 0 },
      labelText: { default: "text" },
      labelSize: { default: 0.5 },
      labelTypeFace: {
        default: gT,
        onChange: function (e, t) {
          t.font = new ts.Font(e);
        },
      },
      labelColor: {
        default: function () {
          return "lightgrey";
        },
      },
      labelRotation: { default: 0 },
      labelResolution: { default: 3 },
      labelIncludeDot: { default: !0 },
      labelDotRadius: { default: 0.1 },
      labelDotOrientation: {
        default: function () {
          return "bottom";
        },
      },
      labelsTransitionDuration: { default: 1e3, triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e) {
      var t = qe(e.labelLat),
        i = qe(e.labelLng),
        r = qe(e.labelAltitude),
        s = qe(e.labelText),
        u = qe(e.labelSize),
        c = qe(e.labelRotation),
        h = qe(e.labelColor),
        p = qe(e.labelIncludeDot),
        g = qe(e.labelDotRadius),
        v = qe(e.labelDotOrientation),
        x = new Set(["right", "top", "bottom"]),
        M = (2 * Math.PI * Pn) / 360,
        w = new ts.CircleGeometry(1, 16);
      Di(e.labelsData, e.scene, {
        createObj: function () {
          var E = new ts.MeshLambertMaterial();
          E.side = mi;
          var b = new ts.Group();
          return (
            b.add(new ts.Mesh(w, E)),
            b.add(new ts.Mesh(void 0, E)),
            (b.__globeObjType = "label"),
            b
          );
        },
        updateObj: function (E, b) {
          var L = On(E.children, 2),
            S = L[0],
            R = L[1],
            U = h(b),
            q = vr(U);
          R.material.color.set(Hr(U)),
            (R.material.transparent = q < 1),
            (R.material.opacity = q);
          var I = p(b),
            N = v(b);
          !I || (!x.has(N) && (N = "bottom"));
          var D = I ? +g(b) * M : 1e-12;
          S.scale.x = S.scale.y = D;
          var O = +u(b) * M;
          if (
            (R.geometry && R.geometry.dispose(),
            (R.geometry = new ts.TextGeometry(s(b), {
              font: e.font,
              size: O,
              height: 0,
              curveSegments: e.labelResolution,
            })),
            N !== "right" && R.geometry.center(),
            I)
          ) {
            var k = D + O / 2;
            N === "right" && (R.position.x = k),
              (R.position.y = {
                right: -O / 2,
                top: k + O / 2,
                bottom: -k - O / 2,
              }[N]);
          }
          var $ = function (J) {
              var K = (E.__currentTargetD = J),
                ie = K.lat,
                he = K.lng,
                ce = K.alt,
                oe = K.rot,
                de = K.scale;
              Object.assign(E.position, Wi(ie, he, ce)),
                E.lookAt(e.scene.localToWorld(new ts.Vector3(0, 0, 0))),
                E.rotateY(Math.PI),
                E.rotateZ((-oe * Math.PI) / 180),
                (E.scale.x = E.scale.y = E.scale.z = de);
            },
            H = { lat: +t(b), lng: +i(b), alt: +r(b), rot: +c(b), scale: 1 },
            Q = E.__currentTargetD || Object.assign({}, H, { scale: 1e-12 });
          Object.keys(H).some(function (F) {
            return Q[F] !== H[F];
          }) &&
            (!e.labelsTransitionDuration || e.labelsTransitionDuration < 0
              ? $(H)
              : new Pi(Q)
                  .to(H, e.labelsTransitionDuration)
                  .easing(Hn.Quadratic.InOut)
                  .onUpdate($)
                  .start());
        },
      });
    },
  }),
  vT = window.THREE ? window.THREE : { BufferGeometry: fn },
  _T = (function (n) {
    gm(t, n);
    var e = xm(t);
    function t() {
      var i,
        r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1,
        s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 32;
      sf(this, t),
        (i = e.call(this)),
        (i.type = "CircleLineGeometry"),
        (i.parameters = { radius: r, segmentCount: s });
      for (var u = [], c = 0; c <= s; c++) {
        var h = (c / s - 0.25) * Math.PI * 2;
        u.push({ x: Math.cos(h) * r, y: Math.sin(h) * r, z: 0 });
      }
      return i.setFromPoints(u), i;
    }
    return of(t);
  })(vT.BufferGeometry),
  Eo = window.THREE
    ? window.THREE
    : { Color: Dt, Group: Gi, Line: e0, LineBasicMaterial: Jl, Vector3: te },
  xT = Wo.default || Wo,
  Nm = hi({
    props: {
      ringsData: { default: [] },
      ringLat: { default: "lat" },
      ringLng: { default: "lng" },
      ringAltitude: { default: 0.0015 },
      ringColor: {
        default: function () {
          return "#ffffaa";
        },
        triggerUpdate: !1,
      },
      ringResolution: { default: 64, triggerUpdate: !1 },
      ringMaxRadius: { default: 2, triggerUpdate: !1 },
      ringPropagationSpeed: { default: 1, triggerUpdate: !1 },
      ringRepeatPeriod: { default: 700, triggerUpdate: !1 },
    },
    methods: {
      pauseAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.pause();
      },
      resumeAnimation: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.resume();
      },
      _destructor: function (e) {
        var t;
        (t = e.ticker) === null || t === void 0 || t.dispose();
      },
    },
    init: function (e, t) {
      mn(e),
        (t.scene = e),
        (t.ticker = new xT()),
        t.ticker.onTick.add(function (i) {
          if (t.ringsData.length) {
            var r = qe(t.ringColor),
              s = qe(t.ringAltitude),
              u = qe(t.ringMaxRadius),
              c = qe(t.ringPropagationSpeed),
              h = qe(t.ringRepeatPeriod);
            t.ringsData
              .filter(function (p) {
                return p.__threeObj;
              })
              .forEach(function (p) {
                var g = p.__threeObj;
                if ((g.__nextRingTime || 0) <= i) {
                  var v = h(p) / 1e3;
                  g.__nextRingTime = i + (v <= 0 ? 1 / 0 : v);
                  var x = new Eo.Line(
                      new _T(1, t.ringResolution),
                      new Eo.LineBasicMaterial()
                    ),
                    M = r(p),
                    w = M instanceof Array || M instanceof Function,
                    C;
                  w
                    ? M instanceof Array
                      ? ((C = Ws()
                          .domain(
                            M.map(function (I, N) {
                              return N / (M.length - 1);
                            })
                          )
                          .range(M)),
                        (x.material.transparent = M.some(function (I) {
                          return vr(I) < 1;
                        })))
                      : ((C = M), (x.material.transparent = !0))
                    : ((x.material.color = new Eo.Color(Hr(M))),
                      N7(x.material, vr(M)));
                  var E = Pn * (1 + s(p)),
                    b = u(p),
                    L = (b * Math.PI) / 180,
                    S = c(p),
                    R = S <= 0,
                    U = function (N) {
                      var D = N.t,
                        O = (R ? 1 - D : D) * L;
                      if (
                        ((x.scale.x = x.scale.y = E * Math.sin(O)),
                        (x.position.z = E * (1 - Math.cos(O))),
                        w)
                      ) {
                        var k = C(D);
                        (x.material.color = new Eo.Color(Hr(k))),
                          x.material.transparent &&
                            (x.material.opacity = vr(k));
                      }
                    };
                  if (S === 0) U({ t: 0 }), g.add(x);
                  else {
                    var q = Math.abs(b / S) * 1e3;
                    new Pi({ t: 0 })
                      .to({ t: 1 }, q)
                      .onUpdate(U)
                      .onStart(function () {
                        return g.add(x);
                      })
                      .onComplete(function () {
                        g.remove(x), wm(x);
                      })
                      .start();
                  }
                }
              });
          }
        });
    },
    update: function (e) {
      var t = qe(e.ringLat),
        i = qe(e.ringLng),
        r = qe(e.ringAltitude),
        s = e.scene.localToWorld(new Eo.Vector3(0, 0, 0));
      Di(
        e.ringsData,
        e.scene,
        {
          createObj: function () {
            var c = new Eo.Group();
            return (c.__globeObjType = "ring"), c;
          },
          updateObj: function (c, h) {
            var p = t(h),
              g = i(h),
              v = r(h);
            Object.assign(c.position, Wi(p, g, v)), c.lookAt(s);
          },
        },
        { removeDelay: 3e4 }
      );
    },
  }),
  yT = Kt(Kt({}, window.THREE ? window.THREE : {}), {}, { CSS2DObject: m7 }),
  Fm = hi({
    props: {
      htmlElementsData: { default: [] },
      htmlLat: { default: "lat" },
      htmlLng: { default: "lng" },
      htmlAltitude: { default: 0 },
      htmlElement: {},
      htmlTransitionDuration: { default: 1e3, triggerUpdate: !1 },
      isBehindGlobe: {
        onChange: function () {
          this.updateObjVisibility();
        },
        triggerUpdate: !1,
      },
    },
    methods: {
      updateObjVisibility: function (e, t) {
        var i = t
          ? [t]
          : e.htmlElementsData
              .map(function (r) {
                return r.__threeObj;
              })
              .filter(function (r) {
                return r;
              });
        i.forEach(function (r) {
          return (r.visible = !e.isBehindGlobe || !e.isBehindGlobe(r.position));
        });
      },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e, t) {
      var i = this,
        r = qe(e.htmlLat),
        s = qe(e.htmlLng),
        u = qe(e.htmlAltitude),
        c = qe(e.htmlElement);
      Di(e.htmlElementsData, e.scene, {
        purge: t.hasOwnProperty("htmlElement"),
        createObj: function (p) {
          var g = c(p),
            v = new yT.CSS2DObject(g);
          return (v.__globeObjType = "html"), v;
        },
        updateObj: function (p, g) {
          var v = function (w) {
              var C = (p.__currentTargetD = w),
                E = C.alt,
                b = C.lat,
                L = C.lng;
              Object.assign(p.position, Wi(b, L, E)), i.updateObjVisibility(p);
            },
            x = { lat: +r(g), lng: +s(g), alt: +u(g) };
          !e.htmlTransitionDuration ||
          e.htmlTransitionDuration < 0 ||
          !p.__currentTargetD
            ? v(x)
            : new Pi(p.__currentTargetD)
                .to(x, e.pointsTransitionDuration)
                .easing(Hn.Quadratic.InOut)
                .onUpdate(v)
                .start();
        },
      });
    },
  }),
  KA = window.THREE
    ? window.THREE
    : {
        Euler: fs,
        Group: Gi,
        Mesh: wn,
        MeshLambertMaterial: Ys,
        SphereGeometry: $s,
      },
  km = hi({
    props: {
      objectsData: { default: [] },
      objectLat: { default: "lat" },
      objectLng: { default: "lng" },
      objectAltitude: { default: 0.01 },
      objectFacesSurface: { default: !0 },
      objectRotation: {},
      objectThreeObject: {
        default: new KA.Mesh(
          new KA.SphereGeometry(1, 16, 8),
          new KA.MeshLambertMaterial({
            color: "#ffffaa",
            transparent: !0,
            opacity: 0.7,
          })
        ),
      },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e, t) {
      var i = qe(e.objectLat),
        r = qe(e.objectLng),
        s = qe(e.objectAltitude),
        u = qe(e.objectFacesSurface),
        c = qe(e.objectRotation),
        h = qe(e.objectThreeObject);
      Di(e.objectsData, e.scene, {
        purge: t.hasOwnProperty("objectThreeObject"),
        createObj: function (g) {
          var v = h(g);
          e.objectThreeObject === v && (v = v.clone());
          var x = new KA.Group();
          return x.add(v), (x.__globeObjType = "object"), x;
        },
        updateObj: function (g, v) {
          var x = +i(v),
            M = +r(v),
            w = +s(v);
          Object.assign(g.position, Wi(x, M, w)),
            u(v)
              ? g.setRotationFromEuler(new fs(ma(-x), ma(M), 0, "YXZ"))
              : g.rotation.set(0, 0, 0);
          var C = g.children[0],
            E = c(v);
          E &&
            C.setRotationFromEuler(
              new fs(ma(E.x || 0), ma(E.y || 0), ma(E.z || 0))
            );
        },
      });
    },
  }),
  zm = hi({
    props: {
      customLayerData: { default: [] },
      customThreeObject: {},
      customThreeObjectUpdate: { triggerUpdate: !1 },
    },
    init: function (e, t) {
      mn(e), (t.scene = e);
    },
    update: function (e, t) {
      e.customThreeObjectUpdate || mn(e.scene);
      var i = qe(e.customThreeObject),
        r = qe(e.customThreeObjectUpdate);
      Di(e.customLayerData, e.scene, {
        purge: t.hasOwnProperty("customThreeObject"),
        createObj: function (u) {
          var c = i(u, Pn);
          return (
            c &&
              (e.customThreeObject === c && (c = c.clone()),
              (c.__globeObjType = "custom")),
            c
          );
        },
        updateObj: function (u, c) {
          return r(u, c, Pn);
        },
      });
    },
  }),
  JA = window.THREE ? window.THREE : { Group: Gi, Vector2: ke, Vector3: te },
  bT = [
    "globeLayer",
    "pointsLayer",
    "arcsLayer",
    "hexBinLayer",
    "heatmapsLayer",
    "polygonsLayer",
    "hexedPolygonsLayer",
    "pathsLayer",
    "tilesLayer",
    "labelsLayer",
    "ringsLayer",
    "htmlElementsLayer",
    "objectsLayer",
    "customLayer",
  ],
  Gm = xi("globeLayer", Tm),
  MT = Object.assign.apply(
    Object,
    An(
      [
        "globeImageUrl",
        "bumpImageUrl",
        "showGlobe",
        "showGraticules",
        "showAtmosphere",
        "atmosphereColor",
        "atmosphereAltitude",
      ].map(function (n) {
        return Jn({}, n, Gm.linkProp(n));
      })
    )
  ),
  ET = Object.assign.apply(
    Object,
    An(
      ["globeMaterial"].map(function (n) {
        return Jn({}, n, Gm.linkMethod(n));
      })
    )
  ),
  wT = xi("pointsLayer", Cm),
  ST = Object.assign.apply(
    Object,
    An(
      [
        "pointsData",
        "pointLat",
        "pointLng",
        "pointColor",
        "pointAltitude",
        "pointRadius",
        "pointResolution",
        "pointsMerge",
        "pointsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, wT.linkProp(n));
      })
    )
  ),
  TT = xi("arcsLayer", Rm),
  CT = Object.assign.apply(
    Object,
    An(
      [
        "arcsData",
        "arcStartLat",
        "arcStartLng",
        "arcEndLat",
        "arcEndLng",
        "arcColor",
        "arcAltitude",
        "arcAltitudeAutoScale",
        "arcStroke",
        "arcCurveResolution",
        "arcCircularResolution",
        "arcDashLength",
        "arcDashGap",
        "arcDashInitialGap",
        "arcDashAnimateTime",
        "arcsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, TT.linkProp(n));
      })
    )
  ),
  RT = xi("hexBinLayer", Pm),
  PT = Object.assign.apply(
    Object,
    An(
      [
        "hexBinPointsData",
        "hexBinPointLat",
        "hexBinPointLng",
        "hexBinPointWeight",
        "hexBinResolution",
        "hexMargin",
        "hexTopCurvatureResolution",
        "hexTopColor",
        "hexSideColor",
        "hexAltitude",
        "hexBinMerge",
        "hexTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, RT.linkProp(n));
      })
    )
  ),
  LT = xi("heatmapsLayer", Dm),
  DT = Object.assign.apply(
    Object,
    An(
      [
        "heatmapsData",
        "heatmapPoints",
        "heatmapPointLat",
        "heatmapPointLng",
        "heatmapPointWeight",
        "heatmapBandwidth",
        "heatmapColorFn",
        "heatmapColorSaturation",
        "heatmapBaseAltitude",
        "heatmapTopAltitude",
        "heatmapsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, LT.linkProp(n));
      })
    )
  ),
  IT = xi("hexedPolygonsLayer", Om),
  OT = Object.assign.apply(
    Object,
    An(
      [
        "hexPolygonsData",
        "hexPolygonGeoJsonGeometry",
        "hexPolygonColor",
        "hexPolygonAltitude",
        "hexPolygonResolution",
        "hexPolygonMargin",
        "hexPolygonCurvatureResolution",
        "hexPolygonsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, IT.linkProp(n));
      })
    )
  ),
  qT = xi("polygonsLayer", Im),
  UT = Object.assign.apply(
    Object,
    An(
      [
        "polygonsData",
        "polygonGeoJsonGeometry",
        "polygonCapColor",
        "polygonCapMaterial",
        "polygonSideColor",
        "polygonSideMaterial",
        "polygonStrokeColor",
        "polygonAltitude",
        "polygonCapCurvatureResolution",
        "polygonsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, qT.linkProp(n));
      })
    )
  ),
  BT = xi("pathsLayer", qm),
  NT = Object.assign.apply(
    Object,
    An(
      [
        "pathsData",
        "pathPoints",
        "pathPointLat",
        "pathPointLng",
        "pathPointAlt",
        "pathResolution",
        "pathColor",
        "pathStroke",
        "pathDashLength",
        "pathDashGap",
        "pathDashInitialGap",
        "pathDashAnimateTime",
        "pathTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, BT.linkProp(n));
      })
    )
  ),
  FT = xi("tilesLayer", Um),
  kT = Object.assign.apply(
    Object,
    An(
      [
        "tilesData",
        "tileLat",
        "tileLng",
        "tileAltitude",
        "tileWidth",
        "tileHeight",
        "tileUseGlobeProjection",
        "tileMaterial",
        "tileCurvatureResolution",
        "tilesTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, FT.linkProp(n));
      })
    )
  ),
  zT = xi("labelsLayer", Bm),
  GT = Object.assign.apply(
    Object,
    An(
      [
        "labelsData",
        "labelLat",
        "labelLng",
        "labelAltitude",
        "labelRotation",
        "labelText",
        "labelSize",
        "labelTypeFace",
        "labelColor",
        "labelResolution",
        "labelIncludeDot",
        "labelDotRadius",
        "labelDotOrientation",
        "labelsTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, zT.linkProp(n));
      })
    )
  ),
  HT = xi("ringsLayer", Nm),
  VT = Object.assign.apply(
    Object,
    An(
      [
        "ringsData",
        "ringLat",
        "ringLng",
        "ringAltitude",
        "ringColor",
        "ringResolution",
        "ringMaxRadius",
        "ringPropagationSpeed",
        "ringRepeatPeriod",
      ].map(function (n) {
        return Jn({}, n, HT.linkProp(n));
      })
    )
  ),
  WT = xi("htmlElementsLayer", Fm),
  jT = Object.assign.apply(
    Object,
    An(
      [
        "htmlElementsData",
        "htmlLat",
        "htmlLng",
        "htmlAltitude",
        "htmlElement",
        "htmlTransitionDuration",
      ].map(function (n) {
        return Jn({}, n, WT.linkProp(n));
      })
    )
  ),
  XT = xi("objectsLayer", km),
  QT = Object.assign.apply(
    Object,
    An(
      [
        "objectsData",
        "objectLat",
        "objectLng",
        "objectAltitude",
        "objectRotation",
        "objectFacesSurface",
        "objectThreeObject",
      ].map(function (n) {
        return Jn({}, n, XT.linkProp(n));
      })
    )
  ),
  $T = xi("customLayer", zm),
  YT = Object.assign.apply(
    Object,
    An(
      ["customLayerData", "customThreeObject", "customThreeObjectUpdate"].map(
        function (n) {
          return Jn({}, n, $T.linkProp(n));
        }
      )
    )
  ),
  ZT = hi({
    props: Kt(
      Kt(
        Kt(
          Kt(
            Kt(
              Kt(
                Kt(
                  Kt(
                    Kt(
                      Kt(
                        Kt(
                          Kt(
                            Kt(
                              Kt(
                                {
                                  onGlobeReady: { triggerUpdate: !1 },
                                  rendererSize: {
                                    default: new JA.Vector2(
                                      window.innerWidth,
                                      window.innerHeight
                                    ),
                                    onChange: function (e, t) {
                                      t.pathsLayer.rendererSize(e);
                                    },
                                    triggerUpdate: !1,
                                  },
                                },
                                MT
                              ),
                              ST
                            ),
                            CT
                          ),
                          PT
                        ),
                        DT
                      ),
                      UT
                    ),
                    OT
                  ),
                  NT
                ),
                kT
              ),
              GT
            ),
            VT
          ),
          jT
        ),
        QT
      ),
      YT
    ),
    methods: Kt(
      {
        getGlobeRadius: o1,
        getCoords: function (e) {
          for (
            var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            i[r - 1] = arguments[r];
          return Wi.apply(void 0, i);
        },
        toGeoCoords: function (e) {
          for (
            var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), r = 1;
            r < t;
            r++
          )
            i[r - 1] = arguments[r];
          return Sm.apply(void 0, i);
        },
        setPointOfView: function (e, t, i) {
          var r = void 0;
          if (t) {
            var s = o1(),
              u = i ? t.clone().sub(i) : t,
              c,
              h,
              p;
            r = function (v) {
              c === void 0 && (c = u.length()),
                h === void 0 &&
                  (h = Math.sqrt(Math.pow(c, 2) - Math.pow(s, 2))),
                p === void 0 && (p = Math.acos(h / c));
              var x = u.distanceTo(v);
              if (x < h) return !1;
              var M = v.length(),
                w = Math.acos(
                  (Math.pow(c, 2) + Math.pow(x, 2) - Math.pow(M, 2)) /
                    (2 * c * x)
                );
              return w < p;
            };
          }
          e.layersThatNeedBehindGlobeChecker.forEach(function (g) {
            return g.isBehindGlobe(r);
          });
        },
        pauseAnimation: function (e) {
          return (
            e.animationFrameRequestId !== null &&
              (cancelAnimationFrame(e.animationFrameRequestId),
              (e.animationFrameRequestId = null)),
            e.pausableLayers.forEach(function (t) {
              var i;
              return (i = t.pauseAnimation) === null || i === void 0
                ? void 0
                : i.call(t);
            }),
            this
          );
        },
        resumeAnimation: function (e) {
          return (
            e.animationFrameRequestId === null && this._animationCycle(),
            e.pausableLayers.forEach(function (t) {
              var i;
              return (i = t.resumeAnimation) === null || i === void 0
                ? void 0
                : i.call(t);
            }),
            this
          );
        },
        _animationCycle: function (e) {
          (e.animationFrameRequestId = requestAnimationFrame(
            this._animationCycle
          )),
            T6();
        },
        _destructor: function (e) {
          this.pauseAnimation(),
            e.destructableLayers.forEach(function (t) {
              return t._destructor();
            });
        },
      },
      ET
    ),
    stateInit: function () {
      var e = {
        globeLayer: Tm(),
        pointsLayer: Cm(),
        arcsLayer: Rm(),
        hexBinLayer: Pm(),
        heatmapsLayer: Dm(),
        polygonsLayer: Im(),
        hexedPolygonsLayer: Om(),
        pathsLayer: qm(),
        tilesLayer: Um(),
        labelsLayer: Bm(),
        ringsLayer: Nm(),
        htmlElementsLayer: Fm(),
        objectsLayer: km(),
        customLayer: zm(),
      };
      return Kt(
        Kt({}, e),
        {},
        {
          layersThatNeedBehindGlobeChecker: Object.values(e).filter(function (
            t
          ) {
            return t.hasOwnProperty("isBehindGlobe");
          }),
          destructableLayers: Object.values(e).filter(function (t) {
            return t.hasOwnProperty("_destructor");
          }),
          pausableLayers: Object.values(e).filter(function (t) {
            return t.hasOwnProperty("pauseAnimation");
          }),
        }
      );
    },
    init: function (e, t, i) {
      var r = i.animateIn,
        s = r === void 0 ? !0 : r,
        u = i.waitForGlobeReady,
        c = u === void 0 ? !0 : u;
      mn(e),
        e.add((t.scene = new JA.Group())),
        (t.scene.visible = !1),
        bT.forEach(function (p) {
          var g = new JA.Group();
          t.scene.add(g), t[p](g);
        });
      var h = function () {
        if (s) {
          t.scene.scale.set(1e-6, 1e-6, 1e-6),
            new Pi({ k: 1e-6 })
              .to({ k: 1 }, 600)
              .easing(Hn.Quadratic.Out)
              .onUpdate(function (v) {
                var x = v.k;
                return t.scene.scale.set(x, x, x);
              })
              .start();
          var g = new JA.Vector3(0, 1, 0);
          new Pi({ rot: Math.PI * 2 })
            .to({ rot: 0 }, 1200)
            .easing(Hn.Quintic.Out)
            .onUpdate(function (v) {
              var x = v.rot;
              return t.scene.setRotationFromAxisAngle(g, x);
            })
            .start();
        }
        (t.scene.visible = !0), t.onGlobeReady && t.onGlobeReady();
      };
      c ? t.globeLayer.onReady(h) : h(), this._animationCycle();
    },
    update: function (e) {},
  });
function KT(n) {
  var e =
      arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Object,
    t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
    i = (function (r) {
      gm(u, r);
      var s = xm(u);
      function u() {
        var c;
        sf(this, u);
        for (var h = arguments.length, p = new Array(h), g = 0; g < h; g++)
          p[g] = arguments[g];
        return (
          (c = s.call.apply(s, [this].concat(p))),
          (c.__kapsuleInstance = n
            .apply(void 0, p)
            .apply(void 0, [].concat(An(t ? [_m(c)] : []), p))),
          c
        );
      }
      return of(u);
    })(e);
  return (
    Object.keys(n()).forEach(function (r) {
      return (i.prototype[r] = function () {
        var s,
          u = (s = this.__kapsuleInstance)[r].apply(s, arguments);
        return u === this.__kapsuleInstance ? this : u;
      });
    }),
    i
  );
}
var JT = window.THREE ? window.THREE : { Group: Gi },
  e9 = KT(ZT, JT.Group, !0);
const d1 = { type: "change" },
  yu = { type: "start" },
  p1 = { type: "end" },
  el = new Yl(),
  m1 = new is(),
  t9 = Math.cos(70 * R1.DEG2RAD);
class n9 extends js {
  constructor(e, t) {
    super(),
      (this.object = e),
      (this.domElement = t),
      (this.domElement.style.touchAction = "none"),
      (this.enabled = !0),
      (this.target = new te()),
      (this.minDistance = 0),
      (this.maxDistance = 1 / 0),
      (this.minZoom = 0),
      (this.maxZoom = 1 / 0),
      (this.minPolarAngle = 0),
      (this.maxPolarAngle = Math.PI),
      (this.minAzimuthAngle = -1 / 0),
      (this.maxAzimuthAngle = 1 / 0),
      (this.enableDamping = !1),
      (this.dampingFactor = 0.05),
      (this.enableZoom = !0),
      (this.zoomSpeed = 1),
      (this.enableRotate = !0),
      (this.rotateSpeed = 1),
      (this.enablePan = !0),
      (this.panSpeed = 1),
      (this.screenSpacePanning = !0),
      (this.keyPanSpeed = 7),
      (this.zoomToCursor = !1),
      (this.autoRotate = !1),
      (this.autoRotateSpeed = 2),
      (this.keys = {
        LEFT: "ArrowLeft",
        UP: "ArrowUp",
        RIGHT: "ArrowRight",
        BOTTOM: "ArrowDown",
      }),
      (this.mouseButtons = {
        LEFT: to.ROTATE,
        MIDDLE: to.DOLLY,
        RIGHT: to.PAN,
      }),
      (this.touches = { ONE: no.ROTATE, TWO: no.DOLLY_PAN }),
      (this.target0 = this.target.clone()),
      (this.position0 = this.object.position.clone()),
      (this.zoom0 = this.object.zoom),
      (this._domElementKeyEvents = null),
      (this.getPolarAngle = function () {
        return c.phi;
      }),
      (this.getAzimuthalAngle = function () {
        return c.theta;
      }),
      (this.getDistance = function () {
        return this.object.position.distanceTo(this.target);
      }),
      (this.listenToKeyEvents = function (re) {
        re.addEventListener("keydown", G), (this._domElementKeyEvents = re);
      }),
      (this.stopListenToKeyEvents = function () {
        this._domElementKeyEvents.removeEventListener("keydown", G),
          (this._domElementKeyEvents = null);
      }),
      (this.saveState = function () {
        i.target0.copy(i.target),
          i.position0.copy(i.object.position),
          (i.zoom0 = i.object.zoom);
      }),
      (this.reset = function () {
        i.target.copy(i.target0),
          i.object.position.copy(i.position0),
          (i.object.zoom = i.zoom0),
          i.object.updateProjectionMatrix(),
          i.dispatchEvent(d1),
          i.update(),
          (s = r.NONE);
      }),
      (this.update = (function () {
        const re = new te(),
          Re = new ks().setFromUnitVectors(e.up, new te(0, 1, 0)),
          tt = Re.clone().invert(),
          Xe = new te(),
          et = new ks(),
          wt = new te(),
          Vt = 2 * Math.PI;
        return function (Ye = null) {
          const Me = i.object.position;
          re.copy(Me).sub(i.target),
            re.applyQuaternion(Re),
            c.setFromVector3(re),
            i.autoRotate && s === r.NONE && k(D(Ye)),
            i.enableDamping
              ? ((c.theta += h.theta * i.dampingFactor),
                (c.phi += h.phi * i.dampingFactor))
              : ((c.theta += h.theta), (c.phi += h.phi));
          let Ue = i.minAzimuthAngle,
            pe = i.maxAzimuthAngle;
          isFinite(Ue) &&
            isFinite(pe) &&
            (Ue < -Math.PI ? (Ue += Vt) : Ue > Math.PI && (Ue -= Vt),
            pe < -Math.PI ? (pe += Vt) : pe > Math.PI && (pe -= Vt),
            Ue <= pe
              ? (c.theta = Math.max(Ue, Math.min(pe, c.theta)))
              : (c.theta =
                  c.theta > (Ue + pe) / 2
                    ? Math.max(Ue, c.theta)
                    : Math.min(pe, c.theta))),
            (c.phi = Math.max(
              i.minPolarAngle,
              Math.min(i.maxPolarAngle, c.phi)
            )),
            c.makeSafe(),
            i.enableDamping === !0
              ? i.target.addScaledVector(g, i.dampingFactor)
              : i.target.add(g),
            (i.zoomToCursor && q) || i.object.isOrthographicCamera
              ? (c.radius = he(c.radius))
              : (c.radius = he(c.radius * p)),
            re.setFromSpherical(c),
            re.applyQuaternion(tt),
            Me.copy(i.target).add(re),
            i.object.lookAt(i.target),
            i.enableDamping === !0
              ? ((h.theta *= 1 - i.dampingFactor),
                (h.phi *= 1 - i.dampingFactor),
                g.multiplyScalar(1 - i.dampingFactor))
              : (h.set(0, 0, 0), g.set(0, 0, 0));
          let kt = !1;
          if (i.zoomToCursor && q) {
            let Yt = null;
            if (i.object.isPerspectiveCamera) {
              const rn = re.length();
              Yt = he(rn * p);
              const ei = rn - Yt;
              i.object.position.addScaledVector(R, ei),
                i.object.updateMatrixWorld();
            } else if (i.object.isOrthographicCamera) {
              const rn = new te(U.x, U.y, 0);
              rn.unproject(i.object),
                (i.object.zoom = Math.max(
                  i.minZoom,
                  Math.min(i.maxZoom, i.object.zoom / p)
                )),
                i.object.updateProjectionMatrix(),
                (kt = !0);
              const ei = new te(U.x, U.y, 0);
              ei.unproject(i.object),
                i.object.position.sub(ei).add(rn),
                i.object.updateMatrixWorld(),
                (Yt = re.length());
            } else
              console.warn(
                "WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."
              ),
                (i.zoomToCursor = !1);
            Yt !== null &&
              (this.screenSpacePanning
                ? i.target
                    .set(0, 0, -1)
                    .transformDirection(i.object.matrix)
                    .multiplyScalar(Yt)
                    .add(i.object.position)
                : (el.origin.copy(i.object.position),
                  el.direction
                    .set(0, 0, -1)
                    .transformDirection(i.object.matrix),
                  Math.abs(i.object.up.dot(el.direction)) < t9
                    ? e.lookAt(i.target)
                    : (m1.setFromNormalAndCoplanarPoint(i.object.up, i.target),
                      el.intersectPlane(m1, i.target))));
          } else
            i.object.isOrthographicCamera &&
              ((i.object.zoom = Math.max(
                i.minZoom,
                Math.min(i.maxZoom, i.object.zoom / p)
              )),
              i.object.updateProjectionMatrix(),
              (kt = !0));
          return (
            (p = 1),
            (q = !1),
            kt ||
            Xe.distanceToSquared(i.object.position) > u ||
            8 * (1 - et.dot(i.object.quaternion)) > u ||
            wt.distanceToSquared(i.target) > 0
              ? (i.dispatchEvent(d1),
                Xe.copy(i.object.position),
                et.copy(i.object.quaternion),
                wt.copy(i.target),
                (kt = !1),
                !0)
              : !1
          );
        };
      })()),
      (this.dispose = function () {
        i.domElement.removeEventListener("contextmenu", Ie),
          i.domElement.removeEventListener("pointerdown", it),
          i.domElement.removeEventListener("pointercancel", mt),
          i.domElement.removeEventListener("wheel", Y),
          i.domElement.removeEventListener("pointermove", at),
          i.domElement.removeEventListener("pointerup", mt),
          i._domElementKeyEvents !== null &&
            (i._domElementKeyEvents.removeEventListener("keydown", G),
            (i._domElementKeyEvents = null));
      });
    const i = this,
      r = {
        NONE: -1,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_PAN: 4,
        TOUCH_DOLLY_PAN: 5,
        TOUCH_DOLLY_ROTATE: 6,
      };
    let s = r.NONE;
    const u = 1e-6,
      c = new wd(),
      h = new wd();
    let p = 1;
    const g = new te(),
      v = new ke(),
      x = new ke(),
      M = new ke(),
      w = new ke(),
      C = new ke(),
      E = new ke(),
      b = new ke(),
      L = new ke(),
      S = new ke(),
      R = new te(),
      U = new ke();
    let q = !1;
    const I = [],
      N = {};
    function D(re) {
      return re !== null
        ? ((2 * Math.PI) / 60) * i.autoRotateSpeed * re
        : ((2 * Math.PI) / 60 / 60) * i.autoRotateSpeed;
    }
    function O() {
      return Math.pow(0.95, i.zoomSpeed);
    }
    function k(re) {
      h.theta -= re;
    }
    function $(re) {
      h.phi -= re;
    }
    const H = (function () {
        const re = new te();
        return function (tt, Xe) {
          re.setFromMatrixColumn(Xe, 0), re.multiplyScalar(-tt), g.add(re);
        };
      })(),
      Q = (function () {
        const re = new te();
        return function (tt, Xe) {
          i.screenSpacePanning === !0
            ? re.setFromMatrixColumn(Xe, 1)
            : (re.setFromMatrixColumn(Xe, 0), re.crossVectors(i.object.up, re)),
            re.multiplyScalar(tt),
            g.add(re);
        };
      })(),
      F = (function () {
        const re = new te();
        return function (tt, Xe) {
          const et = i.domElement;
          if (i.object.isPerspectiveCamera) {
            const wt = i.object.position;
            re.copy(wt).sub(i.target);
            let Vt = re.length();
            (Vt *= Math.tan(((i.object.fov / 2) * Math.PI) / 180)),
              H((2 * tt * Vt) / et.clientHeight, i.object.matrix),
              Q((2 * Xe * Vt) / et.clientHeight, i.object.matrix);
          } else
            i.object.isOrthographicCamera
              ? (H(
                  (tt * (i.object.right - i.object.left)) /
                    i.object.zoom /
                    et.clientWidth,
                  i.object.matrix
                ),
                Q(
                  (Xe * (i.object.top - i.object.bottom)) /
                    i.object.zoom /
                    et.clientHeight,
                  i.object.matrix
                ))
              : (console.warn(
                  "WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."
                ),
                (i.enablePan = !1));
        };
      })();
    function J(re) {
      i.object.isPerspectiveCamera || i.object.isOrthographicCamera
        ? (p /= re)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (i.enableZoom = !1));
    }
    function K(re) {
      i.object.isPerspectiveCamera || i.object.isOrthographicCamera
        ? (p *= re)
        : (console.warn(
            "WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."
          ),
          (i.enableZoom = !1));
    }
    function ie(re) {
      if (!i.zoomToCursor) return;
      q = !0;
      const Re = i.domElement.getBoundingClientRect(),
        tt = re.clientX - Re.left,
        Xe = re.clientY - Re.top,
        et = Re.width,
        wt = Re.height;
      (U.x = (tt / et) * 2 - 1),
        (U.y = -(Xe / wt) * 2 + 1),
        R.set(U.x, U.y, 1)
          .unproject(i.object)
          .sub(i.object.position)
          .normalize();
    }
    function he(re) {
      return Math.max(i.minDistance, Math.min(i.maxDistance, re));
    }
    function ce(re) {
      v.set(re.clientX, re.clientY);
    }
    function oe(re) {
      ie(re), b.set(re.clientX, re.clientY);
    }
    function de(re) {
      w.set(re.clientX, re.clientY);
    }
    function Se(re) {
      x.set(re.clientX, re.clientY),
        M.subVectors(x, v).multiplyScalar(i.rotateSpeed);
      const Re = i.domElement;
      k((2 * Math.PI * M.x) / Re.clientHeight),
        $((2 * Math.PI * M.y) / Re.clientHeight),
        v.copy(x),
        i.update();
    }
    function Pe(re) {
      L.set(re.clientX, re.clientY),
        S.subVectors(L, b),
        S.y > 0 ? J(O()) : S.y < 0 && K(O()),
        b.copy(L),
        i.update();
    }
    function Oe(re) {
      C.set(re.clientX, re.clientY),
        E.subVectors(C, w).multiplyScalar(i.panSpeed),
        F(E.x, E.y),
        w.copy(C),
        i.update();
    }
    function $e(re) {
      ie(re), re.deltaY < 0 ? K(O()) : re.deltaY > 0 && J(O()), i.update();
    }
    function nt(re) {
      let Re = !1;
      switch (re.code) {
        case i.keys.UP:
          re.ctrlKey || re.metaKey || re.shiftKey
            ? $((2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : F(0, i.keyPanSpeed),
            (Re = !0);
          break;
        case i.keys.BOTTOM:
          re.ctrlKey || re.metaKey || re.shiftKey
            ? $((-2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : F(0, -i.keyPanSpeed),
            (Re = !0);
          break;
        case i.keys.LEFT:
          re.ctrlKey || re.metaKey || re.shiftKey
            ? k((2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : F(i.keyPanSpeed, 0),
            (Re = !0);
          break;
        case i.keys.RIGHT:
          re.ctrlKey || re.metaKey || re.shiftKey
            ? k((-2 * Math.PI * i.rotateSpeed) / i.domElement.clientHeight)
            : F(-i.keyPanSpeed, 0),
            (Re = !0);
          break;
      }
      Re && (re.preventDefault(), i.update());
    }
    function ot() {
      if (I.length === 1) v.set(I[0].pageX, I[0].pageY);
      else {
        const re = 0.5 * (I[0].pageX + I[1].pageX),
          Re = 0.5 * (I[0].pageY + I[1].pageY);
        v.set(re, Re);
      }
    }
    function Rt() {
      if (I.length === 1) w.set(I[0].pageX, I[0].pageY);
      else {
        const re = 0.5 * (I[0].pageX + I[1].pageX),
          Re = 0.5 * (I[0].pageY + I[1].pageY);
        w.set(re, Re);
      }
    }
    function Ot() {
      const re = I[0].pageX - I[1].pageX,
        Re = I[0].pageY - I[1].pageY,
        tt = Math.sqrt(re * re + Re * Re);
      b.set(0, tt);
    }
    function ct() {
      i.enableZoom && Ot(), i.enablePan && Rt();
    }
    function ne() {
      i.enableZoom && Ot(), i.enableRotate && ot();
    }
    function Ge(re) {
      if (I.length == 1) x.set(re.pageX, re.pageY);
      else {
        const tt = be(re),
          Xe = 0.5 * (re.pageX + tt.x),
          et = 0.5 * (re.pageY + tt.y);
        x.set(Xe, et);
      }
      M.subVectors(x, v).multiplyScalar(i.rotateSpeed);
      const Re = i.domElement;
      k((2 * Math.PI * M.x) / Re.clientHeight),
        $((2 * Math.PI * M.y) / Re.clientHeight),
        v.copy(x);
    }
    function Ce(re) {
      if (I.length === 1) C.set(re.pageX, re.pageY);
      else {
        const Re = be(re),
          tt = 0.5 * (re.pageX + Re.x),
          Xe = 0.5 * (re.pageY + Re.y);
        C.set(tt, Xe);
      }
      E.subVectors(C, w).multiplyScalar(i.panSpeed), F(E.x, E.y), w.copy(C);
    }
    function Fe(re) {
      const Re = be(re),
        tt = re.pageX - Re.x,
        Xe = re.pageY - Re.y,
        et = Math.sqrt(tt * tt + Xe * Xe);
      L.set(0, et),
        S.set(0, Math.pow(L.y / b.y, i.zoomSpeed)),
        J(S.y),
        b.copy(L);
    }
    function Le(re) {
      i.enableZoom && Fe(re), i.enablePan && Ce(re);
    }
    function At(re) {
      i.enableZoom && Fe(re), i.enableRotate && Ge(re);
    }
    function it(re) {
      i.enabled !== !1 &&
        (I.length === 0 &&
          (i.domElement.setPointerCapture(re.pointerId),
          i.domElement.addEventListener("pointermove", at),
          i.domElement.addEventListener("pointerup", mt)),
        Ne(re),
        re.pointerType === "touch" ? xe(re) : xt(re));
    }
    function at(re) {
      i.enabled !== !1 && (re.pointerType === "touch" ? Be(re) : nn(re));
    }
    function mt(re) {
      ut(re),
        I.length === 0 &&
          (i.domElement.releasePointerCapture(re.pointerId),
          i.domElement.removeEventListener("pointermove", at),
          i.domElement.removeEventListener("pointerup", mt)),
        i.dispatchEvent(p1),
        (s = r.NONE);
    }
    function xt(re) {
      let Re;
      switch (re.button) {
        case 0:
          Re = i.mouseButtons.LEFT;
          break;
        case 1:
          Re = i.mouseButtons.MIDDLE;
          break;
        case 2:
          Re = i.mouseButtons.RIGHT;
          break;
        default:
          Re = -1;
      }
      switch (Re) {
        case to.DOLLY:
          if (i.enableZoom === !1) return;
          oe(re), (s = r.DOLLY);
          break;
        case to.ROTATE:
          if (re.ctrlKey || re.metaKey || re.shiftKey) {
            if (i.enablePan === !1) return;
            de(re), (s = r.PAN);
          } else {
            if (i.enableRotate === !1) return;
            ce(re), (s = r.ROTATE);
          }
          break;
        case to.PAN:
          if (re.ctrlKey || re.metaKey || re.shiftKey) {
            if (i.enableRotate === !1) return;
            ce(re), (s = r.ROTATE);
          } else {
            if (i.enablePan === !1) return;
            de(re), (s = r.PAN);
          }
          break;
        default:
          s = r.NONE;
      }
      s !== r.NONE && i.dispatchEvent(yu);
    }
    function nn(re) {
      switch (s) {
        case r.ROTATE:
          if (i.enableRotate === !1) return;
          Se(re);
          break;
        case r.DOLLY:
          if (i.enableZoom === !1) return;
          Pe(re);
          break;
        case r.PAN:
          if (i.enablePan === !1) return;
          Oe(re);
          break;
      }
    }
    function Y(re) {
      i.enabled === !1 ||
        i.enableZoom === !1 ||
        s !== r.NONE ||
        (re.preventDefault(), i.dispatchEvent(yu), $e(re), i.dispatchEvent(p1));
    }
    function G(re) {
      i.enabled === !1 || i.enablePan === !1 || nt(re);
    }
    function xe(re) {
      switch ((ze(re), I.length)) {
        case 1:
          switch (i.touches.ONE) {
            case no.ROTATE:
              if (i.enableRotate === !1) return;
              ot(), (s = r.TOUCH_ROTATE);
              break;
            case no.PAN:
              if (i.enablePan === !1) return;
              Rt(), (s = r.TOUCH_PAN);
              break;
            default:
              s = r.NONE;
          }
          break;
        case 2:
          switch (i.touches.TWO) {
            case no.DOLLY_PAN:
              if (i.enableZoom === !1 && i.enablePan === !1) return;
              ct(), (s = r.TOUCH_DOLLY_PAN);
              break;
            case no.DOLLY_ROTATE:
              if (i.enableZoom === !1 && i.enableRotate === !1) return;
              ne(), (s = r.TOUCH_DOLLY_ROTATE);
              break;
            default:
              s = r.NONE;
          }
          break;
        default:
          s = r.NONE;
      }
      s !== r.NONE && i.dispatchEvent(yu);
    }
    function Be(re) {
      switch ((ze(re), s)) {
        case r.TOUCH_ROTATE:
          if (i.enableRotate === !1) return;
          Ge(re), i.update();
          break;
        case r.TOUCH_PAN:
          if (i.enablePan === !1) return;
          Ce(re), i.update();
          break;
        case r.TOUCH_DOLLY_PAN:
          if (i.enableZoom === !1 && i.enablePan === !1) return;
          Le(re), i.update();
          break;
        case r.TOUCH_DOLLY_ROTATE:
          if (i.enableZoom === !1 && i.enableRotate === !1) return;
          At(re), i.update();
          break;
        default:
          s = r.NONE;
      }
    }
    function Ie(re) {
      i.enabled !== !1 && re.preventDefault();
    }
    function Ne(re) {
      I.push(re);
    }
    function ut(re) {
      delete N[re.pointerId];
      for (let Re = 0; Re < I.length; Re++)
        if (I[Re].pointerId == re.pointerId) {
          I.splice(Re, 1);
          return;
        }
    }
    function ze(re) {
      let Re = N[re.pointerId];
      Re === void 0 && ((Re = new ke()), (N[re.pointerId] = Re)),
        Re.set(re.pageX, re.pageY);
    }
    function be(re) {
      const Re = re.pointerId === I[0].pointerId ? I[1] : I[0];
      return N[Re.pointerId];
    }
    i.domElement.addEventListener("contextmenu", Ie),
      i.domElement.addEventListener("pointerdown", it),
      i.domElement.addEventListener("pointercancel", mt),
      i.domElement.addEventListener("wheel", Y, { passive: !1 }),
      this.update();
  }
}
const i9 = "/flutter_globe_website/assets/earth_map-deef1197.png";
let hr, Ri, _r, vc, ns;
const g1 = new U8(),
  bu = new ke(),
  _c = [];
r9();
function r9() {
  s9(), o9(), A9(), a9(), l9(), Hm();
}
window.updateGlobeFromFlutter = function (n) {
  try {
    const e = JSON.parse(n),
      t = f9(e);
    c9(t, e).then(() => {});
  } catch (e) {
    console.error("Failed to parse data from Flutter:", e);
  }
};
function s9() {
  (hr = new X1({ antialias: !0 })),
    hr.setPixelRatio(window.devicePixelRatio),
    hr.setSize(window.innerWidth, window.innerHeight),
    document.body.appendChild(hr.domElement),
    hr.domElement.addEventListener("mousedown", p9, !1),
    hr.domElement.addEventListener("touchstart", d9, !1),
    window.addEventListener("resize", h9, !1);
}
function o9() {
  (_r = new $5()),
    (_r.background = new Dt(2184323)),
    (_r.fog = new Cc(2184323, 400, 2e3));
}
function a9() {
  (vc = new n9(Ri, hr.domElement)),
    Object.assign(vc, {
      enableDamping: !0,
      dynamicDampingFactor: 0.01,
      enablePan: !1,
      minDistance: 200,
      maxDistance: 500,
      rotateSpeed: 0.8,
      zoomSpeed: 1,
      autoRotate: !1,
      minPolarAngle: Math.PI / 5,
      maxPolarAngle: Math.PI - Math.PI / 3,
    });
}
function A9() {
  (Ri = new ki()),
    (Ri.aspect = window.innerWidth / window.innerHeight),
    Ri.updateProjectionMatrix(),
    Ri.position.set(0, 0, 460),
    _r.add(Ri);
}
function l9() {
  const n = new O8(12303291, 0.3);
  _r.add(n);
  const e = new Md(16777215, 1);
  e.position.set(-800, 2e3, 400), Ri.add(e);
  const t = new Md(16777215, 1);
  t.position.set(-200, 500, 200), Ri.add(t);
}
function u9(n, e, t = 0) {
  const i = (90 - n) * (Math.PI / 180),
    r = (e + 180) * (Math.PI / 180),
    s = 100 + t,
    u = -s * Math.sin(i) * Math.sin(r),
    c = s * Math.cos(i),
    h = -s * Math.sin(i) * Math.cos(r);
  return { x: u, y: c, z: h };
}
function c9(n, e) {
  return new Promise((t) => {
    ns && _r.remove(ns),
      (ns = new e9({ waitForGlobeReady: !0, animateIn: !0 })
        .showAtmosphere(!0)
        .globeImageUrl(i9)
        .atmosphereColor("#215483")
        .atmosphereAltitude(0.1)),
      ns
        .pointsData(e.maps)
        .pointColor(() => "#ffffff")
        .pointsMerge(!0)
        .pointAltitude(0.03)
        .pointRadius(0.1),
      e.maps.forEach((r) => {
        const { x: s, y: u, z: c } = u9(r.lat, r.lng, 0),
          h = new $s(1),
          p = new Zl({ transparent: !0, opacity: 1, color: "#EF7C6D" }),
          g = new wn(h, p);
        (g.dataID = r.id),
          (g.visible = !1),
          g.position.set(s, u, c),
          _c.push(g);
      }),
      ns
        .arcsData(n)
        .arcColor(() => "#ffffff")
        .labelsData(e.maps)
        .labelColor(() => "#ffffff")
        .labelSize(0.9)
        .labelResolution(10)
        .labelAltitude(0)
        .labelIncludeDot(!0)
        .arcStroke(0.25);
    const i = ns.globeMaterial();
    (i.side = Dt),
      (i.needsUpdate = !0),
      _r.add(ns),
      ns.onGlobeReady(() => {
        _c.forEach((r) => {
          (r.visible = !0), _r.add(r);
        }),
          t();
      });
  });
}
function f9(n) {
  const e = [];
  for (let t = 0; t < n.maps.length - 1; t++) {
    const i = n.maps[t],
      r = n.maps[t + 1];
    e.push({
      type: "pull",
      from: i.text,
      to: r.text,
      startLat: parseFloat(i.lat),
      startLng: parseFloat(i.lng),
      endLat: parseFloat(r.lat),
      endLng: parseFloat(r.lng),
      color: i.color,
    });
  }
  return e;
}
function Hm() {
  Ri.lookAt(_r.position),
    vc.update(),
    hr.render(_r, Ri),
    requestAnimationFrame(Hm);
}
function h9() {
  (Ri.aspect = window.innerWidth / window.innerHeight),
    Ri.updateProjectionMatrix(),
    hr.setSize(window.innerWidth, window.innerHeight);
}
function d9(n) {
  n.preventDefault();
  const e = Wm(n);
  e && e.dataID && Vm(e.dataID);
}
function p9(n) {
  const e = Wm(n);
  e && e.dataID && Vm(e.dataID);
}
function Vm(n) {
  flutterOnTapHandler.postMessage(n);
}
function Wm(n) {
  let e, t;
  const i = hr.domElement.getBoundingClientRect();
  n.touches
    ? ((e = n.touches[0].clientX - i.left), (t = n.touches[0].clientY - i.top))
    : ((e = n.clientX - i.left), (t = n.clientY - i.top)),
    (bu.x = (e / i.width) * 2 - 1),
    (bu.y = -(t / i.height) * 2 + 1),
    g1.setFromCamera(bu, Ri);
  const r = g1.intersectObjects(_c, !0);
  return r.length > 0 ? r[0].object : null;
}
